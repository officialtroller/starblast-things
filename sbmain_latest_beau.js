(function (s, t, a, r, b, l, i, o) {
    var saveAs, l1l1I, extend, hasProp, l11ll, O0O1O, BuyWeaponButton, HealingButton, RemoveWeaponButton, StoreCountDown, TransferButton, WeaponStoreBackground, WeaponStoreExitButton, WeaponStorePlaceholder, WeaponStoreShipView, WeaponStoreTitle, deepspaceworker, workerfunk, nebulasworker, Scene, Ol000, I010I, OII10, OI1I1, BATTLE_SHIP_TYPES, WEAPON_TYPES, ALIEN_TYPES, OI01l, O1llI, l1IIl, I1II0, Ol01l, STATION_MODULES, ATTACK_POD_MODEL, DEFENCE_POD_MODEL, MINING_POD_MODEL, i, MISSILE_MODEL, ROCKET_MODEL, TORPEDO_MODEL, MINE2_MODEL, MINE_MODEL, j, k, l, m, expand, indexOf, bind, IFrameDetection, IlOIl, base, OlII0, BATTLE_SHIPS, arrayMult, ALIEN_MODELS, HALO_MODELS, GIFT_MODEL, PUMPKIN_MODEL, battle_finished, battle_started, Ol0OO, exportShipTree, l1110, gamesettings, Translations, t, texists, translations;
    !(function (t) {
        'use strict';
        var e = t.HTMLCanvasElement && t.HTMLCanvasElement.prototype,
            i =
                t.Blob &&
                (function () {
                    try {
                        return !!new Blob();
                    } catch (t) {
                        return !1;
                    }
                })(),
            s =
                i &&
                t.Uint8Array &&
                (function () {
                    try {
                        return 100 === new Blob([new Uint8Array(100)]).size;
                    } catch (t) {
                        return !1;
                    }
                })(),
            l = t.BlobBuilder || t.WebKitBlobBuilder || t.MozBlobBuilder || t.MSBlobBuilder,
            n = /^data:((.*?)(;charset=.*?)?)(;base64)?,/,
            a =
                (i || l) &&
                t.atob &&
                t.ArrayBuffer &&
                t.Uint8Array &&
                function (t) {
                    var e, a, o, r, h, u, d, c, p;
                    if (!(e = t.match(n))) throw Error('invalid data URI');
                    for (a = e[2] ? e[1] : 'text/plain' + (e[3] || ';charset=US-ASCII'), o = !!e[4], r = t.slice(e[0].length), h = o ? atob(r) : decodeURIComponent(r), u = new ArrayBuffer(h.length), d = new Uint8Array(u), c = 0; c < h.length; c += 1) d[c] = h.charCodeAt(c);
                    return i ? new Blob([s ? d : u], { type: a }) : ((p = new l()), p.append(u), p.getBlob(a));
                };
        t.HTMLCanvasElement &&
            !e.toBlob &&
            (e.mozGetAsFile
                ? (e.toBlob = function (t, i, s) {
                      t(s && e.toDataURL && a ? a(this.toDataURL(i, s)) : this.mozGetAsFile('blob', i));
                  })
                : e.toDataURL &&
                  a &&
                  (e.toBlob = function (t, e, i) {
                      t(a(this.toDataURL(e, i)));
                  })),
            'function' == typeof define && define.amd
                ? define(function () {
                      return a;
                  })
                : 'object' == typeof module && module.exports
                ? (module.exports = a)
                : (t.dataURLtoBlob = a);
    })(window),
        (saveAs =
            saveAs ||
            (function (t) {
                'use strict';
                if ('undefined' == typeof navigator || !/MSIE [1-9]\./.test(navigator.userAgent)) {
                    var e = t.document,
                        i = function () {
                            return t.URL || t.webkitURL || t;
                        },
                        s = e.createElementNS('http://www.w3.org/1999/xhtml', 'a'),
                        l = 'download' in s,
                        n = function (t) {
                            var e = new MouseEvent('click');
                            t.dispatchEvent(e);
                        },
                        a = t.webkitRequestFileSystem,
                        o = t.requestFileSystem || a || t.mozRequestFileSystem,
                        r = function (e) {
                            (t.setImmediate || t.setTimeout)(function () {
                                throw e;
                            }, 0);
                        },
                        h = 'application/octet-stream',
                        u = 0,
                        d = function (e) {
                            var s = function () {
                                'string' == typeof e ? i().revokeObjectURL(e) : e.remove();
                            };
                            t.chrome ? s() : setTimeout(s, 500);
                        },
                        c = function (t, e, i) {
                            var s, l;
                            for (e = [].concat(e), s = e.length; s--; )
                                if ('function' == typeof (l = t['on' + e[s]]))
                                    try {
                                        l.call(t, i || t);
                                    } catch (t) {
                                        r(t);
                                    }
                        },
                        p = function (t) {
                            return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type) ? new Blob(['\ufeff', t], { type: t.type }) : t;
                        },
                        I = function (e, r, I) {
                            I || (e = p(e));
                            var O,
                                m,
                                f,
                                g = this,
                                y = e.type,
                                v = !1,
                                b = function () {
                                    c(g, 'writestart progress ll1IO writeend'.split(' '));
                                },
                                w = function () {
                                    if (((v || !O) && (O = i().createObjectURL(e)), m)) m.location.href = O;
                                    else {
                                        void 0 == t.open(O, '_blank') && 'undefined' != typeof safari && (t.location.href = O);
                                    }
                                    (g.readyState = g.DONE), b(), d(O);
                                },
                                x = function (t) {
                                    return function () {
                                        return g.readyState !== g.DONE ? t.apply(this, arguments) : void 0;
                                    };
                                },
                                k = { create: !0, exclusive: !1 };
                            return (
                                (g.readyState = g.INIT),
                                r || (r = 'download'),
                                l
                                    ? ((O = i().createObjectURL(e)),
                                      (s.href = O),
                                      (s.download = r),
                                      void setTimeout(function () {
                                          n(s), b(), d(O), (g.readyState = g.DONE);
                                      }))
                                    : (t.chrome && y && y !== h && ((f = e.slice || e.webkitSlice), (e = f.call(e, 0, e.size, h)), (v = !0)),
                                      a && 'download' !== r && (r += '.download'),
                                      (y === h || a) && (m = t),
                                      o
                                          ? ((u += e.size),
                                            void o(
                                                t.TEMPORARY,
                                                u,
                                                x(function (t) {
                                                    t.root.getDirectory(
                                                        'saved',
                                                        k,
                                                        x(function (t) {
                                                            var i = function () {
                                                                t.getFile(
                                                                    r,
                                                                    k,
                                                                    x(function (t) {
                                                                        t.createWriter(
                                                                            x(function (i) {
                                                                                (i.onwriteend = function (e) {
                                                                                    (m.location.href = t.toURL()), (g.readyState = g.DONE), c(g, 'writeend', e), d(t);
                                                                                }),
                                                                                    (i.onerror = function () {
                                                                                        var t = i.error;
                                                                                        t.code !== t.ABORT_ERR && w();
                                                                                    }),
                                                                                    'writestart progress ll1IO abort'.split(' ').forEach(function (t) {
                                                                                        i['on' + t] = g['on' + t];
                                                                                    }),
                                                                                    i.ll1IO(e),
                                                                                    (g.abort = function () {
                                                                                        i.abort(), (g.readyState = g.DONE);
                                                                                    }),
                                                                                    (g.readyState = g.WRITING);
                                                                            }),
                                                                            w
                                                                        );
                                                                    }),
                                                                    w
                                                                );
                                                            };
                                                            t.getFile(
                                                                r,
                                                                { create: !1 },
                                                                x(function (t) {
                                                                    t.remove(), i();
                                                                }),
                                                                x(function (t) {
                                                                    t.code === t.NOT_FOUND_ERR ? i() : w();
                                                                })
                                                            );
                                                        }),
                                                        w
                                                    );
                                                }),
                                                w
                                            ))
                                          : void w())
                            );
                        },
                        O = I.prototype,
                        m = function (t, e, i) {
                            return new I(t, e, i);
                        };
                    return 'undefined' != typeof navigator && navigator.msSaveOrOpenBlob
                        ? function (t, e, i) {
                              return i || (t = p(t)), navigator.msSaveOrOpenBlob(t, e || 'download');
                          }
                        : ((O.abort = function () {
                              var t = this;
                              (t.readyState = t.DONE), c(t, 'abort');
                          }),
                          (O.readyState = O.INIT = 0),
                          (O.WRITING = 1),
                          (O.DONE = 2),
                          (O.error = O.onwritestart = O.onprogress = O.onwrite = O.onabort = O.onerror = O.onwriteend = null),
                          m);
                }
            })(('undefined' != typeof self && self) || ('undefined' != typeof window && window) || this.content)),
        'undefined' != typeof module && module.exports
            ? (module.exports.saveAs = saveAs)
            : 'undefined' != typeof define &&
              null !== define &&
              null != define.amd &&
              define([], function () {
                  return saveAs;
              }),
        (window.makeScreenshot = function () {
            var t,
                e = l1110.display.l1011.domElement,
                i = document.createElement('canvas');
            (i.width = e.width),
                (i.height = e.height),
                (t = i.getContext('2d')),
                t.drawImage(e, 0, 0),
                i.toBlob(
                    function (t) {
                        var e = new Date();
                        saveAs(t, 'starblast-' + e.getTime() + '.png');
                    },
                    'image/png',
                    1
                );
        }),
        (module = {}),
        (require = function (t, e) {
            return e;
        }),
        (l1l1I = function () {
            var t, e, i;
            return (
                (i = function () {
                    if (l1110.l00OO.O11lI) return l1110.sendGAEvent('gd_resume'), l1110.resume(), l1110.respawn(), l1110.l00OO.clear(), gdApi.play();
                }),
                (e = function () {}),
                (t = {
                    gameId: '918fa3adc9e24eaa9a8d4ccf68f42259',
                    userId: '7BFF8669-0037-4D21-81C0-AE80D9608D4D-s1',
                    resumeGame: i,
                    pauseGame: e,
                    onInit: function (t) {},
                    onError: function (t) {
                        if (l1110.l00OO.O11lI) return l1110.sendGAEvent('gd_error'), l1110.resume(), l1110.respawn(), gdApi.play(), l1110.l00OO.clear();
                    },
                }),
                (function (t, e, i, s, l, n, a) {
                    (t.GameDistribution = l),
                        (t[l] =
                            t[l] ||
                            function () {
                                (t[l].q = t[l].q || []).push(arguments);
                            }),
                        (t[l].l = 1 * new Date()),
                        (n = e.createElement(i)),
                        (a = e.getElementsByTagName(i)[0]),
                        (n.async = 1),
                        (n.src = '//html5.api.gamedistribution.com/libs/gd/api.js'),
                        a.parentNode.insertBefore(n, a);
                })(window, document, 'script', 0, 'gdApi'),
                gdApi(t)
            );
        }),
        (this.O0IlO = (function () {
            function t(t) {
                (this.value = t), (this.speed = 0), (this.k = 0.1), (this.f = 0.1), (this.next = []), (this.OI11O = 0), (this.l0Il0 = this.value);
            }
            return (
                (t.prototype.init = function (t) {
                    if (((this.value = t), (this.OI11O = 0), null == this.value && (this.value = this.l0Il0), this.next.length > 0)) return (this.next = []);
                }),
                (t.prototype.push = function (t, e, i, s) {
                    return null == i && (i = this.k), null == s && (s = this.f), this.OI11O <= 0 ? this.set(t, e, i, s) : this.next.push({ target: t, OI11O: e, k: i, f: s });
                }),
                (t.prototype.set = function (t, e, i, s, l) {
                    if (((this.target = t), (this.OI11O = e), (this.k = null != i ? i : this.k), (this.f = null != s ? s : this.f), null == l && (l = !0), null == this.target && (this.target = this.l0Il0), l && this.next.length > 0)) return (this.next = []);
                }),
                (t.prototype.l0Ill = function (t) {
                    var e, i;
                    if (!(this.OI11O <= 0)) {
                        for (;;) {
                            if (t-- <= 0) break;
                            if (((this.OI11O -= 0.0166667), this.OI11O <= 0)) break;
                            (i = 'function' == typeof this.target ? this.target(this.OI11O) : this.target), (this.speed *= 1 - this.f), (this.speed += this.k * (i - this.value)), (this.value += this.speed);
                        }
                        if (this.OI11O <= 0) {
                            if (this.next.length > 0) return (e = this.next.splice(0, 1)[0]), this.set(e.target, e.OI11O, e.k, e.f, !1);
                            if (('number' == typeof this.target && (this.value = this.target), null != this.llO1I)) return this.llO1I(), (this.llO1I = null);
                        }
                    }
                }),
                t
            );
        })()),
        (this.l01lO = (function () {
            function t(t) {
                (this.component = t), (this.l0OOl = new O0IlO(1)), (this.Ol1I0 = new O0IlO(1)), (this.rotation = new O0IlO(0)), (this.OOIl0 = new O0IlO(0)), (this.OO1lI = new O0IlO(0)), (this.opacity = new O0IlO(1));
            }
            return (
                (t.prototype.llI0l = function (t) {
                    return (this.l0OOl.llO1I = t);
                }),
                (t.prototype.isRunning = function () {
                    return this.l0OOl.OI11O > 0;
                }),
                (t.prototype.l0Ill = function () {
                    var t, e;
                    return null == this.l1IlO && (this.l1IlO = Date.now()), (e = Date.now()), (t = Math.max(1, Math.min(30, Math.round(((e - this.l1IlO) / 1e3) * 60)))), (this.l1IlO = e), this.l0OOl.l0Ill(t), this.Ol1I0.l0Ill(t), this.rotation.l0Ill(t), this.OOIl0.l0Ill(t), this.OO1lI.l0Ill(t), this.opacity.l0Ill(t);
                }),
                (t.prototype.title = function (t, e, i, s) {
                    return (t = (t - (this.component.x + this.component.width / 2)) / this.component.width), (e = (e - (this.component.y + this.component.height / 2)) / this.component.height), this.l0OOl.init(0.1), this.Ol1I0.init(0.1), this.opacity.init(0), this.OOIl0.init(t), this.OO1lI.init(e), this.rotation.init(s / 2), this.l0OOl.push(i, 2, 0.01, 0.1), this.Ol1I0.push(i, 2, 0.01, 0.1), this.OOIl0.push(t, 2, 0.01, 0.1), this.OO1lI.push(e, 2, 0.01, 0.1), this.rotation.push(s, 2, 0.01, 0.1), this.opacity.push(1, 2, 0.1, 0.5), this.l0OOl.push(1, 2, 0.05, 0.4), this.Ol1I0.push(1, 2, 0.05, 0.4), this.OOIl0.push(0, 2, 0.05, 0.4), this.OO1lI.push(0, 2, 0.05, 0.4), this.rotation.push(0, 2, 0.05, 0.4);
                }),
                (t.prototype.init = function (t) {
                    if ((null != t.l0OOl && this.l0OOl.init(t.l0OOl), null != t.Ol1I0 && this.Ol1I0.init(t.Ol1I0), null != t.OOIl0 && this.OOIl0.init(t.OOIl0), null != t.OO1lI && this.OO1lI.init(t.OO1lI), null != t.rotation && this.rotation.init(t.rotation), null != t.opacity)) return this.opacity.init(t.opacity);
                }),
                (t.prototype.set = function (t, e, i, s) {
                    return null == t && (t = {}), null == e && (e = 1), null == i && (i = 0.02), null == s && (s = 0.2), (e = null != t.d ? t.d : e), (i = null != t.k ? t.k : i), (s = null != t.f ? t.f : s), this.l0OOl.set(null != t.l0OOl ? t.l0OOl : 1, e, i, s), this.Ol1I0.set(null != t.Ol1I0 ? t.Ol1I0 : 1, e, i, s), this.OOIl0.set(null != t.OOIl0 ? t.OOIl0 : 0, e, i, s), this.OO1lI.set(null != t.OO1lI ? t.OO1lI : 0, e, i, s), this.rotation.set(null != t.rotation ? t.rotation : 0, e, i, s), this.opacity.set(null != t.opacity ? t.opacity : 1, e, i, s);
                }),
                (t.prototype.push = function (t, e, i, s) {
                    return null == e && (e = 1), null == i && (i = 0.02), null == s && (s = 0.2), (e = null != t.d ? t.d : e), (i = null != t.k ? t.k : i), (s = null != t.f ? t.f : s), this.l0OOl.push(null != t.l0OOl ? t.l0OOl : 1, e, i, s), this.Ol1I0.push(null != t.Ol1I0 ? t.Ol1I0 : 1, e, i, s), this.OOIl0.push(null != t.OOIl0 ? t.OOIl0 : 0, e, i, s), this.OO1lI.push(null != t.OO1lI ? t.OO1lI : 0, e, i, s), this.rotation.push(null != t.rotation ? t.rotation : 0, e, i, s), this.opacity.push(null != t.opacity ? t.opacity : 1, e, i, s);
                }),
                (t.prototype.IlO1I = function (e) {
                    return this.init(t.IOO0l), null != e && this.pause(e), this.push(t.normal, 1, 0.05, 0.3);
                }),
                (t.prototype.pause = function (t) {
                    return this.l0OOl.push(this.l0OOl.value, t, 0.1, 0.1), this.Ol1I0.push(this.Ol1I0.value, t, 0.1, 0.1), this.OOIl0.push(this.OOIl0.value, t, 0.1, 0.1), this.OO1lI.push(this.OO1lI.value, t, 0.1, 0.1), this.rotation.push(this.rotation.value, t, 0.1, 0.1), this.opacity.push(this.opacity.value, t, 0.1, 0.1);
                }),
                (t.IOO0l = { l0OOl: 0.1, Ol1I0: 0.1, opacity: 0 }),
                (t.normal = {}),
                (t.pressed = { l0OOl: 0.9, Ol1I0: 0.9, rotation: 0, OOIl0: 0, OO1lI: 0, opacity: 0.8 }),
                (t.OO0II = { l0OOl: 2, Ol1I0: 2, rotation: 0, OOIl0: 0, OO1lI: 0, opacity: 0 }),
                t
            );
        })()),
        (this.OllI0 = (function () {
            function t(t, e, i, s) {
                (this.x = null != t ? t : 0), (this.y = null != e ? e : 0), (this.width = null != i ? i : 1), (this.height = null != s ? s : 1), (this.parent = null), (this.opacity = 1), (this.lO011 = !0), (this.level = 0), (this.levelmod = 0), (this.fit = 'scale'), (this.visible = !0), (this.rendered_width = 0), (this.rendered_height = 0), (this.filter = THREE.LinearFilter), (this.blending = THREE.NormalBlending), (this.O11IO = new l01lO(this));
            }
            return (
                (t.prototype.O0l1I = function (t, e, i, s, l) {
                    var n, a, o;
                    if (((this.px = t), (this.l1O1l = e), (this.llO1l = i), (this.lO01I = s), (this.level = l), (this.level += this.levelmod), null != this.force_ratio)) return (o = this.force_ratio), (n = 1), (a = Math.min(this.llO1l / o, this.lO01I / n)), (o *= a), (n *= a), (this.px += (this.llO1l - o) / 2), this.align_top || (this.l1O1l += (this.lO01I - n) / 2), (this.llO1l = o), (this.lO01I = n);
                }),
                (t.prototype.getAbsolutePosition = function () {
                    var t;
                    return null != this.parent && null != this.parent.getAbsolutePosition ? ((t = this.parent.getAbsolutePosition()), { x: t.x + this.x * t.width, y: t.y + this.y * t.height, width: t.width * this.width, height: t.height * this.height }) : { x: this.x, y: this.y, width: this.width, height: this.height };
                }),
                (t.prototype.I110l = function () {
                    var t, e, i;
                    return (i = this.IIOIO(this.llO1l)), (e = this.IIOIO(this.lO01I)), null == this.image || this.image.width !== i || this.image.height !== e ? ((this.image = document.createElement('canvas')), (this.image.width = this.IIOIO(this.llO1l)), (this.image.height = this.IIOIO(this.lO01I))) : this.image.getContext('2d').clearRect(0, 0, i, e), (t = this.image.getContext('2d')), t.save(), t.scale(this.image.width / this.llO1l, this.image.height / this.lO01I), t.translate(-this.px, -this.l1O1l), this.lllO1(t), t.restore(), (this.rendered_width = this.llO1l), (this.rendered_height = this.lO01I), this.image;
                }),
                (t.prototype.IIOIO = function (t) {
                    return Math.pow(2, Math.ceil(Math.log(t) / Math.LN2));
                }),
                (t.prototype.needsUpdate = function () {
                    return this.lO011 || null == this.image || this.rendered_width !== this.llO1l || this.rendered_height !== this.lO01I;
                }),
                (t.prototype.O1lO0 = function () {
                    var t;
                    return (t = this.O11IO.opacity.value), null != this.parent && (t *= this.parent.O1lO0()), t;
                }),
                (t.prototype.l1O0l = function () {
                    var t, e, i, s;
                    if ((this.O11IO.l0Ill(), null != this.object)) {
                        switch (((this.object.position.x = this.px + this.llO1l / 2 + this.O11IO.OOIl0.value * this.llO1l), (this.object.position.y = this.l1O1l + this.lO01I / 2 + this.O11IO.OO1lI.value * this.lO01I), (this.object.position.z = -1e3 - this.level), this.fit)) {
                            case 'fit':
                                (s = Math.min(this.llO1l / this.image.width, this.lO01I / this.image.height)), (this.object.scale.x = -s * this.image.width * this.O11IO.l0OOl.value), (this.object.scale.y = s * this.image.height * this.O11IO.Ol1I0.value);
                                break;
                            default:
                                (this.object.scale.x = -this.llO1l * this.O11IO.l0OOl.value), (this.object.scale.y = this.lO01I * this.O11IO.Ol1I0.value);
                        }
                        for (this.material.opacity = this.O1lO0(), this.material.rotation = this.O11IO.rotation.value - 180 * THREE.Math.DEG2RAD, i = this.parent, t = 0, e = 0; ; ) {
                            if (null == i) break;
                            (t -= i.OlI00), (e -= i.O101O), (i = i.parent);
                        }
                        return (this.object.position.x += t), (this.object.position.y += e);
                    }
                }),
                (t.prototype.ll1II = function () {
                    var t;
                    if (this.needsUpdate()) {
                        if (((t = this.image), this.I110l(), null == this.image)) return;
                        if (this.image instanceof Image && !this.image.complete) return;
                        if (null == this.parent || null == this.parent.object) return;
                        (this.lO011 = !1), null == this.texture || t !== this.image ? ((this.texture = new THREE.Texture(this.image)), (this.texture.minFilter = this.filter), (this.texture.needsUpdate = !0), (this.material = new THREE.SpriteMaterial({ map: this.texture, transparent: !0, blending: this.blending })), null != this.object && this.parent.object.remove(this.object), (this.object = new THREE.Sprite(this.material)), this.parent.object.add(this.object)) : (this.texture.needsUpdate = !0);
                    }
                    if (null != this.object) return (this.object.visible = this.visible);
                }),
                (t.prototype.lllO1 = function (t) {
                    return (t.fillStyle = 'rgba(255,255,255,.2)'), t.fillRoundRect(0, 0, this.llO1l, this.lO01I, 10);
                }),
                (t.prototype.lIl1I = function (t, e, i) {
                    return !1;
                }),
                (t.prototype.O110l = function (t, e, i) {
                    return !1;
                }),
                (t.prototype.lI1O0 = function (t, e, i) {
                    return !1;
                }),
                (t.prototype.OO0O1 = function (t) {
                    return !1;
                }),
                (t.prototype.mouseMove = function (t, e, i) {
                    return !1;
                }),
                (t.prototype.IO1lO = function (t) {
                    return this.ll1II(), this.l1O0l();
                }),
                (t.prototype.refresh = function () {
                    if (((this.O1ll0 = !1), null != this.parent)) return this.parent.refresh();
                }),
                (t.prototype.OO0Il = function () {}),
                (t.prototype.dispose = function () {
                    if ((null != this.object && null != this.object.dispose && this.object.dispose(), null != this.texture)) return this.texture.dispose();
                }),
                (t.prototype.O0O01 = function (t) {}),
                t
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.OI1Ol = (function (t) {
            function e(t) {
                var i;
                (this.O011I = t),
                    e.IO0OI.constructor.call(this),
                    'string' == typeof this.O011I &&
                        ((i = this.O011I),
                        (this.O011I = new Image()),
                        (this.O011I.crossOrigin = 'anonymous'),
                        (this.O011I.src = i),
                        (this.O011I.onload = (function (t) {
                            return function () {
                                return t.O011I.width > 0 && t.O011I.height > 0 && (t.force_ratio = t.O011I.width / t.O011I.height), (t.lO011 = !0);
                            };
                        })(this))),
                    this.O011I.width > 0 && this.O011I.height > 0 && (this.force_ratio = this.O011I.width / this.O011I.height);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    if (null != this.O011I && this.O011I.width > 0 && this.O011I.height > 0) return t.drawImage(this.O011I, this.px, this.l1O1l, this.llO1l, this.lO01I);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.l1I1l = (function (t) {
            function e(t) {
                (this.O1IO0 = t), e.IO0OI.constructor.call(this), (this.pressed = !1), (this.enabled = !0);
            }
            return (
                extend(e, t),
                (e.prototype.lIl1I = function (t, e, i) {
                    return !!this.enabled && (null != this.O1IO0 && null != this.O1IO0.pressed && 'function' == typeof this.O1IO0.pressed ? ((this.pressed = !0), this.O1IO0.pressed() ? this.O11IO.set(l01lO.pressed, 0.5, 0.3, 0.4) : (this.pressed = !1)) : (this.O11IO.set(l01lO.pressed, 0.5, 0.3, 0.4), (this.pressed = !0)), !0);
                }),
                (e.prototype.O110l = function (t, e, i) {
                    return !!this.enabled && (t >= this.px && e >= this.l1O1l && t < this.px + this.llO1l && e < this.l1O1l + this.lO01I ? (this.pressed || ((this.pressed = !0), this.O11IO.set(l01lO.pressed, 0.5, 0.4, 0.5)), Math.abs(this.IO0II - t) < window.innerWidth / 50 && Math.abs(this.I10ll - e) < window.innerHeight / 50) : (this.pressed && ((this.pressed = !1), this.O11IO.set(l01lO.normal, 0.5, 0.4, 0.5)), !1));
                }),
                (e.prototype.lI1O0 = function (t, e, i) {
                    return !!this.enabled && (null != this.O1IO0 && null != this.O1IO0.lOlOI && this.O1IO0.lOlOI(), this.pressed && (this.O11IO.set(l01lO.normal, 0.5, 0.3, 0.4), (this.pressed = !1), null != this.O1IO0 && null != this.O1IO0.OIOOI && this.O1IO0.OIOOI()), !0);
                }),
                (e.prototype.OO0O1 = function (t) {
                    return !!this.enabled && (null != this.O1IO0 && null != this.O1IO0.lOlOI && this.O1IO0.lOlOI(), this.pressed && (this.O11IO.set(l01lO.normal, 0.5, 0.2, 0.3), (this.pressed = !1)), !0);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ll110 = (function (t) {
            function e(t) {
                (this.text = t), e.IO0OI.constructor.call(this), (this.font = 'Verdana'), (this.stroke_size = 0), (this.stroke_color = '#000'), (this.background = '#456'), (this.radius = 0.1), (this.color = '#FFF'), (this.font_size = 5), (this.align = 'center'), (this.blending = THREE.AdditiveBlending), (this.text_shadow = { opacity: 0, blur: 0, color: '#000' });
            }
            return (
                extend(e, t),
                (e.prototype.l0I00 = function (t) {
                    return (this.lO011 = t !== this.text), (this.text = t);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    if ((t.save(), null != this.background && ('function' == typeof this.background ? this.background(t, this.px, this.l1O1l, this.llO1l, this.lO01I) : ((t.fillStyle = this.background), t.fillRoundRect(this.px, this.l1O1l, this.llO1l, this.lO01I, Math.min(this.llO1l, this.lO01I) * this.radius))), (e = (this.font_size * this.lO01I) / 10), (t.font = e + 'pt ' + this.font), (t.textBaseline = 'middle'), (t.textAlign = this.align), (t.fillStyle = this.color), this.stroke_size > 0 && this.text_shadow.opacity > 0)) {
                        switch (((t.shadowColor = this.text_shadow.color), (t.shadowOpacity = this.text_shadow.opacity), (t.shadowBlur = (this.text_shadow.blur * this.lO01I) / 100), this.align)) {
                            case 'center':
                                t.fillText(this.text, this.px + this.llO1l / 2, this.l1O1l + this.lO01I / 2);
                                break;
                            case 'left':
                                t.fillText(this.text, this.px, this.l1O1l + this.lO01I / 2);
                                break;
                            case 'right':
                                t.fillText(this.text, this.px + this.llO1l, this.l1O1l + this.lO01I / 2);
                        }
                        (t.shadowBlur = 0), (t.shadowOpacity = 0);
                    }
                    if (this.stroke_size > 0)
                        switch (((t.lineWidth = (this.stroke_size * this.lO01I) / 100), (t.strokeStyle = this.stroke_color), this.align)) {
                            case 'center':
                                t.strokeText(this.text, this.px + this.llO1l / 2, this.l1O1l + this.lO01I / 2);
                                break;
                            case 'left':
                                t.strokeText(this.text, this.px, this.l1O1l + this.lO01I / 2);
                                break;
                            case 'right':
                                t.strokeText(this.text, this.px + this.llO1l, this.l1O1l + this.lO01I / 2);
                        }
                    switch ((this.text_shadow.opacity > 0 && 0 === this.stroke_size && ((t.shadowColor = this.text_shadow.color), (t.shadowOpacity = this.text_shadow.opacity), (t.shadowBlur = (this.text_shadow.blur * this.lO01I) / 100)), this.align)) {
                        case 'center':
                            t.fillText(this.text, this.px + this.llO1l / 2, this.l1O1l + this.lO01I / 2);
                            break;
                        case 'left':
                            t.fillText(this.text, this.px, this.l1O1l + this.lO01I / 2);
                            break;
                        case 'right':
                            t.fillText(this.text, this.px + this.llO1l, this.l1O1l + this.lO01I / 2);
                    }
                    return t.restore();
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.lOI1O = (function (t) {
            function e(t, i, s, l, n, a) {
                (this.text = t), (this.llO1I = i), null == s && (s = 0), null == l && (l = 0), null == n && (n = 1), null == a && (a = 1), e.IO0OI.constructor.call(this, s, l, n, a), (this.background = 'hsl(200,50%,50%)'), (this.color = '#FFF');
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    return t.save(), (t.fillStyle = this.background), t.fillRoundRect(this.px, this.l1O1l, this.llO1l, this.lO01I, 0.05 * Math.min(this.llO1l, this.lO01I)), (e = Math.round(Math.min((this.llO1l / Math.max(1, this.text.length)) * 0.8, this.lO01I / 4))), (t.font = e + 'pt Verdana'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText(this.text, this.px + this.llO1l / 2, this.l1O1l + this.lO01I / 2 + e / 2), t.restore();
                }),
                (e.prototype.l0I00 = function (t) {
                    return (this.text = t), (this.lO011 = !0);
                }),
                (e.prototype.lIl1I = function (t, e, i) {
                    return this.O11IO.set(l01lO.pressed, 0.5, 0.4, 0.5), (this.pressed = !0), (this.IO0II = t), (this.I10ll = e), !0;
                }),
                (e.prototype.O110l = function (t, e, i) {
                    return t >= this.px && e >= this.l1O1l && t < this.px + this.llO1l && e < this.l1O1l + this.lO01I ? (this.pressed || ((this.pressed = !0), this.O11IO.set(l01lO.pressed, 0.5, 0.4, 0.5)), Math.abs(this.IO0II - t) < window.innerWidth / 50 && Math.abs(this.I10ll - e) < window.innerHeight / 50) : (this.pressed && ((this.pressed = !1), this.O11IO.set(l01lO.normal, 0.5, 0.4, 0.5)), !1);
                }),
                (e.prototype.lI1O0 = function (t, e, i) {
                    return this.pressed && (this.O11IO.set(l01lO.normal, 0.5, 0.4, 0.5), (this.pressed = !1), null != this.llO1I && this.llO1I()), !0;
                }),
                (e.prototype.OO0O1 = function (t) {
                    return this.pressed && (this.O11IO.set(l01lO.normal, 0.5, 0.4, 0.5), (this.pressed = !1)), !0;
                }),
                (e.prototype.refresh = function () {
                    if (((this.O1ll0 = !1), null != this.parent)) return this.parent.refresh();
                }),
                (e.prototype.OO0Il = function () {}),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Il11O = (function (t) {
            function e(t) {
                (this.image = t), e.IO0OI.constructor.call(this, this.image), (this.fit = 'scale'), (this.IOII0 = 11);
            }
            return (
                extend(e, t),
                (e.prototype.OO0Il = function () {
                    if ((e.IO0OI.OO0Il.call(this), null != this.texture)) return (this.texture.offset.x = this.value / this.IOII0), (this.texture.repeat.x = 1 / this.IOII0);
                }),
                (e.prototype.ll1II = function () {
                    if (null == this.object && (e.IO0OI.ll1II.call(this), null != this.object)) return this.OO0Il(), (this.texture.needsUpdate = !0);
                }),
                e
            );
        })(OI1Ol)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.OO00l = (function (t) {
            function e(t, i, s, l) {
                null == t && (t = 0), null == i && (i = 0), null == s && (s = 1), null == l && (l = 1), e.IO0OI.constructor.call(this, t, i, s, l), (this.children = []), (this.l0lII = []), (this.OlI00 = 0), (this.O101O = 0), (this.Ill01 = !1), (this.OIIIl = 0), (this.lO0ll = 0), (this.lIIl1 = 0), (this.lIOl1 = 0), (this.lOl00 = 0), (this.OIll1 = 0), (this.I1Ol1 = Date.now()), (this.II0II = !0), (this.II10O = 1), (this.O1l00 = 1.1);
            }
            return (
                extend(e, t),
                (e.prototype.add = function (t, e, i) {
                    return null == i && (i = e), (t.IIOI1 = e), (t.lOlI0 = i), this.children.push(t), (t.parent = this);
                }),
                (e.prototype.remove = function (t) {
                    var e, i, s, l, n;
                    for (n = this.children, i = s = 0, l = n.length; s < l; i = ++s) if ((e = n[i]) === t) return this.children.splice(i, 1), void (null != e.object && null != this.object && this.object.remove(e.object));
                }),
                (e.prototype.IlOl1 = function () {
                    for (; this.children.length > 0; ) this.remove(this.children[0]);
                }),
                (e.prototype.ll0I0 = function (t) {
                    return this.llO1l > this.lO01I * this.O1l00 && null != t.lOlI0 ? ((t.x = t.lOlI0[0]), (t.y = t.lOlI0[1]), (t.width = t.lOlI0[2]), (t.height = t.lOlI0[3])) : t.IIOI1 && ((t.x = t.IIOI1[0]), (t.y = t.IIOI1[1]), (t.width = t.IIOI1[2]), (t.height = t.IIOI1[3])), t.O0l1I(this.px + t.x * this.llO1l, this.l1O1l + t.y * this.lO01I, t.width * this.llO1l, t.height * this.lO01I, this.level + 1);
                }),
                (e.prototype.O0l1I = function (t, i, s, l, n) {
                    var a, o, r, h, u, d, c;
                    for (e.IO0OI.O0l1I.call(this, t, i, s, l, n), d = this.children, o = 0, h = d.length; o < h; o++) (a = d[o]), this.ll0I0(a);
                    if (this.Ill01) {
                        for (this.OIIIl = 0, this.lO0ll = 0, c = this.children, r = 0, u = c.length; r < u; r++) (a = c[r]), (this.OIIIl = Math.max(this.OIIIl, a.px + a.llO1l - this.llO1l - this.px)), (this.lO0ll = Math.max(this.lO0ll, a.l1O1l + a.lO01I - this.lO01I - this.l1O1l));
                        return this.scrollTo(this.lOl00, this.OIll1);
                    }
                }),
                (e.prototype.IIOl1 = function (t, e) {
                    var i, s, l, n, a, o, r, h;
                    for (h = [], o = r = this.children.length - 1; r >= 0; o = r += -1) (i = this.children[o]), i.visible && ((n = i.px), (a = i.l1O1l), (l = i.llO1l), (s = i.lO01I), null != i.O11IO && ((n += l * i.O11IO.OOIl0.value), (a += s * i.O11IO.OO1lI.value)), t + this.OlI00 >= n && t + this.OlI00 < n + l && e + this.O101O >= a && e + this.O101O <= a + s && h.push(i));
                    return h;
                }),
                (e.prototype.lIl1I = function (t, e, i) {
                    var s, l, n, a;
                    for (this.Ill01 && ((this.pressed = !0), (this.lI1OI = t), (this.OI0l1 = e), (this.l11lI = this.OlI00), (this.l1101 = this.O101O)), a = this.IIOl1(t, e), l = 0, n = a.length; l < n; l++) if (((s = a[l]), s.lIl1I(t + this.OlI00, e + this.O101O, i))) return (this.l0lII[i] = s), !0;
                    return !!this.Ill01;
                }),
                (e.prototype.O110l = function (t, e, i) {
                    if (null != this.l0lII[i]) {
                        if (this.l0lII[i].O110l(t + this.OlI00, e + this.O101O, i)) return !0;
                        if (this.Ill01) return this.l0lII[i].OO0O1(), delete this.l0lII[i], !0;
                    } else if (this.Ill01) return (this.lOl00 = Math.max(0, Math.min(this.OIIIl, this.l11lI + 1.5 * (this.lI1OI - t)))), (this.OIll1 = Math.max(0, Math.min(this.lO0ll, this.l1101 + 1.5 * (this.OI0l1 - e)))), !0;
                    return !1;
                }),
                (e.prototype.mouseMove = function (t, e, i) {
                    var s, l, n, a;
                    for (a = this.IIOl1(t, e), l = 0, n = a.length; l < n; l++) if (((s = a[l]), s.mouseMove(t + this.OlI00, e + this.O101O, i))) return !0;
                    return !1;
                }),
                (e.prototype.lI1O0 = function (t, e, i) {
                    var s;
                    return (this.pressed = !1), null != this.l0lII[i] ? ((s = this.l0lII[i]), delete this.l0lII[i], s.lI1O0(t + this.OlI00, e + this.O101O, i)) : (this.Ill01 && this.scrollTo(this.l11lI + 1.5 * (this.lI1OI - t), this.l1101 + 1.5 * (this.OI0l1 - e)), this.Ill01);
                }),
                (e.prototype.scrollTo = function (t, e) {
                    var i, s;
                    if (((this.lOl00 = Math.max(0, Math.min(this.OIIIl, t))), (this.OIll1 = Math.max(0, Math.min(this.lO0ll, e))), !this.pressed)) return (i = Math.round(this.lOl00 / (this.llO1l * this.II10O))), (s = Math.round(this.OIll1 / (this.lO01I * this.II10O))), (this.lOl00 = Math.max(0, Math.min(this.OIIIl, i * this.llO1l * this.II10O))), (this.OIll1 = Math.max(0, Math.min(this.lO0ll, s * this.lO01I * this.II10O)));
                }),
                (e.prototype.OO0O1 = function (t) {
                    var e;
                    return (this.pressed = !1), null != this.l0lII[t] ? ((e = this.l0lII[t]), delete this.l0lII[t], e.OO0O1(t)) : this.Ill01;
                }),
                (e.prototype.IO1lO = function (t) {
                    var e, i, s, l;
                    for (this.O11IO.l0Ill(), null == this.object ? ((this.object = new THREE.Group()), t.add(this.object)) : ((this.object.scale.x = this.O11IO.l0OOl.value), (this.object.scale.y = this.O11IO.Ol1I0.value), (this.object.position.x = this.llO1l * this.O11IO.OOIl0.value), (this.object.position.y = this.lO01I * this.O11IO.OO1lI.value), (this.object.visible = this.visible)), l = this.children, i = 0, s = l.length; i < s; i++) null != (e = l[i]) && e.IO1lO(this.object);
                    return !0;
                }),
                (e.prototype.OO0Il = function () {
                    var t, i, s, l;
                    for (e.IO0OI.OO0Il.call(this), this.OlOlI(), l = this.children, i = 0, s = l.length; i < s; i++) (t = l[i]), t.OO0Il();
                    return !0;
                }),
                (e.prototype.OIl1l = function (t, e) {
                    return this.scrollTo(this.OlI00 + t * this.llO1l * this.II10O, this.O101O + e * this.lO01I * this.II10O);
                }),
                (e.prototype.O0O01 = function (t) {
                    var e, i, s, l;
                    for (l = this.children, i = 0, s = l.length; i < s; i++) (e = l[i]), e.O0O01(t);
                }),
                (e.prototype.OlOlI = function () {
                    var t, e, i, s;
                    if (Math.abs(this.lOl00 - this.OlI00) + Math.abs(this.OIll1 - this.O101O) + Math.abs(this.lIIl1) + Math.abs(this.lIOl1) > 0.01) {
                        for (s = Math.min(30, Math.max(1, (Date.now() - this.I1Ol1) / 16)), e = 1, i = s; 1 <= i ? e <= i : e >= i; 1 <= i ? ++e : --e) (t = 0.016), (this.lIIl1 = 0.7 * this.lIIl1 + t * (this.lOl00 - this.OlI00) * 150), (this.lIOl1 = 0.7 * this.lIOl1 + t * (this.OIll1 - this.O101O) * 150), (this.OlI00 += this.lIIl1 * t), (this.O101O += this.lIOl1 * t);
                        this.refresh();
                    }
                    return (this.I1Ol1 = Date.now());
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.lI11I = (function (t) {
            function e() {
                e.IO0OI.constructor.call(this), (this.lIlO0 = new THREE.Scene()), (this.l0100 = new THREE.DirectionalLight(16777215, 1)), this.l0100.position.set(2, -1, 3), this.lIlO0.add(this.l0100), (this.object = this.lIlO0), (this.I0IO0 = !1), (this.mousepressed = !1), (this.I0lOI = 1);
            }
            return (
                extend(e, t),
                (e.prototype.startControl = function (t) {
                    return (
                        (this.element = t),
                        this.element.addEventListener(
                            'touchstart',
                            (function (t) {
                                return function (e) {
                                    return t.llOIO(e);
                                };
                            })(this)
                        ),
                        this.element.addEventListener(
                            'touchmove',
                            (function (t) {
                                return function (e) {
                                    return t.O1Il1(e);
                                };
                            })(this)
                        ),
                        document.addEventListener(
                            'touchend',
                            (function (t) {
                                return function (e) {
                                    return t.l00Ol(e);
                                };
                            })(this)
                        ),
                        this.element.addEventListener(
                            'mousedown',
                            (function (t) {
                                return function (e) {
                                    return t.I1llO(e);
                                };
                            })(this)
                        ),
                        this.element.addEventListener(
                            'mousemove',
                            (function (t) {
                                return function (e) {
                                    return t.IlIOI(e);
                                };
                            })(this)
                        ),
                        document.addEventListener(
                            'mouseup',
                            (function (t) {
                                return function (e) {
                                    return t.lIIO0(e);
                                };
                            })(this)
                        )
                    );
                }),
                (e.prototype.setSize = function (t, e, i) {
                    return (this.width = t), (this.height = e), (this.I0lOI = null != i ? i : 1), (this.I1000 = new THREE.OrthographicCamera(0, this.width, 0, this.height, 0.1, 1e4));
                }),
                (e.prototype.getAbsolutePosition = function () {
                    return { x: 0, y: 0, width: 1, height: 1 };
                }),
                (e.prototype.llOIO = function (t) {
                    var e, i, s, l, n, a;
                    for (t.preventDefault(), t.stopPropagation(), e = i = 0, s = t.changedTouches.length - 1; i <= s; e = i += 1) (l = t.changedTouches[e]), (n = (l.clientX - this.element.offsetLeft) * this.I0lOI), (a = (l.clientY - this.element.offsetTop) * this.I0lOI), this.lIl1I(n, a, l.identifier) || (null != this.control_listener && this.control_listener.lIl1I(n, a, l.identifier));
                    return !1;
                }),
                (e.prototype.O1Il1 = function (t) {
                    var e, i, s, l, n, a;
                    for (t.preventDefault(), t.stopPropagation(), e = i = 0, s = t.changedTouches.length - 1; i <= s; e = i += 1) (l = t.changedTouches[e]), (n = (l.clientX - this.element.offsetLeft) * this.I0lOI), (a = (l.clientY - this.element.offsetTop) * this.I0lOI), this.O110l(n, a, l.identifier) || (null != this.control_listener && this.control_listener.O110l(n, a, l.identifier));
                    return !1;
                }),
                (e.prototype.l00Ol = function (t) {
                    var e, i, s, l, n, a;
                    for (e = i = 0, s = t.changedTouches.length - 1; i <= s; e = i += 1) (l = t.changedTouches[e]), (n = (l.clientX - this.element.offsetLeft) * this.I0lOI), (a = (l.clientY - this.element.offsetTop) * this.I0lOI), this.lI1O0(n, a, l.identifier) || (null != this.control_listener && this.control_listener.lI1O0(n, a, l.identifier));
                    return !1;
                }),
                (e.prototype.I1llO = function (t) {
                    var e, i;
                    return (this.mousepressed = !0), (e = (t.clientX - this.element.offsetLeft) * this.I0lOI), (i = (t.clientY - this.element.offsetTop) * this.I0lOI), this.lIl1I(e, i, 'mouse') || (null != this.control_listener && this.control_listener.mouseDown(e, i, t)), !1;
                }),
                (e.prototype.IlIOI = function (t) {
                    var e, i, s;
                    return t.preventDefault(), (i = (t.clientX - this.element.offsetLeft) * this.I0lOI), (s = (t.clientY - this.element.offsetTop) * this.I0lOI), (e = !1), (e = this.mousepressed ? this.O110l(i, s, 'mouse') : this.mouseMove(i, s, 'mouse')), e || (null != this.control_listener && this.control_listener.mouseMove(i, s, t)), !1;
                }),
                (e.prototype.lIIO0 = function (t) {
                    var e, i;
                    return (this.mousepressed = !1), (e = (t.clientX - this.element.offsetLeft) * this.I0lOI), (i = (t.clientY - this.element.offsetTop) * this.I0lOI), this.lI1O0(e, i, 'mouse') || (null != this.control_listener && this.control_listener.mouseUp(e, i, t)), !1;
                }),
                (e.prototype.OI0ll = function () {
                    return this.O0l1I(0, 0, this.width, this.height, 0);
                }),
                (e.prototype.render = function (t, e) {
                    if ((null == e && (e = !0), this.OO0Il(), this.OI0ll(), this.IO1lO(), this.O0O01(t), e)) return t.render(this.lIlO0, this.I1000);
                }),
                (e.prototype.renderScreen = function (t) {
                    return t.render(this.lIlO0, this.I1000);
                }),
                e
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ShipAd = (function (t) {
            function e(t, i, s, l) {
                (this.l1110 = t), (this.ship_type = i), (this.hue = null != s ? s : 0), (this.finish = null != l ? l : 'zinc'), e.IO0OI.constructor.call(this), (this.lO011 = !1), (this.scale = 2);
            }
            return (
                extend(e, t),
                (e.prototype.needsUpdate = function () {
                    return this.lO011;
                }),
                (e.prototype.setCustom = function (t, e) {
                    if (null == this.object) return (this.hue = t), void (this.finish = e);
                    if (t !== this.hue) {
                        for (this.hue = t, this.finish = e; this.object.children.length > 0; ) this.object.remove(this.object.children[0]);
                        return (this.shipmodel = new lIl1O(OlII0.ships_by_code[this.ship_type], this.hue / 360)), this.object.add(this.shipmodel.Il1I1), this.shipmodel.Il1I1.scale.set(-1, 1, 1), (this.shipmodel.Il1I1.rotation.x = (180 * THREE.Math.DEG2RAD) / 3), (this.shipmodel.Il1I1.rotation.order = 'XYZ'), (this.shipmodel.finish = this.finish), this.shipmodel.IIO0l(), (this.shipmodel.l0OlI.material = this.shipmodel.material);
                    }
                    return e !== this.finish ? ((this.finish = e), (this.shipmodel.finish = this.finish), this.shipmodel.IIO0l(), (this.shipmodel.l0OlI.material = this.shipmodel.material)) : void 0;
                }),
                (e.prototype.l1O0l = function () {
                    var t, e, i, s;
                    if (null != this.object) {
                        for (s = Math.min(this.llO1l, this.lO01I), this.object.position.x = this.px + this.llO1l / 2, this.object.position.y = this.l1O1l + this.lO01I / 2, this.object.position.z = -500, this.object.scale.x = 0.25 * s * this.scale, this.object.scale.y = 0.25 * s * this.scale, this.object.scale.z = 0.25 * s * this.scale, this.scale = 1 + 0.98 * (this.scale - 1), i = this.parent, t = 0, e = 0; ; ) {
                            if (null == i) break;
                            (t -= i.OlI00), (e -= i.O101O), (i = i.parent);
                        }
                        return (this.object.position.x += t), (this.object.position.y += e);
                    }
                }),
                (e.prototype.ll1II = function () {
                    return e.IO0OI.ll1II.call(this), null == this.object && ((this.object = new THREE.Group()), (this.shipmodel = new lIl1O(OlII0.ships_by_code[this.ship_type], this.hue / 360)), this.object.add(this.shipmodel.Il1I1), this.shipmodel.Il1I1.scale.set(-1, 1, 1), (this.shipmodel.Il1I1.rotation.x = (180 * THREE.Math.DEG2RAD) / 3), (this.shipmodel.Il1I1.rotation.order = 'XYZ'), (this.shipmodel.finish = this.finish), this.shipmodel.IIO0l(), (this.shipmodel.l0OlI.material = this.shipmodel.material), this.parent.object.add(this.object)), (this.object.visible = this.visible);
                }),
                (e.prototype.IO1lO = function (t) {
                    return e.IO0OI.IO1lO.call(this, t), this.ll1II(), this.l1O0l();
                }),
                (e.prototype.OO0Il = function () {
                    if (null != this.object && this.object.visible) return (this.shipmodel.Il1I1.rotation.z = 180 * THREE.Math.DEG2RAD * 2 * ((Date.now() % 1e4) / 1e4)), this.shipmodel.propstep(!0);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Adbg = (function (t) {
            function e() {
                e.IO0OI.constructor.call(this);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    return t.save(), t.translate(this.px, this.l1O1l), (e = t.createLinearGradient(0, 0, this.llO1l, this.lO01I)), e.addColorStop(0, 'hsla(200,50%,50%,.1)'), e.addColorStop(1, 'hsla(200,50%,50%,0)'), (t.fillStyle = e), t.fillRect(0, 0, this.llO1l, this.lO01I), t.restore(), (t.strokeStyle = 'hsla(200,50%,50%,.5)'), (t.lineWidth = this.lO01I / 50), t.strokeRect(0, 0, this.llO1l, this.lO01I);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ScorePanel = (function (e) {
            function i(t, e) {
                (this.l1110 = t), (this.hue = e), i.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 10 / 11), (this.align_top = !0), this.l1110.addKeyListener(9, this), (this.shown = !0);
            }
            return (
                extend(i, e),
                (i.prototype.updateHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.view = t), this.visible)) return (this.lO011 = !0);
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    if (null != this.view) {
                        for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',50%,50%,.4)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', e.save(), e.translate(this.px, this.l1O1l), v = Math.round((20 * this.llO1l) / 512), e.font = v + 'pt Play', e.textBaseline = 'middle', e.textAlign = 'left', e.fillStyle = this.color, e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), e.fillStyle = this.background, e.fillRect(0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l), e.fillStyle = this.color, e.fillStyle = '#000', e.fillText(t('Scoreboard'), 0.05 * this.llO1l, 0.05 * this.llO1l), this.l1110.using_gamepad ? Gamepad.drawButton('RB', e, 0.5 * this.llO1l, 0.05 * this.llO1l, 0.8 * v, this.hue) : this.l1110.is_mobile_app || ((e.textAlign = 'center'), (e.font = Math.round(0.8 * v) + 'pt Play'), e.fillText('TAB', 0.5 * this.llO1l, 0.05 * this.llO1l), (e.strokeStyle = '#000'), e.strokeRect(0.45 * this.llO1l, 0.02 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), v = Math.round((22 * this.llO1l) / 512), e.font = v + 'pt Play', e.textBaseline = 'middle', m = Math.min(10, this.view.getUint8(1)), u = 2, p = this.l1110.lIlO0.Ill00.status.rank, s = e.createLinearGradient(0, 0, this.llO1l, 0), s.addColorStop(0, 'hsla(' + this.hue + ',40%,20%,.5)'), s.addColorStop(0.05, 'hsla(' + this.hue + ',40%,20%,0)'), s.addColorStop(1, 'hsla(' + this.hue + ',40%,20%,.5)'), l = e.createLinearGradient(0, 0, this.llO1l, 0), l.addColorStop(0, 'hsla(' + this.hue + ',40%,60%,.5)'), l.addColorStop(0.05, 'hsla(' + this.hue + ',40%,60%,0)'), l.addColorStop(1, 'hsla(' + this.hue + ',40%,60%,.5)'), e.translate(0, this.lO01I / 11), p > 10 && ((a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && (a = this.l1110.lIlO0.Ill00.status.hue), (c = this.l1110.player_name), (I = this.l1110.lIlO0.Ill00.status.score), (o = 9), (e.fillStyle = l), e.fillRect(0, (o / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), this.l1110.lIlO0.Ill00.status.l1OI0 && ((n = Math.round(0.08 * this.lO01I)), null != (i = this.l1110.names.getCustom(this.l1110.lIlO0.Ill00.status.id)) && ((h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n))), e.fillText(p + '. ' + c, 5 + 0.16 * this.lO01I, ((o + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(I, this.llO1l - 10, ((o + 0.5) / 11) * this.lO01I), (m = Math.min(9, m))), o = d = 0, f = m - 1; d <= f; o = d += 1) (r = this.view.getUint8(u)), (g = 16777215 & this.view.getUint32(u + 4, !0)), (u += 8), (a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && null != (y = this.l1110.lIlO0.IO11l.ll0l1[r]) && (a = y.O1II0.status.hue), (O = this.l1110.names.get(r)), r === this.l1110.lIlO0.Ill00.status.id ? ((e.fillStyle = l), (i = this.l1110.names.getCustom(r))) : ((e.fillStyle = s), (i = this.l1110.names.getCustom(r))), e.fillRect(0, (o / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), null != i && ((n = Math.round(0.08 * this.lO01I)), (h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n)), e.fillText(o + 1 + '. ' + O, 5 + 0.16 * this.lO01I, ((o + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(g, this.llO1l - 10, ((o + 0.5) / 11) * this.lO01I);
                        return e.restore();
                    }
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.shown = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.shown)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.shown = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app ? this.hide() : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                (i.prototype.keyPressed = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (i.prototype.keyReleased = function () {}),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.GameButton = (function (t) {
            function e(t, i, s, l, n) {
                var a;
                (this.l1110 = t), (this.name = i), (this.icon = s), (this.key = l), (this.llO1I = n), e.IO0OI.constructor.call(this, this), (this.blending = THREE.AdditiveBlending), (this.hue = 180), null != this.key && ((a = 'TAB' === this.key ? 9 : 'Esc' === this.key ? 27 : this.key.charCodeAt(0)), 'F11' !== this.key && this.l1110.addKeyListener(a, this)), (this.using_gamepad = this.l1110.using_gamepad);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i;
                    (this.background = 'hsl(' + this.hue + ',20%,20%)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.color), t.beginPath(), t.moveTo(0, 0), t.lineTo(this.lO01I / 3, this.lO01I), t.lineTo(this.llO1l, this.lO01I), t.lineTo(this.llO1l, 0), t.closePath(), t.fill(), this.l1110.is_mobile, this.using_gamepad ? ((e = Math.round(this.lO01I / 2.5)), Gamepad.drawButton('menu', t, this.llO1l / 2, this.lO01I / 2, e, this.hue)) : ((e = Math.round(this.lO01I / 2)), (t.font = e + 'pt FontAwesome'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = '#000'), t.fillText(this.icon, this.llO1l / 2, this.lO01I / 2)), this.l1110.is_mobile || null == this.key || this.using_gamepad || ((e = Math.round(this.lO01I / 4)), (t.font = e + 'pt Play'), t.fillText(this.key, 0.75 * this.llO1l, 0.5 * this.lO01I), (t.strokeStyle = '#000'), (i = (Math.max(2, this.key.length) * this.lO01I) / 4), t.strokeRect(0.75 * this.llO1l - i / 2, 0.25 * this.lO01I, i, 0.5 * this.lO01I)), t.restore();
                }),
                (e.prototype.IlO1I = function () {
                    return (this.enabled = !0), this.O11IO.set({ OO1lI: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.hide = function () {
                    return (this.enabled = !1), this.O11IO.set({ OO1lI: -1.1, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.OO0Il = function () {
                    if ((e.IO0OI.OO0Il.call(this), this.l1110.using_gamepad !== this.using_gamepad)) return (this.using_gamepad = this.l1110.using_gamepad), (this.lO011 = !0);
                }),
                (e.prototype.OIOOI = function () {
                    if (null != this.llO1I) return this.llO1I();
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (e.prototype.lIl1I = function (t, i) {
                    return null == t ? e.IO0OI.lIl1I.call(this, t, i) : this.l1110.settings.check('buttons_disabled') ? void 0 : e.IO0OI.lIl1I.call(this, t, i);
                }),
                (e.prototype.keyPressed = function () {
                    return this.lIl1I();
                }),
                (e.prototype.keyReleased = function () {
                    return this.lI1O0();
                }),
                e
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.IlI1l = (function (e) {
            function i(t, e, s) {
                var l, n, a;
                for (
                    this.l1110 = t,
                        this.letter = e,
                        this.type = s,
                        i.IO0OI.constructor.call(
                            this,
                            {
                                pressed: (function (t) {
                                    return function () {
                                        return t.buttonPressed();
                                    };
                                })(this),
                            },
                            (this.hue = 180)
                        ),
                        this.blending = THREE.AdditiveBlending,
                        this.O11IO.init({ OO1lI: -1.1 }),
                        this.enabled = !1,
                        l = n = 0,
                        a = this.letter.length - 1;
                    n <= a;
                    l = n += 1
                )
                    this.l1110.addKeyListener(this.letter.charCodeAt(l), this);
                (this.show_gamepad = !1), (this.gamepad_selected = !1);
            }
            return (
                extend(i, e),
                (i.prototype.IlO1I = function () {
                    return (this.enabled = !0), this.O11IO.set({ OO1lI: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.hide = function () {
                    return (this.enabled = !1), this.O11IO.set({ OO1lI: -1.1, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.setHue = function (t) {
                    if (t !== this.hue) return (this.hue = t), this.repaint();
                }),
                (i.prototype.set = function (t) {
                    if (t.code !== this.type.code) return (this.type = t), this.repaint();
                }),
                (i.prototype.lIl1I = function (t, e) {
                    return null == t ? i.IO0OI.lIl1I.call(this, t, e) : this.l1110.settings.check('buttons_disabled') ? void 0 : i.IO0OI.lIl1I.call(this, t, e);
                }),
                (i.prototype.setGamepadSelected = function (t) {
                    if (t !== this.gamepad_selected) return (this.gamepad_selected = t), this.repaint();
                }),
                (i.prototype.setShowGamepad = function (t) {
                    if (t !== this.show_gamepad) return (this.show_gamepad = t), this.repaint();
                }),
                (i.prototype.repaint = function () {
                    return (this.lO011 = !0);
                }),
                (i.prototype.lllO1 = function (e) {
                    var s, l, n, a, o;
                    if (null != this.type) {
                        if (this.l1110.is_mobile_app) return this.drawComponentMobile(e);
                        (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',70%,40%,.25)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (e.fillStyle = this.background), e.fillRect(0, 0, this.llO1l, this.lO01I), (e.fillStyle = this.medium), e.beginPath(), e.moveTo(0, 0), e.lineTo(this.llO1l / 32, 0), e.lineTo(this.llO1l / 32, 0.4 * this.lO01I), e.lineTo(this.llO1l / 64, 0.6 * this.lO01I), e.lineTo(this.llO1l / 64, this.lO01I), e.lineTo(0, this.lO01I), e.closePath(), e.fill(), e.beginPath(), e.moveTo(this.llO1l, 0), e.lineTo((31 * this.llO1l) / 32, 0), e.lineTo((31 * this.llO1l) / 32, 0.4 * this.lO01I), e.lineTo((63 * this.llO1l) / 64, 0.6 * this.lO01I), e.lineTo((63 * this.llO1l) / 64, this.lO01I), e.lineTo(this.llO1l, this.lO01I), e.closePath(), e.fill(), (a = Math.round(this.lO01I / 7)), (e.font = a + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'left'), (e.fillStyle = this.color), e.fillText(this.type.name, this.llO1l / 16, this.lO01I / 4), (e.fillStyle = this.color), e.fillText(t('Lv') + '' + this.type.level, this.llO1l / 16, 0.75 * this.lO01I), this.l1110.is_mobile || this.l1110.using_gamepad || ((e.fillStyle = this.color), (e.strokeStyle = this.color), e.strokeRect(this.llO1l / 4 - a, 0.75 * this.lO01I - a, 2 * a, 2 * a), (e.textAlign = 'center'), e.fillText(this.letter.charAt(0), this.llO1l / 4, 0.75 * this.lO01I), (e.textAlign = 'left')), this.l1110.using_gamepad && (this.gamepad_selected ? Gamepad.drawDPad(e, this.llO1l / 4, 0.75 * this.lO01I, 0.4 * this.lO01I, 'top', '', 'hsl(120,80%,40%)') : this.show_gamepad ? Gamepad.drawDPad(e, this.llO1l / 4, 0.75 * this.lO01I, 0.4 * this.lO01I, 'top') : Gamepad.drawDPad(e, this.llO1l / 4, 0.75 * this.lO01I, 0.4 * this.lO01I, 'leftright')), (e.fillStyle = this.color), (a = Math.round(this.lO01I / 8)), (e.font = a + 'pt Play'), (o = Math.round(0.033333 * (this.type.specs.ship.speed[0] + this.type.specs.ship.acceleration[0] + this.type.specs.ship.rotation[0]))), (n = Math.round(0.05 * (this.type.specs.shield.capacity[0] + 10 * this.type.specs.shield.reload[0]))), (s = Math.round(0.05 * (this.type.specs.generator.capacity[0] + 10 * this.type.specs.generator.reload[0]))), e.fillText('MK ' + n, 0.8 * this.llO1l, 0.25 * this.lO01I), e.fillText('MK ' + s, 0.8 * this.llO1l, 0.5 * this.lO01I), e.fillText('MK ' + o, 0.8 * this.llO1l, 0.75 * this.lO01I), (e.font = a + 'pt FontAwesome'), e.fillText('', 0.75 * this.llO1l, 0.25 * this.lO01I), e.fillText('', 0.75 * this.llO1l, 0.5 * this.lO01I), e.fillText('', 0.75 * this.llO1l, 0.75 * this.lO01I), (l = i.I110l(this.type.code, this.hue)), (e.globalAlpha = 0.8), e.drawImage(l, this.llO1l / 2 - this.lO01I / 2, 0, this.lO01I, this.lO01I), e.restore();
                    }
                }),
                (i.prototype.drawComponentMobile = function (e) {
                    var s, l, n, a;
                    (this.color = 'hsla(' + this.hue + ',70%,70%,1)'), e.save(), e.translate(this.px, this.l1O1l), (e.strokeStyle = this.color), (e.lineWidth = this.lO01I / 120), (e.shadowBlur = this.lO01I / 10), (e.shadowOpacity = 1), (e.shadowColor = this.color), (n = this.lO01I / 30), (s = this.lO01I / 8), e.beginPath(), e.moveTo(n, this.lO01I - n), e.lineTo(this.llO1l - s, this.lO01I - n), e.lineTo(this.llO1l - n, this.lO01I - s), e.lineTo(this.llO1l - n, -n), e.lineTo(n, -n), e.closePath(), e.stroke(), (e.shadowBlur = 0), (e.shadowOpacity = 0), (a = Math.round(this.lO01I / 5)), (e.font = a + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'left'), (e.fillStyle = this.color), e.fillText(this.type.name, this.llO1l / 16, this.lO01I / 4), (e.fillStyle = this.color), e.fillText(t('Lv') + '' + this.type.level, this.llO1l / 16, 0.5 * this.lO01I), this.l1110.using_gamepad && (this.gamepad_selected ? Gamepad.drawDPad(e, this.llO1l / 4, 0.75 * this.lO01I, 0.4 * this.lO01I, 'top', '', 'hsl(120,80%,40%)') : this.show_gamepad ? Gamepad.drawDPad(e, this.llO1l / 4, 0.75 * this.lO01I, 0.4 * this.lO01I, 'top') : Gamepad.drawDPad(e, this.llO1l / 4, 0.75 * this.lO01I, 0.4 * this.lO01I, 'leftright')), (e.fillStyle = this.color), (a = Math.round(this.lO01I / 8)), (l = i.I110l(this.type.code, this.hue)), (e.globalAlpha = 1), e.drawImage(l, 0.6 * this.llO1l - 0.55 * this.lO01I, 0.05 * -this.lO01I, 1.1 * this.lO01I, 1.1 * this.lO01I), (e.fillStyle = this.color), (a = Math.round(this.lO01I / 4)), (e.font = a + 'pt SBGlyphs'), (e.textBaseline = 'middle'), (e.textAlign = 'center'), e.fillText('Q', 0.85 * this.llO1l, this.lO01I / 2), e.restore();
                }),
                (i.prototype.buttonPressed = function () {
                    return this.l1110.I0O01.OIOO1(this.type.code), (this.pressed = !1), this.l1110.sendGAEvent('ship_evt', this.type.name + '-' + this.type.code), !0;
                }),
                (i.prototype.OO0Il = function () {}),
                (i.prototype.keyPressed = function () {
                    return this.lIl1I();
                }),
                (i.prototype.keyReleased = function () {
                    return this.lI1O0();
                }),
                (i.images_buffer = []),
                (i.I110l = function (t, e) {
                    var s;
                    return null == i.images_buffer[t] && ((s = new lIl1O(OlII0.ships_by_code[t], e / 360)), (i.images_buffer[t] = s.I110l()), s.dispose()), i.images_buffer[t];
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.l0l00 = (function (t) {
            function e(t) {
                var i, s, l, n, a;
                for (
                    this.l1110 = t,
                        e.IO0OI.constructor.call(this),
                        this.buttons = [],
                        this.lv = 1,
                        this.buttons.push(new IlI1l(this.l1110, '9ç', OI1I1.types_by_code[201])),
                        this.buttons.push(new IlI1l(this.l1110, '0à', OI1I1.types_by_code[202])),
                        this.life_button = new OIO11(
                            this.l1110,
                            (function (t) {
                                return function () {
                                    return t.l1110.I0O01.buyLife(), (t.life_button.pressed = !1), t.l1110.sendGAEvent('buylife_evt'), !0;
                                };
                            })(this)
                        ),
                        this.buttons.push(this.life_button),
                        a = this.buttons,
                        s = l = 0,
                        n = a.length;
                    l < n;
                    s = ++l
                )
                    (i = a[s]), this.add(i, [s / 2 + 0.0025, 0, 0.495, 1]);
                (this.shown = !1),
                    (this.toggled = !0),
                    (this.shown_since = 0),
                    (this.manual_toggle = !1),
                    (this.current_type = null),
                    (this.togglable = !this.l1110.is_touch_device),
                    (this.toggle_button = new ToggleUpgradesButton(
                        this.l1110,
                        (function (t) {
                            return function () {
                                return t.toggle(!0);
                            };
                        })(this)
                    )),
                    this.add(this.toggle_button, [0, 0, 1, 0.3]),
                    this.l1110.addKeyListener('U'.charCodeAt(0), {
                        keyPressed: (function (t) {
                            return function () {
                                return t.toggle(!0);
                            };
                        })(this),
                        keyReleased: (function (t) {
                            return function () {};
                        })(),
                    }),
                    (this.current_ship_can_upgrade = !0);
            }
            return (
                extend(e, t),
                (e.prototype.toggle = function (t) {
                    return null == t && (t = !0), t && (this.manual_toggle = !0), (this.toggled = !this.toggled), this.toggled ? this.toggle_button.hide() : this.toggle_button.IlO1I();
                }),
                (e.prototype.updateHue = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), e.setHue(t);
                    return this.toggle_button.setHue(t);
                }),
                (e.prototype.IlO1I = function () {
                    var t, e, i, s, l, n;
                    if (!this.shown) for (this.shown = !0, this.shown_since = Date.now(), n = this.buttons, e = i = 0, s = n.length; i < s; e = ++i) (t = n[e]), !(e < 2) || (OI1I1.shipUpgrades(this.lv, this.l1110.lIlO0.IO11l.survival) && this.l1110.mode.shipCanUpgrade()) ? t.IlO1I() : (t.hide(), 0 === e && null != (l = this.l1110.mode.shipUpgradeLockedMessage()) && this.l1110.message(l, '#F88'));
                }),
                (e.prototype.hide = function () {
                    var t, e, i, s;
                    if (this.shown) for (this.shown = !1, s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.hide();
                }),
                (e.prototype.relayout = function () {
                    var t, e, i, s;
                    if (this.l1110.mode.shipCanBuyLife()) {
                        for (s = 0.4, t = i = 0; i <= 1; t = i += 1) this.buttons[t].IIOI1 = this.buttons[t].lOlI0 = [t * s + 0.0025, 0, s - 0.005, 1];
                        return (this.life_button.IIOI1 = this.life_button.lOlI0 = [0.8025, 0, 0.195, 1]), (this.life_button.visible = !0), (this.life_button.enabled = !0);
                    }
                    for (s = 0.5, t = e = 0; e <= 1; t = e += 1) this.buttons[t].IIOI1 = this.buttons[t].lOlI0 = [t * s + 0.0025, 0, s - 0.005, 1];
                    return (this.life_button.visible = !1), (this.life_button.enabled = !1);
                }),
                (e.prototype.OO0Il = function () {
                    var t;
                    if (((this.visible = this.l1110.mode.showUpgrades()), (this.l1110.using_gamepad || this.l1110.mode.disable_ship_upgrade_collapsing) && (this.togglable = !1), this.l1110.Ill00.type !== this.current_type && ((this.current_type = this.l1110.Ill00.type), (this.lv = this.l1110.Ill00.type.level), (t = OI1I1.next(this.current_type)), null != t[0] && this.buttons[0].set(t[0]), null != t[1] && this.buttons[1].set(t[1])), this.shown && Date.now() - this.shown_since > 1e4 && this.toggled && this.togglable && !this.manual_toggle && this.toggle(!1), this.l1110.Ill00.status.I0O1l >= this.l1110.Ill00.type.level * this.l1110.Ill00.type.level * 20 ? (this.toggled ? (this.IlO1I(), this.relayout(), this.toggle_button.hide()) : (this.hide(), this.toggle_button.IlO1I())) : (this.hide(), this.toggle_button.hide(), this.manual_toggle || (this.toggled = !0)), this.l1110.mode.shipCanUpgrade() !== this.current_ship_can_upgrade && ((this.current_ship_can_upgrade = this.l1110.mode.shipCanUpgrade()), this.shown))) return this.hide(), this.IlO1I();
                }),
                e
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.l11l1 = (function (e) {
            function i(t, e, s, l, n, a) {
                var o, r, h;
                for (
                    this.l1110 = t,
                        this.name = e,
                        this.letter = s,
                        this.hue = l,
                        this.index = n,
                        this.ref = a,
                        i.IO0OI.constructor.call(this, {
                            pressed: (function (t) {
                                return function () {
                                    return t.buttonPressed();
                                };
                            })(this),
                        }),
                        this.value = 0,
                        this.max = 1,
                        this.enabled = !1,
                        this.blending = THREE.AdditiveBlending,
                        this.O11IO.init({ OO1lI: 1.1 }),
                        o = r = 0,
                        h = this.letter.length - 1;
                    r <= h;
                    o = r += 1
                )
                    this.l1110.addKeyListener(this.letter.charCodeAt(o), this);
                (this.status = 'hidden'), (this.gamepad_selected = !1), (this.show_gamepad = !1);
            }
            return (
                extend(i, e),
                (i.prototype.IlO1I = function () {
                    if (((this.enabled = this.value < this.max), (this.status = 'shown'), this.value < this.max)) return this.O11IO.set({ OO1lI: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.hide = function () {
                    return (this.enabled = !1), (this.status = 'hidden'), this.O11IO.set({ OO1lI: 1.1, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.collapse = function () {
                    return (this.enabled = !1), (this.status = 'collapsed'), this.O11IO.set({ OO1lI: 0.5, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.set = function (t, e, i) {
                    var s;
                    if (((s = this.enabled), 'collapsed' === this.status && (s = this.value < this.max && i), t !== this.value || e !== this.max || s !== this.enabled)) return (this.enabled = s), (this.value = t), (this.max = e), this.value >= this.max && (this.enabled = !1), this.enabled || 'shown' !== this.status || this.collapse(), this.enabled && 'collapsed' === this.status && this.IlO1I(), this.repaint();
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r;
                    if (this.l1110.is_mobile_app) return this.drawComponentMobile(e);
                    for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',70%,40%,.25)', this.color = 'hsla(' + this.hue + ',70%,70%,1)', e.save(), e.translate(this.px, this.l1O1l), e.fillStyle = this.background, e.fillRect(0, 0, this.llO1l, this.lO01I), e.fillStyle = this.medium, e.beginPath(), e.moveTo(0, 0), e.lineTo(this.llO1l / 16, 0), e.lineTo(this.llO1l / 16, 0.4 * this.lO01I), e.lineTo(this.llO1l / 32, 0.6 * this.lO01I), e.lineTo(this.llO1l / 32, this.lO01I), e.lineTo(0, this.lO01I), e.closePath(), e.fill(), e.beginPath(), e.moveTo(this.llO1l, 0), e.lineTo((15 * this.llO1l) / 16, 0), e.lineTo((15 * this.llO1l) / 16, 0.4 * this.lO01I), e.lineTo((31 * this.llO1l) / 32, 0.6 * this.lO01I), e.lineTo((31 * this.llO1l) / 32, this.lO01I), e.lineTo(this.llO1l, this.lO01I), e.closePath(), e.fill(), n = this.name.split(' '), o = Math.round(Math.min(this.lO01I / 5, this.llO1l / 12)), e.font = o + 'pt Play', e.textBaseline = 'middle', e.textAlign = 'center', e.fillStyle = this.color, e.fillText(t(n[1]), this.llO1l / 2, this.lO01I / 4), e.textAlign = 'left', this.value < this.max ? e.fillText(t('Lv') + '' + (this.value + 1), this.llO1l / 8, (3 * this.lO01I) / 4) : e.fillText('Max', this.llO1l / 8, (3 * this.lO01I) / 4), i = o / (2 * this.max + this.max - 1), s = l = 0, a = this.max - 1; l <= a; s = l += 1) this.value > s && e.fillRect((7 * this.llO1l) / 8 - o, 0.25 * this.lO01I + o / 2 - s * i * 3 - 2 * i, o, 2 * i);
                    (e.font = 1.5 * o + 'pt SBGlyphs'), (e.fillStyle = this.color), e.fillText(n[0], this.llO1l / 8, this.lO01I / 4), (e.textAlign = 'center'), this.value < this.max && (this.l1110.is_mobile || this.l1110.using_gamepad || ((e.fillStyle = this.color), (e.strokeStyle = this.color), (o = this.llO1l / 6), e.strokeRect((4.5 * this.llO1l) / 6 - o / 2, 0.75 * this.lO01I - o / 2, o, o), (r = Math.round(this.lO01I / 6)), (e.font = r + 'pt Play'), e.fillText(this.letter.charAt(0), (4.5 * this.llO1l) / 6, 0.75 * this.lO01I)), this.l1110.using_gamepad ? (this.gamepad_selected ? Gamepad.drawDPad(e, (2 * this.llO1l) / 3, 0.75 * this.lO01I, 0.4 * this.lO01I, 'bottom', '', 'hsl(120,80%,40%)') : this.show_gamepad ? Gamepad.drawDPad(e, (2 * this.llO1l) / 3, 0.75 * this.lO01I, 0.4 * this.lO01I, 'bottom') : Gamepad.drawDPad(e, (2 * this.llO1l) / 3, 0.75 * this.lO01I, 0.4 * this.lO01I, 'leftright')) : ((r = Math.round(this.lO01I / 3)), (e.font = 1 * r + 'pt SBGlyphs'), (e.fillStyle = this.color), e.fillText('', this.llO1l / 2, 0.75 * this.lO01I))), e.restore();
                }),
                (i.prototype.repaint = function () {
                    return (this.lO011 = !0);
                }),
                (i.prototype.drawComponentMobile = function (t) {
                    var e, i, s, l, n, a, o, r, h, u;
                    for (this.color = 'hsla(' + this.hue + ',70%,70%,1)', t.save(), t.translate(this.px, this.l1O1l), t.strokeStyle = this.color, t.lineWidth = this.lO01I / 120, t.shadowBlur = this.lO01I / 10, t.shadowOpacity = 1, t.shadowColor = this.color, a = this.lO01I / 30, i = this.lO01I / 8, t.beginPath(), t.moveTo(a, a), t.lineTo(this.llO1l - i, a), t.lineTo(this.llO1l - a, i), t.lineTo(this.llO1l - a, this.lO01I + a), t.lineTo(a, this.lO01I + a), t.closePath(), t.stroke(), t.shadowBlur = 0, t.shadowOpacity = 0, o = this.name.split(' '), h = Math.round(Math.min(this.lO01I / 4, this.llO1l / 8)), t.font = h + 'pt Play', t.textBaseline = 'middle', t.textAlign = 'center', t.fillStyle = this.color, e = this.lO01I / 4, s = e / (2 * this.max + this.max - 1), l = n = 0, r = this.max - 1; n <= r; l = n += 1) this.value > l && t.fillRect(0.7 * this.llO1l - e / 2, 0.275 * this.lO01I + e / 2 - l * s * 3 - 2 * s, e, 2 * s);
                    (t.font = 1.7 * h + 'pt SBGlyphs'), (t.fillStyle = this.color), (t.textAlign = 'center'), t.fillText(o[0], 0.3 * this.llO1l, 0.275 * this.lO01I), (t.textAlign = 'center'), this.value < this.max && (this.l1110.using_gamepad ? ((u = Math.round(this.lO01I / 4)), (t.font = 1 * u + 'pt SBGlyphs'), (t.fillStyle = this.color), t.fillText('', 0.3 * this.llO1l, 0.75 * this.lO01I), this.gamepad_selected ? Gamepad.drawDPad(t, 0.7 * this.llO1l, 0.75 * this.lO01I, 0.4 * this.lO01I, 'bottom', '', 'hsl(120,80%,40%)') : this.show_gamepad ? Gamepad.drawDPad(t, 0.7 * this.llO1l, 0.75 * this.lO01I, 0.4 * this.lO01I, 'bottom') : Gamepad.drawDPad(t, 0.7 * this.llO1l, 0.75 * this.lO01I, 0.4 * this.lO01I, 'leftright')) : ((u = Math.round(this.lO01I / 4)), (t.font = 1 * u + 'pt SBGlyphs'), (t.fillStyle = this.color), t.fillText('8', this.llO1l / 2, 0.75 * this.lO01I))), t.restore();
                }),
                (i.prototype.setGamepadSelected = function (t) {
                    if (t !== this.gamepad_selected) return (this.gamepad_selected = t), this.repaint();
                }),
                (i.prototype.setShowGamepad = function (t) {
                    if (t !== this.show_gamepad) return (this.show_gamepad = t), this.repaint();
                }),
                (i.prototype.l0I00 = function (t) {
                    if (t !== this.text) return (this.text = t), this.repaint();
                }),
                (i.prototype.buttonPressed = function () {
                    return this.l1110.I0O01.upgradeSpec(this.index), (this.pressed = !1), Math.random() < 0.1 && this.l1110.sendGAEvent('upgrade_evt', this.ref), !0;
                }),
                (i.prototype.lIl1I = function (t, e) {
                    return null == t ? i.IO0OI.lIl1I.call(this, t, e) : this.l1110.settings.check('buttons_disabled') ? void 0 : i.IO0OI.lIl1I.call(this, t, e);
                }),
                (i.prototype.keyPressed = function () {
                    return this.lIl1I();
                }),
                (i.prototype.keyReleased = function () {
                    return this.lI1O0();
                }),
                (i.prototype.OO0Il = function () {}),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.OO10l = (function (t) {
            function e(t) {
                var i, s, l, n, a, o, r, h, u, d;
                for (this.l1110 = t, e.IO0OI.constructor.call(this), this.buttons = [], s = 0, l = [180, 180, 60, 60, 30, 30, 0, 0], this.buttons.push(new l11l1(this.l1110, 'b Capacity', '1&', l[s++], 0, 'shield_capacity')), this.buttons.push(new l11l1(this.l1110, 'c Regen', '2é', l[s++], 1, 'shield_regen')), this.buttons.push(new l11l1(this.l1110, 'd Capacity', '3"', l[s++], 2, 'generator_capacity')), this.buttons.push(new l11l1(this.l1110, 'e Regen', "4'", l[s++], 3, 'generator_regen')), this.buttons.push(new l11l1(this.l1110, 'f Damage', '5(', l[s++], 4, 'fire_damage')), this.buttons.push(new l11l1(this.l1110, 'g Speed', '6§-', l[s++], 5, 'fire_speed')), this.buttons.push(new l11l1(this.l1110, 'h Speed', '7è', l[s++], 6, 'ship_speed')), this.buttons.push(new l11l1(this.l1110, 'i Agility', '8!_', l[s++], 7, 'ship_agility')), h = 0.005, d = (1 - 8 * h) / 8, u = d + h, this.l1110.is_mobile_app && ((d = 1 / 8), (u = d)), r = this.buttons, n = a = 0, o = r.length; a < o; n = ++a) (i = r[n]), this.add(i, [n * u, 0, d, 1]);
                this.status = 'hidden';
            }
            return (
                extend(e, t),
                (e.prototype.IlO1I = function () {
                    var t, e, i, s;
                    if ('shown' !== this.status) for (this.status = 'shown', s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.IlO1I();
                }),
                (e.prototype.collapse = function () {
                    var t, e, i, s;
                    if ('collapsed' !== this.status) for (this.status = 'collapsed', s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.collapse();
                }),
                (e.prototype.hide = function () {
                    var t, e, i, s;
                    if ('hidden' !== this.status) for (this.status = 'hidden', s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.hide();
                }),
                (e.prototype.OO0Il = function () {
                    var t, e, i, s, l, n, a, o;
                    for (this.visible = this.l1110.mode.showUpgrades(), e = this.l1110.Ill00.status.I0O1l >= 5 * this.l1110.Ill00.type.level, a = this.buttons, i = s = 0, l = a.length; s < l; i = ++s) (t = a[i]), (o = this.l1110.Ill00.instance.levels[i]), (n = this.l1110.Ill00.type.level), t.set(o, n, e);
                    return this.l1110.Ill00.status.I0O1l >= 5 * this.l1110.Ill00.type.level && !this.l1110.Ill00.instance.allMaxed() && OI1I1.levelUpgrades(this.l1110.Ill00.type.level) && this.l1110.Ill00.status.alive && !this.l1110.gameover ? this.IlO1I() : this.l1110.Ill00.status.alive && 0 !== this.l1110.Ill00.instance.ll1IO() && this.l1110.Ill00.status.alive && !this.l1110.gameover ? this.collapse() : this.hide();
                }),
                e
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.OIO11 = (function (e) {
            function i(e, s) {
                var l;
                (this.l1110 = e), (this.llO1I = s), i.IO0OI.constructor.call(this, this), (this.blending = THREE.AdditiveBlending), (this.hue = 180), (this.key = '+'), (this.name = t('Life')), (l = 187), this.l1110.addKeyListener(l, this), this.O11IO.init({ OO1lI: -1.1 }), (this.enabled = !1), (this.show_gamepad = !1), (this.gamepad_selected = !1);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (t) {
                    var e, i, s;
                    if (this.l1110.is_mobile_app) return this.drawComponentMobile(t);
                    (this.background = 'hsla(' + this.hue + ',50%,20%,.5)'), (this.medium = 'hsla(' + this.hue + ',50%,50%,.5)'), (this.color = 'hsla(' + this.hue + ',40%,75%,1)'), t.save(), t.translate(this.px, this.l1O1l), (t.fillStyle = this.background), t.fillRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.medium), t.beginPath(), t.moveTo(0, this.lO01I), t.lineTo(this.llO1l / 8, this.lO01I), t.lineTo(this.llO1l / 8, 0.6 * this.lO01I), t.lineTo(this.llO1l / 16, 0.4 * this.lO01I), t.lineTo(this.llO1l / 16, 0), t.lineTo(0, 0), t.closePath(), t.fill(), t.beginPath(), t.moveTo(this.llO1l, this.lO01I), t.lineTo((7 * this.llO1l) / 8, this.lO01I), t.lineTo((7 * this.llO1l) / 8, 0.6 * this.lO01I), t.lineTo((15 * this.llO1l) / 16, 0.4 * this.lO01I), t.lineTo((15 * this.llO1l) / 16, 0), t.lineTo(this.llO1l, 0), t.closePath(), t.fill(), (e = this.l1110.is_mobile ? 0.5 : 0.4), (i = Math.round(this.lO01I / 3)), (t.font = i + 'pt FontAwesome'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText('', this.llO1l / 2, this.lO01I * e), (t.globalCompositeOperation = 'destination-out'), (t.font = Math.round(0.5 * i) + 'pt FontAwesome'), t.fillText('', this.llO1l / 2, this.lO01I * e), (t.globalCompositeOperation = 'source-over'), this.l1110.is_mobile || this.l1110.using_gamepad || ((i = Math.round(this.lO01I / 8)), (t.font = i + 'pt Play'), t.fillText(this.key, this.llO1l / 2, 0.85 * this.lO01I), (t.strokeStyle = this.color), (s = (Math.max(2, this.key.length) * this.llO1l) / 16), t.strokeRect(this.llO1l / 2 - s / 2, 0.85 * this.lO01I - s / 2, s, s)), this.l1110.using_gamepad && (this.gamepad_selected ? Gamepad.drawDPad(t, this.llO1l / 2, 0.8 * this.lO01I, 0.4 * this.lO01I, 'top', '', 'hsl(120,80%,40%)') : this.show_gamepad ? Gamepad.drawDPad(t, this.llO1l / 2, 0.8 * this.lO01I, 0.4 * this.lO01I, 'top') : Gamepad.drawDPad(t, this.llO1l / 2, 0.8 * this.lO01I, 0.4 * this.lO01I, 'leftright')), t.restore();
                }),
                (i.prototype.drawComponentMobile = function (t) {
                    var e, i, s, l, n;
                    (this.color = 'hsla(' + this.hue + ',70%,70%,1)'), t.save(), t.translate(this.px, this.l1O1l), (t.strokeStyle = this.color), (t.lineWidth = this.lO01I / 120), (t.shadowBlur = this.lO01I / 10), (t.shadowOpacity = 1), (t.shadowColor = this.color), (s = this.lO01I / 30), (e = this.lO01I / 8), t.beginPath(), t.moveTo(s, this.lO01I - s), t.lineTo(this.llO1l - e, this.lO01I - s), t.lineTo(this.llO1l - s, this.lO01I - e), t.lineTo(this.llO1l - s, -s), t.lineTo(s, -s), t.closePath(), t.stroke(), (t.shadowBlur = 0), (t.shadowOpacity = 0), (i = this.l1110.is_mobile ? 0.5 : 0.4), (l = Math.round(this.lO01I / 3)), (t.font = l + 'pt FontAwesome'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText('', this.llO1l / 2, this.lO01I * i), (t.globalCompositeOperation = 'destination-out'), (t.font = Math.round(0.5 * l) + 'pt FontAwesome'), t.fillText('', this.llO1l / 2, this.lO01I * i), (t.globalCompositeOperation = 'source-over'), this.l1110.is_mobile || this.l1110.using_gamepad || ((l = Math.round(this.lO01I / 8)), (t.font = l + 'pt Play'), t.fillText(this.key, this.llO1l / 2, 0.85 * this.lO01I), (t.strokeStyle = this.color), (n = (Math.max(2, this.key.length) * this.llO1l) / 16), t.strokeRect(this.llO1l / 2 - n / 2, 0.85 * this.lO01I - n / 2, n, n)), this.l1110.using_gamepad && (this.gamepad_selected ? Gamepad.drawDPad(t, this.llO1l / 2, 0.8 * this.lO01I, 0.4 * this.lO01I, 'top', '', 'hsl(120,80%,40%)') : this.show_gamepad ? Gamepad.drawDPad(t, this.llO1l / 2, 0.8 * this.lO01I, 0.4 * this.lO01I, 'top') : Gamepad.drawDPad(t, this.llO1l / 2, 0.8 * this.lO01I, 0.4 * this.lO01I, 'leftright')), t.restore();
                }),
                (i.prototype.setGamepadSelected = function (t) {
                    if (t !== this.gamepad_selected) return (this.gamepad_selected = t), (this.lO011 = !0);
                }),
                (i.prototype.setShowGamepad = function (t) {
                    if (t !== this.show_gamepad) return (this.show_gamepad = t), (this.lO011 = !0);
                }),
                (i.prototype.IlO1I = function () {
                    return (this.enabled = !0), this.O11IO.set({ OO1lI: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.hide = function () {
                    return (this.enabled = !1), this.O11IO.set({ OO1lI: -1.1, d: 1, k: 0.02, f: 0.2 });
                }),
                (i.prototype.OO0Il = function () {}),
                (i.prototype.OIOOI = function () {
                    if (null != this.llO1I) return this.llO1I();
                }),
                (i.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.keyPressed = function () {
                    return this.lIl1I();
                }),
                (i.prototype.keyReleased = function () {
                    return this.lI1O0();
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ToggleUpgradesButton = (function (t) {
            function e(t, i) {
                (this.l1110 = t), (this.top = null == i || i), e.IO0OI.constructor.call(this, this), (this.blending = THREE.AdditiveBlending), (this.hue = 180), this.O11IO.init({ OO1lI: -1.1 }), (this.force_ratio = 16), (this.shown = !1);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i;
                    return (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',70%,40%,.25)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.background), t.fillRect(0, 0, this.llO1l, this.lO01I), (i = Math.round(this.lO01I / 2)), (e = this.top ? '' : ''), (t.font = i + 'pt FontAwesome'), (t.textAlign = 'left'), (t.textBaseline = 'middle'), (t.fillStyle = this.color), t.fillText(e, this.lO01I / 2, this.lO01I / 2), (t.textAlign = 'right'), t.fillText(e, this.llO1l - this.lO01I / 2, this.lO01I / 2), (t.strokeStyle = this.color), t.rect(this.llO1l / 2 - 0.4 * this.lO01I, 0.1 * this.lO01I, 0.8 * this.lO01I, 0.8 * this.lO01I), t.stroke(), (t.font = i + 'pt Play'), (t.textAlign = 'center'), t.fillText('U', this.llO1l / 2, this.lO01I / 2), t.restore();
                }),
                (e.prototype.IlO1I = function () {
                    if (!this.shown) return (this.shown = !0), this.O11IO.set({ OO1lI: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.hide = function () {
                    if (this.shown) return (this.shown = !1), this.O11IO.set({ OO1lI: -1.1, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                e
            );
        })(OllI0)),
        (this.OlI0I = (function () {
            function t(t) {
                (this.l1110 = t), (this.canvas = document.createElement('canvas')), (this.canvas.width = 512), (this.canvas.height = 512), (this.l1110.mode.radar_zoom > 2 || this.l1110.mode.high_def_radar) && ((this.canvas.width = 1024), (this.canvas.height = 1024)), (this.canvas2 = document.createElement('canvas')), (this.canvas2.width = 512), (this.canvas2.height = 512), (this.Il1I1 = new THREE.Group()), (this.texture = new THREE.Texture(this.canvas)), (this.texture.minFilter = THREE.LinearFilter), (this.texture.wrapS = this.texture.wrapT = THREE.RepeatWrapping), this.texture.repeat.set(1 / this.l1110.mode.radar_zoom, 1 / this.l1110.mode.radar_zoom), (this.texture2 = new THREE.Texture(this.canvas2)), (this.texture2.minFilter = THREE.LinearFilter), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ map: this.texture, transparent: !0, depthTest: !1, depthWrite: !1, blending: THREE.AdditiveBlending })), (this.m1 = new THREE.Mesh(this.O1III, this.material)), (this.geom2 = new THREE.PlaneGeometry(1, 1)), (this.material2 = new THREE.MeshBasicMaterial({ map: this.texture2, transparent: !0, depthTest: !1, depthWrite: !1 })), (this.m2 = new THREE.Mesh(this.geom2, this.material2)), this.Il1I1.add(this.m2), this.Il1I1.add(this.m1), (this.m1.position.z = -1);
            }
            return (
                (t.prototype.lIOIO = function (t, e) {
                    var i;
                    (t /= this.l1110.size), (e /= this.l1110.size), (i = 0.5 - 0.5 / this.l1110.mode.radar_zoom), (this.texture.offset.x = t + i), (this.texture.offset.y = e + i);
                }),
                (t.prototype.setHue = function (t) {
                    if (t !== this.hue && null != this.data) return this.l1O0l(this.data, t);
                }),
                (t.prototype.l1IO1 = function (t) {
                    var e, i, s, l, n, a, o, r, h, u;
                    for (i = this.canvas.getContext('2d'), i.save(), i.clearRect(0, 0, this.canvas.width, this.canvas.height), i.translate(this.canvas.width / 2, this.canvas.height / 2), i.scale(this.canvas.width / 2, this.canvas.height / 2), e = new l1ll1(t, this.l1110.I00l0, this.l1110.mode), u = {}, i.fillStyle = 'hsla(' + this.hue + ',50%,50%,.4)', l = a = -this.l1110.I00l0, r = this.l1110.I00l0 - 1; a <= r; l = a += 1) for (n = o = -this.l1110.I00l0, h = this.l1110.I00l0 - 1; o <= h; n = o += 1) e.get(l, n, u), u.on && (i.beginPath(), i.arc(u.x / this.l1110.I00l0, -u.y / this.l1110.I00l0, u.size / this.l1110.I00l0, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.fill());
                    return (s = i.createRadialGradient(0, 0, 0, 0, 0, 0.05)), s.addColorStop(0, 'rgba(255,255,255,1)'), s.addColorStop(0.5, 'hsla(' + this.hue + ',90%,80%,1)'), s.addColorStop(1, 'hsla(' + this.hue + ',90%,80%,0)'), (i.fillStyle = s), i.fillRect(-0.05, -0.05, 0.1, 0.1), this.l1110.mode.drawRadarInfo(i), i.restore(), (this.texture.needsUpdate = !0);
                }),
                (t.prototype.l1O0l = function (t, e) {
                    return (this.data = t), (this.hue = e), this.l1IO1(this.data.seed), this.update2(this.data, this.hue);
                }),
                (t.prototype.update2 = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    for (p = new OII10(t.seed), this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',70%,40%,.25)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', i = this.canvas2.getContext('2d'), i.save(), i.translate(this.canvas2.width / 2, this.canvas2.height / 2), i.scale(this.canvas2.width / 2, this.canvas2.height / 2), i.clearRect(-1, -1, 2, 2), n = i.createRadialGradient(0, 0, 0, 0, 0, 1.41), n.addColorStop(0, 'rgba(0,0,0,1)'), n.addColorStop(1, 'rgba(0,0,0,0.5)'), i.fillStyle = n, i.fillRect(-1, -1, 2, 2), n = i.createRadialGradient(0, 0, 0, 0, 0, 1), n.addColorStop(0, 'hsla(' + e + ',100%,80%,.3)'), n.addColorStop(1, 'hsla(' + e + ',100%,80%,0)'), i.fillStyle = n, i.fillRect(-1, -1, 2, 2), i.lineWidth = 0.02, i.strokeStyle = 'hsla(' + e + ',50%,70%,.5)', i.beginPath(), i.rect(-1, -1, 2, 2), i.lineWidth = 0.02, s = 0.2 * p.next() + 0.1, g = p.lI10l(5) + 2, c = o = 0.1, I = s; o <= 0.8; c = o += I) for (v = (180 * THREE.Math.DEG2RAD) / (2 * g), a = r = 0, O = g - 1; r <= O; a = r += 1) (i.strokeStyle = 'hsla(' + e + ',30%,50%,' + (1 - c) + ')'), i.beginPath(), i.arc(0, 0, c, 4 * a * v - v + (180 * THREE.Math.DEG2RAD) / 2, 4 * a * v + v + (180 * THREE.Math.DEG2RAD) / 2, !1), i.stroke();
                    for (i.lineWidth = 0.005, n = i.createRadialGradient(0, 0, 0, 0, 0, 1.1), n.addColorStop(0, 'hsla(' + e + ',100%,90%,.5)'), n.addColorStop(1, 'hsla(' + e + ',100%,90%,0)'), i.strokeStyle = n, l = 0.05 * (1 + p.lI10l(2)), a = h = -1, m = l; h <= 1.01; a = h += m) (y = 1), i.beginPath(), i.moveTo(-y, a), i.lineTo(y, a), i.stroke(), i.beginPath(), i.moveTo(a, -y), i.lineTo(a, y), i.stroke();
                    for (i.strokeStyle = 'hsla(' + e + ',90%,80%,.5)', l = 0.025 * (1 + p.lI10l(2)), a = u = -0.75, f = l; u <= 0.751; a = u += f);
                    for (a = d = 0; d <= 3; a = ++d);
                    return (i.fillStyle = this.color), i.fillRect(-0.015, -0.04, 0.03, 0.08), i.fillRect(-0.04, -0.015, 0.08, 0.03), (i.fillStyle = this.color), i.fillRect(-1, -1, 0.03, 2), i.fillRect(0.97, -1, 0.03, 2), i.save(), i.scale(2 / this.canvas.width, 2 / this.canvas.height), (i.fillStyle = 'hsla(' + e + ',90%,90%,1)'), (i.font = '12pt Bungee'), (i.textAlign = 'center'), i.restore(), i.restore(), (this.texture2.needsUpdate = !0);
                }),
                (t.prototype.updateRepulsor = function (t) {
                    var e, i, s, l, n, a, o;
                    if ((null == this.repulsor_backup && ((this.repulsor_backup = document.createElement('canvas')), (this.repulsor_backup.width = this.canvas.width), (this.repulsor_backup.height = this.canvas.height), this.repulsor_backup.getContext('2d').drawImage(this.canvas, 0, 0), (this.repulsor_time = 0)), (a = Date.now()) > this.repulsor_time)) {
                        if (((this.repulsor_time = a + 1e3), (e = this.canvas.getContext('2d')), e.clearRect(0, 0, this.canvas.width, this.canvas.height), e.drawImage(this.repulsor_backup, 0, 0), (e.fillStyle = 'hsla(' + (this.hue + 180) + ',90%,80%,.15)'), (e.strokeStyle = 'hsla(' + (this.hue + 180) + ',90%,80%,.3)'), (e.lineWidth = 2), (o = t * Ol000.OOlIl) > 1)) for (i = l = -1; l <= 1; i = l += 1) for (s = n = -1; n <= 1; s = n += 1) e.beginPath(), e.arc(this.canvas.width / 2 + i * this.canvas.width, this.canvas.height / 2 + s * this.canvas.height, (this.canvas.width / 2) * o, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.fill(), e.stroke();
                        else e.beginPath(), e.arc(this.canvas.width / 2, this.canvas.height / 2, (this.canvas.width / 2) * o, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.fill(), e.stroke();
                        return (this.texture.needsUpdate = !0);
                    }
                }),
                t
            );
        })()),
        (this.SystemName = (function () {
            function t(t) {
                (this.l1110 = t), (this.canvas = document.createElement('canvas')), (this.canvas.width = 512), (this.canvas.height = 64), (this.texture = new THREE.Texture(this.canvas)), (this.texture.minFilter = THREE.LinearFilter), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ map: this.texture, transparent: !0, depthTest: !1, depthWrite: !1, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(1, 0.125, 1), (this.l0OlI.position.y = 0.5875);
            }
            return (
                (t.prototype.setHue = function (t) {
                    if (t !== this.hue && null != this.data) return this.l1O0l(this.data, t);
                }),
                (t.prototype.OO0Il = function () {
                    if (this.using_gamepad !== this.l1110.using_gamepad && ((this.using_gamepad = this.l1110.using_gamepad), null != this.data && null != this.hue)) return this.l1O0l(this.data, this.hue);
                }),
                (t.prototype.l1O0l = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I;
                    for (this.data = t, this.hue = e, u = new OII10(t.seed), this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',70%,40%,.25)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', s = this.canvas.getContext('2d'), s.clearRect(0, 0, this.canvas.width, this.canvas.height), s.fillStyle = this.background, s.fillRect(0, 0, this.canvas.width, this.canvas.height), l = this.canvas.height / 4, n = l / 2, s.fillStyle = this.color, s.beginPath(), s.moveTo(0, 0), s.lineTo(0, this.canvas.height), s.lineTo(n, this.canvas.height), s.lineTo(n, 0.7 * this.canvas.height), s.lineTo(l, 0.5 * this.canvas.height), s.lineTo(l, 0), s.closePath(), s.fill(), s.strokeStyle = this.medium, s.fillStyle = this.color, s.lineWidth = 1.5, r = 2 + u.lI10l(3), a = o = 1, d = r; o <= d; a = o += 1) s.beginPath(), s.arc(this.canvas.height / 2 + l, this.canvas.height / 2, ((a / (r + 1)) * this.canvas.height) / 2, 0, 180 * THREE.Math.DEG2RAD * 2, !0), s.stroke(), (i = u.next() * (180 * THREE.Math.DEG2RAD) * 2), (p = this.canvas.height / 2 + l + (((a / (r + 1)) * this.canvas.height) / 2) * Math.cos(i)), (I = this.canvas.height / 2 + (((a / (r + 1)) * this.canvas.height) / 2) * Math.sin(i)), (h = 2 * u.next() + 1), s.beginPath(), s.arc(p, I, h, 0, 180 * THREE.Math.DEG2RAD * 2, !0), s.fill();
                    for (s.fillStyle = this.color, s.beginPath(), s.arc(this.canvas.height / 2 + l, this.canvas.height / 2, 3, 0, 180 * THREE.Math.DEG2RAD * 2, !0), s.fill(), s.beginPath(), s.moveTo(this.canvas.width, 0), s.lineTo(this.canvas.width, this.canvas.height), s.lineTo(this.canvas.width - n, this.canvas.height), s.lineTo(this.canvas.width - n, 0.7 * this.canvas.height), s.lineTo(this.canvas.width - l, 0.5 * this.canvas.height), s.lineTo(this.canvas.width - l, 0), s.closePath(), s.fill(), s.fillStyle = this.color, c = 28; ; ) {
                        if (((s.font = c + 'pt Play'), s.measureText(t.name).width < 0.7 * this.canvas.width || c < 10)) break;
                        c -= 1;
                    }
                    return (s.textAlign = 'left'), (s.textBaseline = 'middle'), s.fillText(t.name, this.canvas.height + 2 * l, this.canvas.height / 2), this.using_gamepad || ((s.font = Math.round(0.6 * c) + 'pt Play'), (s.textAlign = 'center'), s.fillText('R', this.canvas.width - 4 * l, this.canvas.height / 2), (s.strokeStyle = this.color), (s.lineWidth = 1), s.strokeRect(this.canvas.width - 5 * l, this.canvas.height / 2 - l, 2 * l, 2 * l)), (this.texture.needsUpdate = !0);
                }),
                t
            );
        })()),
        (this.RadarLine = (function () {
            function t(t) {
                var e, i, s, l;
                for (this.l1110 = t, this.canvas = document.createElement('canvas'), this.canvas.width = 128, this.canvas.height = 64, this.texture = new THREE.Texture(this.canvas), this.texture.minFilter = THREE.LinearFilter, this.O1III = new THREE.PlaneGeometry(1, 1), this.material = new THREE.MeshBasicMaterial({ map: this.texture, transparent: !0, depthTest: !1, depthWrite: !1, blending: THREE.AdditiveBlending }), s = this.O1III.vertices, e = 0, i = s.length; e < i; e++) (l = s[e]), (l.x += 0.5), (l.y += 0.5);
                (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(0.5, 0.25, 1);
            }
            return (
                (t.prototype.setHue = function (t) {
                    if (t !== this.hue && null != this.data) return this.l1O0l(this.data, t);
                }),
                (t.prototype.l1O0l = function (t, e) {
                    var i, s;
                    return (this.data = t), (this.hue = e), new OII10(t.seed), (i = this.canvas.getContext('2d')), i.save(), i.translate(0, 64), i.scale(1, -1), (s = i.createLinearGradient(0, 0, 0, this.canvas.height)), s.addColorStop(0, 'hsla(' + e + ',90%,90%,1)'), s.addColorStop(1, 'hsla(' + e + ',90%,90%,0)'), (i.fillStyle = s), i.fillRect(0, 0, this.canvas.width, this.canvas.height), (i.globalCompositeOperation = 'destination-in'), (s = i.createLinearGradient(0, 0, this.canvas.width, 0)), s.addColorStop(0, 'rgba(255,255,255,0)'), s.addColorStop(1, 'rgba(255,255,255,1)'), (i.fillStyle = s), i.fillRect(0, 0, this.canvas.width, this.canvas.height), (s = i.createRadialGradient(0, 0, 0, 0, 0, this.canvas.width)), s.addColorStop(0, 'rgba(255,255,255,1)'), s.addColorStop(1, 'rgba(255,255,255,0)'), (i.fillStyle = s), i.fillRect(0, 0, this.canvas.width, this.canvas.height), (i.globalCompositeOperation = 'source-over'), (s = i.createLinearGradient(0, 0, this.canvas.width, 0)), s.addColorStop(0, 'hsla(' + e + ',90%,0%,.0)'), s.addColorStop(0.1, 'hsla(' + e + ',90%,0%,.0)'), s.addColorStop(0.2, 'hsla(' + e + ',90%,0%,.8)'), s.addColorStop(0.5, 'hsla(' + e + ',90%,0%,.8)'), s.addColorStop(1, 'hsla(' + e + ',90%,0%,.0)'), (i.fillStyle = s), (s = i.createLinearGradient(0, 0, this.canvas.width, 0)), s.addColorStop(0, 'hsla(' + e + ',90%,90%,.0)'), s.addColorStop(0.1, 'hsla(' + e + ',90%,90%,.0)'), s.addColorStop(0.2, 'hsla(' + e + ',90%,90%,.8)'), s.addColorStop(0.5, 'hsla(' + e + ',90%,90%,.8)'), s.addColorStop(1, 'hsla(' + e + ',90%,90%,.0)'), (i.fillStyle = s), i.fillRect(0, 1, this.canvas.width, 3), i.restore(), (this.texture.needsUpdate = !0);
                }),
                (t.prototype.l0Ill = function () {
                    var t;
                    return (t = (60 * this.l1110.lIlO0.IO11l.I1O01) / 1e3), (this.l0OlI.rotation.z = (this.l0OlI.rotation.z - 0.04 * t) % (180 * THREE.Math.DEG2RAD * 2));
                }),
                t
            );
        })()),
        (this.l01Ol = (function () {
            function t(t, e) {
                var i, s, l;
                for (this.l1110 = t, this.size = null != e ? e : 150, this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 2), this.vertices = new Float32Array(3 * this.size), this.oldpos = new Float32Array(2 * this.size), this.color = new Float32Array(3 * this.size), this.time = new Float32Array(this.size), this.OlIIO = new Float32Array(this.size), this.type = new Float32Array(this.size), this.hue = 0, this.index = 0, this.max_pindex = 0, this.OII1l = Date.now(), i = s = 0, l = this.size - 1; s <= l; i = s += 1) (this.vertices[3 * i] = 2 * (Math.random() - 0.5)), (this.vertices[3 * i + 1] = 2 * (Math.random() - 0.5)), (this.vertices[3 * i + 2] = 0), (this.color[3 * i] = 1), (this.color[3 * i + 1] = 1), (this.color[3 * i + 2] = 1), (this.time[i] = 0), (this.OlIIO[i] = 0 === i ? 5 : 0);
                this.l10lI(), (this.iteration = 0), (this.posmap = []), (this.asteromap = []), (this.alienmap = []), (this.leaderid = 7);
            }
            return (
                (t.prototype.lIOIO = function (t, e) {
                    var i;
                    (i = (20 * this.l1110.lIlO0.height) / 1e3), (this.vertices[0] = 0), (this.vertices[1] = 0), (this.vertices[2] = 1e3), (this.oldpos[0] = 0), (this.oldpos[1] = 0), (this.OlIIO[0] = i), (this.type[0] = 0), (this.time[0] = this.l1110.lIlO0.IO11l.II1O0), this.material.uniforms.mypos.value.set(t / this.l1110.l0I1I, e / this.l1110.l0I1I);
                }),
                (t.prototype.updateHue = function (t, e) {
                    if (((this.hue = e), null != t.mode.friendly_colors)) return (this.friendly_colors = t.mode.friendly_colors);
                }),
                (t.prototype.setHue = function (t) {
                    this.hue = t;
                }),
                (t.prototype.l0Ill = function () {
                    return (this.material.uniforms.llIl1.value = this.l1110.lIlO0.IO11l.II1O0);
                }),
                (t.prototype.updateAsteroidsAliens = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    for (s = t.getUint16(6, !0), e = t.getUint16(8, !0), c = this.max_pindex, g = (10 * this.l1110.lIlO0.height) / 1e3, r = 10, f = [], O0l1l.O0IOO(0, 0, 0.4, f), a = h = 0, I = s - 1; h <= I && !(c >= this.size); a = h += 1) (o = t.getUint16(r, !0)), (i = t.getUint8(r + 2)), (y = t.getInt8(r + 3) / 128), (v = t.getInt8(r + 4) / 128), (r += 5), (l = Math.abs(y - this.material.uniforms.mypos.value.x)), (n = Math.abs(v - this.material.uniforms.mypos.value.y)), (l = Math.min(l, 2 - l)), (n = Math.min(n, 2 - n)), Math.max(Math.abs(l), Math.abs(n)), l > 1 / this.l1110.mode.radar_zoom || n > 1 / this.l1110.mode.radar_zoom || ((p = this.asteromap[o]), null != p && p.iteration === this.iteration - 1 ? (p.x < y - 1 ? (p.x += 2) : p.x > y + 1 && (p.x -= 2), p.y < v - 1 ? (p.y += 2) : p.y > v + 1 && (p.y -= 2), (this.oldpos[2 * c] = p.x), (this.oldpos[2 * c + 1] = p.y)) : ((this.oldpos[2 * c] = y), (this.oldpos[2 * c + 1] = v), null == p && ((p = {}), (this.asteromap[o] = p))), (p.x = y), (p.y = v), (p.iteration = this.iteration), (this.vertices[3 * c] = y), (this.vertices[3 * c + 1] = v), (this.vertices[3 * c + 2] = 0), (this.type[c] = 5), (this.color[3 * c] = f[0] / 255), (this.color[3 * c + 1] = f[1] / 255), (this.color[3 * c + 2] = f[2] / 255), (this.time[c] = this.l1110.lIlO0.IO11l.II1O0), (this.OlIIO[c] = g * Math.max(1, Math.min(4, i / 20))), c++);
                    for (O0l1l.O0IOO(0, 0.7, 0.7, f), a = u = 0, O = e - 1; u <= O && !(c >= this.size); a = u += 1) (o = t.getUint16(r, !0)), (i = t.getUint8(r + 2)), (y = t.getInt8(r + 3) / 128), (v = t.getInt8(r + 4) / 128), (r += 5), (l = Math.abs(y - this.material.uniforms.mypos.value.x)), (n = Math.abs(v - this.material.uniforms.mypos.value.y)), (l = Math.min(l, 2 - l)), (n = Math.min(n, 2 - n)), Math.max(Math.abs(l), Math.abs(n)), l > 1 / this.l1110.mode.radar_zoom || n > 1 / this.l1110.mode.radar_zoom || ((p = this.alienmap[o]), null != p && p.iteration === this.iteration - 1 ? (p.x < y - 1 ? (p.x += 2) : p.x > y + 1 && (p.x -= 2), p.y < v - 1 ? (p.y += 2) : p.y > v + 1 && (p.y -= 2), (this.oldpos[2 * c] = p.x), (this.oldpos[2 * c + 1] = p.y)) : ((this.oldpos[2 * c] = y), (this.oldpos[2 * c + 1] = v), null == p && ((p = {}), (this.alienmap[o] = p))), (p.x = y), (p.y = v), (p.iteration = this.iteration), (this.vertices[3 * c] = y), (this.vertices[3 * c + 1] = v), (this.vertices[3 * c + 2] = 0), (this.type[c] = 6), (this.color[3 * c] = f[0] / 255), (this.color[3 * c + 1] = f[1] / 255), (this.color[3 * c + 2] = f[2] / 255), (this.time[c] = this.l1110.lIlO0.IO11l.II1O0), (this.OlIIO[c] = g * Math.max(2, Math.min(4, i / 10))), c++);
                    for (a = d = c, m = this.size - 1; d <= m; a = d += 1) this.OlIIO[a] = 0;
                    return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('oldpos').needsUpdate = !0), (this.geometry.getAttribute('type').needsUpdate = !0);
                }),
                (t.prototype.updateShips = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p;
                    for (o = this.max_pindex, d = (10 * this.l1110.lIlO0.height) / 1e3, n = 1, u = [], O0l1l.O0IOO(0, 0.7, 1, u); n < t.byteLength && !(o >= this.size); ) (l = t.getUint8(n)), (c = t.getInt8(n + 1) / 128), (p = t.getInt8(n + 2) / 128), (n += 3), (e = Math.abs(c - this.material.uniforms.mypos.value.x)), (i = Math.abs(p - this.material.uniforms.mypos.value.y)), (e = Math.min(e, 2 - e)), (i = Math.min(i, 2 - i)), Math.max(Math.abs(e), Math.abs(i)), e > 1 / this.l1110.mode.radar_zoom || i > 1 / this.l1110.mode.radar_zoom || ((r = this.posmap[l]), null != r && r.iteration === this.iteration - 1 ? (r.x < c - 1 ? (r.x += 2) : r.x > c + 1 && (r.x -= 2), r.y < p - 1 ? (r.y += 2) : r.y > p + 1 && (r.y -= 2), (this.oldpos[2 * o] = r.x), (this.oldpos[2 * o + 1] = r.y)) : ((this.oldpos[2 * o] = c), (this.oldpos[2 * o + 1] = p), null == r && ((r = {}), (this.posmap[l] = r))), (r.x = c), (r.y = p), (r.iteration = this.iteration), (this.vertices[3 * o] = c), (this.vertices[3 * o + 1] = p), (this.vertices[3 * o + 2] = 0), (this.type[o] = l === this.l1110.lIlO0.Ill00.status.id ? 12 : 2), (this.color[3 * o] = u[0] / 255), (this.color[3 * o + 1] = u[1] / 255), (this.color[3 * o + 2] = u[2] / 255), (this.time[o] = this.l1110.lIlO0.IO11l.II1O0), (this.OlIIO[o] = 2 * d), o++);
                    for (s = a = o, h = this.size - 1; a <= h; s = a += 1) this.OlIIO[s] = 0;
                    return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('oldpos').needsUpdate = !0), (this.geometry.getAttribute('type').needsUpdate = !0);
                }),
                (t.prototype.l1O0l = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T;
                    if (this.IIl10.visible) {
                        if (((f = t.getUint8(1)), (d = 2), (g = 1), (this.max_index = 1), (_ = this.l1110.settings.check('colorblind') ? 1 : 0.7), null != this.l1110.mode.updateRadar)) {
                            for (h = c = g, v = this.size - 1; c <= v; h = c += 1) this.OlIIO[h] = 0;
                            return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('oldpos').needsUpdate = !0), (this.geometry.getAttribute('type').needsUpdate = !0), void this.iteration++;
                        }
                        for (k = [], h = p = 0, b = f - 1; p <= b && !(g >= this.size - this.l1110.lIlO0.IO11l.stations.length); h = p += 1) (i = !0 & t.getUint8(d + 3)), (u = t.getUint8(d)), (M = t.getInt8(d + 1) / 128), (T = t.getInt8(d + 2) / 128), (d += 8), (n = Math.abs(M - this.material.uniforms.mypos.value.x)), (a = Math.abs(T - this.material.uniforms.mypos.value.y)), (n = Math.min(n, 2 - n)), (a = Math.min(a, 2 - a)), (s = Math.max(Math.abs(n), Math.abs(a))), this.l1110.lIlO0.IO11l.ll0l1[u], (r = 20), (r = this.hue), O0l1l.O0IOO(r / 360, 0.2, 0.8, k), (z = (10 * this.l1110.lIlO0.height) / 1e3), (o = !1), null != this.friendly_colors && this.friendly_colors > 0 && null != (l = this.l1110.names.getData(u)) && ((r = l.hue), O0l1l.O0IOO(r / 360, _, 1, k), r === this.l1110.lIlO0.Ill00.status.hue && (o = !0)), u !== e && (o || 0 === h || s <= 1 / this.l1110.mode.radar_zoom || this.l1110.killers[u] || this.l1110.lIlO0.IO11l.survival) && ((y = this.posmap[u]), (this.vertices[3 * g] = M), (this.vertices[3 * g + 1] = T), (this.vertices[3 * g + 2] = i ? 0 : 1e3), (this.type[g] = 1), 0 === h && this.l1110.mode.radar_shows_leader ? (O0l1l.O0IOO(30 / 360, _, 1, k), (this.type[g] = 3)) : h <= 9 && (this.type[g] = 1), h > 0 && (this.l1110.killers[u] || this.l1110.lIlO0.IO11l.survival) && 'survival' === this.l1110.mode.id && (O0l1l.O0IOO(0, _, 1, k), (this.type[g] = 2)), this.l1110.mode.isTarget(u) && (O0l1l.O0IOO(0, _, 1, k), (this.type[g] = 2)), null != y && y.iteration === this.iteration - 1 ? (y.x < M - 1 ? (y.x += 2) : y.x > M + 1 && (y.x -= 2), y.y < T - 1 ? (y.y += 2) : y.y > T + 1 && (y.y -= 2), (this.oldpos[2 * g] = y.x), (this.oldpos[2 * g + 1] = y.y)) : ((this.oldpos[2 * g] = M), (this.oldpos[2 * g + 1] = T), null == y && ((y = {}), (this.posmap[u] = y))), (y.x = M), (y.y = T), (y.iteration = this.iteration), (this.color[3 * g] = k[0] / 255), (this.color[3 * g + 1] = k[1] / 255), (this.color[3 * g + 2] = k[2] / 255), (this.time[g] = this.l1110.lIlO0.IO11l.II1O0), (this.OlIIO[g] = z * (this.type[g] > 1 ? 2 : 1.5)), g++);
                        for (w = this.l1110.lIlO0.IO11l.stations, h = O = 0, I = w.length; O < I && ((E = w[h]), !(g >= this.size)); h = ++O) E.alive && ((y = this.posmap[h + 1e3]), (M = E.Il1I1.position.x / this.l1110.l0I1I), (T = E.Il1I1.position.y / this.l1110.l0I1I), null != y && y.iteration === this.iteration - 1 ? (y.x < M - 1 ? (y.x += 2) : y.x > M + 1 && (y.x -= 2), y.y < T - 1 ? (y.y += 2) : y.y > T + 1 && (y.y -= 2), (this.oldpos[2 * g] = y.x), (this.oldpos[2 * g + 1] = y.y)) : ((this.oldpos[2 * g] = M), (this.oldpos[2 * g + 1] = T), null == y && ((y = {}), (this.posmap[h + 1e3] = y))), (y.x = M), (y.y = T), (y.iteration = this.iteration), (this.vertices[3 * g] = M), (this.vertices[3 * g + 1] = T), (this.vertices[3 * g + 2] = 0), (this.type[g] = 4), O0l1l.O0IOO(E.hue / 360, _, 1, k), (this.color[3 * g] = k[0] / 255), (this.color[3 * g + 1] = k[1] / 255), (this.color[3 * g + 2] = k[2] / 255), (this.time[g] = this.l1110.lIlO0.IO11l.II1O0), (this.OlIIO[g] = 2 * z), g++);
                        for (this.max_pindex = g, h = m = g, x = this.size - 1; m <= x; h = m += 1) this.OlIIO[h] = 0;
                        return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('oldpos').needsUpdate = !0), (this.geometry.getAttribute('type').needsUpdate = !0), this.iteration++;
                    }
                }),
                (t.prototype.l10lI = function () {
                    var t, e, i, s;
                    return (s = 'attribute vec3 color;\nvarying vec3 vcolor;\nattribute float OlIIO;\nattribute float time;\nattribute float type ;\nattribute vec2 oldpos ;\nuniform float llIl1;\nuniform float lI0Ol;\nuniform vec2 mypos ;\nvarying float opacity ;\nvarying float toffset ;\n\nvoid main() {\n  vcolor = color ;\n  float t = clamp((llIl1-time)/60.0,0.0,1.0) ;\n  vec3 l0lOI = vec3(oldpos*(1.0-t)+position.xy*t,position.z);\n  l0lOI.xy -= mypos ;\n  l0lOI.xy = mod(l0lOI.xy+vec2(1.0),vec2(2.0))-vec2(1.0);\n  l0lOI.xy *= ' + this.l1110.mode.radar_zoom + '.0 ;\n  l0lOI.xy = clamp(l0lOI.xy,-.95,.95);\n  toffset = type ;\n  gl_PointSize = lI0Ol*OlIIO;\n  if (type == 12.0)\n  {\n    l0lOI.xy = vec2(0.0,0.0);\n    toffset = 2.0 ;\n    gl_PointSize *= 1.5;\n  }\n  vec4 mvPosition = modelViewMatrix * vec4(l0lOI, 1.0);\n  gl_Position = projectionMatrix * mvPosition ;\n  opacity = clamp(OlIIO,0.0,1.0);\n  float f = abs(time+30.0-llIl1);\n}'), (t = 'varying vec3 vcolor ;\nvarying float opacity ;\nuniform sampler2D texture ;\nvarying float toffset;\n\nvoid main() {\n  gl_FragColor = texture2D(texture,(gl_PointCoord+vec2(toffset,0.0))*vec2(.0625,1.0))*vec4(vcolor,opacity) ;\n}'), (e = this.createTexture()), (i = { texture: { type: 't', value: e }, llIl1: { type: 'f', value: (Date.now() - this.OII1l) / 1e3 }, lI0Ol: { type: 'f', value: 1 }, mypos: { type: 'v2', value: new THREE.Vector2(0, 0) } }), (this.material = new THREE.ShaderMaterial({ uniforms: i, vertexShader: s, fragmentShader: t, transparent: !0, depthWrite: !1, depthTest: !1, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('color', new THREE.BufferAttribute(this.color, 3)), this.geometry.addAttribute('time', new THREE.BufferAttribute(this.time, 1)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), this.geometry.addAttribute('oldpos', new THREE.BufferAttribute(this.oldpos, 2)), this.geometry.addAttribute('type', new THREE.BufferAttribute(this.type, 1)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.position.z = 0);
                }),
                (t.prototype.createTexture = function () {
                    var t, e, i, s, l, n, a, o, r;
                    for (
                        null == this.canvas && ((this.canvas = document.createElement('canvas')), (this.canvas.width = 512), (this.canvas.height = 32)),
                            t = this.canvas.getContext('2d'),
                            t.save(),
                            t.clearRect(0, 0, this.canvas.width, this.canvas.height),
                            t.fillStyle = '#FFF',
                            r = ['', '', '', '', '', '', '', '4', '5', '6', '7', '8', '9', '10'],
                            null == this.alien_img &&
                                ((this.alien_img = new Image()),
                                (this.alien_img.crossOrigin = 'Anonymous'),
                                (this.alien_img.src = 'https://starblast.data.neuronality.com/img/alien.png'),
                                (this.alien_img.onload = (function (t) {
                                    return function () {
                                        return t.createTexture();
                                    };
                                })(this))),
                            t.textAlign = 'center',
                            t.textBaseline = 'middle',
                            t.translate(0, 32),
                            t.scale(1, -1),
                            e = s = 0,
                            o = r.length - 1;
                        0 <= o ? s <= o : s >= o;
                        e = 0 <= o ? ++s : --s
                    )
                        if ('' === r[e]) {
                            for (t.beginPath(), a = new OII10(1), i = l = 0; l <= 19; i = l += 1) (n = 12 * (0.4 * a.next() + 0.8)), 0 === e ? t.moveTo(16 + 32 * e + n * Math.cos((i / 20) * (180 * THREE.Math.DEG2RAD) * 2), 16 + n * Math.sin((i / 20) * (180 * THREE.Math.DEG2RAD) * 2)) : t.lineTo(16 + 32 * e + n * Math.cos((i / 20) * (180 * THREE.Math.DEG2RAD) * 2), 16 + n * Math.sin((i / 20) * (180 * THREE.Math.DEG2RAD) * 2));
                            t.closePath(), t.fill();
                        } else r[e].charCodeAt(0) > 127 ? ((t.font = '24pt FontAwesome'), t.fillText(r[e], 16 + 32 * e, 16)) : '' === r[e] ? this.alien_img.complete && this.alien_img.width > 0 && t.drawImage(this.alien_img, 16 + 32 * e - 12, 4, 24, 24) : ((t.font = '18pt Play'), t.fillText(r[e], 16 + 32 * e - 0.5, 15.5), t.fillText(r[e], 16 + 32 * e + 0.5, 15.5), t.fillText(r[e], 16 + 32 * e + 0.5, 16.5), t.fillText(r[e], 16 + 32 * e - 0.5, 16.5));
                    return t.restore(), null == this.texture && (this.texture = new THREE.Texture(this.canvas)), (this.texture.needsUpdate = !0), this.texture;
                }),
                t
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.l01O1 = (function (t) {
            function e(t, i) {
                (this.l1110 = t), (this.seed = i), e.IO0OI.constructor.call(this), (this.lO011 = !1);
            }
            return (
                extend(e, t),
                (e.prototype.O0l1I = function (t, e, i, s, l) {
                    (this.px = t), (this.l1O1l = e), (this.llO1l = i), (this.lO01I = s), (this.level = l);
                }),
                (e.prototype.needsUpdate = function () {
                    return this.lO011;
                }),
                (e.prototype.l1O0l = function () {
                    var t, e, i, s;
                    if (null != this.object) {
                        for (Math.min(this.llO1l, this.lO01I) / 20, s = Math.min(this.llO1l, this.lO01I), this.object.position.x = this.px + this.llO1l - s / 2, this.object.position.y = this.l1O1l + this.lO01I - s / 2 - 0.15 * s, this.object.position.z = -100, this.object.scale.x = s, this.object.scale.y = -s, this.object.scale.z = s, i = this.parent, t = 0, e = 0; ; ) {
                            if (null == i) break;
                            (t -= i.OlI00), (e -= i.O101O), (i = i.parent);
                        }
                        return (this.object.position.x += t), (this.object.position.y += e);
                    }
                }),
                (e.prototype.lIOIO = function (t, e) {
                    if ((null != this.llIO0 && this.llIO0.lIOIO(t, e), null != this.background)) return this.background.lIOIO(t, e);
                }),
                (e.prototype.OlI01 = function (t, e) {
                    if (null != this.llIO0) return this.llIO0.l1O0l(t, e);
                }),
                (e.prototype.Ol0ll = function (t, e) {
                    if (null != this.background) return this.background.l1O0l(t, e), this.systemname.l1O0l(t, e), this.infobar.l1O0l(t, e), this.line.l1O0l(t, e), this.llIO0.updateHue(t, e);
                }),
                (e.prototype.setHue = function (t) {
                    if (null != this.background) return this.background.setHue(t), this.systemname.setHue(t), this.infobar.setHue(t), this.line.setHue(t), this.llIO0.setHue(t);
                }),
                (e.prototype.ll1II = function () {
                    return null == this.object && ((this.object = new THREE.Group()), (this.background = new OlI0I(this.l1110)), this.object.add(this.background.Il1I1), (this.systemname = new SystemName(this.l1110)), this.object.add(this.systemname.l0OlI), (this.infobar = new InfoBar(this.l1110)), this.object.add(this.infobar.l0OlI), (this.line = new RadarLine(this.l1110)), this.object.add(this.line.l0OlI), (this.llIO0 = new l01Ol(this.l1110)), this.object.add(this.llIO0.IIl10), this.llIO0.IIl10.scale.set(0.5, 0.5, 0.5), this.parent.object.add(this.object)), (this.object.visible = this.visible);
                }),
                (e.prototype.IO1lO = function (t) {
                    return this.ll1II(), this.l1O0l();
                }),
                (e.prototype.OO0Il = function () {
                    if (null != this.object && this.object.visible) return null != this.line && this.line.l0Ill(), null != this.llIO0 && this.llIO0.l0Ill(), null != this.infobar && this.infobar.l0Ill(), null != this.systemname ? this.systemname.OO0Il() : void 0;
                }),
                (e.prototype.hide = function () {
                    if (null != this.object) return (this.object.visible = !1);
                }),
                (e.prototype.IlO1I = function () {
                    if (null != this.object) return (this.object.visible = !0);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.lO0OO = (function (t) {
            function e(t) {
                (this.l1110 = t), (this.lO011 = !1), (this.angle = 0), (this.OlO0I = 0.5);
            }
            return (
                extend(e, t),
                (e.prototype.O0l1I = function (t, e, i, s, l) {
                    (this.px = t), (this.l1O1l = e), (this.llO1l = i), (this.lO01I = s), (this.level = l);
                }),
                (e.prototype.needsUpdate = function () {
                    return this.lO011;
                }),
                (e.prototype.set = function (t, e) {
                    if (((this.angle = t), (this.OlO0I = e), !this.l1110.is_mobile_app)) return (this.OlO0I = Math.min(2, Math.max(this.OlO0I, 0.5))), (this.material.opacity = 1);
                }),
                (e.prototype.l1O0l = function () {
                    var t, e, i, s;
                    if (null != this.object) {
                        for (this.object.position.x = this.px + (Math.cos(this.angle) * this.OlO0I * this.parent.lO01I) / 8, this.object.position.y = this.l1O1l + (Math.sin(this.angle) * this.OlO0I * this.parent.lO01I) / 8, this.object.position.z = -100, this.object.rotation.z = this.angle, s = Math.min(this.llO1l, this.lO01I), this.object.scale.x = 0.5 * s, this.object.scale.y = -s, this.object.scale.z = s, i = this.parent, t = 0, e = 0; ; ) {
                            if (null == i) break;
                            (t -= i.OlI00), (e -= i.O101O), (i = i.parent);
                        }
                        return (this.object.position.x += t), (this.object.position.y += e);
                    }
                }),
                (e.prototype.ll1II = function () {
                    var t, e, i;
                    if (null == this.object) return (this.O1III = new THREE.PlaneGeometry(1, 1)), (t = document.createElement('canvas')), (t.width = 64), (t.height = 64), (e = t.getContext('2d')), e.translate(t.width / 2, t.height / 2), e.scale(t.width / 2, t.height / 2), (e.fillStyle = 'hsla(200,50%,70%,1)'), e.moveTo(1, 0), e.lineTo(0, -0.7), e.lineTo(0, -0.2), e.lineTo(-1, -0.3), e.lineTo(-1, 0.3), e.lineTo(0, 0.2), e.lineTo(0, 0.7), e.lineTo(1, 0), e.fill(), (i = new THREE.Texture(t)), (i.needsUpdate = !0), (this.material = new THREE.MeshBasicMaterial({ transparent: !0, map: i, opacity: 0 })), (this.object = new THREE.Mesh(this.O1III, this.material)), this.parent.object.add(this.object);
                }),
                (e.prototype.IO1lO = function (t) {
                    return this.ll1II(), this.l1O0l();
                }),
                (e.prototype.OO0Il = function () {
                    if ((null != this.material && (this.material.opacity *= 0.98), null != this.object)) return (this.object.visible = this.material.opacity > 0.01);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Joystick = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.lO011 = !1), (this.angle = 0), (this.OlO0I = 0.5), (this.pressed = !1), (this.posx = 0), (this.posy = 0), (this.jx = 0), (this.jy = 0);
            }
            return (
                extend(e, t),
                (e.prototype.O0l1I = function (t, e, i, s, l) {
                    (this.px = t), (this.l1O1l = e), (this.llO1l = i), (this.lO01I = s), (this.level = l);
                }),
                (e.prototype.needsUpdate = function () {
                    return this.lO011;
                }),
                (e.prototype.set = function (t, e, i, s) {
                    if (((this.posx = t), (this.posy = e), (this.jx = i), (this.jy = s), (this.pressed = !0), this.ll1II(), null != this.material)) return (this.material.opacity = 1);
                }),
                (e.prototype.setHue = function (t) {
                    this.hue = t;
                }),
                (e.prototype.l1O0l = function () {
                    var t, e, i, s;
                    if (null != this.object && this.object.visible) {
                        for (this.object.position.x = this.posx * this.parent.lO01I, this.object.position.y = this.posy * this.parent.lO01I, this.object.position.z = -99, this.dot.position.x = this.jx * this.parent.lO01I, this.dot.position.y = this.jy * this.parent.lO01I, this.dot.position.z = -98, s = Math.min(this.llO1l, this.lO01I) * this.l1110.lIlO0.control.joystickRatio(), this.object.scale.x = s, this.object.scale.y = -s, this.object.scale.z = s, this.dot.scale.x = 0.25 * s, this.dot.scale.y = 0.25 * -s, this.dot.scale.x = 0.25 * s, i = this.parent, t = 0, e = 0; ; ) {
                            if (null == i) break;
                            (t -= i.OlI00), (e -= i.O101O), (i = i.parent);
                        }
                        return (this.object.position.x += t), (this.object.position.y += e);
                    }
                }),
                (e.prototype.createCanvas = function (t) {
                    var e, i;
                    return (e = document.createElement('canvas')), (e.width = 512), (e.height = 512), (i = e.getContext('2d')), i.translate(e.width / 2, e.height / 2), i.scale(e.width / 2, e.height / 2), (i.lineWidth = 0.016), (i.strokeStyle = 'hsla(' + this.hue + ',50%,80%,1)'), (i.shadowBlur = 10), (i.shadowOpacity = 1), (i.shadowColor = 'hsl(' + this.hue + ',50%,100%)'), i.beginPath(), i.arc(0, 0, 0.8, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.stroke(), (i.strokeStyle = 'hsla(' + this.hue + ',50%,80%,.4)'), i.beginPath(), i.arc(0, 0, 0.75, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.stroke(), (i.strokeStyle = 'hsla(' + this.hue + ',50%,80%,.6)'), i.beginPath(), i.arc(0, 0, 0.3, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.stroke(), t && ((i.lineWidth = 0.05), i.beginPath(), i.arc(0, 0, 0.85, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.stroke()), e;
                }),
                (e.prototype.createDotTexture = function () {
                    var t, e, i, s;
                    return (t = document.createElement('canvas')), (t.width = 128), (t.height = 128), (e = t.getContext('2d')), e.translate(t.width / 2, t.height / 2), e.scale(t.width / 2, t.height / 2), (i = e.createRadialGradient(0, 0, 0, 0, 0, 1)), i.addColorStop(0, 'hsla(' + this.hue + ',50%,80%,.5)'), i.addColorStop(0.7, 'hsla(' + this.hue + ',50%,80%,0)'), i.addColorStop(0.7, 'hsla(' + this.hue + ',50%,80%,1)'), i.addColorStop(0.8, 'hsla(' + this.hue + ',50%,80%,1)'), i.addColorStop(0.8, 'hsla(' + this.hue + ',50%,80%,.5)'), i.addColorStop(1, 'hsla(' + this.hue + ',50%,80%,0)'), (e.fillStyle = i), e.fillRect(-1, -1, 2, 2), (s = new THREE.Texture(t)), (s.minFilter = s.magFilter = THREE.LinearFilter), (s.needsUpdate = !0), s;
                }),
                (e.prototype.ll1II = function () {
                    var t;
                    if (null == this.object) return (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.texture = new THREE.Texture(this.createCanvas(!1))), (this.texture.minFilter = this.texture.magFilter = THREE.LinearFilter), (this.texture.needsUpdate = !0), (this.texture_thrust = new THREE.Texture(this.createCanvas(!0))), (this.texture.minFilter = this.texture.magFilter = THREE.LinearFilter), (this.texture_thrust.needsUpdate = !0), (this.material = new THREE.MeshBasicMaterial({ transparent: !0, map: this.texture, blending: THREE.AdditiveBlending, opacity: 1, depthTest: !1, depthWrite: !1 })), (this.object = new THREE.Mesh(this.O1III, this.material)), (this.dot_material = new THREE.MeshBasicMaterial({ transparent: !0, map: this.createDotTexture(), blending: THREE.AdditiveBlending, opacity: 1, depthTest: !1, depthWrite: !1 })), (t = new THREE.PlaneGeometry(1, 1)), (this.dot = new THREE.Mesh(t, this.dot_material)), this.parent.object.add(this.object), this.parent.object.add(this.dot);
                }),
                (e.prototype.IO1lO = function (t) {
                    return this.pressed && this.ll1II(), this.l1O0l();
                }),
                (e.prototype.OO0Il = function () {
                    var t, e, i, s, l, n;
                    if ((null == this.parent || null == this.parent.object || null != this.object || this.pressed || null == this.l1110.lIlO0.control || ((i = this.l1110.display.height), (n = this.l1110.lIlO0.control.joystickRadius()), (t = this.l1110.lIlO0.Ill00.I00O0.angle), (t = (-t * (180 * THREE.Math.DEG2RAD)) / 180), (e = n / 2), (s = 1 * e * 4), (l = i - 1 * e * 4), this.set(s / i, l / i, s / i, l / i)), null != this.object && ((this.object.visible = this.visible), (this.dot.visible = this.visible)), null != this.material)) return this.l1110.settings.check('joystick_thrust') && this.l1110.lIlO0.Ill00.I00O0.up ? (this.material.map = this.texture_thrust) : (this.material.map = this.texture);
                }),
                e
            );
        })(OllI0)),
        (this.InfoBar = (function () {
            function t(t) {
                (this.l1110 = t), (this.canvas = document.createElement('canvas')), (this.canvas.width = 512), (this.canvas.height = 64), (this.texture = new THREE.Texture(this.canvas)), (this.texture.minFilter = THREE.LinearFilter), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ map: this.texture, transparent: !0, depthTest: !1, depthWrite: !1, blending: THREE.AdditiveBlending })), (this.data = { name: '' }), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(1, 0.125, 1), (this.l0OlI.position.y = -0.5875), (this.fps = 60), (this.players = 0), (this.IIOOl = 0), (this.ping = 0), (this.refresh_time = 0);
            }
            return (
                (t.prototype.setHue = function (t) {
                    if (t !== this.hue) return (this.hue = t), this.repaint();
                }),
                (t.prototype.l1O0l = function (t, e) {
                    return (this.data = t), (this.hue = e), this.repaint();
                }),
                (t.prototype.repaint = function () {
                    var t, e, i;
                    return (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',70%,40%,.25)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), (t = this.canvas.getContext('2d')), t.clearRect(0, 0, this.canvas.width, this.canvas.height), (t.fillStyle = this.background), t.fillRect(0, 0, this.canvas.width, this.canvas.height), (e = this.canvas.height / 4), (i = e / 2), (t.fillStyle = this.color), t.beginPath(), t.moveTo(0, 0), t.lineTo(0, this.canvas.height), t.lineTo(e, this.canvas.height), t.lineTo(e, 0.7 * this.canvas.height), t.lineTo(i, 0.5 * this.canvas.height), t.lineTo(i, 0), t.closePath(), t.fill(), t.beginPath(), t.moveTo(this.canvas.width, 0), t.lineTo(this.canvas.width, this.canvas.height), t.lineTo(this.canvas.width - e, this.canvas.height), t.lineTo(this.canvas.width - e, 0.7 * this.canvas.height), t.lineTo(this.canvas.width - i, 0.5 * this.canvas.height), t.lineTo(this.canvas.width - i, 0), t.closePath(), t.fill(), (t.fillStyle = this.color), (t.font = '20pt Play'), (t.textAlign = 'left'), (t.textBaseline = 'middle'), t.fillText(this.players + ' on ' + this.data.name, this.canvas.width / 8, this.canvas.height / 4), this.IIOOl >= 100 && t.fillText(this.IIOOl + ' total', this.canvas.width / 8, (3 * this.canvas.height) / 4), (t.textAlign = 'right'), t.fillText(this.fps + ' FPS', (15 * this.canvas.width) / 16, this.canvas.height / 4), t.fillText('(' + this.l1110.region + ') ping ' + this.ping + ' ms', (15 * this.canvas.width) / 16, (3 * this.canvas.height) / 4), (t.font = '20pt FontAwesome'), t.fillText('', this.canvas.width / 10, this.canvas.height / 4), t.fillText('', this.canvas.width / 10, 0.75 * this.canvas.height), (this.texture.needsUpdate = !0);
                }),
                (t.prototype.l0Ill = function () {
                    var t, e;
                    if (!((e = Date.now()) < this.refresh_time))
                        return (
                            (t = !1),
                            this.l1110.display.fps !== this.fps && ((this.fps = this.l1110.display.fps), (t = !0)),
                            this.l1110.total_players !== this.IIOOl && ((this.IIOOl = this.l1110.total_players), (t = !0)),
                            this.l1110.system_players !== this.players && ((this.players = this.l1110.system_players), (t = !0)),
                            this.l1110.ping !== this.ping && ((this.ping = this.l1110.ping), (t = !0)),
                            t
                                ? ((this.refresh_time = e + 1e3),
                                  this.l1110.display.addJob(
                                      0,
                                      (function (t) {
                                          return function () {
                                              return t.repaint();
                                          };
                                      })(this)
                                  ))
                                : void 0
                        );
                }),
                t
            );
        })()),
        (l11ll = (function () {
            function t(t, e) {
                (this.l1110 = t),
                    (this.welcome = null != e && e),
                    (this.antialiasing = this.l1110.settings.check('antialias')),
                    (this.l1011 = new THREE.WebGLRenderer({ antialias: this.antialiasing, transparent: !1 })),
                    this.l1011.setSize(1280, 720),
                    (this.l1011.autoClear = !1),
                    this.hideCursor(),
                    this.l1110.is_app && this.welcome ? (this.screen = new AppScreen(this.l1110, this.welcome)) : (this.screen = new O0O1O(this.l1110, this.welcome)),
                    this.screen.startControl(this.l1011.domElement),
                    (this.llIII = this.l1110.settings.check('fullres') ? 1 : Math.sqrt(2)),
                    (this.pixelated = !1),
                    (this.I0lOI = 1),
                    (this.fps_time = Date.now()),
                    (this.fps_count = 0),
                    (this.raming = 0),
                    (this.frame_count = 0),
                    (this.fadein_start = 0),
                    window.addEventListener(
                        'resize',
                        (function (t) {
                            return function () {
                                return t.resize();
                            };
                        })(this)
                    ),
                    this.resize(),
                    this.l1110.is_app && ((this.screenshots = []), (this.l1110.screenshots = this.screenshots)),
                    (this.paused = !1),
                    (this.jobs = []);
            }
            return (
                (t.prototype.addJob = function (t, e) {
                    if (!(this.jobs.length > 15)) return this.jobs.push({ priority: t, llO1I: e });
                }),
                (t.prototype.hideCursor = function () {
                    return (this.cursor_shown = !1), this.l1110.is_app && this.l1011.domElement.classList.remove('custom-cursor'), (this.l1011.domElement.style.cursor = 'none');
                }),
                (t.prototype.showCursor = function () {
                    return (this.cursor_shown = !0), this.l1110.is_app ? this.l1011.domElement.classList.add('custom-cursor') : (this.l1011.domElement.style.cursor = 'default');
                }),
                (t.prototype.start = function () {
                    return (document.getElementById('canvaswrapper').innerHTML = ''), document.getElementById('canvaswrapper').appendChild(this.l1011.domElement), this.OI0l0 || this.lOO11(), (this.OI0l0 = !0);
                }),
                (t.prototype.resize = function () {
                    return (this.width = window.innerWidth), (this.height = window.innerHeight), (this.rotated = !1), this.width < this.height && (this.rotated = !0), this.welcome || (this.l1110.is_mobile_app ? (this.width = Math.round(Math.min((18 * this.height) / 9, this.width))) : (this.width = Math.round(Math.min((16 * this.height) / 9, this.width)))), this.l1011.setSize(this.width, this.height), this.screen.setSize(this.width, this.height, this.I0lOI), (this.fixed = !1);
                }),
                (t.prototype.fixSize = function () {
                    var t, e, i, s, l, n;
                    if (((i = this.l1011.context), (e = this.l1011.domElement), null != i && null != e)) return (this.fixed = !0), (s = window.devicePixelRatio || 1), (t = i.webkitBackingStorePixelRatio || i.mozBackingStorePixelRatio || i.msBackingStorePixelRatio || i.oBackingStorePixelRatio || i.backingStorePixelRatio || 1), (this.I0lOI = s / t / this.llIII), 1 !== this.I0lOI && ((n = this.width), (l = this.height), (this.width = Math.round(this.I0lOI * this.width)), (this.height = Math.round(this.I0lOI * this.height)), this.l1011.setSize(this.width, this.height), this.screen.setSize(this.width, this.height, this.I0lOI), (e.style.width = Math.round(n) + 'px'), (e.style.height = Math.round(l) + 'px'), this.pixelated) ? (e.style['image-rendering'] = 'pixelated') : void 0;
                }),
                (t.prototype.kill = function (t) {
                    if ((null == t && (t = !0), (this.killed = !0), t)) return document.getElementById('canvaswrapper').removeChild(this.l1011.domElement);
                }),
                (t.prototype.showCapture = function (t, e) {
                    var i, s, l, n, a;
                    return (
                        null == e && (e = 0.7),
                        (i = document.createElement('canvas')),
                        (i.width = t.width / 5.1),
                        (i.height = (t.height / 5.1) * 1.2),
                        (l = i.getContext('2d')),
                        (n = l.createLinearGradient(0, 0, i.width, i.height)),
                        n.addColorStop(0, '#FFF'),
                        n.addColorStop(1, '#CCC'),
                        (l.fillStyle = n),
                        l.fillRect(0, 0, i.width, i.height),
                        (a = (0.95 * i.width) / t.width),
                        l.drawImage(t, 0.025 * i.width, 0.025 * i.width, t.width * a, t.height * a),
                        (s = new OI1Ol(i)),
                        this.screen.lO100.add(s, [0.025, e, 0.2, 0.25]),
                        s.O11IO.init({ opacity: 0, l0OOl: 0.5, Ol1I0: 0.5, rotation: 0.4, k: 0.1, d: 0.5 }),
                        s.O11IO.push({ opacity: 1 }),
                        s.O11IO.push({ OOIl0: -2, rotation: -1 }),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.screen.lO100.remove(s);
                                };
                            })(this),
                            2e3
                        )
                    );
                }),
                (t.prototype.doJobs = function () {
                    var t;
                    if (this.jobs.length > 0)
                        for (
                            this.jobs.sort(function (t, e) {
                                return e.priority - t.priority;
                            }),
                                this.jobs.length,
                                t = this.jobs.splice(0, 1)[0],
                                t.llO1I();
                            this.jobs.length > 5;

                        )
                            (t = this.jobs.splice(0, 1)[0]), t.llO1I();
                }),
                (t.prototype.lOO11 = function () {
                    var t, e, i, s, l, n;
                    if (!this.killed) {
                        if (
                            (requestAnimationFrame(
                                (function (t) {
                                    return function () {
                                        return t.lOO11();
                                    };
                                })(this)
                            ),
                            this.l1110.paused)
                        ) {
                            if (this.paused) return;
                            this.paused = !0;
                        } else this.paused = !1;
                        if ((this.frame_count++, this.fixed || this.fixSize(), 0 === this.fadein_start && (this.fadein_start = Date.now()), this.fadein_start > 0 && ((s = Math.max(0, Math.min(1, (Date.now() - this.fadein_start) / 2e3))), (document.getElementById('canvaswrapper').style.opacity = s), 1 === s && ((this.fadein_start = -1), document.getElementById('canvaswrapper').style.removeProperty('opacity'))), this.doJobs(), this.l1110.settings.check('antialias') !== this.antialiasing && ((this.antialiasing = this.l1110.settings.check('antialias')), document.getElementById('canvaswrapper').removeChild(this.l1011.domElement), (this.l1011 = new THREE.WebGLRenderer({ antialias: this.antialiasing, transparent: !1 })), (this.l1011.autoClear = !1), document.getElementById('canvaswrapper').appendChild(this.l1011.domElement), this.cursor_shown ? this.showCursor() : this.hideCursor(), this.screen.startControl(this.l1011.domElement), null != this.l1110.lIlO0.control && this.l1110.lIlO0.startControl(), this.resize()), this.l1110.settings.check('fullres') || 1 !== this.llIII ? this.l1110.settings.check('fullres') && 1 !== this.llIII && ((this.llIII = 1), this.resize()) : ((this.llIII = Math.sqrt(2)), this.resize()), this.make_screenshot && this.l1110.is_app && this.screenshot_time < Date.now()))
                            for (
                                this.make_screenshot = !1,
                                    this.screen.render(this.l1011, !1),
                                    n = { type: this.screenshot_type, value: this.screenshot_value },
                                    t = this.l1011.domElement,
                                    l = document.createElement('canvas'),
                                    l.width = t.width,
                                    l.height = t.height,
                                    e = l.getContext('2d'),
                                    e.drawImage(t, 0, 0),
                                    n.image = l,
                                    'user' === n.type && this.showCapture(l),
                                    this.screen.renderScreen(this.l1011),
                                    l = document.createElement('canvas'),
                                    l.width = t.width,
                                    l.height = t.height,
                                    e = l.getContext('2d'),
                                    e.drawImage(t, 0, 0),
                                    n.full_image = l,
                                    this.screenshots.push(n),
                                    this.screenshots.sort(function (t, e) {
                                        return t.value - e.value;
                                    });
                                this.screenshots.length > 9;

                            )
                                this.screenshots.splice(0, 1);
                        else this.screen.render(this.l1011, !0);
                        return (
                            this.l1110.l0Ill(),
                            null != this.screen.lO100.OOI11 && this.screen.lO100.OOI11.lIOIO(this.l1110.lIlO0.Ill00.status.x, this.l1110.lIlO0.Ill00.status.y),
                            this.fps_count++,
                            this.fps_count >= 20 && Date.now() >= this.fps_time + 1e3 && ((i = Date.now() - this.fps_time), (this.fps = Math.round(this.fps_count / (0.001 * i))), (this.fps_count = 0), (this.fps_time = Date.now()), this.fps < 45 ? this.raming++ : (this.raming = 0), this.raming >= 8 && ((this.raming = 0), this.l1110.settings.auto && (this.l1110.settings.set('antialias', !1), this.l1110.settings.set('galaxies', !1)))),
                            this.make_screenshot && !this.l1110.is_app
                                ? ((this.make_screenshot = !1),
                                  (t = this.l1011.domElement),
                                  (l = document.createElement('canvas')),
                                  (l.width = t.width),
                                  (l.height = t.height),
                                  (e = l.getContext('2d')),
                                  e.drawImage(t, 0, 0),
                                  l.toBlob(
                                      function (t) {
                                          var e;
                                          return (e = new Date()), saveAs(t, 'starblast-' + e.getTime() + '.png');
                                      },
                                      'image/png',
                                      1
                                  ))
                                : void 0
                        );
                    }
                }),
                t
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Figures = (function (e) {
            function i(t, e) {
                var s, l, n, a;
                for (this.l1110 = t, this.size = null != e ? e : 100, i.IO0OI.constructor.call(this), this.lO011 = !1, this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-2e4, -2e4, -2e4), new THREE.Vector3(2e4, 2e4, 2e4)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 4e4), this.vertices = new Float32Array(3 * this.size), this.time = new Float32Array(this.size), this.figure = new Float32Array(this.size), this.fill = new Float32Array(this.size), this.OlIIO = new Float32Array(this.size), this.opac = new Float32Array(this.size), this.color = new Float32Array(3 * this.size), this.speed = new Float32Array(this.size), this.time = new Float32Array(this.size), this.bar_size = 9, this.display_size = 1 + this.bar_size + 3, this.heart_index = 11, this.level_index = 12, this.shield_index = 14, this.generator_index = this.shield_index + this.display_size, this.crystal_index = this.generator_index + this.display_size, this.start_index = this.crystal_index + this.display_size, this.index = this.start_index, this.OII1l = Date.now(), this.score = -1, this.score_target = 0, this.shield = 0, this.generator = 0, this.shield_max = 0, this.generator_max = 0, this.generator_depleted = !1, this.IIIII = 0, this.lives = -1, this.livesblink = !1, this.lvl = 1, this.last_shield_warning = 0, s = l = 0; l <= 9; s = l += 1) (this.vertices[3 * s] = 0.02 * s + 0.02), (this.vertices[3 * s + 1] = 0.05), (this.vertices[3 * s + 2] = 1e3), (this.figure[s] = 0), (this.color[3 * s] = 0.8), (this.color[3 * s + 1] = 0.9), (this.color[3 * s + 2] = 1), (this.time[s] = 0), (this.OlIIO[s] = 0.025), (this.opac[s] = 1), (this.fill[s] = 1), (this.speed[s] = 0);
                for (s = 10, this.vertices[3 * s] = 0.5, this.vertices[3 * s + 1] = 0.5, this.vertices[3 * s + 2] = 1e3, this.figure[s] = 14, this.color[3 * s] = 1, this.color[3 * s + 1] = 1, this.color[3 * s + 2] = 1, this.time[s] = 0, this.OlIIO[s] = 0.025, this.opac[s] = 1, this.fill[s] = 1, s = n = 11, a = this.size - 1; n <= a; s = n += 1) (this.vertices[3 * s] = 0), (this.vertices[3 * s + 1] = 0), (this.vertices[3 * s + 2] = 1e3), (this.color[3 * s] = 0.8), (this.color[3 * s + 1] = 0.9), (this.color[3 * s + 2] = 1);
                this.l10lI(), this.initBar(this.shield_index, 0.12, 0.5, 0.9, 1, 13), this.initBar(this.generator_index, 0.16, 1, 0.9, 0.5, 12), this.initBar(this.crystal_index, 0.2, 1, 0.5, 0.5, 11), this.setBar(this.shield_index, this.shield, 100), this.setBar(this.generator_index, this.generator, 100), this.setBar(this.crystal_index, this.IIIII, 100), this.updateLives(), this.updateLevel();
            }
            return (
                extend(i, e),
                (i.prototype.hide = function () {
                    return (this.IIl10.visible = !1);
                }),
                (i.prototype.IlO1I = function () {
                    return (this.IIl10.visible = !0);
                }),
                (i.prototype.initBar = function (t, e, i, s, l, n) {
                    var a, o, r, h, u;
                    for (a = 0, r = h = t, u = t + this.display_size - 1; h <= u; r = h += 1) (this.vertices[3 * r] = 0.01 + 0.015 * (a + 1)), (this.vertices[3 * r + 1] = e), (this.vertices[3 * r + 2] = 0), (this.figure[r] = 0), (this.color[3 * r] = i), (this.color[3 * r + 1] = s), (this.color[3 * r + 2] = l), (this.time[r] = 0), (this.OlIIO[r] = 0.015), (this.opac[r] = 1), (this.fill[r] = 1), (this.speed[r] = 0), 0 === a ? (this.figure[r] = n) : a <= this.bar_size ? (this.figure[r] = 16) : ((o = a - this.bar_size), (o = 2 - o), (this.vertices[3 * r] += 0.003 * o), (this.figure[r] = 0)), a++;
                    return (r = t), (this.vertices[3 * r] = 0.02), (this.OlIIO[r] = 0.02);
                }),
                (i.prototype.setBar = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p;
                    for (n = a = 0, u = this.bar_size - 1; a <= u; n = a += 1) (l = t + 1 + n), (c = 1 / this.bar_size), (s = n * c), (p = e / i), (this.fill[l] = p < s ? 0 : Math.min(1, (p - s) / c));
                    for (h = e >= Math.pow(10, 2) ? 3 : e >= Math.pow(10, 1) ? 2 : 1, l = o = 0, d = h - 1; o <= d; l = o += 1) (n = t + 1 + this.bar_size + l), (this.figure[n] = Math.floor(e / Math.pow(10, h - 1 - l)) % 10), (this.vertices[3 * n + 2] = 0);
                    for (l = r = h; r <= 2; l = r += 1) (n = t + 1 + this.bar_size + l), (this.vertices[3 * n + 2] = 1e3);
                    (this.geometry.getAttribute('fill').needsUpdate = !0), (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('figure').needsUpdate = !0);
                }),
                (i.prototype.setBarColor = function (t, e, i, s) {
                    var l, n, a, o;
                    for (n = a = 0, o = this.display_size - 1; a <= o; n = a += 1) (l = t + n), (this.color[3 * l] = e), (this.color[3 * l + 1] = i), (this.color[3 * l + 2] = s);
                    this.geometry.getAttribute('color').needsUpdate = !0;
                }),
                (i.prototype.updateLives = function () {
                    var t, e, i, s, l;
                    return (e = 0 === this.lives ? O0l1l.hsvToRgbHex(0, 0.5, 1) : O0l1l.hsvToRgbHex(this.hue, 0.2, 0.9)), (l = ((e >> 16) & 255) / 255), (i = ((e >> 8) & 255) / 255), (t = (255 & e) / 255), (s = this.heart_index), (this.color[3 * s] = l), (this.color[3 * s + 1] = i), (this.color[3 * s + 2] = t), (this.vertices[3 * s] = 0.02), (this.vertices[3 * s + 1] = 0.05), (this.vertices[3 * s + 2] = this.livesblink ? 1e3 : 0), (this.OlIIO[s] = 0.025), (this.figure[s] = 19 + this.lives), (this.fill[s] = 1), (this.opac[s] = 1), (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0);
                }),
                (i.prototype.updateLevel = function () {
                    var t;
                    return (t = this.level_index), (this.vertices[3 * t] = 0.185), (this.vertices[3 * t + 1] = 0.05), (this.vertices[3 * t + 2] = 0), (this.OlIIO[t] = 0.02), (this.figure[t] = 17), (this.fill[t] = 1), (this.opac[t] = 1), (t = this.level_index + 1), (this.vertices[3 * t] = 0.2), (this.vertices[3 * t + 1] = 0.05), (this.vertices[3 * t + 2] = 0), (this.OlIIO[t] = 0.014), (this.figure[t] = this.lvl), (this.fill[t] = 1), (this.opac[t] = 1), (this.geometry.getAttribute('figure').needsUpdate = !0);
                }),
                (i.prototype.setHue = function (t) {
                    var e, i, s, l, n, a, o;
                    for (this.hue = t, i = O0l1l.hsvToRgbHex(this.hue, 0.2, 0.9), a = ((i >> 16) & 255) / 255, s = ((i >> 8) & 255) / 255, e = (255 & i) / 255, l = n = 0, o = this.shield_index - 1; n <= o; l = n += 1) 10 !== l && ((this.color[3 * l] = a), (this.color[3 * l + 1] = s), (this.color[3 * l + 2] = e));
                    return (this.geometry.getAttribute('color').needsUpdate = !0);
                }),
                (i.prototype.hideMouse = function () {
                    return (this.vertices[32] = 1e3), (this.geometry.getAttribute('position').needsUpdate = !0);
                }),
                (i.prototype.bonus = function (t, e, i, s, l, n) {
                    var a, o, r, h, u, d;
                    for (null == s && (s = 16777215), null == l && (l = 10), null == n && (n = 1), e -= this.l1110.lIlO0.Ill00.status.x, i -= this.l1110.lIlO0.Ill00.status.y, e < this.l1110.l0I1I && (e += this.l1110.size), e > this.l1110.l0I1I && (e -= this.l1110.size), i < this.l1110.l0I1I && (i += this.l1110.size), i > this.l1110.l0I1I && (i -= this.l1110.size), u = this.l1110.display.width / this.l1110.display.height, e = (0.016 * e) / u + 0.5, i = 0.016 * -i + 0.5, h = 1; t >= Math.pow(10, h); ) h++;
                    for (d = 0.011 * n, a = (-d * (h + 1)) / 2, this.vertices[3 * this.index] = e + a, this.vertices[3 * this.index + 1] = i, this.vertices[3 * this.index + 2] = 0, this.figure[this.index] = l, this.time[this.index] = this.material.uniforms.llIl1.value, this.opac[this.index] = 1, this.speed[this.index] = -1, this.OlIIO[this.index] = 0.01 * n, this.fill[this.index] = 1, this.color[3 * this.index] = ((s >> 16) & 255) / 255, this.color[3 * this.index + 1] = ((s >> 8) & 255) / 255, this.color[3 * this.index + 2] = (255 & s) / 255, this.index += 1, this.index >= this.size && (this.index = this.start_index), o = r = h - 1; r >= 0; o = r += -1) (this.figure[this.index] = Math.floor(t / Math.pow(10, o)) % 10), (this.vertices[3 * this.index] = e + a + (h - o) * d), (this.vertices[3 * this.index + 1] = i), (this.vertices[3 * this.index + 2] = 0), (this.time[this.index] = this.material.uniforms.llIl1.value), (this.opac[this.index] = 1), (this.speed[this.index] = -1), (this.OlIIO[this.index] = 0.015 * n), (this.fill[this.index] = 1), (this.color[3 * this.index] = ((s >> 16) & 255) / 255), (this.color[3 * this.index + 1] = ((s >> 8) & 255) / 255), (this.color[3 * this.index + 2] = (255 & s) / 255), (this.index += 1), this.index >= this.size && (this.index = this.start_index);
                    return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('figure').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('opac').needsUpdate = !0), (this.geometry.getAttribute('speed').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('speed').needsUpdate = !0), (this.geometry.getAttribute('fill').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0);
                }),
                (i.prototype.l10lI = function () {
                    var t, e, i, s;
                    return (s = 'uniform float llO1l;\nuniform float lO01I;\nuniform float size;\nuniform float llIl1 ;\nattribute float OlIIO;\nattribute float fill ;\nattribute float figure;\nattribute vec3 color ;\nattribute float speed ;\nattribute float time ;\nvarying float toffset;\nvarying float opacity ;\nvarying vec3 vcol ;\nvarying float fil ;\nattribute float opac ;\n\nvoid main() {\n  toffset = figure;\n  opacity = opac;\n  vcol = color ;\n  fil = fill ;\n  gl_PointSize = OlIIO*size;\n\n  vec3 l0lOI = position ;\n  if (speed != 0.0)\n  {\n    float t = clamp((llIl1-time)/120.0,0.0,1.0);\n    opacity *= pow(1.0-t,.5) ;\n    gl_PointSize *= pow(1.0-t,.1) ;\n    l0lOI.y += (1.0-exp(-t))*.2*speed ;\n  }\n  vec4 mvPosition = modelViewMatrix * vec4(l0lOI*vec3(llO1l,lO01I,1.0), 1.0);\n  gl_Position = projectionMatrix * mvPosition ;\n}'), (t = 'varying float toffset;\nvarying float opacity;\nvarying vec3 vcol ;\nvarying float fil ;\nuniform sampler2D texture;\n\nvoid main() {\n  gl_FragColor = texture2D(texture,vec2((gl_PointCoord.x+toffset)/32.0,1.0-gl_PointCoord.y))*vec4(vcol,opacity);\n  gl_FragColor.xyz *= .3+.7*pow(max(fil-gl_PointCoord.x,0.0),.1) ;\n}'), (e = this.createTexture()), (i = { texture: { type: 't', value: e }, llO1l: { type: 'f', value: this.llO1l }, lO01I: { type: 'f', value: this.lO01I }, size: { type: 'f', value: 1e3 }, llIl1: { type: 'f', value: 0 } }), (this.material = new THREE.ShaderMaterial({ uniforms: i, vertexShader: s, fragmentShader: t, transparent: !0, depthWrite: !1, depthTest: !1, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), this.geometry.addAttribute('opac', new THREE.BufferAttribute(this.opac, 1)), this.geometry.addAttribute('figure', new THREE.BufferAttribute(this.figure, 1)), this.geometry.addAttribute('color', new THREE.BufferAttribute(this.color, 3)), this.geometry.addAttribute('fill', new THREE.BufferAttribute(this.fill, 1)), this.geometry.addAttribute('speed', new THREE.BufferAttribute(this.speed, 1)), this.geometry.addAttribute('time', new THREE.BufferAttribute(this.time, 1)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.position.z = 0);
                }),
                (i.prototype.createTexture = function () {
                    var e, i, s, l, n, a, o, r, h, u, d, c;
                    for (e = document.createElement('canvas'), e.width = 2048, e.height = 64, i = e.getContext('2d'), d = '0123456789', i.font = '60pt Play', i.fillStyle = '#FFF', i.strokeStyle = '#000', i.lineWidth = 2, i.shadowBlur = 6, i.shadowColor = '#888', i.shadowOpacity = 1, i.textAlign = 'center', i.textBaseline = 'middle', l = n = 0, h = d.length - 1; 0 <= h ? n <= h : n >= h; l = 0 <= h ? ++n : --n) i.fillText(d.substring(l, l + 1), 32 + 64 * l, 32);
                    for (d = ['7', 'D', '(', '%', '+', 'a'], i.font = '38pt SBGlyphs', l = a = 0, u = d.length - 1; 0 <= u ? a <= u : a >= u; l = 0 <= u ? ++a : --a) l === d.length - 1 ? (i.save(), i.translate(32 + 64 * (l + 10), 32), i.scale(0.7, 1), i.fillText(d[l], 0, 0), i.restore()) : (i.fillText(d[l], 32 + 64 * (l + 10), 32), l === d.length - 2 && i.strokeText(d[l], 32 + 64 * (l + 10), 32));
                    for (s = i.createLinearGradient(0, 0, 0, 64), s.addColorStop(0, '#FFF'), s.addColorStop(0.6, '#FFF'), s.addColorStop(0.6, '#CCC'), i.fillStyle = s, i.shadowBlur = 2, i.translate(1024, 0), l = o = 0; o <= 2; l = o += 1) i.beginPath(), i.moveTo(2, 2), i.lineTo(12, 2), i.lineTo(12, 12), i.lineTo(18, 22), i.lineTo(18, 62), i.lineTo(8, 62), i.lineTo(8, 52), i.lineTo(2, 42), i.closePath(), i.fill(), i.translate(64 / 3, 0);
                    for (i.textBaseline = 'middle', i.font = '40pt Play', i.fillStyle = '#FFF', i.fillText(t('Lv'), 32, 32), i.translate(64, 0), l = r = 0; r <= 6; l = r += 1) 0 !== l ? ((i.font = '38pt SBGlyphs'), (i.fillStyle = '#FFF'), i.fillText('$', 32, 32), (i.globalCompositeOperation = 'destination-out'), (i.font = 0 === l ? '32pt Arial' : '22pt Play'), (i.fillStyle = 'rgba(0,0,0,.7)'), (d = 0 === l ? '' : l - 1), i.fillText(d, 32, 30), (i.globalCompositeOperation = 'source-over'), i.translate(64, 0)) : i.translate(64, 0);
                    return (c = new THREE.Texture(e)), (c.minFilter = THREE.LinearFilter), (c.needsUpdate = !0), c;
                }),
                (i.prototype.O0l1I = function (t, e, i, s, l) {
                    (this.px = t), (this.l1O1l = e), (this.llO1l = i), (this.lO01I = s), (this.level = l);
                }),
                (i.prototype.needsUpdate = function () {
                    return this.lO011;
                }),
                (i.prototype.l1O0l = function () {}),
                (i.prototype.ll1II = function () {
                    return null == this.object && ((this.object = this.IIl10), (this.object.position.z = -100), this.parent.object.add(this.object)), (this.object.visible = this.visible);
                }),
                (i.prototype.IO1lO = function (t) {
                    return this.ll1II(), this.l1O0l();
                }),
                (i.prototype.OO0Il = function () {
                    var e, i, s, l, n, a, o, r, h, u, d;
                    if (null != this.material) {
                        if (((this.material.uniforms.llO1l.value = this.llO1l), (this.material.uniforms.lO01I.value = this.lO01I), (this.material.uniforms.size.value = this.l1110.display.width), (this.material.uniforms.llIl1.value = this.l1110.lIlO0.IO11l.II1O0), (this.score_target = Math.min(999999, this.l1110.Ill00.status.score)), (this.l1110.Ill00.status.bestscore = Math.max(this.l1110.Ill00.status.score, this.l1110.Ill00.status.bestscore)), this.score !== this.score_target)) {
                            for (Math.abs(this.score - this.score_target) < 1 ? (this.score = this.score_target) : (this.score = 0.98 * this.score + 0.02 * this.score_target), d = Math.round(this.score), h = 1, l = n = 0; n <= 9; l = n += 1) 0 === l || d >= Math.pow(10, l) ? ((this.vertices[3 * l + 2] = 0), (this.figure[l] = Math.floor(d / Math.pow(10, l)) % 10), (this.fill[l] = 1), (h = l + 1)) : l < 6 ? ((this.vertices[3 * l + 2] = 0), (this.figure[l] = 0), (this.fill[l] = 0)) : (this.vertices[3 * l + 2] = 1e3);
                            for (h = Math.max(6, h), s = 0.02 * h, l = a = 0, u = h - 1; a <= u; l = a += 1) this.vertices[3 * l] = 0.02 * (9 - l) + s - 0.15;
                            (this.geometry.getAttribute('figure').needsUpdate = !0), (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('fill').needsUpdate = !0);
                        }
                        return (this.shield === Math.floor(this.l1110.lIlO0.Ill00.status.shield) && this.shield_max === this.l1110.lIlO0.Ill00.instance.shield_capacity) || (this.shield > 0 && 0 === Math.floor(this.l1110.lIlO0.Ill00.status.shield) && this.l1110.Ill00.status.alive && this.l1110.lIlO0.IO11l.II1O0 - this.last_shield_warning > 300 && (this.l1110.message(t('Warning: Shield disabled'), '#8FF'), (this.last_shield_warning = this.l1110.lIlO0.IO11l.II1O0)), (this.shield = Math.floor(this.l1110.lIlO0.Ill00.status.shield)), (this.shield_max = this.l1110.lIlO0.Ill00.instance.shield_capacity), this.setBar(this.shield_index, this.shield, this.shield_max)), this.I0O1l !== this.l1110.lIlO0.Ill00.status.I0O1l && ((r = this.l1110.Ill00.type.level), this.I0O1l < 5 * r && this.l1110.lIlO0.Ill00.status.I0O1l >= 5 * r && !this.l1110.Ill00.instance.allMaxed() && OI1I1.levelUpgrades(r) && this.l1110.mode.showUpgrades() && this.l1110.message(t('Upgrades unlocked'), '#F88', !0), this.I0O1l < 20 * r * r && this.l1110.lIlO0.Ill00.status.I0O1l >= 20 * r * r && this.lvl < 6 && this.l1110.mode.shipCanUpgrade() && this.l1110.message(t('Ship Upgrade'), '#FFF'), (this.I0O1l = this.l1110.lIlO0.Ill00.status.I0O1l), this.setBar(this.crystal_index, this.I0O1l, this.l1110.lIlO0.Ill00.instance.crystals_capacity)), (i = !1), this.l1110.lIlO0.Ill00.isPulseType() && ((i = Math.floor(this.l1110.lIlO0.Ill00.status.generator) < this.l1110.lIlO0.Ill00.pulsePower()), this.generator_depleted && this.l1110.lIlO0.IO11l.II1O0 < this.l1110.lIlO0.Ill00.last_pulse_shot + 60 / this.l1110.lIlO0.Ill00.pulseRate() && (i = !0)), this.generator_depleted !== i && ((this.generator_depleted = i), i ? this.setBarColor(this.generator_index, 0.5, 0.45, 0.25) : (this.l1110.Ill00.I00O0.OI00O || this.l1110.l0I11.beep(2, 0.25), this.setBarColor(this.generator_index, 1, 0.9, 0.5))), (this.generator === Math.floor(this.l1110.lIlO0.Ill00.status.generator) && this.generator_max === this.l1110.lIlO0.Ill00.instance.generator_capacity) || ((this.generator = Math.floor(this.l1110.lIlO0.Ill00.status.generator)), (this.generator_max = Math.max(this.generator, this.l1110.lIlO0.Ill00.instance.generator_capacity)), this.setBar(this.generator_index, this.generator, this.generator_max)), this.lvl !== this.l1110.lIlO0.Ill00.type.level && ((this.lvl = this.l1110.lIlO0.Ill00.type.level), this.updateLevel()), (o = this.l1110.lIlO0.Ill00.status.lives - 1), this.lvl === Math.floor(this.l1110.mode.options.starting_ship / 100) && this.l1110.mode.infinite_base_lives && (o = this.l1110.lIlO0.IO11l.survival ? 0 : -1), this.l1110.lIlO0.IO11l.survival ? ((o = 0), (e = (Date.now() / 500) % 1 < 0.5)) : (e = !1), this.lives !== o || e !== this.livesblink ? ((this.lives = o), (this.livesblink = e), this.updateLives()) : void 0;
                    }
                }),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Cursor = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.lO011 = !0), (this.visible = !0), (this.levelmod = -100), (this.posx = -200), (this.posy = -200);
            }
            return (
                extend(e, t),
                (e.prototype.O0l1I = function (t, e, i, s, l) {
                    (this.px = t), (this.l1O1l = e), (this.llO1l = i), (this.lO01I = s), (this.level = l);
                }),
                (e.prototype.needsUpdate = function () {
                    return this.lO011;
                }),
                (e.prototype.set = function (t, e) {
                    (this.posx = t), (this.posy = e);
                }),
                (e.prototype.l1O0l = function () {
                    var t;
                    if (null != this.object) return (this.object.visible = this.visible), (this.object.position.x = this.posx), (this.object.position.y = this.posy), (this.object.position.z = -1100), (this.object.renderOrder = 999), (t = Math.min(this.llO1l, this.lO01I)), (this.object.scale.x = t), (this.object.scale.y = -t), (this.object.scale.z = t);
                }),
                (e.prototype.ll1II = function () {
                    var t, e, i;
                    if (null == this.object) return (t = document.createElement('canvas')), (t.width = 64), (t.height = 64), (e = t.getContext('2d')), e.translate(t.width / 2, t.height / 2), (e.font = '50pt FontAwesome'), (e.shadowBlur = 5), (e.shadowOpacity = 1), (e.shadowColor = '#000'), (e.fillStyle = '#EEE'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), e.fillText('', 0, 0), (i = new THREE.Texture(t)), (i.needsUpdate = !0), (i.minFilter = THREE.LinearFilter), (this.material = new THREE.SpriteMaterial({ map: i, transparent: !0, blending: THREE.NormalBlending, depthWrite: !1, depthTest: !1 })), (this.object = new THREE.Sprite(this.material)), this.parent.object.add(this.object);
                }),
                (e.prototype.IO1lO = function (t) {
                    return this.ll1II(), this.l1O0l();
                }),
                (e.prototype.OO0Il = function () {}),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.l0lOl = (function (e) {
            function i(e, s, l) {
                var n, a, o, r;
                (this.screen = e),
                    (this.l1110 = s),
                    (this.welcome = l),
                    i.IO0OI.constructor.call(this),
                    (this.lIlO0 = this.l1110.lIlO0),
                    (this.survival = !1),
                    this.welcome && null != this.l1110.ship_ad_code && ((o = OI1I1.types_by_code[this.l1110.ship_ad_code]), this.add(new ShipAd(this.l1110, this.l1110.ship_ad_code), [0, -0.1, 0.2, 0.4]), (a = new ll110(t('NEW SHIP!'))), this.add(a, [0.01, 0.175, 0.18, 0.025]), (a.background = null), (a.text_shadow = { opacity: 1, blur: 30, color: '#8FF' }), (a = new ll110(o.name + ' - ' + t('Level') + ' ' + o.level)), this.add(a, [0.01, 0.2, 0.18, 0.025]), (a.background = null), (a.text_shadow = { opacity: 1, blur: 30, color: '#8FF' })),
                    this.welcome ||
                        (this.l1110.is_mobile_app && (('survival' !== this.l1110.mode.id && 'invasion' !== this.l1110.mode.id) || this.showTooltips()),
                        this.l1110.mode.show_weaponsbar && ((this.weapons_bar = new WeaponsBar(this.l1110)), this.l1110.is_mobile_app ? (this.l1110.is_tablet ? this.add(this.weapons_bar, [0.8, 0.3, 0.2, 0.25]) : this.add(this.weapons_bar, [0.8, 0.2, 0.2, 0.25])) : this.add(this.weapons_bar, [0, 0.36, 0.05, 0.45])),
                        (this.OOI11 = new l01O1(this.l1110)),
                        this.l1110.is_mobile_app ? this.welcome || this.add(this.OOI11, [0.25, 0.1, 0.5, 0.8]) : this.welcome || this.add(this.OOI11, [0.8, 0.5, 0.2, 0.5]),
                        this.l1110.is_mobile_app && ((this.fire_buttons = new FireButtons(this.l1110)), this.l1110.is_tablet ? this.add(this.fire_buttons, [0.8, 0.6, 0.2, 0.35]) : this.add(this.fire_buttons, [0.8, 0.5, 0.2, 0.45])),
                        (this.cursor = new Cursor()),
                        this.add(this.cursor, [-1, -1, 0.03, 0.03]),
                        this.l1110.is_touch_device && ((this.arrow = new lO0OO(this.l1110)), this.welcome || this.add(this.arrow, [0.5, 0.5, 0.05, 0.05]), (this.joystick = new Joystick(this.l1110)), this.welcome || this.add(this.joystick, [0, 0, 0.4, 0.4])),
                        (this.figures = new Figures(this.l1110)),
                        this.welcome || this.add(this.figures, [0, 0, 1, 1]),
                        (this.specupgrades = new OO10l(this.l1110)),
                        this.l1110.is_mobile_app ? this.add(this.specupgrades, [0.245, 0.9, 0.51, 0.1]) : this.add(this.specupgrades, [0, 0.92, 0.8, 0.08]),
                        (this.shipupgrades = new l0l00(this.l1110)),
                        this.add(this.shipupgrades, [0.25, 0, 0.5, 0.1]),
                        this.l1110.is_mobile_app
                            ? ((this.buttons_panel = new MobileButtonsPanel(this.l1110)), (this.fullscreen_button = this.buttons_panel.fullscreen_button), this.add(this.buttons_panel, [0.8, 0, 0.2, 0.1]), (this.game_menu = new GameMenu(this.l1110)), this.add(this.game_menu, [0.8, 0, 0.2, 1]), (this.gamepad_helper = new GamepadHelper(this.l1110)))
                            : this.l1110.is_app
                            ? ((this.fullscreen_button = new GameButton(
                                  this.l1110,
                                  'options',
                                  '',
                                  'Esc',
                                  (function (t) {
                                      return function () {
                                          return t.toggleOptions();
                                      };
                                  })(this)
                              )),
                              (this.game_menu = new GameMenu(this.l1110)),
                              this.add(this.game_menu, [0.8, 0, 0.2, 1]),
                              (this.gamepad_helper = new GamepadHelper(this.l1110)))
                            : ((this.fullscreen_button = new GameButton(
                                  this.l1110,
                                  'options',
                                  '',
                                  'Esc',
                                  (function (t) {
                                      return function () {
                                          return t.toggleOptions();
                                      };
                                  })(this)
                              )),
                              (this.game_menu = new GameMenu(this.l1110)),
                              this.add(this.game_menu, [0.8, 0, 0.2, 1])),
                        this.l1110.is_mobile_app || (this.add(this.fullscreen_button, [0.945, 0, 0.055, (0.1 * 0.2 * 16) / 10 - 0.002]), (r = 0.055), (n = (0.1 * 0.2 * 16) / 10 - 0.002), (this.fullscreen_button.force_ratio = ((16 / 9) * r) / n), (this.fullscreen_button.align_top = !0)),
                        (this.radar_shown = !0),
                        this.l1110.addKeyListener('R'.charCodeAt(0), {
                            keyPressed: (function (t) {
                                return function () {
                                    return (t.radar_shown = !t.radar_shown), (t.OOI11.visible = t.radar_shown);
                                };
                            })(this),
                            keyReleased: (function (t) {
                                return function () {};
                            })(),
                        }),
                        (this.chatpanel = new ChatPanel(this.l1110)),
                        this.add(this.chatpanel, [0, 0.5, 0.25, 0.4]),
                        'yes' === localStorage.getItem('dissmissed_info_' + this.l1110.mode.id) || this.l1110.is_app || (null != this.l1110.mode.tips_test && texists(this.l1110.mode.tips_test) && 'tutorial' !== this.l1110.mode.id && ((this.mode_info = new ModeInfo(this.l1110)), this.add(this.mode_info, [0.05, 0.5, 0.19, 0.45])))),
                    (CanvasRenderingContext2D.prototype.fillRoundRect = CanvasRenderingContext2D.prototype.fillRect),
                    (this.messages = new Messages(this.l1110, this));
            }
            return (
                extend(i, e),
                (i.prototype.O0O01 = function (t) {
                    return this.lIlO0.lOO11(t);
                }),
                (i.prototype.Ol0ll = function (t) {
                    var e, i;
                    return (i = new OII10(t.seed)), (e = 120 + i.lI10l(240)), null != this.OOI11 && this.OOI11.Ol0ll(t, e), this.setHue(e);
                }),
                (i.prototype.setHue = function (t) {
                    if (((this.hue = t), null != this.figures && this.figures.setHue(t / 360), null != this.fullscreen_button && this.fullscreen_button.setHue(t), null != this.shipupgrades && this.shipupgrades.updateHue(t), null != this.chatpanel && this.chatpanel.updateHue(t), null != this.roomlink && this.roomlink.setHue(t), null != this.mode_info && this.mode_info.setHue(t), null != this.OOI11 && this.OOI11.setHue(t), null != this.rcs && this.rcs.setHue(t), null != this.game_menu && this.game_menu.setHue(t), null != this.weapons_bar && this.weapons_bar.setHue(t), null != this.fire_buttons && this.fire_buttons.setHue(t), null != this.joystick && this.joystick.setHue(t), null != this.buttons_panel)) return this.buttons_panel.setHue(t);
                }),
                (i.prototype.hide = function () {
                    return (this.hidden = !0), (this.OOI11.visible = !1), (this.figures.visible = !1), (this.specupgrades.visible = !1), (this.shipupgrades.visible = !1), (this.fullscreen_button.visible = !1), null != this.survival_info && (this.survival_info.visible = !1), (this.chatpanel.visible = !1), null != this.roomlink && (this.roomlink.visible = !1), null != this.mode_info && (this.mode_info.visible = !1), null != this.rcs && (this.rcs.visible = !1), null != this.weapons_bar && (this.weapons_bar.visible = !1), null != this.joystick && (this.joystick.visible = !1), null != this.fire_buttons && (this.fire_buttons.visible = !1), null != this.buttons_panel && (this.buttons_panel.visible = !1), null != this.weapon_store && this.weapon_store.hide(), this.l1110.mode.hideUI(), null != this.cursor && (this.cursor.visible = !1), null != this.game_menu && this.game_menu.shown && this.game_menu.hide(), this;
                }),
                (i.prototype.IlO1I = function () {
                    if (((this.hidden = !1), this.l1110.mode.showUI(), (this.OOI11.visible = this.radar_shown), (this.figures.visible = !0), (this.specupgrades.visible = !0), (this.shipupgrades.visible = !0), (this.fullscreen_button.visible = !0), null != this.survival_info && (this.survival_info.visible = !0), (this.chatpanel.visible = !0), null != this.roomlink && (this.roomlink.visible = !0), null != this.mode_info && (this.mode_info.visible = !0), null != this.rcs && (this.rcs.visible = !0), null != this.weapons_bar && (this.weapons_bar.visible = !0), null != this.cursor && (this.cursor.visible = !0), null != this.joystick && (this.joystick.visible = !0), null != this.fire_buttons && (this.fire_buttons.visible = !0), null != this.buttons_panel && (this.buttons_panel.visible = !0), null != this.game_menu && this.game_menu.shown)) return this.game_menu.hide();
                }),
                (i.prototype.OO0Il = function () {
                    var e, s, l;
                    if ((i.IO0OI.OO0Il.call(this), this.messages.l1O0l(), this.welcome && this.l1110.settings.check('gamepad_control') && !this.l1110.is_app && (e = navigator.getGamepads()[0]) && e.buttons.length > 3 && (null == this.padstartbutton ? (this.padstartbutton = e.buttons[0].pressed || e.buttons[1].pressed || e.buttons[2].pressed || e.buttons[3].pressed) : (e.buttons[0].pressed || e.buttons[1].pressed || e.buttons[2].pressed || e.buttons[3].pressed) !== this.padstartbutton && ((this.padstartbutton = e.buttons[0].pressed || e.buttons[1].pressed || e.buttons[2].pressed || e.buttons[3].pressed), this.padstartbutton && this.l1110.l00OO.startGame())), null != this.l1110.mode && this.l1110.mode.options.rcs_toggle && null == this.rcs && ((this.rcs = new RCS(this.l1110, this.fullscreen_button.hue)), this.l1110.is_mobile_app ? (this.l1110.is_tablet ? this.add(this.rcs, [0.02, 0.5, 0.08, 0.12]) : this.add(this.rcs, [0.02, 0.34, 0.08, 0.12])) : this.add(this.rcs, [0, 0.23, 0.2, 0.05])), this.survival !== this.l1110.lIlO0.IO11l.survival ? ((this.survival = this.l1110.lIlO0.IO11l.survival), (this.radiation_com = 0), this.survival && ((this.survival_info = new OOO1I(this.l1110)), this.add(this.survival_info, [0, 0.29, 0.2, 0.12]), this.l1110.l0I11.alert(), null != this.roomlink && this.remove(this.roomlink))) : null != this.survival_info && ((l = (this.l1110.lIlO0.IO11l.II1O0 - this.l1110.lIlO0.IO11l.survival_start) / Ol000.l1000), (s = Math.max(0, Math.min(100, Math.round(100 * (1 - l))))), this.survival_info.set(this.l1110.I0O01.alive_ships, s), this.radiation_com < 1 && l > 0.02 && ((this.radiation_com = 1), this.l1110.message(t('Warning: Repulsive gravity field detected'), '#F62'))), null != this.gamepad_helper)) return this.gamepad_helper.OO0Il();
                }),
                (i.prototype.toggleOptions = function () {
                    if (!(null == this.game_menu || (this.game_menu.settings_shown && this.game_menu.shown))) return this.game_menu.shown ? (this.game_menu.hide(), null != this.fire_buttons && (this.fire_buttons.visible = !0), this.l1110.is_mobile_app || ((this.fullscreen_button.icon = ''), (this.fullscreen_button.lO011 = !0), this.hidden) ? void 0 : (this.radar_shown && (this.OOI11.visible = !0), this.l1110.mode.showScorePanel())) : (this.l1110.is_mobile_app || ((this.fullscreen_button.icon = ''), (this.fullscreen_button.lO011 = !0), (this.OOI11.visible = !1), this.l1110.mode.hideScorePanel()), null != this.fire_buttons && (this.fire_buttons.visible = !1), this.game_menu.IlO1I());
                }),
                (i.prototype.shipUpgradesNavigation = function () {
                    if (null != this.gamepad_helper) return this.gamepad_helper.shipUpgradesNavigation();
                }),
                (i.prototype.statsUpgradesNavigation = function () {
                    if (null != this.gamepad_helper) return this.gamepad_helper.statsUpgradesNavigation();
                }),
                (i.prototype.showWeaponStore = function (t) {
                    if (this.l1110.mode.show_weaponsbar && (!this.l1110.mode.restricted_weapons_store || t)) return null == this.weapon_store && ((this.weapon_store = new WeaponStore(this.l1110)), this.l1110.is_mobile_app ? this.add(this.weapon_store, [0.05, 0.05, 0.9, 0.9]) : this.add(this.weapon_store, [0.25, 0.25, 0.5, 0.5])), this.weapon_store.IlO1I(), this.l1110.is_mobile_app && null != this.cursor ? (this.cursor.visible = !1) : void 0;
                }),
                (i.prototype.hideWeaponStore = function () {
                    if ((null != this.weapon_store && this.weapon_store.hide(), this.l1110.is_mobile_app && null != this.cursor)) return (this.cursor.visible = !0);
                }),
                (i.prototype.toggleWeaponStore = function () {
                    return null == this.weapon_store ? this.showWeaponStore() : this.weapon_store.shown ? this.hideWeaponStore() : this.showWeaponStore();
                }),
                (i.prototype.showTooltips = function () {
                    if (this.l1110.is_mobile_app && !this.tooltips_shown) return (this.tooltips_shown = !0), (this.tooltips = new Tooltips(this.l1110)), this.add(this.tooltips, [0, 0, 1, 1]);
                }),
                i
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (O0O1O = (function (t) {
            function e(t, i) {
                (this.l1110 = t), (this.welcome = null != i && i), e.IO0OI.constructor.call(this), (this.lO100 = new l0lOl(this, this.l1110, this.welcome)), this.add(this.lO100, [0, 0, 1, 1], [0, 0, 1, 1]);
            }
            return extend(e, t), e;
        })(lI11I)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Message = (function (t) {
            function e(t, i, s, l, n) {
                (this.parent = t), (this.text = i), (this.color = s), (this.bottom = l), null == n && (n = !1), e.IO0OI.constructor.call(this), n ? ((this.force_ratio = 8), this.O11IO.init({ opacity: 0.5, l0OOl: 4, Ol1I0: 4 }), this.O11IO.push({ d: 0.5, k: 0.08, f: 0.3, l0OOl: 1, Ol1I0: 1 }), this.O11IO.push({ d: 1.5, k: 0.001, f: 0.1, l0OOl: 0.75, Ol1I0: 0.75, OO1lI: this.bottom ? 1 : -1, opacity: 0.5 }), this.O11IO.push({ d: 1, k: 0.01, f: 0.1, l0OOl: 0.5, Ol1I0: 0.5, OO1lI: this.bottom ? 1.5 : -1.5, opacity: 0 })) : ((this.force_ratio = 16), this.O11IO.push({ d: 2, k: 0.001, f: 0.1, l0OOl: 0.75, Ol1I0: 0.75, OO1lI: this.bottom ? 1 : -1, opacity: 0.5 }), this.O11IO.push({ d: 1, k: 0.01, f: 0.1, l0OOl: 0.5, Ol1I0: 0.5, OO1lI: this.bottom ? 1.5 : -1.5, opacity: 0 })), (this.creation = Date.now());
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    for (t.save(), t.translate(this.px, this.l1O1l), t.strokeStyle = '#000', t.lineWidth = 0.05 * this.lO01I, t.fillStyle = this.color, t.textAlign = 'center', t.textBaseline = 'middle', e = Math.round(this.lO01I / 1.6); ; ) {
                        if (((t.font = e + 'pt Play'), t.measureText(this.text).width < 0.99 * this.llO1l || e <= 5)) break;
                        e -= 1;
                    }
                    t.strokeText(this.text, this.llO1l / 2, this.lO01I / 2), t.fillText(this.text, this.llO1l / 2, this.lO01I / 2), t.restore();
                }),
                e
            );
        })(OllI0)),
        (this.Messages = (function () {
            function t(t, e) {
                (this.l1110 = t), (this.panel = e), (this.messages = []);
            }
            return (
                (t.prototype.message = function (t, e, i, s) {
                    var l, n;
                    return null == e && (e = '#FFF'), null == s && (s = !1), (n = new Message(this, t, e, i, s)), (l = s ? 0.2 : 0.06), i ? this.panel.add(n, [0.3, 0.8, 0.4, l]) : this.panel.add(n, [0.3, 0.1 + 0.05 * (1 + this.messages.length), 0.4, l]), this.messages.push(n);
                }),
                (t.prototype.l1O0l = function () {
                    var t, e, i, s;
                    for (s = Date.now(), t = e = this.messages.length - 1; e >= 0; t = e += -1) (i = this.messages[t]), i.creation + 5e3 < s && (this.panel.remove(i), this.messages.splice(t, 1));
                }),
                t
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.OOO1I = (function (e) {
            function i(t) {
                (this.l1110 = t), i.IO0OI.constructor.call(this), (this.survivors = 0), (this.shield_regen = 100), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 4), this.O11IO.init({ l0OOl: 1, Ol1I0: 1, OOIl0: 2, opacity: 0 }), this.O11IO.push({ d: 2, k: 0.02, f: 0.3, l0OOl: 2, Ol1I0: 2, OOIl0: 2 }), this.O11IO.push({ d: 2, k: 0.02, f: 0.3 }), (this.creation_date = Date.now());
            }
            return (
                extend(i, e),
                (i.prototype.set = function (t, e) {
                    if (!(Date.now() - this.creation_date < 6e3)) return t !== this.survivors && ((this.survivors = t), (this.lO011 = !0)), e !== this.shield_regen ? ((this.shield_regen = e), (this.lO011 = !0)) : void 0;
                }),
                (i.prototype.lllO1 = function (e) {
                    var i;
                    if ((e.save(), e.translate(this.px, this.l1O1l), (e.fillStyle = '#F88'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), 0 === this.survivors)) {
                        for (i = Math.round(this.lO01I / 3); ; ) {
                            if (((e.font = i + 'pt Play'), i < 5 || e.measureText(t('Survival Mode!')).width < this.llO1l)) break;
                            i -= 1;
                        }
                        e.fillText(t('Survival Mode!'), this.llO1l / 2, this.lO01I / 2);
                    } else this.shield_regen < 99 ? ((i = Math.round(this.lO01I / 3)), (e.font = i + 'pt Play'), e.fillText(t('Survivors:') + ' ' + this.survivors, this.llO1l / 2, 0.2 * this.lO01I)) : ((i = Math.round(this.lO01I / 3)), (e.font = i + 'pt Play'), e.fillText(t('Survivors:') + ' ' + this.survivors, this.llO1l / 2, this.lO01I / 2));
                    e.restore();
                }),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.RCS = (function (t) {
            function e(t, i) {
                (this.l1110 = t), (this.hue = i), e.IO0OI.constructor.call(this, this), (this.blending = THREE.AdditiveBlending), (this.status = !0), this.l1110.is_mobile_app || ((this.force_ratio = 4.9), (this.rcsimage = this.createRCSImage())), (this.using_gamepad = !1), (this.levelmod = 100);
            }
            return (
                extend(e, t),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e, i;
                    return null != this.material && ((this.material.depthTest = !0), (this.material.depthWrite = !1)), this.l1110.is_mobile_app ? this.drawComponentMobile(t) : (this.status ? (t.globalAlpha = 1) : (t.globalAlpha = 0.5), (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',50%,40%,.5)'), (this.color = 'hsla(' + this.hue + ',70%,80%,1)'), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.textAlign = 'left'), (t.textBaseline = 'middle'), (e = Math.round(this.lO01I / 3)), (t.font = e + 'pt FontAwesome'), (i = this.lO01I / 4), (t.fillStyle = this.medium), t.beginPath(), t.moveTo(0, 0), t.lineTo(this.llO1l - i, 0), t.lineTo(this.llO1l, i), t.lineTo(this.llO1l, this.lO01I), t.lineTo(i, this.lO01I), t.lineTo(0, this.lO01I - i), t.closePath(), t.fill(), (t.fillStyle = this.color), (t.globalAlpha = 1), this.status ? t.drawImage(this.shipicon, this.llO1l / 2, 0, this.lO01I, this.lO01I) : t.drawImage(this.rcsimage, this.llO1l / 2 - 0.5 * this.lO01I, 0, 2 * this.lO01I, this.lO01I), (t.globalAlpha = this.status ? 1 : 0.5), (t.font = e + 'pt Play'), this.status ? t.fillText('RCS: ON', 0.25 * this.lO01I, this.lO01I / 2) : t.fillText('RCS: OFF', 0.25 * this.lO01I, this.lO01I / 2), this.using_gamepad ? Gamepad.drawButton('LT', t, this.llO1l - this.lO01I / 4 - 0.4 * this.lO01I, this.lO01I / 2, 0.6 * e, this.hue) : ((t.textAlign = 'center'), (t.font = Math.round(0.6 * e) + 'pt Play'), t.fillText('CTRL', this.llO1l - this.lO01I / 4 - 0.4 * this.lO01I, this.lO01I / 2), (t.strokeStyle = this.color), t.strokeRect(this.llO1l - this.lO01I / 4 - 0.8 * this.lO01I, 0.3 * this.lO01I, 0.8 * this.lO01I, 0.4 * this.lO01I)), t.restore());
                }),
                (e.prototype.drawComponentMobile = function (t) {
                    var e;
                    return (this.color = 'hsla(' + this.hue + ',70%,80%,1)'), t.save(), t.translate(this.px, this.l1O1l), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (e = Math.round(0.75 * Math.min(this.llO1l, this.lO01I))), (t.font = e + 'pt SBGlyphs'), (t.fillStyle = this.color), (t.shadowBlur = e / 20), (t.shadowOpacity = 1), (t.shadowColor = this.color), t.fillText(this.status ? 'w' : 'v', 0.5 * this.llO1l, 0.5 * this.lO01I), t.restore();
                }),
                (e.prototype.lIl1I = function () {
                    return this.l1110.is_mobile_app ? ((this.l1110.lIlO0.Ill00.I00O0.glide = !this.l1110.lIlO0.Ill00.I00O0.glide), this.l1110.lIlO0.Ill00.O1O0O()) : !this.l1110.settings.check('buttons_disabled') && (document.onkeydown({ keyCode: 17 }), !0);
                }),
                (e.prototype.lI1O0 = function () {
                    return this.l1110.is_mobile_app || (this.l1110.lIlO0.control.control_pressed = !1), !0;
                }),
                (e.prototype.repaint = function () {
                    return (this.lO011 = !0);
                }),
                (e.prototype.OO0Il = function () {
                    if ((this.status !== !this.l1110.Ill00.status.glide && ((this.status = !this.l1110.Ill00.status.glide), this.repaint()), this.l1110.using_gamepad !== this.using_gamepad)) return (this.using_gamepad = this.l1110.using_gamepad), this.repaint();
                }),
                (e.prototype.createRCSImage = function () {
                    var t, e, i, s, l, n, a;
                    for (t = document.createElement('canvas'), this.shipicon = new lIl1O(OlII0.getDefaultShip(), 0).getIcon(128), t.width = 128, t.height = 64, e = t.getContext('2d'), n = 1.2 * t.height, e.translate(t.height / 2, t.height / 2), a = (t.width - t.height) / 20, i = s = 1; s <= 10; i = s += 1) t.height / 2, (l = (-180 * THREE.Math.DEG2RAD * 0.12 * i) / 10), (e.globalCompositeOperation = 'destination-out'), (e.globalAlpha = 1), e.rotate(l), e.drawImage(this.shipicon, -n / 2, -n / 2, n, n), e.rotate(-l), e.translate(a, 0), e.rotate(l), (e.globalCompositeOperation = 'source-over'), (e.globalAlpha = Math.pow(i / 10, 2)), e.drawImage(this.shipicon, -n / 2, -n / 2, n, n), e.rotate(-l), e.translate(a, 0);
                    return t;
                }),
                (e.staticRCSImage = function (t) {
                    return new e(t, 0).createRCSImage();
                }),
                e
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.RoomLinkButton = (function (e) {
            function i(t) {
                (this.l1110 = t), i.IO0OI.constructor.call(this, this), (this.hue = 0), (this.force_ratio = 4), this.l1110.is_app || (this.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, OOIl0: -2, opacity: 0 }), this.O11IO.push({ d: 5, k: 0.02, f: 0.3, l0OOl: 2.5, Ol1I0: 2.5, OOIl0: -3, opacity: 0 }), this.O11IO.push({ d: 2, k: 0.02, f: 0.15 })), (this.copied = !1), (this.systemid = null);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l;
                    return (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',70%,40%,.25)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), e.clearRect(0, 0, this.llO1l, this.lO01I), (e.textAlign = 'center'), (e.textBaseline = 'middle'), (s = Math.round(this.lO01I / 4)), (e.font = s + 'pt Play'), (e.fillStyle = this.background), OpenChatButton.roundRect(e, 2, 2, this.llO1l - 4, this.lO01I - 4, this.lO01I / 12), e.fill(), (e.lineWidth = 2), (e.strokeStyle = this.color), (e.fillStyle = this.color), this.copied ? e.fillText(t('Copied!'), this.llO1l / 2, this.lO01I / 2) : (e.fillText(t('Copy Room Link'), this.llO1l / 2, 0.22 * this.lO01I), (l = 0.9 * this.llO1l), (i = 0.4 * this.lO01I), (e.strokeStyle = this.medium), null != this.l1110.private_address ? ((e.font = Math.round(0.6 * s) + 'pt Play'), e.fillText('starblast.io#' + this.l1110.private_address, this.llO1l / 2, 0.7 * this.lO01I), (l = this.llO1l), e.strokeRect(this.llO1l / 2 - l / 2, 0.7 * this.lO01I - i / 2, l, i)) : (e.fillText('starblast.io#' + this.systemid, this.llO1l / 2, 0.7 * this.lO01I), e.strokeRect(this.llO1l / 2 - l / 2, 0.7 * this.lO01I - i / 2, l, i))), e.restore();
                }),
                (i.prototype.OIOOI = function () {
                    return (
                        this.l1110.l00OO.copyRoomLink(),
                        (this.copied = !0),
                        (this.lO011 = !0),
                        this.O11IO.push({ d: 1, k: 0.02, f: 0.3 }),
                        this.O11IO.push({ l0OOl: 0.5, Ol1I0: 0.5, OOIl0: -2, opacity: 0, d: 2, k: 0.02, f: 0.3 }),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.parent.remove(t);
                                };
                            })(this),
                            4e3
                        )
                    );
                }),
                (i.prototype.OO0Il = function () {
                    if (this.l1110.systemid !== this.systemid) return (this.systemid = this.l1110.systemid), (this.lO011 = !0);
                }),
                (i.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ModeInfo = (function (e) {
            function i(t) {
                (this.l1110 = t), i.IO0OI.constructor.call(this, this), (this.hue = this.l1110.hue), (this.blending = THREE.AdditiveBlending), this.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, OOIl0: -2, opacity: 0 }), this.O11IO.push({ d: 1, k: 0.02, f: 0.3, OOIl0: -2, opacity: 0 }), this.O11IO.push({ d: 2, k: 0.02, f: 0.3 }), (this.copied = !1), (this.systemid = null), (this.closed = !1);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I;
                    for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',70%,40%,.25)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', e.save(), e.translate(this.px, this.l1O1l), e.clearRect(0, 0, this.llO1l, this.lO01I), r = Math.round(this.llO1l / 20), e.fillStyle = this.background, e.fillRect(0, 0, this.llO1l, this.lO01I), e.fillStyle = this.medium, e.fillRect(0, 0, this.llO1l, 3 * r), e.textBaseline = 'middle', e.textAlign = 'right', e.fillStyle = this.color, e.font = Math.round(1.2 * r) + 'pt FontAwesome', e.fillText('', this.llO1l - r, 1.5 * r), e.textAlign = 'left', e.font = r + 'pt Play', e.fillText(t(this.l1110.mode.name), r, 1.5 * r), n = 4, p = this.llO1l - 2 * r, h = e.measureText(' ').width, i = e.measureText('• ').width, a = this.l1110.mode.tips, s = 0, l = a.length; s < l; s++) {
                        for (u = a[s], u = '• ' + u, o = u.split(' '), I = 0; ; ) {
                            if (0 === o.length) break;
                            (c = o.splice(0, 1)[0]), (d = e.measureText(c).width), I + d > p && I > i && ((I = i), (n += 1)), e.fillText(c, I + r, n * r * 1.4), (I += d + h);
                        }
                        n += 2;
                    }
                    return e.fillRect(0.25 * this.llO1l, 0.85 * this.lO01I, 0.5 * this.llO1l, 0.1 * this.lO01I), (e.fillStyle = '#000'), (e.textAlign = 'center'), e.fillText(t('OK'), 0.5 * this.llO1l, 0.9 * this.lO01I), e.restore();
                }),
                (i.prototype.close = function () {
                    if (!this.closed)
                        return (
                            (this.closed = !0),
                            this.O11IO.push({ d: 0.25, k: 0.02, f: 0.3 }),
                            this.O11IO.push({ l0OOl: 0.5, Ol1I0: 0.5, OOIl0: -2, opacity: 0, d: 2, k: 0.02, f: 0.3 }),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        return t.parent.remove(t);
                                    };
                                })(this),
                                4e3
                            )
                        );
                }),
                (i.prototype.OIOOI = function () {
                    return this.close(), localStorage.setItem('dissmissed_info_' + this.l1110.mode.id, 'yes');
                }),
                (i.prototype.OO0Il = function () {}),
                (i.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ChatPanel = (function (e) {
            function i(e) {
                var s, l, n, a, o, r, h, u, d, c, p;
                if (
                    ((this.l1110 = e),
                    i.IO0OI.constructor.call(this),
                    (this.buttons = []),
                    (this.open_button = new OpenChatButton(
                        this.l1110,
                        t('TALK'),
                        '',
                        'C',
                        (function (t) {
                            return function () {
                                return t.toggleChat();
                            };
                        })(this)
                    )),
                    this.add(this.open_button, [0, 0.8, 0.2, 0.2]),
                    (this.l1110.vocabulary = {}),
                    null != this.l1110.mode)
                ) {
                    for (h = this.l1110.mode.vocabulary, n = 0, o = h.length; n < o; n++)
                        (l = h[n]),
                            this.buttons.push(
                                new ChatButton(
                                    this.l1110,
                                    t(l.text),
                                    l.icon,
                                    l.key,
                                    (function (t) {
                                        return function (e) {
                                            return t.typed(e);
                                        };
                                    })(this)
                                )
                            ),
                            (this.l1110.vocabulary[l.key] = { icon: l.icon, text: t(l.text) });
                    0 === this.l1110.mode.vocabulary.length && ((this.open_button.visible = !1), (this.open_button.enabled = !1));
                }
                for (d = 1, u = this.buttons, l = a = 0, r = u.length; a < r; l = ++a) (s = u[l]), (c = l % 4), (p = Math.floor(l / 4)), this.add(s, [((c + 1) * d) / 5 + 0.01, 0.25 * p + 0.01, d / 5 - 0.02, 0.23]);
                (this.shown = !1), (this.close_time = 0), (this.phrase = '');
            }
            return (
                extend(i, e),
                (i.prototype.gamepadChat = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                    if (t) {
                        if (((this.close_time = Date.now() + 6e3), !this.shown)) {
                            for (this.IIOI1 = this.lOlI0 = [0.25, 0.1, 0.5, 0.8], n = 0.2, this.l1110.is_mobile_app && ((this.IIOI1 = this.lOlI0 = [0.25, 0.05, 0.5, 0.9]), (n = 0.125)), O = this.buttons, r = h = 0, c = O.length; h < c; r = ++h) (s = O[r]), (i = (180 * THREE.Math.DEG2RAD * 2 * r) / this.buttons.length), (s.lOlI0 = s.IIOI1 = [0.5 + 0.4 * Math.cos(i) - n / 2, 0.5 - 0.4 * Math.sin(i) - n / 2, n, n]), s.O11IO.init({ l0OOl: 0.1, Ol1I0: 0.1, opacity: 0 }), this.l1110.is_mobile_app ? s.O11IO.set({ l0OOl: 1, Ol1I0: 1 }) : s.O11IO.set({ l0OOl: 0.5, Ol1I0: 0.5 });
                            this.IlO1I();
                        }
                        for (l = null, o = 360, m = this.buttons, r = u = 0, p = m.length; u < p; r = ++u) (s = m[r]), (i = (360 * r) / this.buttons.length), (a = e - i), a < -180 && (a += 360), a > 180 && (a -= 360), (a = Math.abs(a)) < o && ((l = s), (o = a));
                        for (f = this.buttons, r = d = 0, I = f.length; d < I; r = ++d) (s = f[r]), s !== l || this.l1110.is_mobile_app ? (this.l1110.is_mobile_app ? (s.setSelected(!1), s.O11IO.set({ l0OOl: 1, Ol1I0: 1 })) : (s.setSelected(!1), s.O11IO.set({ l0OOl: 0.5, Ol1I0: 0.5 }))) : (s.O11IO.set(), s.setSelected(!0), (this.gamepad_selected = s));
                    } else this.shown && this.hide();
                }),
                (i.prototype.gamepadChatClick = function () {
                    if (null != this.gamepad_selected) return this.gamepad_selected.OIOOI();
                }),
                (i.prototype.updateHue = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), e.setHue(t);
                    return this.open_button.setHue(t);
                }),
                (i.prototype.toggleChat = function () {
                    return this.shown ? this.hide() : (this.IlO1I(), (this.close_time = Date.now() + 6e3));
                }),
                (i.prototype.typed = function (t) {
                    if ((this.shown || this.IlO1I(), (this.close_time = Date.now() + 6e3), (this.phrase += t), this.l1110.I0O01.say(this.phrase), this.phrase.length >= 4 && this.hide(), Math.random() < 0.01)) return this.l1110.sendGAEvent('chat_evt', t);
                }),
                (i.prototype.IlO1I = function () {
                    var t, e, i, s, l;
                    if (!this.shown) {
                        for (this.shown = !0, this.phrase = '', this.open_button.hide(), l = this.buttons, e = i = 0, s = l.length; i < s; e = ++i) (t = l[e]), t.IlO1I();
                        if (null != this.l1110.display.screen.lO100.mode_info) return this.l1110.display.screen.lO100.mode_info.close();
                    }
                }),
                (i.prototype.hide = function () {
                    var t, e, i, s;
                    if (this.shown) for (this.phrase = '', this.shown = !1, this.l1110.using_gamepad || this.l1110.is_mobile_app || this.open_button.IlO1I(), s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.hide();
                }),
                (i.prototype.OO0Il = function () {
                    if ((i.IO0OI.OO0Il.call(this), this.shown && Date.now() > this.close_time && this.hide(), this.l1110.using_gamepad || this.l1110.is_mobile_app)) return (this.open_button.visible = !1);
                }),
                i
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ChatButton = (function (t) {
            function e(t, i, s, l, n) {
                var a, o, r;
                for (this.l1110 = t, this.name = i, this.icon = s, this.key = l, this.llO1I = n, e.IO0OI.constructor.call(this, this), this.blending = THREE.AdditiveBlending, this.hue = 180, this.force_ratio = 0.9, this.O11IO.init({ OOIl0: -6 }), a = o = 0, r = this.key.length - 1; o <= r; a = o += 1) this.l1110.addKeyListener(this.key.charCodeAt(a), this);
                (this.shown = !1), (this.selected = !1);
            }
            return (
                extend(e, t),
                (e.prototype.setSelected = function (t) {
                    if (t !== this.selected) return (this.selected = t), (this.lO011 = !0);
                }),
                (e.prototype.lllO1 = function (t) {
                    var i, s;
                    (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',70%,40%,.25)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.background), e.bubble(t, 0.02 * this.lO01I, 0.02 * this.lO01I, this.llO1l - 0.04 * this.lO01I, 0.96 * this.lO01I, 0.1 * this.lO01I), t.fill(), this.selected && ((t.strokeStyle = this.color), (t.lineWidth = 0.04 * this.lO01I), t.stroke()), (i = Math.round(this.lO01I / 8)), (t.font = i + 'pt Play'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText(this.name, this.llO1l / 2, 0.12 * this.lO01I), (i = Math.round(this.lO01I / 3)), (t.font = i + 'pt SBGlyphs'), 'GG' === this.icon && (t.font = i + 'pt Play'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText(this.icon, this.llO1l / 2, 0.45 * this.lO01I), this.l1110.is_mobile || this.l1110.is_mobile_app || this.using_gamepad || ((i = Math.round(this.lO01I / 8)), (t.font = i + 'pt Play'), t.fillText(this.key, 0.8 * this.llO1l, 0.7 * this.lO01I), (t.strokeStyle = this.color), (s = (Math.max(2, this.key.length) * this.llO1l) / 8), t.strokeRect(0.8 * this.llO1l - s / 2, 0.7 * this.lO01I - 0.1 * this.lO01I, s, 0.2 * this.lO01I)), t.restore();
                }),
                (e.bubble = function (t, e, i, s, l, n) {
                    return s < 2 * n && (n = s / 2), l < 2 * n && (n = l / 2), t.beginPath(), t.moveTo(e + n, i), t.arcTo(e + s, i, e + s, i + l - n, n), t.arcTo(e + s, i + l - n, e, i + l - n, n), t.lineTo(e + s / 2 + n, i + l - n), t.lineTo(e + s / 2, i + l), t.lineTo(e + s / 2, i + l - n), t.arcTo(e, i + l - n, e, i, n), t.arcTo(e, i, e + s, i, n), t.closePath();
                }),
                (e.prototype.IlO1I = function () {
                    if (((this.shown = !0), (this.visible = !0), !this.using_gamepad && !this.l1110.is_mobile_app)) return this.O11IO.set({ OOIl0: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.hide = function () {
                    return (
                        (this.shown = !1),
                        this.using_gamepad || this.l1110.is_mobile_app ? this.O11IO.set({ l0OOl: 0.1, Ol1I0: 0.1, opacity: 0 }) : this.O11IO.push({ OOIl0: -6, d: 1, k: 0.02, f: 0.2 }),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    if (!t.shown) return (t.visible = !1);
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (e.prototype.OIOOI = function () {
                    if ((null != this.llO1I && this.llO1I(this.key), this.l1110.is_mobile_app)) return this.O11IO.set({ l0OOl: 1, Ol1I0: 1 });
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (e.prototype.lIl1I = function (t, i) {
                    return null == t ? e.IO0OI.lIl1I.call(this, t, i) : this.l1110.settings.check('buttons_disabled') ? void 0 : e.IO0OI.lIl1I.call(this, t, i);
                }),
                (e.prototype.keyPressed = function () {
                    if ((null != this.l1110.mode && 0 === this.l1110.mode.options.strafe) || this.l1110.display.screen.lO100.chatpanel.shown) return this.lIl1I();
                }),
                (e.prototype.keyReleased = function () {
                    if ((null != this.l1110.mode && 0 === this.l1110.mode.options.strafe) || this.l1110.display.screen.lO100.chatpanel.shown) return this.lI1O0();
                }),
                (e.prototype.OO0Il = function () {
                    if (this.using_gamepad !== this.l1110.using_gamepad) return (this.using_gamepad = this.l1110.using_gamepad), (this.lO011 = !0);
                }),
                e
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.OpenChatButton = (function (t) {
            function e(t, i, s, l, n) {
                var a, o, r;
                for (this.l1110 = t, this.name = i, this.icon = s, this.key = l, this.llO1I = n, e.IO0OI.constructor.call(this, this), this.blending = THREE.AdditiveBlending, this.hue = 180, this.force_ratio = 1, this.O11IO.init({ OOIl0: -1 }), a = o = 0, r = this.key.length - 1; o <= r; a = o += 1) this.l1110.addKeyListener(this.key.charCodeAt(a), this);
                this.l1110.addKeyListener(13, this), this.IlO1I();
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var i, s, l;
                    (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',70%,40%,.25)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.background), (i = 0.1 * this.lO01I), e.roundRect(t, -i, 0, this.llO1l + i, this.lO01I, i), t.fill(), (s = Math.round(this.lO01I / 8)), (t.font = s + 'pt Play'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText(this.name, this.llO1l / 2, 0.12 * this.lO01I), (s = Math.round(this.lO01I / 3)), (t.font = s + 'pt FontAwesome'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (t.fillStyle = this.color), t.fillText(this.icon, this.llO1l / 2, 0.45 * this.lO01I), this.l1110.is_mobile || ((s = Math.round(this.lO01I / 8)), (t.font = s + 'pt Play'), t.fillText(this.key, 0.5 * this.llO1l, 0.8 * this.lO01I), (t.strokeStyle = this.color), (l = (Math.max(2, this.key.length) * this.llO1l) / 8), t.strokeRect(0.5 * this.llO1l - l / 2, 0.8 * this.lO01I - 0.1 * this.lO01I, l, 0.2 * this.lO01I)), t.restore();
                }),
                (e.roundRect = function (t, e, i, s, l, n) {
                    return s < 2 * n && (n = s / 2), l < 2 * n && (n = l / 2), t.beginPath(), t.moveTo(e + n, i), t.arcTo(e + s, i, e + s, i + l, n), t.arcTo(e + s, i + l, e, i + l, n), t.arcTo(e, i + l, e, i, n), t.arcTo(e, i, e + s, i, n), t.closePath();
                }),
                (e.prototype.IlO1I = function () {
                    return this.O11IO.set({ OOIl0: 0, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.hide = function () {
                    return this.O11IO.set({ OOIl0: -1, d: 1, k: 0.02, f: 0.2 });
                }),
                (e.prototype.OIOOI = function () {
                    if (null != this.llO1I) return this.llO1I();
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (e.prototype.lIl1I = function (t, i) {
                    return null == t ? e.IO0OI.lIl1I.call(this, t, i) : this.l1110.settings.check('buttons_disabled') ? void 0 : e.IO0OI.lIl1I.call(this, t, i);
                }),
                (e.prototype.keyPressed = function () {
                    return (this.enabled = !0), this.lIl1I();
                }),
                (e.prototype.keyReleased = function () {
                    return this.lI1O0(), (this.enabled = !1);
                }),
                e
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.WeaponsBar = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.selected = 0), (this.hue = 0), (this.blending = THREE.AdditiveBlending), (this.using_gamepad = !1), (this.store_allowed = !1), (this.ship_level = 1), this.setEnabled(!1), (this.cooling = [!1, !1, !1, !1, !1, !1]);
            }
            return (
                extend(e, t),
                (e.prototype.setEnabled = function (t) {
                    if (t !== this.enabled) return (this.enabled = t), this.enabled ? this.O11IO.set({ OOIl0: 0 }) : this.O11IO.set({ OOIl0: -1.1 });
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), this.repaint();
                }),
                (e.prototype.getNumSlots = function () {
                    return Math.min(6, this.l1110.lIlO0.Ill00.type.level);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O;
                    if (this.l1110.weapons) {
                        for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',50%,40%,.5)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', r = Math.min(6, this.ship_level), n = this.lO01I / 8, i = n / 4, O = 0.7 * this.llO1l, t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), t.fillStyle = this.medium, t.beginPath(), t.moveTo(0, 0), t.lineTo(O - i, 0), t.lineTo(O, i), t.lineTo(O, n * (r + 2) - i), t.lineTo(O - i, n * (r + 2)), t.lineTo(0, n * (r + 2)), t.closePath(), t.fill(), this.signature = this.l1110.weapons.signature, n = this.lO01I / 8, o = 0.03 * this.llO1l, s = l = 0, h = r - 1; l <= h; s = l += 1) (I = this.l1110.weapons.weapons[s]), null != I ? ((t.fillStyle = 'rgba(0,0,0,.5)'), t.fillRect(o, (s + 1) * n, O - 2 * o, n - o), (d = Math.min(O - 2 * o, n - 2 * o)), (e = I.type.glyph), (t.fillStyle = '#FFF'), (t.font = Math.round(0.7 * d) + 'pt SBGlyphs'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), I.next_shot <= this.l1110.lIlO0.IO11l.II1O0 ? ((t.globalAlpha = 0.8), t.fillText(e, O / 2, (s + 1.5) * n), (t.globalAlpha = 1), (this.cooling[s] = !1)) : ((t.globalAlpha = 0.3), t.fillText(e, O / 2, (s + 1.5) * n), (t.globalAlpha = 1), (this.cooling[s] = !0)), I.type.OI00O ? ((d = Math.floor(d / 5)), (t.fillStyle = this.color), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (t.font = d + 'pt Play'), t.fillText(I.ammo, 0.85 * O, (s + 1.8) * n)) : ((t.fillStyle = this.color), (u = I.ammo / 255), t.fillRect(o, (s + 1.9) * n, (O - 2 * o) * u, 0.1 * n - o))) : ((t.fillStyle = 'rgba(0,0,0,.2)'), t.fillRect(o, (s + 1) * n, O - 2 * o, n - o));
                        this.store_allowed && ((a = 2 * o), (p = Math.sqrt(a)), (t.fillStyle = this.color), t.beginPath(), t.moveTo(a, n * (r + 1) + o), t.lineTo(O - a, n * (r + 1) + o), t.lineTo(O - a, n * (r + 1.75) - p), t.lineTo(O - p - i, n * (r + 2) - a), t.lineTo(a, n * (r + 2) - a), t.closePath(), t.fill(), (d = Math.floor(0.12 * this.llO1l)), (t.font = d + 'pt Play'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (t.fillStyle = 'rgba(0,0,0,.8)'), (t.font = d + 'pt FontAwesome'), t.fillText('', 0.2 * O, n * (r + 1.5)), this.using_gamepad ? Gamepad.drawButton('X', t, 0.5 * O, n * (r + 1.5), 0.12 * this.llO1l, this.hue) : ((c = 0.1 * this.llO1l), (d = Math.floor(0.12 * this.llO1l)), (t.font = d + 'pt Play'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (t.fillStyle = '#000'), t.fillText('W', 0.5 * O, n * (r + 1.5)), (t.strokeStyle = '#000'), t.strokeRect(0.5 * O - c, n * (r + 1.5) - c, 2 * c, 2 * c))), this.countSelectableWeapons() >= 1 && ((c = 0.1 * this.llO1l), (d = Math.floor(0.12 * this.llO1l)), this.l1110.using_gamepad ? Gamepad.drawButton('B', t, 0.5 * O, 0.5 * n, d, this.hue, !0) : ((t.font = d + 'pt Play'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (t.fillStyle = this.color), t.fillRect(0.5 * O - 1.25 * c, 0.5 * n - c, 2 * c * 1.25, 2 * c), (t.fillStyle = 'rgba(0,0,0,.8)'), t.fillText('Alt', 0.5 * O, 0.5 * n)), (t.fillStyle = this.color), (t.font = d + 'pt FontAwesome'), t.fillText('', 0.2 * O, 0.5 * n), this.selected >= 0 && ((t.fillStyle = this.color), t.beginPath(), t.moveTo(0.65 * this.llO1l, n * (this.selected + 1)), t.lineTo(0.9 * this.llO1l, n * (this.selected + 1)), t.lineTo(this.llO1l, n * (this.selected + 1) + c), t.lineTo(this.llO1l, n * (this.selected + 2) - c), t.lineTo(0.9 * this.llO1l, n * (this.selected + 2)), t.lineTo(0.65 * this.llO1l, n * (this.selected + 2)), t.lineTo(0.7 * this.llO1l, n * (this.selected + 2) - c), t.lineTo(0.7 * this.llO1l, n * (this.selected + 1.5) + c), t.lineTo(0.6 * this.llO1l, n * (this.selected + 1.5)), t.lineTo(0.7 * this.llO1l, n * (this.selected + 1.5) - c), t.lineTo(0.7 * this.llO1l, n * (this.selected + 1) + c), t.closePath(), t.fill()), this.countSelectableWeapons() > 1 && (this.using_gamepad ? Gamepad.drawButton('Y', t, 0.85 * this.llO1l, n * (this.selected + 1.5), 0.12 * this.llO1l, this.hue) : ((d = Math.floor(0.12 * this.llO1l)), (t.font = d + 'pt Play'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (t.fillStyle = '#000'), t.fillText('⇧', 0.85 * this.llO1l, n * (this.selected + 1.5) + 0.1 * c), (t.strokeStyle = '#000'), t.strokeRect(0.75 * this.llO1l, n * (this.selected + 1.5) - c, 2 * c, 2 * c)), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (t.fillStyle = '#000'), (t.font = d + 'pt FontAwesome'), t.fillText('', 0.85 * this.llO1l, n * (this.selected + 1.2)), t.fillText('', 0.85 * this.llO1l, n * (this.selected + 1.8)))), t.restore();
                    }
                }),
                (e.prototype.countSelectableWeapons = function () {
                    var t, e, i, s, l;
                    for (s = 0, i = this.l1110.weapons.weapons, t = 0, e = i.length; t < e; t++) (l = i[t]), l.type.OI00O && s++;
                    return s;
                }),
                (e.prototype.toggleStore = function () {
                    return this.store_allowed ? this.l1110.display.screen.lO100.toggleWeaponStore() : null != this.l1110.display.screen.lO100.weapon_store && this.l1110.display.screen.lO100.weapon_store.shown ? this.l1110.display.screen.lO100.hideWeaponStore() : void 0;
                }),
                (e.prototype.lIl1I = function (t, e) {
                    if (!this.l1110.settings.check('buttons_disabled'))
                        if (-1 === (e = Math.floor((e - this.l1O1l) / (this.lO01I / 8)) - 1)) this.OI00O();
                        else if (e === this.getNumSlots()) this.toggleStore();
                        else if (e >= 0 && e < this.l1110.weapons.weapons.length && this.l1110.weapons.weapons[e].type.OI00O && e !== this.selected) return (this.selected = e), this.repaint(), !0;
                    return !0;
                }),
                (e.prototype.O110l = function (t, e) {}),
                (e.prototype.repaint = function () {
                    return (this.lO011 = !0);
                }),
                (e.prototype.OO0Il = function () {
                    var t, i, s, l, n, a, o, r, h, u, d, c;
                    for (e.IO0OI.OO0Il.call(this), this.signature !== this.l1110.weapons.signature && ((this.signature = this.l1110.weapons.signature), this.repaint(), this.fixSelection()), this.ship_level !== this.l1110.lIlO0.Ill00.type.level && ((this.ship_level = this.l1110.lIlO0.Ill00.type.level), this.repaint()), this.l1110.using_gamepad !== this.using_gamepad && ((this.using_gamepad = this.l1110.using_gamepad), this.repaint()), h = this.l1110.weapons.weapons, s = l = 0, a = h.length; l < a; s = ++l) (c = h[s]), this.cooling[s] && c.next_shot <= this.l1110.lIlO0.IO11l.II1O0 && ((this.cooling[s] = !1), this.repaint(), this.l1110.l0I11.beep(2, 0.25));
                    for (d = !this.l1110.mode.restricted_weapons_store, d !== this.store_allowed && ((this.store_allowed = d), this.repaint()), r = 1e7, u = WEAPON_TYPES.types, n = 0, o = u.length; n < o; n++) (c = u[n]), (r = Math.min(c.price, r));
                    (t = d), (i = t || this.l1110.weapons.weapons.length > 0), this.setEnabled(i);
                }),
                (e.prototype.shiftSelection = function () {
                    var t, e;
                    for (t = 0, e = this.l1110.weapons.weapons.length - 1; t <= e; t += 1) if (((this.selected = (this.selected + 1) % this.l1110.weapons.weapons.length), this.l1110.weapons.weapons[this.selected].type.OI00O)) return void this.repaint();
                    -1 !== this.selected && ((this.selected = -1), this.repaint());
                }),
                (e.prototype.selectUp = function () {
                    var t, e;
                    for (t = 0, e = this.l1110.weapons.weapons.length - 1; t <= e; t += 1) if (((this.selected = (this.selected - 1 + this.l1110.weapons.weapons.length) % this.l1110.weapons.weapons.length), this.l1110.weapons.weapons[this.selected].type.OI00O)) return void this.repaint();
                    -1 !== this.selected && ((this.selected = -1), this.repaint());
                }),
                (e.prototype.selectDown = function () {
                    return this.shiftSelection();
                }),
                (e.prototype.fixSelection = function () {
                    return this.selected < 0 ? this.shiftSelection() : this.selected >= this.l1110.weapons.weapons.length ? ((this.selected = -1), this.shiftSelection()) : this.l1110.weapons.weapons[this.selected].type.OI00O ? void 0 : this.shiftSelection();
                }),
                (e.prototype.OI00O = function () {
                    this.selected >= 0 && this.selected < this.l1110.weapons.weapons.length && !this.l1110.lIlO0.Ill00.status.guided && this.l1110.weapons.weapons[this.selected].type.OI00O && this.l1110.I0O01.O0lO1(this.selected, this.l1110.weapons.weapons[this.selected].code);
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.WeaponStore = (function (t) {
            function e(t) {
                var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                for (this.l1110 = t, e.IO0OI.constructor.call(this), this.levelmod = 10, this.hue = this.l1110.display.screen.lO100.hue, this.background = 'hsla(' + this.hue + ',50%,20%,.75)', this.medium = 'hsla(' + this.hue + ',50%,40%,.5)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', p = 0.01, c = (16 * p) / 9, this.title = new WeaponStoreTitle(this), this.add(this.title, [0, 0, 1, 0.075]), this.exit_button = new WeaponStoreExitButton(this), this.add(this.exit_button, [0.8, 0.9, 0.2, 0.1]), this.ship_view = new WeaponStoreShipView(this), this.add(this.ship_view, [p, 0.075 + c + 0.15 + c, 0.3 - 2 * p, 0.5 - (0.075 + c + 0.15 + c)]), this.transfer_button = new TransferButton(this), this.add(this.transfer_button, [p, 0.075 + c, 0.3 - 2 * p, 0.15]), m = 0.5, O = 0.08, this.l1110.mode.options.healing_enabled && ((this.healing_button = new HealingButton(this)), this.add(this.healing_button, [p, 0.5, 0.3 - 2 * p, 0.1]), (m = 0.6), (O = 0.06)), s = l = 0; l <= 5; s = l += 1) this.add(new RemoveWeaponButton(this, s), [p, m + c + s * O, 0.3 - 2 * p, O - c / 2]);
                for (f = 0, g = 0, this.buy_buttons = [], u = WEAPON_TYPES.types, n = 0, o = u.length; n < o; n++) (I = u[n]), null != I.price && I.price > 0 && this.buy_buttons.push(new BuyWeaponButton(this, I));
                for (
                    this.buy_buttons.sort(function (t, e) {
                        return t.weapon.price - e.weapon.price;
                    }),
                        d = this.buy_buttons,
                        a = 0,
                        r = d.length;
                    a < r;
                    a++
                )
                    (i = d[a]), 0.01, (h = c), this.add(i, [0.3 + p + (f / 4) * (0.7 - p), 0.075 + c + (g / 3) * 0.7, 0.175 - p, 0.7 / 3 - h]), (f += 1) >= 4 && ((f = 0), (g += 1));
                (this.background_component = new WeaponStoreBackground(this)), (this.background_component.levelmod = 1), this.add(this.background_component, [0, 0, 1, 1]), this.l1110.mode.restricted_weapons_store && ((this.countdown = new StoreCountDown(this)), this.add(this.countdown, [0.7, 0.9, 0.1, 0.1])), (this.shown = !1), (this.visible = !1), (this.block_ship_control = !0);
            }
            return (
                extend(e, t),
                (e.prototype.IlO1I = function () {
                    var t, e, i, s;
                    if (!this.shown) for (this.shown = !0, this.l1110.lIlO0.control.setNavigationListener(this), this.visible = !0, this.transfer_button.transferring = !1, null != this.countdown && this.countdown.O1lI1(), this.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, OOIl0: 0.5, OO1lI: 0.5 }), this.O11IO.set({ l0OOl: 1 }), s = this.children, e = 0, i = s.length; e < i; e++) (t = s[e]), (t.enabled = !0), t.O11IO.init({ opacity: 0, l0OOl: 0.5, Ol1I0: 0.5 }), t.O11IO.set({ opacity: 1 });
                }),
                (e.prototype.hide = function () {
                    var t, e, i, s;
                    if (this.shown) {
                        for (this.shown = !1, this.l1110.is_mobile_app && null != this.l1110.display.screen.lO100.cursor && (this.l1110.display.screen.lO100.cursor.visible = !0), this.l1110.lIlO0.control.setNavigationListener(null), this.l1110.mode.undock(), this.O11IO.set({ l0OOl: 0.5, Ol1I0: 0.5, OOIl0: 0.5, OO1lI: 0.5 }), s = this.children, e = 0, i = s.length; e < i; e++) (t = s[e]), (t.enabled = !1), t.O11IO.set({ opacity: 0, l0OOl: 0.5, Ol1I0: 0.5 });
                        if (
                            (setTimeout(
                                (function (t) {
                                    return function () {
                                        if (!t.shown) return (t.visible = !1);
                                    };
                                })(this),
                                1e3
                            ),
                            this.transfer_button.transferring)
                        )
                            return (this.transfer_button.transferring = !1), this.setTransferring(!1);
                    }
                }),
                (e.prototype.OO0Il = function () {
                    return e.IO0OI.OO0Il.call(this);
                }),
                (e.prototype.toggle = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (e.prototype.Il1OO = function (t) {
                    this.l1110.I0O01.Il1OO(t.code);
                }),
                (e.prototype.removeWeapon = function (t) {
                    if (null != this.l1110.weapons.weapons[t]) return this.l1110.I0O01.removeWeapon(t);
                }),
                (e.prototype.setTransferring = function (t) {
                    return t ? (this.l1110.lIlO0.Ill00.status.I0O1l > 0 ? this.l1110.I0O01.startTransfer() : void 0) : this.l1110.I0O01.endTransfer();
                }),
                (e.prototype.gamepadNavigation = function (t) {
                    switch (t) {
                        case 'cancel':
                        case 'interrupted':
                        case 'menu':
                            return this.hide(), !0;
                    }
                    return !1;
                }),
                e
            );
        })(OO00l)),
        (WeaponStorePlaceholder = (function (t) {
            function e(t) {
                (this.store = t), e.IO0OI.constructor.call(this);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    return t.save(), t.translate(this.px, this.l1O1l), (t.fillStyle = 'rgba(255,255,255,.5)'), t.fillRect(0, 0, this.llO1l, this.lO01I), t.restore();
                }),
                e
            );
        })(OllI0)),
        (WeaponStoreBackground = (function (t) {
            function e(t) {
                (this.store = t), e.IO0OI.constructor.call(this);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i;
                    return t.save(), t.translate(this.px, this.l1O1l), (e = t.createLinearGradient(0, 0, this.llO1l, this.lO01I)), e.addColorStop(0, this.store.background), e.addColorStop(1, '#000'), (t.fillStyle = e), (i = 0.025 * this.lO01I), t.beginPath(), t.moveTo(i, 0), t.lineTo(this.llO1l, 0), t.lineTo(this.llO1l, this.lO01I - i), t.lineTo(this.llO1l - i, this.lO01I), t.lineTo(0, this.lO01I), t.lineTo(0, i), t.closePath(), t.fill(), (e = t.createLinearGradient(0, 0, this.llO1l, this.lO01I)), e.addColorStop(0, this.store.medium), e.addColorStop(1, this.store.background), (t.fillStyle = e), t.beginPath(), t.moveTo(0.3 * this.llO1l, 0), t.lineTo(this.llO1l, 0), t.lineTo(this.llO1l, this.lO01I - i), t.lineTo(this.llO1l - i, this.lO01I), t.lineTo(0.3 * this.llO1l, this.lO01I), t.lineTo(0.3 * this.llO1l, i), t.closePath(), t.fill(), t.restore();
                }),
                e
            );
        })(OllI0)),
        (WeaponStoreTitle = (function (t) {
            function e(t) {
                (this.store = t), e.IO0OI.constructor.call(this), (this.credits = 0);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    return t.save(), t.translate(this.px, this.l1O1l), (t.fillStyle = this.store.color), (e = this.lO01I / 4), t.beginPath(), t.moveTo(e, 0), t.lineTo(this.llO1l, 0), t.lineTo(this.llO1l, this.lO01I), t.lineTo(0, this.lO01I), t.lineTo(0, e), t.closePath(), t.fill(), (t.font = Math.round(this.lO01I / 3) + 'pt Play'), (t.textAlign = 'left'), (t.textBaseline = 'middle'), (t.fillStyle = 'rgba(0,0,0,.8)'), t.fillText(this.store.l1110.mode.getWeaponStoreName(), 2 * e, this.lO01I / 2), (t.font = Math.round(this.lO01I / 3) + 'pt FontAwesome'), (t.textAlign = 'right'), t.fillText('', this.llO1l - 2 * e, this.lO01I / 2), (t.font = Math.round(this.lO01I / 3) + 'pt Play'), t.fillText(this.credits, this.llO1l - 2 * e - (2 * this.lO01I) / 3, this.lO01I / 2), t.restore();
                }),
                (e.prototype.OO0Il = function () {
                    if (this.credits !== this.store.l1110.weapons.credits) return (this.credits = this.store.l1110.weapons.credits), (this.lO011 = !0);
                }),
                e
            );
        })(OllI0)),
        (WeaponStoreExitButton = (function (e) {
            function i(t) {
                (this.store = t),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.store.hide(), !1;
                            };
                        })(this),
                    });
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i;
                    return e.save(), e.translate(this.px, this.l1O1l), (e.fillStyle = this.store.color), (i = this.lO01I / 4), e.beginPath(), e.moveTo(i, 0), e.lineTo(this.llO1l, 0), e.lineTo(this.llO1l, this.lO01I - i), e.lineTo(this.llO1l - i, this.lO01I), e.lineTo(0, this.lO01I), e.lineTo(0, i), e.closePath(), e.fill(), (e.font = Math.round(this.lO01I / 4) + 'pt Play'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), (e.fillStyle = 'rgba(0,0,0,.8)'), e.fillText(t('EXIT'), this.llO1l / 2, this.lO01I / 2), e.restore();
                }),
                i
            );
        })(l1I1l)),
        (BuyWeaponButton = (function (e) {
            function i(t, e) {
                (this.store = t),
                    (this.weapon = e),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.store.Il1OO(t.weapon), !0;
                            };
                        })(this),
                    }),
                    (this.can_buy = !1);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l;
                    return (i = this.can_buy ? 1 : 0.25), e.save(), (e.globalAlpha = i), e.translate(this.px, this.l1O1l), e.clearRect(0, 0, this.llO1l, this.lO01I), (e.fillStyle = 'rgba(0,0,0,.5)'), e.fillRect(0, 0, this.llO1l, this.lO01I), (l = 0.7 * Math.min(this.llO1l, this.lO01I)), (e.globalAlpha = 0.8 * i), (s = this.weapon.glyph), (e.fillStyle = '#FFF'), (e.font = Math.round(0.7 * l) + 'pt SBGlyphs'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), e.fillText(s, this.llO1l / 2, this.lO01I / 2), (e.globalAlpha = i), (e.fillStyle = this.store.color), (e.font = Math.round(this.lO01I / 10) + 'pt Play'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), e.fillText(t(this.weapon.name), this.llO1l / 2, 0.1 * this.lO01I), this.weapon.OI00O && e.fillText('x' + this.weapon.ammo, 0.15 * this.llO1l, 0.9 * this.lO01I), e.beginPath(), e.moveTo(0.55 * this.llO1l, this.lO01I), e.lineTo(0.6 * this.llO1l, 0.8 * this.lO01I), e.lineTo(this.llO1l, 0.8 * this.lO01I), e.lineTo(this.llO1l, this.lO01I), e.closePath(), e.fill(), (e.fillStyle = '#000'), e.fillText(this.weapon.price, 0.8 * this.llO1l, 0.9 * this.lO01I), e.restore();
                }),
                (i.prototype.OO0Il = function () {
                    var t;
                    if (((t = this.store.l1110.weapons.credits >= this.weapon.price && this.store.l1110.weapons.weapons.length < this.store.l1110.lIlO0.Ill00.type.level), (t = t && !this.store.l1110.mode.options.disable_weapons_purchase), this.can_buy !== t)) return (this.can_buy = t), (this.lO011 = !0), (this.enabled = this.can_buy);
                }),
                i
            );
        })(l1I1l)),
        (TransferButton = (function (t) {
            function e(t) {
                (this.store = t),
                    e.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                if (t.store.shown) return (t.transferring = !t.transferring), t.store.setTransferring(t.transferring), !0;
                            };
                        })(this),
                    }),
                    (this.transferring = !1),
                    (this.next_up = 0),
                    (this.credits = 0),
                    (this.I0O1l = 0);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i;
                    return t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = 'rgba(0,0,0,.5)'), t.fillRect(0, 0, this.llO1l, this.lO01I), (t.globalAlpha = this.enabled ? 1 : 0.25), (e = Math.round(this.lO01I / 4)), (i = Math.round(this.lO01I / 8)), (t.fillStyle = 'rgba(255,255,255,.9)'), (t.font = e + 'pt FontAwesome'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), t.fillText('', 0.25 * this.llO1l, this.lO01I / 2), t.fillText('', 0.5 * this.llO1l, this.lO01I / 2), t.fillText('', 0.75 * this.llO1l, this.lO01I / 2), (t.font = i + 'pt Play'), t.fillText(this.I0O1l, 0.25 * this.llO1l, 0.8 * this.lO01I), t.fillText(this.credits, 0.75 * this.llO1l, 0.8 * this.lO01I), t.restore();
                }),
                (e.prototype.OO0Il = function () {
                    if ((e.IO0OI.OO0Il.call(this), (this.credits === this.store.l1110.weapons.credits && this.I0O1l === this.store.l1110.lIlO0.Ill00.status.I0O1l) || ((this.credits = this.store.l1110.weapons.credits), (this.I0O1l = this.store.l1110.lIlO0.Ill00.status.I0O1l), (this.lO011 = !0)), (this.enabled = this.I0O1l > 0), this.transferring && this.I0O1l <= 0 && (this.transferring = !1), this.enabled && !this.transferring && Date.now() > this.next_up && !this.O11IO.isRunning())) return (this.next_up = Date.now() + 500), this.O11IO.set({ l0OOl: 1.025, Ol1I0: 1.05, d: 0.15, k: 0.1, f: 0.3 }), this.O11IO.push({ OOIl0: 0, d: 0.35 });
                }),
                e
            );
        })(l1I1l)),
        (StoreCountDown = (function (t) {
            function e(t) {
                (this.store = t), e.IO0OI.constructor.call(this), (this.II0lI = 60), (this.end = Date.now() + 6e4);
            }
            return (
                extend(e, t),
                (e.prototype.O1lI1 = function () {
                    return (this.end = Date.now() + 6e4);
                }),
                (e.prototype.lllO1 = function (t) {
                    return t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.store.color), (t.font = Math.round(this.lO01I / 2) + 'pt Play'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), t.fillText(this.II0lI, this.llO1l / 2, this.lO01I / 2), t.restore();
                }),
                (e.prototype.OO0Il = function () {
                    var t;
                    if ((e.IO0OI.OO0Il.call(this), (t = Math.round(Math.max(0, Math.min(60, (this.end - Date.now()) / 1e3)))) !== this.II0lI)) return (this.II0lI = t), (this.lO011 = !0), this.O11IO.set({ l0OOl: 1.05, Ol1I0: 1.1, d: 0.15, k: 0.1, f: 0.3 }), this.O11IO.push({ OOIl0: 0, d: 0.85 });
                }),
                e
            );
        })(OllI0)),
        (WeaponStoreShipView = (function (t) {
            function e(t, i) {
                (this.store = t), (this.weapon = i), e.IO0OI.constructor.call(this), (this.type = 101);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s;
                    return (s = new lIl1O(this.store.l1110.mode.OlII0.ships_by_code[this.type], 0)), (e = s.I110l(256)), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = 'rgba(0,0,0,.5)'), t.fillRect(0, 0, this.llO1l, this.lO01I), (i = Math.min(this.llO1l, this.lO01I)), t.drawImage(e, this.llO1l / 2 - i / 2, this.lO01I / 2 - i / 2, i, i), t.restore();
                }),
                (e.prototype.OO0Il = function () {
                    if (this.type !== this.store.l1110.lIlO0.Ill00.type.code) return (this.type = this.store.l1110.lIlO0.Ill00.type.code), (this.lO011 = !0);
                }),
                e
            );
        })(OllI0)),
        (RemoveWeaponButton = (function (t) {
            function e(t, i) {
                (this.store = t),
                    (this.weapon_index = i),
                    e.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.store.removeWeapon(t.weapon_index), !0;
                            };
                        })(this),
                    }),
                    (this.l1110 = this.store.l1110),
                    (this.can_delete = !1),
                    (this.weapon_code = 0),
                    (this.weapon_ammo = 0);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s;
                    return t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (s = this.l1110.weapons.weapons[this.weapon_index]), this.can_delete && null != s && ((t.fillStyle = 'rgba(0,0,0,.5)'), t.fillRect(0, 0, this.llO1l, this.lO01I), (i = this.lO01I), (t.globalAlpha = 0.7), (e = s.type.glyph), (t.font = Math.round(0.7 * i) + 'pt SBGlyphs'), (t.fillStyle = '#FFF'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), t.fillText(e, this.lO01I / 2, this.lO01I / 2), (t.globalAlpha = 1), (t.fillStyle = this.store.color), (t.font = Math.round(this.lO01I / 2) + 'pt FontAwesome'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), t.fillText('', this.llO1l - this.lO01I / 2, this.lO01I / 2), s.type.OI00O && ((t.font = Math.round(this.lO01I / 3) + 'pt Play'), (t.textAlign = 'left'), (t.textBaseline = 'middle'), t.fillText('x' + s.ammo, 2 * this.lO01I, this.lO01I / 2))), t.restore();
                }),
                (e.prototype.OO0Il = function () {
                    var t, e;
                    if (((e = this.l1110.weapons.weapons[this.weapon_index]), (t = null != e), t !== this.can_delete && ((this.can_delete = t), (this.lO011 = !0)), null != e && (e.ammo, this.weapon_code !== e.code || this.weapon_ammo !== e.ammo))) return (this.weapon_code = e.code), (this.weapon_ammo = e.ammo), (this.lO011 = !0);
                }),
                e
            );
        })(l1I1l)),
        (HealingButton = (function (e) {
            function i(t) {
                (this.store = t),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.store.l1110.I0O01.toggleHealing(), !0;
                            };
                        })(this),
                    }),
                    (this.healing = !1),
                    (this.next_up = 0),
                    (this.credits = 0),
                    (this.I0O1l = 0);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i, s;
                    return e.save(), e.translate(this.px, this.l1O1l), e.clearRect(0, 0, this.llO1l, this.lO01I), (e.fillStyle = 'rgba(0,0,0,.25)'), e.fillRect(0, 0, this.llO1l, this.lO01I), (i = Math.round(this.lO01I / 2)), (s = Math.round(this.lO01I / 6)), (e.font = i + 'pt FontAwesome'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), (e.fillStyle = this.healing ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,.2)'), e.fillText('', this.llO1l - i, 0.6 * this.lO01I), (e.fillStyle = this.healing ? 'rgba(255,255,255,.2)' : 'rgba(255,255,255,1)'), e.fillText('', i, 0.6 * this.lO01I), (e.font = s + 'pt Play'), (e.fillStyle = 'rgba(255,255,255,.8)'), e.fillText(t('Lasers Operation').toUpperCase(), 0.5 * this.llO1l, 0.15 * this.lO01I), (e.font = this.healing ? Math.round(1.3 * s) + 'pt Play' : Math.round(1.5 * s) + 'pt Play'), (e.fillStyle = this.healing ? 'rgba(255,255,255,.2)' : 'rgba(255,255,255,1)'), e.fillText(t('Offensive').toUpperCase(), 0.5 * this.llO1l, 0.5 * this.lO01I), (e.fillStyle = this.healing ? 'rgba(255,255,255,1)' : 'rgba(255,255,255,.2)'), (e.font = this.healing ? Math.round(1.5 * s) + 'pt Play' : Math.round(1.3 * s) + 'pt Play'), e.fillText(t('Healing').toUpperCase(), 0.5 * this.llO1l, 0.8 * this.lO01I), e.restore();
                }),
                (i.prototype.OO0Il = function () {
                    if ((i.IO0OI.OO0Il.call(this), this.healing !== this.store.l1110.lIlO0.Ill00.status.healing)) return (this.healing = this.store.l1110.lIlO0.Ill00.status.healing), (this.lO011 = !0);
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.GameMenu = (function (e) {
            function i(t) {
                (this.l1110 = t), i.IO0OI.constructor.call(this), (this.background = new GameMenuBackground(this.l1110)), this.add(this.background, [0, 0, 1, 1]), (this.hue = 0), (this.visible = !1), (this.shown = !1), (this.ship_tree = new ShipTree(this.l1110)), this.add(this.ship_tree, [0.025, 0.65, 0.95, 0.34]), (this.ship_tree.visible = 'deathmatch' !== this.l1110.mode.id), (this.game_stats = new GameStats(this.l1110)), this.add(this.game_stats, [0, 0.4, 1, 0.1]), (this.quit_menu_shown = !1);
            }
            return (
                extend(i, e),
                (i.prototype.createMainMenu = function () {
                    var e, i, s, l;
                    if (null != this.buttons) for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), this.remove(e);
                    return (this.buttons = []), (this.button_index = 0), this.l1110.is_mobile_app ? ((this.resume = new MobileMenuButton(this.l1110, this, t('RESUME'), '²', 'resume')), (this.settings = new MobileMenuButton(this.l1110, this, t('SETTINGS'), 'x', 'settings')), (this.quit = new MobileMenuButton(this.l1110, this, t('Quit to Menu').toUpperCase(), '³', 'quit')), this.addButton(this.settings), this.addButton(this.quit)) : this.l1110.is_app ? ((this.resume = new MenuButton(this.l1110, this, t('RESUME'), 'resume')), (this.roomlink = new MenuButton(this.l1110, this, t('Copy Room Link').toUpperCase(), 'roomlink')), (this.settings = new MenuButton(this.l1110, this, t('SETTINGS'), 'settings')), (this.quit = new MenuButton(this.l1110, this, t('QUIT'), 'quit')), this.addButton(this.resume), this.addButton(this.roomlink), this.addButton(this.settings), this.addButton(this.quit)) : ((this.resume = new MenuButton(this.l1110, this, t('RESUME'), 'resume')), (this.I0IO0 = new MenuButton(this.l1110, this, t('FULLSCREEN'), 'I0IO0')), (this.roomlink = new MenuButton(this.l1110, this, t('Copy Room Link').toUpperCase(), 'roomlink')), this.addButton(this.resume), this.addButton(this.I0IO0), this.addButton(this.roomlink)), (this.selected_index = 0), this.updateSelection();
                }),
                (i.prototype.createQuitMenu = function () {
                    var e, i, s, l;
                    if (null != this.buttons) for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), this.remove(e);
                    return (this.buttons = []), (this.button_index = 0), (this.quit_cancel = new MenuButton(this.l1110, this, t('Cancel').toUpperCase(), 'quit_cancel')), (this.quit_to_menu = new MenuButton(this.l1110, this, t('Quit to Menu').toUpperCase(), 'quit_to_menu')), (this.quit_game = new MenuButton(this.l1110, this, t('Quit Game').toUpperCase(), 'quit_game')), this.addButton(this.quit_cancel), this.addButton(this.quit_to_menu), this.addButton(this.quit_game), (this.selected_index = 0), this.updateSelection(), (this.quit_menu_shown = !0);
                }),
                (i.prototype.addButton = function (t) {
                    var e;
                    return t.setHue(this.hue), this.buttons.push(t), (e = this.l1110.is_mobile_app ? 0.16 : 0.06), this.add(t, [0.05, 0.05 + this.button_index++ * e, 0.9, e - 0.01]), t.O11IO.init({ opacity: 0, l0OOl: 0.8, Ol1I0: 0.8 }), (t.lO011 = !0), t.O11IO.set({ d: 1 });
                }),
                (i.prototype.updateSelection = function () {
                    var t, e, i, s, l;
                    for (l = this.buttons, e = i = 0, s = l.length; i < s; e = ++i) (t = l[e]), (t.OI0O0 = e === this.selected_index && (this.l1110.using_gamepad || !this.l1110.is_mobile_app));
                }),
                (i.prototype.setHue = function (t) {
                    return (this.hue = t), this.background.setHue(this.hue);
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown && (this.createMainMenu(), (this.selected_index = 0), this.updateSelection(), (this.shown = !0), (this.visible = !0), this.O11IO.init({ OOIl0: 1.1 }), this.O11IO.set({ OOIl0: 0 }), null != this.l1110.lIlO0.control.gamepad)) return this.l1110.lIlO0.control.setNavigationListener(this);
                }),
                (i.prototype.hide = function () {
                    if (
                        this.shown &&
                        ((this.shown = !1),
                        this.O11IO.set({ OOIl0: 1.1 }),
                        this.O11IO.llI0l(
                            (function (t) {
                                return function () {
                                    if (!t.shown) return (t.visible = !1);
                                };
                            })(this)
                        ),
                        null != this.l1110.lIlO0.control.gamepad)
                    )
                        return this.l1110.lIlO0.control.setNavigationListener(null);
                }),
                (i.prototype.OIOOI = function (e) {
                    switch (e) {
                        case 'quit':
                            return this.l1110.is_mobile_app ? ((window.onbeforeunload = null), (document.location.hash = ''), document.location.reload()) : ((this.quit_menu_shown = !0), this.createQuitMenu());
                        case 'quit_to_menu':
                            return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                        case 'quit_game':
                            if (null != window.parent) return window.parent.postMessage('quit', '*');
                            break;
                        case 'quit_cancel':
                            return (this.quit_menu_shown = !1), this.createMainMenu();
                        case 'roomlink':
                            return (
                                this.roomlink.Ol11I(t('Copied!').toUpperCase()),
                                this.l1110.l00OO.copyRoomLink(),
                                setTimeout(
                                    (function (t) {
                                        return function () {
                                            var e;
                                            return (e = null != t.l1110.private_address ? 'starblast.io#' + t.l1110.private_address : 'starblast.io#' + t.l1110.systemid), t.roomlink.Ol11I(e);
                                        };
                                    })(this),
                                    1e3
                                )
                            );
                        case 'settings':
                            return (
                                this.l1110.l00OO.showSettings(),
                                (this.settings_shown = !0),
                                (this.l1110.l00OO.modal_close_callback = (function (t) {
                                    return function () {
                                        return (t.settings_shown = !1);
                                    };
                                })(this))
                            );
                        case 'resume':
                            return this.l1110.display.screen.lO100.toggleOptions();
                        case 'I0IO0':
                            return this.l1110.l00OO.toggleFullScreen(), this.l1110.display.screen.lO100.toggleOptions();
                    }
                }),
                (i.prototype.gamepadNavigation = function (t) {
                    if (this.settings_shown) return this.l1110.l00OO.gamepadNavigation(t), !0;
                    if ('menu' === t) return this.l1110.display.screen.lO100.toggleOptions(), !0;
                    if (this.shown)
                        switch (t) {
                            case 'up':
                                return (this.selected_index = (this.selected_index - 1 + this.buttons.length) % this.buttons.length), this.updateSelection(), !0;
                            case 'OOlO1':
                                return (this.selected_index = (this.selected_index + 1) % this.buttons.length), this.updateSelection(), !0;
                            case 'cancel':
                                return this.quit_menu_shown ? (this.createMainMenu(), (this.quit_menu_shown = !1)) : this.l1110.display.screen.lO100.toggleOptions(), !0;
                            case 'ok':
                                return this.selected_index < this.buttons.length && this.buttons[this.selected_index].OIOOI(), !0;
                        }
                    return !1;
                }),
                i
            );
        })(OO00l)),
        (this.GameMenuBackground = (function (e) {
            function i(t) {
                (this.l1110 = t), i.IO0OI.constructor.call(this), (this.hue = 0), (this.blending = THREE.AdditiveBlending);
            }
            return (
                extend(i, e),
                (i.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.lllO1 = function (e) {
                    var i;
                    return (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',50%,50%,.4)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (i = Math.round((20 * this.llO1l) / 512)), (e.font = i + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'left'), (e.fillStyle = this.color), e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), (e.fillStyle = this.medium), e.fillRect(0, 0.1 * this.llO1l, this.llO1l, 0.02 * this.llO1l), (e.fillStyle = this.background), e.fillRect(0, 0.12 * this.llO1l, this.llO1l, this.lO01I - 0.12 * this.llO1l), (e.fillStyle = this.color), (e.fillStyle = '#000'), e.fillText(t('Options'), 0.05 * this.llO1l, 0.05 * this.llO1l), e.restore();
                }),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.GameStats = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.credits = new GameStat('9', 'CREDITS', 0)), this.add(this.credits, [0.05, 0, 0.9, 0.25]), (this.credits.visible = !1), (this.kills = new GameStat('[', 'KILLS', 0)), this.add(this.kills, [0.05, 0.25, 0.9, 0.25]), (this.deaths = new GameStat('I', 'DEATHS', 0)), this.add(this.deaths, [0.05, 0.5, 0.9, 0.25]), (this.contribution = new GameStat('D', 'CONTRIBUTION', 0)), this.add(this.contribution, [0.05, 0.75, 0.9, 0.25]), (this.contribution.visible = !1);
            }
            return (
                extend(e, t),
                (e.prototype.OO0Il = function () {
                    if ((e.IO0OI.OO0Il.call(this), this.credits.setValue(this.l1110.weapons.credits), this.kills.setValue(this.l1110.Ill00.status.kills), this.deaths.setValue(this.l1110.Ill00.status.deaths), this.contribution.setValue(this.l1110.Ill00.status.contribution), this.l1110.Ill00.status.contribution > 0 && (this.contribution.visible = !0), this.l1110.weapons.credits > 0)) return (this.credits.visible = !0);
                }),
                e
            );
        })(OO00l)),
        (this.GameStat = (function (t) {
            function e(t, i, s) {
                (this.icon = t), (this.name = i), (this.value = s), e.IO0OI.constructor.call(this);
            }
            return (
                extend(e, t),
                (e.prototype.setValue = function (t) {
                    if (t !== this.value) return (this.value = t), (this.lO011 = !0);
                }),
                (e.prototype.lllO1 = function (t) {
                    return (this.color = 'rgba(255,255,255,.7)'), t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), (t.fillStyle = this.color), (t.textAlign = 'left'), (t.textBaseline = 'middle'), (t.font = Math.round(this.lO01I / 2) + 'pt SBGlyphs'), t.fillText(this.icon, 0, this.lO01I / 2), (t.font = Math.round(this.lO01I / 2) + 'pt Play'), t.fillText(this.name, this.lO01I, this.lO01I / 2), (t.textAlign = 'right'), t.fillText(this.value, this.llO1l, this.lO01I / 2), t.restore();
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.MenuButton = (function (t) {
            function e(t, i, s, l) {
                (this.l1110 = t), (this.menu = i), (this.name = s), (this.id = l), e.IO0OI.constructor.call(this, this), (this.hue = 0), (this.blending = THREE.AdditiveBlending), (this.OI0O0 = !1), (this.blinkon = !1);
            }
            return (
                extend(e, t),
                (e.prototype.Ol11I = function (t) {
                    return (this.name = t), (this.lO011 = !0);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',70%,40%,.05)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), t.fillStyle = this.medium, t.fillRect(0, 0, this.llO1l, this.lO01I), t.fillStyle = this.color, t.textAlign = 'center', t.textBaseline = 'middle', e = Math.round(this.lO01I / 3); ; ) {
                        if (((t.font = e + 'pt Play'), t.measureText(this.name).width < 0.8 * this.llO1l)) break;
                        e -= 1;
                    }
                    return t.fillText(this.name, this.llO1l / 2, this.lO01I / 2), this.blinkon && ((t.font = e + 'pt FontAwesome'), t.fillText('', this.lO01I / 2, this.lO01I / 2)), t.restore();
                }),
                (e.prototype.OIOOI = function () {
                    return this.menu.OIOOI(this.id);
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (e.prototype.OO0Il = function () {
                    var t;
                    if ((e.IO0OI.OO0Il.call(this), (t = !!this.OI0O0 && Date.now() % 600 < 300) !== this.blinkon)) return (this.blinkon = t), (this.lO011 = !0);
                }),
                e
            );
        })(l1I1l)),
        (this.MobileMenuButton = (function (t) {
            function e(t, i, s, l, n) {
                (this.l1110 = t), (this.menu = i), (this.name = s), (this.icon = l), (this.id = n), e.IO0OI.constructor.call(this, this), (this.hue = 0), (this.blending = THREE.AdditiveBlending), (this.OI0O0 = !1), (this.blinkon = !1);
            }
            return (
                extend(e, t),
                (e.prototype.Ol11I = function (t) {
                    return (this.name = t), (this.lO011 = !0);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',70%,40%,.05)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', t.save(), t.translate(this.px, this.l1O1l), t.clearRect(0, 0, this.llO1l, this.lO01I), t.fillStyle = this.medium, t.fillRect(0, 0, this.llO1l, this.lO01I), t.fillStyle = this.color, t.textAlign = 'center', t.textBaseline = 'middle', e = Math.round(this.lO01I / 9); ; ) {
                        if (((t.font = e + 'pt Play'), t.measureText(this.name).width < 0.8 * this.llO1l)) break;
                        e -= 1;
                    }
                    return t.fillText(this.name, this.llO1l / 2, 0.875 * this.lO01I), (t.font = 2.5 * e + 'pt SBGlyphs'), t.fillText(this.icon, this.llO1l / 2, 0.375 * this.lO01I), this.blinkon && ((t.font = e + 'pt FontAwesome'), t.fillText('', this.lO01I / 2, this.lO01I / 2)), t.restore();
                }),
                (e.prototype.OIOOI = function () {
                    return this.menu.OIOOI(this.id);
                }),
                (e.prototype.setHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (e.prototype.OO0Il = function () {
                    var t;
                    if ((e.IO0OI.OO0Il.call(this), (t = !!this.OI0O0 && Date.now() % 600 < 300) !== this.blinkon)) return (this.blinkon = t), (this.lO011 = !0);
                }),
                e
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ShipTree = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.used_ships = []), (this.last_ship = 0), (this.ship_types = OI1I1);
            }
            return (
                extend(e, t),
                (e.prototype.OO0Il = function () {
                    if ((e.IO0OI.OO0Il.call(this), this.l1110.Ill00.type.code !== this.last_ship && null != OI1I1.types_by_code[this.l1110.Ill00.type.code])) return (this.last_ship = this.l1110.Ill00.type.code), this.used_ships.push(this.last_ship), (this.lO011 = !0);
                }),
                (e.prototype.addShipType = function (t) {
                    var e, i, s, l;
                    if (null == this.ship_types.types_by_code[t.code]) for (this.ship_types.add(t), s = OI1I1.next(t), e = 0, i = s.length; e < i; e++) (l = s[e]), this.addShipType(l);
                }),
                (e.prototype.createShipTypes = function (t) {
                    var e;
                    return (this.ship_types = new Ol1O1()), (e = OI1I1.types_by_code[t]), this.addShipType(e);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L;
                    if ('battleroyale' !== this.l1110.mode.id && 0 !== this.used_ships.length) {
                        for (t.save(), t.translate(this.px, this.l1O1l), t.fillStyle = '#111', this.ships = [], this.ships_by_code = {}, y = this.ship_types.levels.length - 1, I = this.lO01I / y, m = 0, l = n = 1, E = y; n <= E; l = n += 1) if (null != this.ship_types.levels[l]) for (m = Math.max(m, this.ship_types.levels[l].length), _ = this.ship_types.levels[l], a = 0, r = _.length; a < r; a++) (j = _[a]), (D = { code: j.code, reachable: !1 }), this.ships.push(D), (this.ships_by_code[j.code] = D);
                        for (l = o = 0, z = y - 1; o <= z; l = o += 1) t.fillRect(0, 1 + l * I, this.llO1l, I - 2);
                        for (e = Math.min(I, this.llO1l / m), C = 0.7 * e, this.l1110.is_mobile_app && (C = 0.9 * e), l = O = 0, M = y - 1; O <= M; l = O += 1) if (null != this.ship_types.levels[l + 1]) for (s = this.lO01I - I / 2 - l * I, b = this.llO1l / 2 - ((this.ship_types.levels[l + 1].length - 1) * e) / 2, T = this.ship_types.levels[l + 1], L = f = 0, h = T.length; f < h; L = ++f) (G = T[L]), (this.ships_by_code[G.code].x = b + L * e), (this.ships_by_code[G.code].y = s), (this.ships_by_code[G.code].size = C);
                        for (
                            H = (function (t) {
                                return function (e) {
                                    var i, s, l;
                                    if (null != t.ships_by_code[e]) for (t.ships_by_code[e].reachable = !0, s = t.ship_types.next(t.ship_types.types_by_code[e]), l = 0, i = s.length; l < i; l++) (j = s[l]), H(j.code);
                                };
                            })(this),
                                this.last_ship > 0 && H(this.last_ship),
                                S = this.used_ships,
                                v = 0,
                                u = S.length;
                            v < u;
                            v++
                        )
                            (i = S[v]), null != this.ships_by_code[i] && (this.ships_by_code[i].reachable = !0);
                        for (R = this.ships, w = 0, d = R.length; w < d; w++) for (D = R[w], g = this.ship_types.next(this.ship_types.types_by_code[D.code]), x = 0, c = g.length; x < c; x++) (G = g[x]), (A = this.ships_by_code[G.code]), this.used_ships.indexOf(G.code) >= 0 && this.used_ships.indexOf(D.code) >= 0 ? ((t.strokeStyle = '#FFF'), (t.lineWidth = 5)) : A.reachable && D.reachable ? ((t.strokeStyle = '#333'), (t.lineWidth = 3)) : ((t.strokeStyle = '#000'), (t.lineWidth = 3)), t.beginPath(), t.moveTo(D.x, D.y), t.lineTo(A.x, A.y), t.stroke();
                        for (P = this.ships, k = 0, p = P.length; k < p; k++) (D = P[k]), this.drawShip(D.code, t, D.x, D.y, D.size, D.reachable);
                        return t.restore();
                    }
                }),
                (e.prototype.drawShip = function (t, e, i, s, l, n) {
                    var a;
                    return (a = lIl1O.getShipIcon(t)), (e.fillStyle = '#333'), e.beginPath(), e.arc(i, s, l / 2, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.closePath(), e.fill(), this.used_ships.indexOf(t) >= 0 ? ((e.strokeStyle = '#FFF'), (e.lineWidth = 3), e.stroke()) : n ? ((e.strokeStyle = '#666'), (e.lineWidth = 2)) : ((e.strokeStyle = '#000'), (e.lineWidth = 2), e.stroke()), this.l1110.is_mobile_app || (l *= 0.8), this.used_ships.indexOf(t) >= 0 ? e.drawImage(a, i - l / 2, s - l / 2, l, l) : n ? ((e.globalAlpha = 0.75), e.drawImage(a, i - l / 2, s - l / 2, l, l), (e.globalAlpha = 1)) : ((e.globalCompositeOperation = 'destination-out'), e.drawImage(a, i - l / 2, s - l / 2, l, l), (e.globalCompositeOperation = 'source-over'));
                }),
                e
            );
        })(OllI0)),
        (this.Explosions = (function () {
            function t(t, e) {
                var i, s, l;
                for (this.lIlO0 = t, this.size = null != e ? e : 2e3, this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-2e4, -2e4, -2e4), new THREE.Vector3(2e4, 2e4, 2e4)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 4e4), this.vertices = new Float32Array(3 * this.size), this.time = new Float32Array(this.size), this.speed = new Float32Array(3 * this.size), this.OlIIO = new Float32Array(this.size), this.opac = new Float32Array(this.size), this.OIOl1 = new I010I(), this.index = 0, this.OII1l = Date.now(), i = s = 0, l = this.size - 1; s <= l; i = s += 1) (this.vertices[3 * i] = 0), (this.vertices[3 * i + 1] = 900), (this.vertices[3 * i + 2] = 0), (this.speed[3 * i] = 0), (this.speed[3 * i + 1] = 0), (this.speed[3 * i + 2] = 0), (this.time[i] = 0), (this.OlIIO[i] = 10), (this.opac[i] = 1);
                this.l10lI(), (this.OOOI1 = new THREE.PointLight(16736256, 0, 100, 0.5)), this.OOOI1.position.set(0, 0, 2);
            }
            return (
                (t.prototype.explode = function (t, e, i, s, l) {
                    var n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                    if ((null == s && (s = 1), null == l && (l = 0), (s = Math.min(25, s)), null != this.lIlO0.I1000 && ((o = Math.abs(this.lIlO0.I1000.position.x - t)), (r = Math.abs(this.lIlO0.I1000.position.y - e)), (o = Math.min(o, this.lIlO0.l1110.size - o)), (r = Math.min(r, this.lIlO0.l1110.size - r)), !(o > 32 * (2 + 0.1 * s) || r > 18 * (2 + 0.1 * s))))) {
                        for (s > 2 * this.OOOI1.intensity && (this.OOOI1.position.set(t, e, 2), (this.OOOI1.intensity = s)), d = Math.min(this.size, Math.round(25 * Math.pow(s, 2))), p = (0.6 * s * this.lIlO0.height) / 1e3 / this.lIlO0.IO11l.I1000.zoom, I = 5 * s, u = 1e3 * Math.random(), h = 0, c = d; h <= c; h += 1) (this.vertices[3 * this.index] = t + 1 * (Math.random() - 0.5)), (this.vertices[3 * this.index + 1] = e + 1 * (Math.random() - 0.5)), (this.vertices[3 * this.index + 2] = l), (a = 2 * Math.random() * (180 * THREE.Math.DEG2RAD)), (m = Math.cos(a)), (f = Math.sin(a)), (O = Math.pow(Math.random(), 0.5) * I * Math.pow(this.OIOl1.IlOI1(u + 3 * m, 3 * f, 3), 2) * 2), (m *= O), (f *= O), (g = 5 * O * Math.random()), null !== i && ((n = 4 * (Math.random() - 0)), (m += O * n * Math.cos(i)), (f += O * n * Math.sin(i))), (this.speed[3 * this.index] = m), (this.speed[3 * this.index + 1] = f), (this.speed[3 * this.index + 2] = g), (this.time[this.index] = this.material.uniforms.llIl1.value + (1 + 5 * Math.random()) / 60), (this.OlIIO[this.index] = (10 + 10 * Math.random()) * p), (this.opac[this.index] = 1), (this.index = (this.index + 1 + Math.floor(3 * Math.random())) % this.size);
                        this.lIlO0.l1110.settings.check('explolight') && ((this.vertices[3 * this.index] = t), (this.vertices[3 * this.index + 1] = e), (this.vertices[3 * this.index + 2] = 0), (this.speed[3 * this.index] = 0), (this.speed[3 * this.index + 1] = 0), (this.speed[3 * this.index + 2] = 0), (this.time[this.index] = this.material.uniforms.llIl1.value + 1 / 60), (this.OlIIO[this.index] = Math.min(250 * p, this.lIlO0.height / 3)), (this.opac[this.index] = 0.25), (this.index = (this.index + 1 + Math.floor(3 * Math.random())) % this.size)), this.updateBuffers(!0);
                    }
                }),
                (t.prototype.blast = function (t, e, i, s) {
                    var l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                    if ((null == i && (i = 1), null == s && (s = 0), (i = Math.min(25, i)), null != this.lIlO0.I1000 && ((n = Math.abs(this.lIlO0.I1000.position.x - t)), (a = Math.abs(this.lIlO0.I1000.position.y - e)), (n = Math.min(n, this.lIlO0.l1110.size - n)), (a = Math.min(a, this.lIlO0.l1110.size - a)), !(n > 32 * (2 + 0.1 * i) || a > 18 * (2 + 0.1 * i))))) {
                        for (i > 2 * this.OOOI1.intensity && (this.OOOI1.position.set(t, e, 2), (this.OOOI1.intensity = i)), h = Math.min(this.size, Math.round(25 * Math.pow(i, 2))), c = (0.6 * i * this.lIlO0.height) / 1e3 / this.lIlO0.IO11l.I1000.zoom, p = 5 * i, r = 1e3 * Math.random(), o = 0, u = h; o <= u; o += 1) (this.vertices[3 * this.index] = t + 1 * (Math.random() - 0.5)), (this.vertices[3 * this.index + 1] = e + 1 * (Math.random() - 0.5)), (this.vertices[3 * this.index + 2] = s), (l = 2 * Math.random() * (180 * THREE.Math.DEG2RAD)), (O = Math.cos(l)), (m = Math.sin(l)), (d = Math.random()), d < 0.1 ? ((m = 0), (O = Math.random() < 0.5 ? 1 : -1), (I = Math.pow(Math.random(), 1) * p * 4), (this.OlIIO[this.index] = (10 + 10 * Math.random()) * c), (f = 0)) : d < 0.6 ? ((I = Math.pow(Math.random(), 0.01) * p * 2), (this.OlIIO[this.index] = (10 + 10 * Math.random()) * c), (f = 0)) : ((this.OlIIO[this.index] = (10 + 10 * Math.random()) * c), (I = Math.pow(Math.random(), 0.5) * p * Math.pow(this.OIOl1.IlOI1(r + 3 * O, 3 * m, 3), 2) * 2), (f = 5 * I * Math.random())), (O *= I), (m *= I), (this.speed[3 * this.index] = O), (this.speed[3 * this.index + 1] = m), (this.speed[3 * this.index + 2] = f), (this.time[this.index] = this.material.uniforms.llIl1.value + (1 + 5 * Math.random()) / 60), (this.opac[this.index] = 1), (this.index = (this.index + 1 + Math.floor(3 * Math.random())) % this.size);
                        this.lIlO0.l1110.settings.check('explolight') && ((this.vertices[3 * this.index] = t), (this.vertices[3 * this.index + 1] = e), (this.vertices[3 * this.index + 2] = 0), (this.speed[3 * this.index] = 0), (this.speed[3 * this.index + 1] = 0), (this.speed[3 * this.index + 2] = 0), (this.time[this.index] = this.material.uniforms.llIl1.value + 1 / 60), (this.OlIIO[this.index] = Math.min(250 * c, this.lIlO0.height / 3)), (this.opac[this.index] = 0.25), (this.index = (this.index + 1 + Math.floor(3 * Math.random())) % this.size)), this.updateBuffers(!0);
                    }
                }),
                (t.prototype.buffersNeedUpdate = function () {
                    this.buffers_need_update ||
                        ((this.buffers_need_update = !0),
                        this.lIlO0.l1110.display.addJob(
                            1,
                            (function (t) {
                                return function () {
                                    return t.updateBuffers();
                                };
                            })(this)
                        ));
                }),
                (t.prototype.updateBuffers = function (t) {
                    if ((null == t && (t = !1), t || this.buffers_need_update)) return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('speed').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('opac').needsUpdate = !0), (this.buffers_need_update = !1);
                }),
                (t.prototype.l1O0l = function (t) {
                    return (t = Date.now()), (this.material.uniforms.llIl1.value = (t - this.OII1l) / 1e3), (this.OOOI1.intensity *= 0.98), (this.OOOI1.visible = this.lIlO0.l1110.settings.check('explolight')), (this.OOOI1.position.x = this.lIlO0.I1000.position.x + Math.fmod(this.OOOI1.position.x - this.lIlO0.I1000.position.x + this.lIlO0.l1110.l0I1I, this.lIlO0.l1110.size) - this.lIlO0.l1110.l0I1I), (this.OOOI1.position.y = this.lIlO0.I1000.position.y + Math.fmod(this.OOOI1.position.y - this.lIlO0.I1000.position.y + this.lIlO0.l1110.l0I1I, this.lIlO0.l1110.size) - this.lIlO0.l1110.l0I1I);
                }),
                (t.prototype.l10lI = function () {
                    var t, e, i, s;
                    return (s = 'attribute vec3 speed;\nattribute float OlIIO;\nattribute float time;\nuniform float llIl1;\nvarying float toffset;\nvarying float opacity ;\nattribute float opac ;\nuniform float system_size;\n\nvoid main() {\n  float t = max(0.0,llIl1-time)*pow(opac,.5) ;\n  toffset = floor(t*32.0/1.0);\n  float t2 = 1.0-exp(-t*2.0) ;\n  vec4 mvPosition = modelViewMatrix * vec4(position+speed*t2, 1.0);\n  mvPosition.x = mod(mvPosition.x+system_size*.5,system_size)-system_size*.5;\n  mvPosition.y = mod(mvPosition.y+system_size*.5,system_size)-system_size*.5;\n  gl_Position = projectionMatrix * mvPosition ;\n  gl_PointSize = OlIIO*max(0.0,1.0-t);\n  opacity = clamp(gl_PointSize,0.0,1.0)*opac;\n}'), (t = 'varying float toffset;\nvarying float opacity;\nuniform sampler2D texture;\n\nvoid main() {\n  gl_FragColor = texture2D(texture,(gl_PointCoord+vec2(toffset,0.0))/vec2(32.0,1.0));\n//  gl_FragColor = texture2D(texture,vec2((gl_PointCoord.x+toffset)/32.0,gl_PointCoord.y));\n  gl_FragColor.w *= opacity;\n//  float len = length(gl_PointCoord-vec2(.5,.5))*2.0;\n\n//  gl_FragColor = vec4(1.0,1.0,1.0,(1.0-len)*opacity);\n}'), (e = this.createTexture()), (i = { texture: { type: 't', value: e }, llIl1: { type: 'f', value: (Date.now() - this.OII1l) / 1e3 }, system_size: { type: 'f', value: this.lIlO0.l1110.size } }), (this.material = new THREE.ShaderMaterial({ uniforms: i, vertexShader: s, fragmentShader: t, transparent: !0, depthWrite: !1, depthTest: !1, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('time', new THREE.BufferAttribute(this.time, 1)), this.geometry.addAttribute('speed', new THREE.BufferAttribute(this.speed, 3)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), this.geometry.addAttribute('opac', new THREE.BufferAttribute(this.opac, 1)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.position.z = 0);
                }),
                (t.prototype.createTextureTest = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                    for (t = document.createElement('canvas'), t.width = 1024, t.height = 1024, e = t.getContext('2d'), p = new I010I(), s = e.getImageData(0, 0, 32, 32), O = h = 0; h <= 31; O = h += 1)
                        for (m = u = 0; u <= 31; m = u += 1) {
                            for (o = d = 0; d <= 31; o = d += 1) for (r = c = 0; c <= 31; r = c += 1) (l = (o - 15.5) / 15.5), (n = (r - 15.5) / 15.5), (i = Math.max(0, 1 - (l * l + n * n))), (i = Math.pow(i, 2) * (1 - 1.2 * p.OO01O(10 * m + 2 * l, 2 * n, (O / 32) * 4, 6))), (s.data[4 * (32 * r + o)] = 255), (s.data[4 * (32 * r + o) + 1] = 255), (s.data[4 * (32 * r + o) + 2] = 255), (s.data[4 * (32 * r + o) + 3] = 255 * i);
                            e.putImageData(s, 32 * O, 32 * m);
                        }
                    return (e.globalCompositeOperation = 'source-in'), (a = e.createLinearGradient(0, 0, 1024, 0)), a.addColorStop(0, '#F82'), a.addColorStop(0.2, '#400'), a.addColorStop(0.5, '#333'), a.addColorStop(1, '#000'), (e.fillStyle = a), e.fillRect(0, 0, 1024, 1024), (I = new THREE.Texture(t)), (I.minFilter = THREE.LinearFilter), (I.wrapS = I.wrapT = THREE.RepeatWrapping), (I.needsUpdate = !0), I;
                }),
                (t.prototype.createTexture = function () {
                    var t, e, i, s, l, n;
                    for (t = document.createElement('canvas'), t.width = 1024, t.height = 32, e = t.getContext('2d'), e.scale(t.width / 32, t.height), e.translate(0.5, 0.5), s = l = 0; l <= 31; s = l += 1) (i = e.createRadialGradient(s, 0, 0, s, 0, 0.5)), i.addColorStop(0, 'rgba(255,255,255,1)'), i.addColorStop(1, 'rgba(255,128,16,0)'), (e.fillStyle = i), e.beginPath(), e.arc(s, 0, 0.5, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.fill();
                    return (e.globalCompositeOperation = 'source-in'), (i = e.createLinearGradient(0, 0, 32, 0)), i.addColorStop(0, '#F82'), i.addColorStop(0.2, '#400'), i.addColorStop(0.5, '#333'), i.addColorStop(1, '#000'), (e.fillStyle = i), e.fillRect(-0.5, -0.5, 32, 1), (n = new THREE.Texture(t)), (n.minFilter = THREE.LinearFilter), (n.wrapS = n.wrapT = THREE.RepeatWrapping), (n.needsUpdate = !0), n;
                }),
                t
            );
        })()),
        (this.ll000 = (function () {
            function t() {}
            return (
                (t.createTexture = function () {
                    var e, i, s, l, n, a, o, r;
                    for (e = document.createElement('canvas'), e.width = 2048, e.height = 1024, this.shapes = [], this.shapes.push(t.shape1()), this.shapes.push(t.shape2()), this.shapes.push(t.shape3()), this.shapes.push(t.shape4()), this.shapes.push(t.shape5()), this.shapes.push(t.shape6()), this.shapes.push(t.shape7()), i = e.getContext('2d'), i.translate(0, e.height), i.scale(e.width / 8, -e.width / 8), i.translate(0.5, 0.5), i.scale(0.5, 0.5), l = [0.5, 0.1, 0.04, 0.1, 0.5], o = this.shapes, s = n = 0, a = o.length; n < a; s = ++n) (r = o[s]), i.save(), i.translate((s % 5) * 3, 3 * Math.floor(s / 5)), this.drawGradient(i, l[s], s), this.drawLaser(i, r), i.restore();
                    return e;
                }),
                (t.drawGradient = function (t, e, i) {
                    var s;
                    if ((null == e && (e = 0.5), null == i && (i = 0), (s = t.createRadialGradient(0, 0, 0, 0, 0, 1)), s.addColorStop(0, 'hsla(10,100%,100%,' + e + ')'), s.addColorStop(1, 'hsla(10,100%,100%,0)'), (t.fillStyle = s), t.fillRect(-1, -1, 2, 2), 1 === i)) return (t.fillStyle = '#000'), t.fillRect(-1, -0.025, 2, 0.05);
                }),
                (t.getShape = function (t) {
                    switch (t) {
                        case 3:
                            return this.shape4();
                        case 1:
                            return this.shape2();
                        case 2:
                            return this.shape3();
                        default:
                            return this.shape1();
                    }
                }),
                (t.shape1 = function () {
                    var t, e, i, s, l, n;
                    for (s = [], e = i = 0; i <= 20; e = i += 1) (t = (e / 20) * (180 * THREE.Math.DEG2RAD) * 2), (l = Math.cos(t)), (n = Math.sin(t)), (l = l < 0 ? -Math.sqrt(-l) : Math.sqrt(l)), (n = n < 0 ? -Math.sqrt(-n) : Math.sqrt(n)), s.push([l, n / 3]);
                    return [s];
                }),
                (t.shape2 = function () {
                    var t, e, i, s, l, n, a, o;
                    for ([], l = [], e = i = 0; i <= 20; e = i += 1) (t = (e / 20) * (180 * THREE.Math.DEG2RAD) * 2), (a = Math.cos(t)), (o = Math.sin(t)), (a = a < 0 ? -Math.sqrt(-a) : Math.sqrt(a)), (o = o < 0 ? -1 : Math.sqrt(o)), l.push([1.4 * a, 0.2 + o / 10]);
                    for (n = [], e = s = 0; s <= 20; e = s += 1) (t = (e / 20) * (180 * THREE.Math.DEG2RAD) * 2), (a = Math.cos(t)), (o = Math.sin(t)), (a = a < 0 ? -Math.sqrt(-a) : Math.sqrt(a)), (o = o < 0 ? -Math.sqrt(-o) : 1), n.push([1.4 * a, o / 10 - 0.2]);
                    return [l, n];
                }),
                (t.shape3 = function () {
                    return [
                        [
                            [2, 0],
                            [1, 0.1],
                            [0.55, 0.8],
                            [0.35, -0.1],
                            [0.05, 0.8],
                            [-0.25, -0.1],
                            [-0.55, 0.8],
                            [-1, 0.1],
                            [-2, 0],
                            [-1, -0.1],
                            [-0.85, -0.8],
                            [-0.55, 0.1],
                            [-0.25, -0.8],
                            [0.05, 0.1],
                            [0.35, -0.8],
                            [0.55, 0.1],
                            [0.75, -0.8],
                            [1, -0.1],
                            [2, 0],
                        ],
                    ];
                }),
                (t.shape4 = function () {
                    return [
                        [
                            [1.4, -0.6],
                            [1.1, -0.6],
                            [1.1, 0.6],
                            [1.4, 0.6],
                        ],
                        [
                            [0.55, -0.6],
                            [0.25, -0.6],
                            [0.25, 0.6],
                            [0.55, 0.6],
                        ],
                        [
                            [-0.55, -0.6],
                            [-0.25, -0.6],
                            [-0.25, 0.6],
                            [-0.55, 0.6],
                        ],
                        [
                            [-1.4, -0.6],
                            [-1.1, -0.6],
                            [-1.1, 0.6],
                            [-1.4, 0.6],
                        ],
                    ];
                }),
                (t.shape5 = function () {
                    var t, e, i, s, l, n, a, o;
                    for (n = [], t = [0, 70, 90, 110, 180, 250, 270, 290, 360], s = [1, 1, 0.7, 1, 1, 1, 0.7, 1, 1], e = i = 0, l = s.length - 1; i <= l; e = i += 1) (a = Math.cos((t[e] * (180 * THREE.Math.DEG2RAD)) / 180) * s[e]), (o = Math.sin((t[e] * (180 * THREE.Math.DEG2RAD)) / 180) * s[e]), n.push([a, o / 2]);
                    return [n];
                }),
                (t.shape6 = function () {
                    return [
                        [
                            [2, 0.4],
                            [2, -0.4],
                            [-2, -0.4],
                            [-2, 0.4],
                        ],
                        [
                            [0.4, 2],
                            [0.4, -2],
                            [-0.4, -2],
                            [-0.4, 2],
                        ],
                    ];
                }),
                (t.shape7 = function () {
                    var t, e, i, s, l, n;
                    for (s = [], e = i = 0; i <= 20; e = i += 1) (t = (e / 20) * (180 * THREE.Math.DEG2RAD) * 2), (l = Math.cos(t)), (n = Math.sin(t)), s.push([l, n]);
                    return [s];
                }),
                (t.drawLaser = function (t, e) {
                    var i, s, l, n, a, o, r, h;
                    for (i = t.createRadialGradient(0, 0, 0, 0, 0, 0.3), i.addColorStop(0, 'rgba(255,255,255,1)'), i.addColorStop(1, 'rgba(255,255,255,.5)'), t.fillStyle = i, r = [], s = 0, n = e.length; s < n; s++) {
                        for (h = e[s], t.beginPath(), l = 0, a = h.length; l < a; l++) (o = h[l]), t.lineTo(0.3 * o[0], 0.3 * o[1]);
                        t.closePath(), r.push(t.fill());
                    }
                    return r;
                }),
                t
            );
        })()),
        (this.Laserticles = (function () {
            function t(t, e) {
                var i, s, l;
                for (this.lIlO0 = t, this.size = null != e ? e : 2e3, this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-2e4, -2e4, -2e4), new THREE.Vector3(2e4, 2e4, 2e4)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 4e4), this.vertices = new Float32Array(3 * this.size), this.time = new Float32Array(this.size), this.speed = new Float32Array(2 * this.size), this.speedratio = new Float32Array(this.size), this.angle = new Float32Array(this.size), this.color = new Float32Array(3 * this.size), this.OlIIO = new Float32Array(this.size), this.type = new Float32Array(this.size), this.opac = new Float32Array(this.size), this.OI11O = new Float32Array(this.size), this.core_size = 500, this.trail_size = this.size - this.core_size, this.index = this.core_size, this.core_index = 0, this.OII1l = Date.now(), i = s = 0, l = this.size - 1; s <= l; i = s += 1) (this.vertices[3 * i] = 0), (this.vertices[3 * i + 1] = 0), (this.vertices[3 * i + 2] = 1e3), (this.OlIIO[i] = 1), (this.opac[i] = 0);
                this.l10lI(), (this.lasers = []);
            }
            return (
                (t.prototype.OI00O = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c;
                    switch (((t.core_index = this.core_index), (t.index = this.index), (this.vertices[3 * this.core_index] = t.x), (this.vertices[3 * this.core_index + 1] = t.y), (this.vertices[3 * this.core_index + 2] = t.z), (d = ((t.IOllI >> 16) & 255) / 255), (l = ((t.IOllI >> 8) & 255) / 255), (e = (255 & t.IOllI) / 255), (this.color[3 * this.core_index] = d), (this.color[3 * this.core_index + 1] = l), (this.color[3 * this.core_index + 2] = e), (this.speed[2 * this.core_index] = t.lllOl), (this.speed[2 * this.core_index + 1] = t.II110), (this.angle[this.core_index] = t.angle), (this.time[this.core_index] = t.OOI0l), (this.speedratio[this.core_index] = t.speed / 100), (this.OlIIO[this.core_index] = (((60 * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / this.lIlO0.IO11l.I1000.zoom), (this.opac[this.core_index] = 0.1), (this.OI11O[this.core_index] = t.OI11O / 60), (this.type[this.core_index] = t.type), (this.core_index = (this.core_index + 1) % this.core_size), (i = Math.cos(t.angle)), (c = Math.sin(t.angle)), t.type)) {
                        case 1:
                            for (n = a = 1; a <= 9; n = a += 1) (this.vertices[3 * this.index] = t.x), (this.vertices[3 * this.index + 1] = t.y), (this.vertices[3 * this.index + 2] = t.z), (this.color[3 * this.index] = d), (this.color[3 * this.index + 1] = l), (this.color[3 * this.index + 2] = e), (this.speed[2 * this.index] = t.lllOl), (this.speed[2 * this.index + 1] = t.II110), (this.angle[this.index] = t.angle + 0 * (Math.random() - 0.5)), (this.time[this.index] = t.OOI0l), (this.opac[this.index] = 0.5), (this.OI11O[this.index] = t.OI11O / 60), (this.type[this.index] = t.type), (this.speedratio[this.index] = (t.speed / 100) * (1 - n / 100)), (this.OlIIO[this.index] = (((60 * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / this.lIlO0.IO11l.I1000.zoom), (this.index = ((this.index - this.core_size + 1) % this.trail_size) + this.core_size);
                            break;
                        case 2:
                            for (n = o = 1; o <= 9; n = o += 1) (this.vertices[3 * this.index] = t.x), (this.vertices[3 * this.index + 1] = t.y), (this.vertices[3 * this.index + 2] = t.z), (this.color[3 * this.index] = d), (this.color[3 * this.index + 1] = l), (this.color[3 * this.index + 2] = e), (this.speed[2 * this.index] = t.lllOl), (this.speed[2 * this.index + 1] = t.II110), (this.angle[this.index] = t.angle + 0 * (Math.random() - 0.5)), (this.time[this.index] = t.OOI0l), (this.opac[this.index] = 0.5), (this.OI11O[this.index] = t.OI11O / 60), (this.type[this.index] = t.type), (this.speedratio[this.index] = (t.speed / 100) * (1 - n / 60)), (this.OlIIO[this.index] = (((60 * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / Math.pow(this.lIlO0.IO11l.I1000.zoom, 1 - n / 25)), (this.index = ((this.index - this.core_size + 1) % this.trail_size) + this.core_size);
                            break;
                        case 3:
                            for (n = r = 1; r <= 9; n = r += 1) (this.vertices[3 * this.index] = t.x), (this.vertices[3 * this.index + 1] = t.y), (this.vertices[3 * this.index + 2] = t.z), (this.color[3 * this.index] = d), (this.color[3 * this.index + 1] = l), (this.color[3 * this.index + 2] = e), (this.speed[2 * this.index] = t.lllOl), (this.speed[2 * this.index + 1] = t.II110), (this.angle[this.index] = t.angle + 0 * (Math.random() - 0.5)), (this.time[this.index] = t.OOI0l), (this.opac[this.index] = 0.5), (this.OI11O[this.index] = t.OI11O / 60), (this.type[this.index] = t.type), (this.speedratio[this.index] = (t.speed / 100) * (1 - n / 60)), (this.OlIIO[this.index] = (((60 * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / this.lIlO0.IO11l.I1000.zoom), (this.index = ((this.index - this.core_size + 1) % this.trail_size) + this.core_size);
                            break;
                        case 4:
                        case 6:
                            for (n = h = 1; h <= 19; n = h += 1) (s = Math.random()), (this.vertices[3 * this.index] = t.x + 0.1 * (Math.random() - 0.5)), (this.vertices[3 * this.index + 1] = t.y + 0.1 * (Math.random() - 0.5)), (this.vertices[3 * this.index + 2] = t.z), (this.color[3 * this.index] = d), (this.color[3 * this.index + 1] = l), (this.color[3 * this.index + 2] = e), (this.speed[2 * this.index] = t.lllOl), (this.speed[2 * this.index + 1] = t.II110), (this.angle[this.index] = t.angle + 0.025 * (Math.random() - 0.5)), (this.time[this.index] = t.OOI0l), (this.opac[this.index] = 0.2), (this.OI11O[this.index] = t.OI11O / 60), (this.type[this.index] = t.type), (this.speedratio[this.index] = (Math.pow(Math.random(), 0.1) * t.speed) / 100), (this.OlIIO[this.index] = (((0.25 * Math.pow(Math.random(), 1) * 60 * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / this.lIlO0.IO11l.I1000.zoom), (this.index = ((this.index - this.core_size + 1) % this.trail_size) + this.core_size);
                            break;
                        default:
                            for (n = u = 1; u <= 19; n = u += 1) (s = Math.random()), (this.vertices[3 * this.index] = t.x - s * i), (this.vertices[3 * this.index + 1] = t.y - s * c), (this.vertices[3 * this.index + 2] = t.z), (this.color[3 * this.index] = d), (this.color[3 * this.index + 1] = l), (this.color[3 * this.index + 2] = e), (this.speed[2 * this.index] = t.lllOl), (this.speed[2 * this.index + 1] = t.II110), (this.angle[this.index] = t.angle + 0 * (Math.random() - 0.5)), (this.time[this.index] = t.OOI0l), (this.opac[this.index] = 1), (this.OI11O[this.index] = t.OI11O / 60), (this.type[this.index] = t.type), (this.speedratio[this.index] = (Math.pow(Math.random(), 0.05) * t.speed) / 100), (this.OlIIO[this.index] = (((15 * Math.random() * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / this.lIlO0.IO11l.I1000.zoom), (this.index = ((this.index - this.core_size + 1) % this.trail_size) + this.core_size);
                    }
                    return this.updateBuffers(!0);
                }),
                (t.prototype.kill = function (t, e, i, s) {
                    var l, n, a, o, r;
                    for (o = 18, t.type > 0 && t.type < 4 && (o = 8), this.vertices[3 * t.core_index + 2] = 1e3, l = a = 0, r = o; a <= r; l = a += 1) (n = ((t.index + l - this.core_size) % this.trail_size) + this.core_size), Math.random(), (this.vertices[3 * n] = e), (this.vertices[3 * n + 1] = i), (this.vertices[3 * n + 2] = 3), (this.speed[2 * n] = 0), (this.speed[2 * n + 1] = 0), s || 6 === t.type ? (this.angle[n] = t.angle + 2 * (Math.random() - 0.5) + 180 * THREE.Math.DEG2RAD) : (this.angle[n] = t.angle + 1 * (Math.random() - 0.5)), (this.time[n] = this.lIlO0.IO11l.II1O0), (this.opac[n] = 1), (this.OI11O[n] = t.OI11O / 120), (this.speedratio[n] = (t.speed / 100) * Math.random() * 0.4), (this.OlIIO[n] = (((45 * Math.random() * this.lIlO0.height) / 1e3) * Math.pow(t.damage / 10, 0.75)) / this.lIlO0.IO11l.I1000.zoom), 6 === t.type && ((this.type[n] = 5), (this.opac[n] = 0.2), (this.speedratio[n] *= 0.5));
                    return this.updateBuffers(!0);
                }),
                (t.prototype.buffersNeedUpdate = function () {
                    this.buffers_need_update ||
                        ((this.buffers_need_update = !0),
                        this.lIlO0.l1110.display.addJob(
                            2,
                            (function (t) {
                                return function () {
                                    return t.updateBuffers();
                                };
                            })(this)
                        ));
                }),
                (t.prototype.updateBuffers = function (t) {
                    if ((null == t && (t = !1), t || this.buffers_need_update)) return (this.geometry.getAttribute('position').needsUpdate = !0), (this.geometry.getAttribute('speed').needsUpdate = !0), (this.geometry.getAttribute('time').needsUpdate = !0), (this.geometry.getAttribute('angle').needsUpdate = !0), (this.geometry.getAttribute('speedratio').needsUpdate = !0), (this.geometry.getAttribute('OlIIO').needsUpdate = !0), (this.geometry.getAttribute('type').needsUpdate = !0), (this.geometry.getAttribute('color').needsUpdate = !0), (this.geometry.getAttribute('opac').needsUpdate = !0), (this.geometry.getAttribute('OI11O').needsUpdate = !0), (this.buffers_need_update = !1);
                }),
                (t.prototype.l1O0l = function (t) {
                    return (this.material.uniforms.llIl1.value = t);
                }),
                (t.prototype.l10lI = function () {
                    var t, e, i, s;
                    return (s = 'attribute vec2 speed;\nattribute float OlIIO;\nattribute float time;\nattribute float angle;\nattribute float speedratio;\nattribute vec3 color ;\nattribute float opac ;\nattribute float type ;\n\nattribute float OI11O ;\n\nuniform float llIl1;\nvarying float opacity ;\nuniform float system_size;\nvarying vec3 IOllI ;\nvarying float co ;\nvarying float si ;\nvarying vec2 toffset ;\n\nvoid main() {\n  float t = max(0.0,(llIl1-time)/60.0) ;\n  float O1l0O = 1.0-exp(-t*.5);\n  float c = cos(angle) ;\n  float s = sin(angle) ;\n  vec3 l0lOI = position ;\n  l0lOI.x += speedratio*c*O1l0O*100.0+speed.x*60.0*t ;\n  l0lOI.y += speedratio*s*O1l0O*100.0+speed.y*60.0*t ;\n\n  vec4 mvPosition = modelViewMatrix * vec4(l0lOI, 1.0);\n  mvPosition.x = mod(mvPosition.x+system_size*.5,system_size)-system_size*.5;\n  mvPosition.y = mod(mvPosition.y+system_size*.5,system_size)-system_size*.5;\n  gl_Position = projectionMatrix * mvPosition ;\n  opacity = 1.0*pow(max(0.0,(OI11O-t)/OI11O),opac);\n  gl_PointSize = OlIIO*opacity;\n  IOllI = color ;\n  float a = angle ;\n  if (type == 5.0)\n  {\n    a = 0.0 ; //+= t*4.5;\n  }\n  co = cos(a);\n  si = -sin(a);\n  toffset = vec2(mod(type,5.0)*1.5,floor(type/5.0)*1.5);\n}'), (t = 'uniform sampler2D texture;\n\nvarying vec2 toffset;\nvarying float opacity;\nvarying vec3 IOllI ;\nvarying float co ;\nvarying float si ;\n\nvoid main() {\n  vec2 pt = (gl_PointCoord-.5)*2.0 ;\n  pt = vec2(pt.x*co+pt.y*si,pt.x*si-pt.y*co);\n  gl_FragColor = texture2D(texture,(toffset+pt*.5+.5)*vec2(.125,.25))*vec4(IOllI,opacity);\n}'), (e = this.createTexture()), (i = { texture: { type: 't', value: e }, llIl1: { type: 'f', value: (Date.now() - this.OII1l) / 1e3 }, system_size: { type: 'f', value: this.lIlO0.l1110.size } }), (this.material = new THREE.ShaderMaterial({ uniforms: i, vertexShader: s, fragmentShader: t, transparent: !0, depthWrite: !1, depthTest: !0, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('time', new THREE.BufferAttribute(this.time, 1)), this.geometry.addAttribute('speed', new THREE.BufferAttribute(this.speed, 2)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), this.geometry.addAttribute('opac', new THREE.BufferAttribute(this.opac, 1)), this.geometry.addAttribute('type', new THREE.BufferAttribute(this.type, 1)), this.geometry.addAttribute('angle', new THREE.BufferAttribute(this.angle, 1)), this.geometry.addAttribute('color', new THREE.BufferAttribute(this.color, 3)), this.geometry.addAttribute('speedratio', new THREE.BufferAttribute(this.speedratio, 1)), this.geometry.addAttribute('OI11O', new THREE.BufferAttribute(this.OI11O, 1)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.position.z = 0);
                }),
                (t.prototype.createTexture = function () {
                    var t, e;
                    return (t = ll000.createTexture()), (e = new THREE.Texture(t)), (e.minFilter = THREE.LinearFilter), (e.needsUpdate = !0), e;
                }),
                t
            );
        })()),
        (this.l1O11 = (function () {
            function t(t, e, i, s, l, n) {
                (this.l1110 = t),
                    (this.seed = e),
                    (this.OlO0I = i),
                    (this.radius = s),
                    (this.level = null != l ? l : 0),
                    (this.I101l = n),
                    (this.random = new OII10(this.seed)),
                    (this.Il1I1 = new THREE.Group()),
                    (this.moons = []),
                    0 === this.level
                        ? (this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.build1();
                                  };
                              })(this)
                          ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.build2();
                                  };
                              })(this)
                          ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.build3();
                                  };
                              })(this)
                          ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.build4();
                                  };
                              })(this)
                          ))
                        : this.lO1I1(),
                    (this.smoothed = !1);
            }
            return (
                (t.prototype.lO1I1 = function () {
                    return this.build1(), this.build2(), this.build3(), this.build4();
                }),
                (t.prototype.build1 = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                    if (((u = Math.max(1, Math.min(5, Math.round(Math.log(this.radius) / Math.log(2) + 1)))), this.l1110.is_mobile_app && (u = Math.max(1, u - 1)), (this.O1III = new THREE.IcosahedronGeometry(1, u)), this.l1110.is_app)) for (t = this.O1III.vertices[0].x - this.O1III.vertices[1].x, e = this.O1III.vertices[0].y - this.O1III.vertices[1].y, i = this.O1III.vertices[0].z - this.O1III.vertices[1].z, d = Math.sqrt(t * t + e * e + i * i), a = new I010I(100), o = new I010I(200), r = new I010I(300), I = 1 / d / 2, p = 3 * d, h = this.O1III.vertices, s = 0, l = h.length; s < l; s++) (c = h[s]), (O = a.OO01O(c.x * I, c.y * I, c.z * I) - 0.5), (m = o.OO01O(c.x * I, c.y * I, c.z * I) - 0.5), (f = r.OO01O(c.x * I, c.y * I, c.z * I) - 0.5), (c.x += O * p), (c.y += m * p), (c.z += f * p), (n = 1 / Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z)), (c.x *= n), (c.y *= n), (c.z *= n);
                }),
                (t.prototype.build2 = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z;
                    switch (((this.OIOl1 = new I010I(this.random.next())), (this.broken = this.random.next() < 0.01 && 0 === this.level), (b = 2 + 10 * Math.pow(this.random.next(), 4)), (w = 2 + 10 * Math.pow(this.random.next(), 4)), (x = 2 + 10 * Math.pow(this.random.next(), 4)), (t = this.Oll0O = 0.4 * Math.pow(this.random.next(), 2)), (d = 2 + 8 * this.random.next()), this.random.next() < 0.5 && ((t *= -1), this.random.next() < 0.1 && 0 === this.level && !this.broken && ((this.volcanic = !0), (t = Math.min(-0.1, t)))), this.random.lI10l(2, 2))) {
                        case 0:
                            e = (function (t) {
                                return function (e, i, s) {
                                    return t.OIOl1.OO01O(e, i, s);
                                };
                            })(this);
                            break;
                        default:
                            e = (function (t) {
                                return function (e, i, s) {
                                    return t.OIOl1.lOl0l(e, i, s);
                                };
                            })(this);
                    }
                    for (m = this.O1III.vertices, s = 0, a = m.length; s < a; s++) (k = m[s]), (c = e(k.x * b, k.y * w, k.z * x)), (k.relief = c), (c = 1 + Math.pow(c, d) * t), (k.x *= c), (k.y *= c), (k.z *= c);
                    if (this.broken) {
                        for (i = l = 0, f = this.O1III.faces.length - 1; 0 <= f ? l <= f : l >= f; i = 0 <= f ? ++l : --l) (E = this.O1III.vertices[this.O1III.faces[i].a]), (_ = this.O1III.vertices[this.O1III.faces[i].b]), (z = this.O1III.vertices[this.O1III.faces[i].c]), (p = Math.max(0.3, Math.min(1, Math.pow(2.5 * this.OIOl1.OO01O(0.5 * E.x, 0.5 * E.y, 0.5 * E.z, 6), 4)))), (I = Math.max(0.3, Math.min(1, Math.pow(2.5 * this.OIOl1.OO01O(0.5 * _.x, 0.5 * _.y, 0.5 * _.z, 6), 4)))), (O = Math.max(0.3, Math.min(1, Math.pow(2.5 * this.OIOl1.OO01O(0.5 * z.x, 0.5 * z.y, 0.5 * z.z, 6), 4)))), (this.O1III.faceVertexUvs[0][i] = [new THREE.Vector2(0, p), new THREE.Vector2(0, I), new THREE.Vector2(0, O)]);
                        for (g = this.O1III.vertices, n = 0, o = g.length; n < o; n++) (k = g[n]), (c = Math.max(0.3, Math.min(1, Math.pow(2.5 * this.OIOl1.OO01O(0.5 * k.x, 0.5 * k.y, 0.5 * k.z, 6), 4)))), (k.x *= c), (k.y *= c), (k.z *= c);
                    }
                    if (this.volcanic) for (i = h = 0, y = this.O1III.faces.length - 1; 0 <= y ? h <= y : h >= y; i = 0 <= y ? ++h : --h) (E = this.O1III.vertices[this.O1III.faces[i].a]), (_ = this.O1III.vertices[this.O1III.faces[i].b]), (z = this.O1III.vertices[this.O1III.faces[i].c]), (p = E.relief), (I = _.relief), (O = z.relief), (this.O1III.faceVertexUvs[0][i] = [new THREE.Vector2(0, p), new THREE.Vector2(0, I), new THREE.Vector2(0, O)]);
                    if ((this.O1III.computeFaceNormals(), this.O1III.computeBoundingSphere(), this.O1III.computeBoundingBox(), this.smoothed)) this.O1III.computeVertexNormals();
                    else for (v = this.O1III.faces, u = 0, r = v.length; u < r; u++) (e = v[u]), (e.vertexNormals[0] = e.normal), (e.vertexNormals[1] = e.normal), (e.vertexNormals[2] = e.normal);
                }),
                (t.prototype.build3 = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R;
                    for (z = 1 + 10 * Math.pow(this.random.next(), 4), M = 1 + 10 * Math.pow(this.random.next(), 4), T = 1 + 10 * Math.pow(this.random.next(), 4), this.OIOl1 = new I010I(), u = new Gradient(), R = 0, _ = []; ; ) if ((O0l1l.O0IOO(this.random.next(), 0.4 * Math.pow(this.random.next(), 2), 0.2 + 0.8 * Math.pow(this.random.next(), 2), _), u.add([R, _[0], _[1], _[2]]), (R += 0.25 * Math.pow(this.random.next(), 2)) > 1)) break;
                    switch (((E = 1 - 0 * Math.pow(this.random.next(), 2)), this.random.lI10l(2))) {
                        case 0:
                            h = (function (t) {
                                return function (e, i, s) {
                                    return t.OIOl1.OO01O(e, i, s);
                                };
                            })(this);
                            break;
                        default:
                            h = (function (t) {
                                return function (e, i, s) {
                                    return t.OIOl1.lOl0l(e, i, s);
                                };
                            })(this);
                    }
                    if ((this.broken && ((c = new Gradient()), c.add([0.4, 255, 255, 255]), c.add([0.5, 255, 255, 128]), c.add([0.65, 160, 32, 16]), c.add([0.8, 0, 0, 0]), c.add([1, 0, 0, 0])), this.computeAmbientLighting(), this.broken)) for (w = this.O1III.faces, I = 0, f = w.length; I < f; I++) (r = w[I]), (R = this.O1III.vertices[r.a]), (t = Math.sqrt(R.x * R.x + R.y * R.y + R.z * R.z)), t < 0.9 ? (a = c.getInt(t / 0.9)) : ((i = u.getInt(R.relief)), (R = this.O1III.vertices[r.b]), (s = u.getInt(R.relief)), (R = this.O1III.vertices[r.c]), (l = u.getInt(R.relief)), (b = ((((i >> 16) & 255) + ((s >> 16) & 255) + ((l >> 16) & 255)) / 3) | 0), (p = ((((i >> 8) & 255) + ((s >> 8) & 255) + ((l >> 8) & 255)) / 3) | 0), (e = (((255 & i) + (255 & s) + (255 & l)) / 3) | 0), (a = (b << 16) | (p << 8) | e)), (i = this.darkenColor(a, 1 - this.O1III.vertices[r.a].OOOI1)), (s = this.darkenColor(a, 1 - this.O1III.vertices[r.b].OOOI1)), (l = this.darkenColor(a, 1 - this.O1III.vertices[r.c].OOOI1)), (r.vertexColors = [new THREE.Color(i), new THREE.Color(s), new THREE.Color(l)]);
                    else if (this.smoothed) for (x = this.O1III.faces, O = 0, g = x.length; O < g; O++) (r = x[O]), (R = this.O1III.vertices[r.a]), (v = h(R.x * z, R.y * M, R.z * T) * (1 - E) + R.relief * E), (i = u.getInt(v)), (R = this.O1III.vertices[r.b]), (v = h(R.x * z, R.y * M, R.z * T) * (1 - E) + R.relief * E), (s = u.getInt(v)), (R = this.O1III.vertices[r.c]), (v = h(R.x * z, R.y * M, R.z * T) * (1 - E) + R.relief * E), (l = u.getInt(v)), (r.vertexColors = [new THREE.Color(i), new THREE.Color(s), new THREE.Color(l)]);
                    else for (k = this.O1III.faces, m = 0, y = k.length; m < y; m++) (r = k[m]), (R = this.O1III.vertices[r.a]), (i = u.getInt(R.relief)), (R = this.O1III.vertices[r.b]), (s = u.getInt(R.relief)), (R = this.O1III.vertices[r.c]), (l = u.getInt(R.relief)), (b = ((((i >> 16) & 255) + ((s >> 16) & 255) + ((l >> 16) & 255)) / 3) | 0), (p = ((((i >> 8) & 255) + ((s >> 8) & 255) + ((l >> 8) & 255)) / 3) | 0), (e = (((255 & i) + (255 & s) + (255 & l)) / 3) | 0), (a = (b << 16) | (p << 8) | e), (i = this.darkenColor(a, 1 - this.O1III.vertices[r.a].OOOI1)), (s = this.darkenColor(a, 1 - this.O1III.vertices[r.b].OOOI1)), (l = this.darkenColor(a, 1 - this.O1III.vertices[r.c].OOOI1)), (r.vertexColors = [new THREE.Color(i), new THREE.Color(s), new THREE.Color(l)]);
                    return this.broken ? ((n = document.createElement('canvas')), (n.width = 64), (n.height = 64), (o = n.getContext('2d')), (d = o.createLinearGradient(0, 0, 0, n.height)), d.addColorStop(1, '#FFF'), d.addColorStop(0.6, '#FF1'), d.addColorStop(0.3, '#F00'), d.addColorStop(0.1, '#000'), d.addColorStop(0, '#000'), (o.fillStyle = d), o.fillRect(0, 0, n.width, n.height), (S = new THREE.Texture(n)), (S.needsUpdate = !0), (this.material = new THREE.MeshLambertMaterial({ color: 16777215, vertexColors: THREE.VertexColors, emissive: 16777215, emissiveMap: S }))) : this.volcanic ? ((n = document.createElement('canvas')), (n.width = 64), (n.height = 64), (o = n.getContext('2d')), (d = o.createLinearGradient(0, 0, 0, n.height)), d.addColorStop(0, '#FFF'), d.addColorStop(0.2, '#FF1'), d.addColorStop(0.3, '#F00'), d.addColorStop(0.4, '#000'), d.addColorStop(1, '#000'), (o.fillStyle = d), o.fillRect(0, 0, n.width, n.height), (S = new THREE.Texture(n)), (S.needsUpdate = !0), (this.material = new THREE.MeshLambertMaterial({ color: 16777215, vertexColors: THREE.VertexColors, emissive: 16777215, emissiveMap: S }))) : (this.material = new THREE.MeshLambertMaterial({ color: 16777215, vertexColors: THREE.VertexColors }));
                }),
                (t.prototype.build4 = function () {
                    var e, i, s, l, n, a, o, r;
                    if (((this.planet_group = new THREE.Group()), (i = new THREE.BufferGeometry()), i.fromGeometry(this.O1III), (this.O1III = i), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.Il1I1.add(this.planet_group), this.planet_group.add(this.l0OlI), (this.l0OlI.rotation.x = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.l0OlI.rotation.y = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.planet_group.position.x = this.OlO0I), 0 === this.level && (this.Il1I1.position.z = -50), 0 === this.level && ((a = this.random.next()), a < 0.1 ? ((this.atm_height = 1.01 + this.Oll0O + 0.3 * this.random.next()), (this.atm = this.OIlll()), this.atm.scale.set(this.radius * this.atm_height, this.radius * this.atm_height, this.radius * this.atm_height), this.planet_group.add(this.atm)) : a < 0.2 && ((this.rings = this.createRings()), this.rings.scale.set(4 * this.radius, 4 * this.radius, 4 * this.radius), this.rings.rotation.set(this.random.next() * (180 * THREE.Math.DEG2RAD) * 2, this.random.next() * (180 * THREE.Math.DEG2RAD) * 2, this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), this.planet_group.add(this.rings))), this.l0OlI.scale.set(this.radius, this.radius, this.radius), (this.orbit_phase = 2 * this.random.next() * (180 * THREE.Math.DEG2RAD)), (this.self_rotation_speed = 0.01 * (this.level + 1) * (1 + this.random.next())), (this.orbit_speed = (0.1 / this.OlO0I) * (1 + 3 * this.random.next())), this.random.next() < 0.5 && (this.orbit_speed *= -1), (this.moons = []), this.level < 2)) for (n = Math.floor(3 * Math.pow(this.random.next(), 4)), s = 1, r = n; s <= r; s += 1) (o = (0.1 + 0.1 * this.random.next()) * this.radius), (e = this.radius + o + this.random.next() * this.radius), (l = new t(this.l1110, 1 - this.random.next(), e, o, this.level + 1)), this.moons.push(l), (l.Il1I1.rotation.x = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), (l.Il1I1.rotation.y = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), this.planet_group.add(l.Il1I1);
                }),
                (t.prototype.l1O0l = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                    for (this.l0OlI.rotation.z = (t / 60) * (180 * THREE.Math.DEG2RAD) * 2 * this.self_rotation_speed, 0 === this.level ? ((l = (t / 60) * (180 * THREE.Math.DEG2RAD) * 2 * this.orbit_speed + this.orbit_phase), (I = Math.cos(l) * this.OlO0I), (O = Math.sin(l) * this.OlO0I), e < I - this.l1110.l0I1I ? (I -= this.l1110.size) : e > I + this.l1110.l0I1I && (I += this.l1110.size), i < O - this.l1110.l0I1I ? (O -= this.l1110.size) : i > O + this.l1110.l0I1I && (O += this.l1110.size), (this.planet_group.position.x = I), (this.planet_group.position.y = O), null != this.atm && ((m = this.Il1I1.position.z), (n = 10), (d = I - e), (c = O - i), (p = m - n), (u = Math.sqrt(d * d + c * c + p * p)), (d /= u), (c /= u), (p /= u), (s = Math.asin(d)), (this.atm.rotation.y = -s / 2), (this.atm.rotation.x = Math.asin(c) / 2))) : (this.Il1I1.rotation.z = (t / 60) * (180 * THREE.Math.DEG2RAD) * 2 * this.orbit_speed + this.orbit_phase), h = this.moons, a = 0, o = h.length; a < o; a++) (r = h[a]), r.l1O0l(t);
                }),
                (t.prototype.updateVisibility = function (t, e) {
                    var i, s, l, n;
                    for (this.planet_group.visible = e, n = this.moons, i = 0, s = n.length; i < s; i++) (l = n[i]), (l.Il1I1.visible = t);
                }),
                (t.prototype.OIlll = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p;
                    for (e = document.createElement('canvas'), e.width = e.height = 512, i = e.getContext('2d'), i.translate(e.width / 2, e.height / 2), i.scale(e.width / 2, e.height / 2), u = Math.round(255 * this.random.next()), l = Math.round(255 * this.random.next()), t = Math.round(255 * this.random.next()), n = i.createRadialGradient(0, 0, 0, 0, 0, 1), n.addColorStop(0, 'rgba(255,255,255,0)'), n.addColorStop(1 / this.atm_height, 'rgba(255,255,255,.5)'), n.addColorStop(1, 'rgba(' + u + ',' + l + ',' + t + ',0)'), i.fillStyle = n, i.arc(0, 0, 1, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.fill(), c = new THREE.Texture(e), c.needsUpdate = !0, h = new THREE.IcosahedronGeometry(1, 3), r = new THREE.MeshLambertMaterial({ map: c, color: 16777215, opacity: 1, transparent: !0, depthWrite: !1, depthTest: !0, blending: THREE.AdditiveBlending }), h.faceVertexUvs = [[]], d = h.faces, a = 0, o = d.length; a < o; a++) (s = d[a]), (p = []), (p[0] = new THREE.Vector2((h.vertices[s.a].x + 1) / 2, (h.vertices[s.a].y + 1) / 2)), (p[1] = new THREE.Vector2((h.vertices[s.b].x + 1) / 2, (h.vertices[s.b].y + 1) / 2)), (p[2] = new THREE.Vector2((h.vertices[s.c].x + 1) / 2, (h.vertices[s.c].y + 1) / 2)), h.faceVertexUvs[0].push(p);
                    return new THREE.Mesh(h, r);
                }),
                (t.prototype.createRings = function () {
                    var t, e, i, s, l, n, a, o, r, h;
                    for (t = document.createElement('canvas'), t.width = t.height = 512, e = t.getContext('2d'), e.translate(t.width / 2, t.height / 2), e.scale(t.width / 2, t.height / 2), i = e.createRadialGradient(0, 0, 0, 0, 0, 1), i.addColorStop(0, 'rgba(0,0,0,0)'), r = o = 0.5 * this.random.next() + 0.5, s = this.random.next() * (1 - o), i.addColorStop(o, 'rgba(255,255,255,0)'); ; ) {
                        if ((o += 0.1 * this.random.next() * s) > r + s) break;
                        i.addColorStop(o, 'hsla(' + this.random.lI10l(360) + ',' + (this.random.lI10l(40) + 10) + '%,' + (this.random.lI10l(90) + 10) + '%,' + (0.9 * this.random.next() + 0.1) + ')');
                    }
                    return i.addColorStop(Math.min(1, o), 'rgba(0,0,0,0)'), (e.fillStyle = i), e.arc(0, 0, 1, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.fill(), (h = new THREE.Texture(t)), (h.needsUpdate = !0), (a = new THREE.PlaneGeometry(1, 1)), (l = new THREE.MeshLambertMaterial({ map: h, emissiveMap: h, emissive: 2105376, color: 8421504, opacity: 1, side: THREE.DoubleSide, transparent: !0, depthWrite: !1, depthTest: !0, blending: THREE.AdditiveBlending })), (n = new THREE.Mesh(a, l)), (n.position.z = 0.001), n;
                }),
                (t.prototype.computeAmbientLighting = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z;
                    for (w = this.O1III.vertices, u = 0, p = w.length; u < p; u++) (z = w[u]), (z.segments = []), (z.OOOI1 = 1);
                    if (this.l1110.is_app) {
                        for (
                            E = {},
                                _ = [],
                                b = function (t, e, i, s) {
                                    var l, n;
                                    return (l = Math.min(t, e) + '-' + Math.max(t, e)), null == E[l] ? ((n = { O1000: t, v2: e, f1: s, opp1: i }), (E[l] = n), _.push(n)) : ((E[l].f2 = s), (E[l].opp2 = i));
                                },
                                x = this.O1III.faces,
                                d = 0,
                                I = x.length;
                            d < I;
                            d++
                        )
                            (h = x[d]), b(h.a, h.b, h.c, h), b(h.a, h.c, h.b, h), b(h.b, h.c, h.a, h);
                        for (c = 0, O = _.length; c < O; c++) (k = _[c]), (f = k.f1.normal), (t = (this.O1III.vertices[k.f1.a].x + this.O1III.vertices[k.f1.b].x + this.O1III.vertices[k.f1.c].x) / 3), (e = (this.O1III.vertices[k.f1.a].y + this.O1III.vertices[k.f1.b].y + this.O1III.vertices[k.f1.c].y) / 3), (i = (this.O1III.vertices[k.f1.a].z + this.O1III.vertices[k.f1.b].z + this.O1III.vertices[k.f1.c].z) / 3), (s = (this.O1III.vertices[k.f2.a].x + this.O1III.vertices[k.f2.b].x + this.O1III.vertices[k.f2.c].x) / 3), (l = (this.O1III.vertices[k.f2.a].y + this.O1III.vertices[k.f2.b].y + this.O1III.vertices[k.f2.c].y) / 3), (n = (this.O1III.vertices[k.f2.a].z + this.O1III.vertices[k.f2.b].z + this.O1III.vertices[k.f2.c].z) / 3), (a = s - t), (o = l - e), (r = n - i), (v = f.x * a + f.y * o + f.z * r) > 0 && ((g = k.f1.normal), (y = k.f2.normal), (v = Math.max(-1, Math.min(1, g.x * y.x + g.y * y.y + g.z * y.z))), (m = 1 - Math.acos(v) / (180 * THREE.Math.DEG2RAD)), (this.O1III.vertices[k.O1000].OOOI1 *= m), (this.O1III.vertices[k.v2].OOOI1 *= m));
                    }
                }),
                (t.prototype.darkenColor = function (t, e) {
                    var i, s, l, n;
                    return (s = Math.min(1, Math.max(0, 1 - e))), (n = ((t >> 16) & 255) * s), (l = ((t >> 8) & 255) * s), (i = (255 & t) * s), (n << 16) | (l << 8) | i;
                }),
                t
            );
        })()),
        (this.Stars = (function () {
            function t(t, e) {
                var i, s, l, n, a;
                for (this.size = null != t ? t : 500, this.welcome = e, this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-2e4, -2e4, -2e4), new THREE.Vector3(2e4, 2e4, 2e4)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 4e4), this.vertices = new Float32Array(3 * this.size), this.OlIIO = new Float32Array(this.size), this.opac = new Float32Array(this.size), this.vcolor = new Float32Array(3 * this.size), this.startype = new Float32Array(this.size), this.amplitude = new Float32Array(this.size), this.Ol01I = new Float32Array(this.size), this.index = 0, this.OII1l = Date.now(), l = n = 0, a = this.size - 1; n <= a; l = n += 1) (this.vertices[3 * l] = 350 * (Math.random() - 0.5)), (this.vertices[3 * l + 1] = 350 * (Math.random() - 0.5)), (this.vertices[3 * l + 2] = 0), (this.OlIIO[l] = Math.round(4 + 10 * Math.random())), (this.opac[l] = 0.7 * Math.random() + 0.3), (this.Ol01I[l] = 4 * Math.pow(Math.random(), 2) + 1), (this.amplitude[l] = 0.2 * Math.pow(Math.random(), 1)), (this.startype[l] = Math.floor(5 * Math.random())), (s = (240 * Math.random() + 180) % 360), (i = O0l1l.hsvToRgbHex(s / 360, 0.2, 1)), (this.vcolor[3 * l] = ((i >> 16) & 255) / 255), (this.vcolor[3 * l + 1] = ((i >> 8) & 255) / 255), (this.vcolor[3 * l + 2] = (255 & i) / 255);
                this.l10lI();
            }
            return (
                (t.prototype.l10lI = function () {
                    var t, e, i, s, l;
                    return (l = 'attribute float OlIIO;\nuniform vec2 II001;\nuniform float lllIl;\nattribute float opac ;\nattribute vec3 vcolor ;\nattribute float amplitude ;\nattribute float Ol01I ;\nattribute float startype ;\nvarying float opacity ;\nvarying vec3 IOllI ;\nuniform float time ;\nvarying float stype ;\n\nvoid main() {\n  vec3 l0lOI = vec3(II001*OlIIO' + (this.welcome ? '*OlIIO*.25' : '') + ',0.0)+position;\n  l0lOI.xy = mod(l0lOI.xy,350.0)-175.0;\n  vec4 mvPosition = modelViewMatrix * vec4(l0lOI, 1.0);\n  gl_Position = projectionMatrix * mvPosition ;\n  gl_PointSize = OlIIO*lllIl*(1.0+amplitude+amplitude*sin(time*Ol01I));\n  opacity = opac;//*(1.0-amplitude+amplitude*sin(time*Ol01I)) ;\n  IOllI = vcolor ;\n  stype = startype ;\n}'), (i = 'uniform sampler2D texture;\nvarying float opacity ;\nvarying vec3 IOllI ;\nvarying float stype ;\n\nvoid main() {\n  gl_FragColor = texture2D(texture,(gl_PointCoord+vec2(stype,0.0))*vec2(.125,1.0));\n  gl_FragColor.w *= opacity ;\n  gl_FragColor.xyz *= IOllI ;\n}'), (t = document.createElement('canvas')), (t.width = 256), (t.height = 32), (e = t.getContext('2d')), e.translate(t.width / 16, t.height / 2), e.scale(t.width / 16, t.height / 2), this.drawStarBody(e, 1), e.translate(2, 0), this.drawStarBody(e, 0.5), this.drawStarLine(e), e.rotate((180 * THREE.Math.DEG2RAD) / 2), this.drawStarLine(e), e.rotate((-180 * THREE.Math.DEG2RAD) / 2), e.translate(2, 0), e.rotate((180 * THREE.Math.DEG2RAD) / 4), this.drawStarBody(e, 0.5), this.drawStarLine(e), e.rotate((180 * THREE.Math.DEG2RAD) / 2), this.drawStarLine(e), e.rotate((180 * THREE.Math.DEG2RAD * -3) / 4), this.drawStarGlow(e), e.translate(2, 0), this.drawStarBody(e, 0.75), e.rotate((180 * THREE.Math.DEG2RAD) / 2), this.drawStarLine(e), e.rotate((-180 * THREE.Math.DEG2RAD) / 2), this.drawStarGlow(e), e.translate(2, 0), this.drawStarBody(e, 0.75), e.rotate((180 * THREE.Math.DEG2RAD) / 2), this.drawStarLine(e), e.rotate((-180 * THREE.Math.DEG2RAD) / 2), (s = new THREE.Texture(t)), Math.max(window.innerWidth, window.innerHeight) * window.devicePixelRatio > 1200 && (s.minFilter = s.magFilter = THREE.LinearFilter), (s.needsUpdate = !0), (this.II001 = new THREE.Vector2(0, 0)), (this.uniforms = { texture: { type: 't', value: s }, II001: { type: 'v2', value: this.II001 }, lllIl: { type: 'f', value: Math.max(400, Math.min(window.innerHeight, window.innerWidth)) / 1e3 }, time: { type: 'f', value: 0 } }), (this.material = new THREE.ShaderMaterial({ uniforms: this.uniforms, vertexShader: l, fragmentShader: i, transparent: !0, depthWrite: !1, depthTest: !0, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), this.geometry.addAttribute('opac', new THREE.BufferAttribute(this.opac, 1)), this.geometry.addAttribute('startype', new THREE.BufferAttribute(this.startype, 1)), this.geometry.addAttribute('amplitude', new THREE.BufferAttribute(this.amplitude, 1)), this.geometry.addAttribute('Ol01I', new THREE.BufferAttribute(this.Ol01I, 1)), this.geometry.addAttribute('vcolor', new THREE.BufferAttribute(this.vcolor, 3)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.position.z = -100);
                }),
                (t.prototype.lOlI1 = function (t, e) {
                    return (this.uniforms.lllIl.value = Math.max(400, Math.min(t, e)) / 1e3);
                }),
                (t.prototype.l1O0l = function (t, e, i) {
                    return this.II001.set(t, e), (this.uniforms.time.value = i);
                }),
                (t.prototype.drawStarBody = function (t, e) {
                    var i;
                    return (i = t.createRadialGradient(0, 0, 0, 0, 0, 1)), i.addColorStop(0, 'rgba(255,255,255,' + e + ')'), i.addColorStop(0.2, 'rgba(255,255,255,' + e + ')'), i.addColorStop(0.21, 'rgba(255,255,255,.1)'), i.addColorStop(1, 'rgba(255,255,255,0)'), (t.fillStyle = i), t.fillRect(-1, -1, 2, 2);
                }),
                (t.prototype.drawStarLine = function (t) {
                    var e;
                    return (e = t.createLinearGradient(0, -1, 0, 1)), e.addColorStop(0, 'rgba(255,255,255,0)'), e.addColorStop(0.5, 'rgba(255,255,255,.5)'), e.addColorStop(1, 'rgba(255,255,255,0)'), (t.fillStyle = e), t.beginPath(), t.moveTo(0, -1), t.lineTo(0.1, 0), t.lineTo(0, 1), t.lineTo(-0.1, 0), t.closePath(), t.fill();
                }),
                (t.prototype.drawStarGlow = function (t) {
                    var e;
                    return (e = t.createRadialGradient(0, 0, 0, 0, 0, 1)), e.addColorStop(0, 'rgba(255,255,255,0)'), e.addColorStop(0.2, 'rgba(255,255,255,0)'), e.addColorStop(0.5, 'rgba(255,255,255,.1)'), e.addColorStop(0.8, 'rgba(255,255,255,0)'), (t.fillStyle = e), t.fillRect(-1, -1, 2, 2);
                }),
                t
            );
        })()),
        (this.Galaxy = (function () {
            function t(t) {
                var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O;
                for (this.seed = t, this.random = new OII10(this.seed), this.width = 60 + 60 * Math.pow(this.random.next(), 1), this.size = Math.round(1e3 * Math.pow(this.width / 25, 2)), this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-1.5, -1.5, -1.5), new THREE.Vector3(1.5, 1.5, 1.5)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 1.5), this.vertices = new Float32Array(3 * this.size), this.color = new Float32Array(3 * this.size), this.OlIIO = new Float32Array(this.size), this.expo = new Float32Array(this.size), this.index = 0, this.OII1l = Date.now(), i = 2 + this.random.lI10l(4), l = 0.1 * (0.5 * this.random.next() + 0.75), I = 0.5 + 1 * this.random.next(), l *= (((2 * (2.5 - I)) / 2) * 2) / i, r = new Gradient(), r.add([0, 255, 255, 255]), r.add([0.25, 255, 192, 96]), r.add([0.4, 255, 128, 32]), r.add([0.7, 192, 224, 255]), r.add([1, 128, 192, 255]), d = new I010I(this.random.next()), h = u = 0, p = this.size - 1; u <= p; h = u += 1) (O = Math.pow(h / this.size, 1)), (e = O * (180 * THREE.Math.DEG2RAD) * 2 * I + ((h % i) * (180 * THREE.Math.DEG2RAD) * 2) / i), (c = O), (this.vertices[3 * h] = c * Math.cos(e)), (this.vertices[3 * h + 1] = c * Math.sin(e)), (this.vertices[3 * h + 2] = 0), (n = 2 * (this.random.next() - 0.5)), (a = 2 * (this.random.next() - 0.5)), (o = 2 * (this.random.next() - 0.5)), (n = n < 0 ? -Math.pow(-n, 2) : Math.pow(n, 2)), (a = a < 0 ? -Math.pow(-a, 2) : Math.pow(a, 2)), (o = o < 0 ? -Math.pow(-o, 2) : Math.pow(o, 2)), (this.vertices[3 * h] += n * l * (1 + 2 * Math.abs(O - 0.5)) * 0.5), (this.vertices[3 * h + 1] += a * l * (1 + 2 * Math.abs(O - 0.5)) * 0.5), (this.vertices[3 * h + 2] += o * l * 4 * Math.pow(1 - O, 2) * 0.5), (this.vertices[3 * h] += 0.2 * (d.OO01O(2 * this.vertices[3 * h], 2 * this.vertices[3 * h + 1], 2 * this.vertices[3 * h + 2], 5, 0.6) - 0.5)), (this.vertices[3 * h + 1] += 0.2 * (d.OO01O(10 + 2 * this.vertices[3 * h], 2 * this.vertices[3 * h + 1], 2 * this.vertices[3 * h + 2], 5, 0.6) - 0.5)), (this.vertices[3 * h + 2] += 0.2 * (d.OO01O(20 + 2 * this.vertices[3 * h], 2 * this.vertices[3 * h + 1], 2 * this.vertices[3 * h + 2], 5, 0.6) - 0.5)), (s = r.get(O)), (this.color[3 * h] = s[0] / 255), (this.color[3 * h + 1] = s[1] / 255), (this.color[3 * h + 2] = s[2] / 255), (this.OlIIO[h] = 2 - O), (this.expo[h] = 2 + 4 * Math.pow(this.random.next(), 0.25)), h < 5 ? ((this.OlIIO[h] *= Math.sqrt(this.width)), (this.vertices[3 * h] = 0.2 * (this.random.next() - 0.5)), (this.vertices[3 * h + 1] = 0.2 * (this.random.next() - 0.5)), (this.vertices[3 * h + 2] = 0.2 * (this.random.next() - 0.5))) : this.random.next() < 0.02 && (this.OlIIO[h] *= Math.sqrt(this.width));
                this.l10lI(), (this.O1I1I = ((2e5 + 2e5 * this.random.next()) * this.width) / 25), (this.psize_ref = 7);
            }
            return (
                (t.prototype.l1O0l = function (t, e, i) {
                    return (this.material.uniforms.lI0Ol.value = (Math.min(e, i) / 1e3) * this.psize_ref), (t *= 1e3 / 60), (this.IIl10.rotation.z = ((-t / this.O1I1I) % this.O1I1I) * 2 * (180 * THREE.Math.DEG2RAD));
                }),
                (t.prototype.l10lI = function () {
                    var t, e, i;
                    return (i = 'uniform float lI0Ol;\nattribute vec3 color ;\nattribute float OlIIO ;\nattribute float expo ;\nvarying vec3 IOllI ;\nvarying float pexpo;\n\nvoid main() {\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n  gl_Position = projectionMatrix * mvPosition ;\n  gl_PointSize = lI0Ol*OlIIO ;\n  IOllI = color ;\n  pexpo = expo ;\n}'), (t = 'varying vec3 IOllI ;\nvarying float pexpo ;\n\nvoid main() {\n  vec2 d = (gl_PointCoord-vec2(.5,.5))*2.0 ;\n  float r = pow(1.0-length(d),pexpo);\n  gl_FragColor = vec4(IOllI,r*.1);\n}'), (e = { lI0Ol: { type: 'f', value: 6 } }), (this.material = new THREE.ShaderMaterial({ uniforms: e, vertexShader: i, fragmentShader: t, transparent: !0, depthWrite: !1, depthTest: !0, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('color', new THREE.BufferAttribute(this.color, 3)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), this.geometry.addAttribute('expo', new THREE.BufferAttribute(this.expo, 1)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.rotation.order = 'XYZ'), this.IIl10.scale.set(this.width, this.width, this.width), (this.IIl10.rotation.x = 180 * THREE.Math.DEG2RAD * 2 * this.random.next()), (this.IIl10.rotation.y = 180 * THREE.Math.DEG2RAD * 2 * this.random.next());
                }),
                t
            );
        })()),
        (this.OI0Ol = (function () {
            function t(e, i) {
                var s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y;
                if (((this.l1110 = e), (this.random = i), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.time_offset = this.random.lI10l(3e4)), null == t.texture)) {
                    for (s = document.createElement('canvas'), s.width = 128, s.height = 128, l = s.getContext('2d'), n = l.getImageData(0, 0, s.width, s.height), I = new I010I(), a = r = 0, O = s.width - 1; 0 <= O ? r <= O : r >= O; a = 0 <= O ? ++r : --r) for (o = h = 0, m = s.height - 1; 0 <= m ? h <= m : h >= m; o = 0 <= m ? ++h : --h) (g = (a / s.width) * 16), (y = (o / s.height) * 16), (d = 255 * I.II0O1(g, y, 8)), (c = 255 * I.II0O1(g + 5, y + 3, 8)), (p = 255 * I.II0O1(g + 2, y + 7, 8)), (n.data[4 * a + o * s.width * 4] = d), (n.data[4 * a + o * s.width * 4 + 1] = c), (n.data[4 * a + o * s.width * 4 + 2] = p), (n.data[4 * a + o * s.width * 4 + 3] = 255);
                    l.putImageData(n, 0, 0), (f = new THREE.Texture(s)), (f.wrapS = f.wrapT = THREE.RepeatWrapping), (f.minFilter = THREE.LinearFilter), (f.maxFilter = THREE.LinearFilter), (f.needsUpdate = !0), (t.texture = f);
                }
                (this.r = 4 * this.random.next() + 1), (this.g = 4 * this.random.next() + 1), (this.b = 4 * this.random.next() + 1), (u = Math.max(this.r, this.g, this.b)), (this.r = (this.r / u) * 5), (this.g = (this.g / u) * 5), (this.b = (this.b / u) * 5), this.l1110.mode.aow && ((this.r = 5), (this.g = 1.5), (this.b = 0.25)), (this.phase = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), this.l1110.mode.aow ? (this.fragmentshader = '      uniform float itime ;\n      uniform sampler2D tex ;\n      varying vec2 vUv ;\n\nvoid main()\n{\n    vec2 d = (vUv-.5) ;\n    float lg = length(d);\n    float fade = 1.0-lg*2.0;\n    float a = atan(d.y,d.x);\n    float llO1l = .5+.25*sin(itime*6.2831);\n    float ttt = mod(itime*30.0,3.0);\n    vec3 dotv = vec3( max(0.0,max(1.0-ttt,ttt-2.0)) , max(0.0,1.0-abs(1.0-ttt)) , max(0.0,1.0-abs(2.0-ttt)) ) ;\n\n    lg = pow(lg*2.0,1.0+6.0*llO1l)*.5 ;\n    vec3 OIOl1 = texture2D(tex,vUv*4.0).xyz+texture2D(tex,vUv*8.0).xyz*.5;\n    lg *= .5+.4*pow(dot(OIOl1,dotv)*.75,2.0);\n    float n = texture2D(tex,vec2(a/(3.14159265*2.0)*3.0,itime)).x;\n    float li1 = max(0.0,1.0-lg);\n    float li = (pow(li1,2.0)*.1+li1*pow(n,lg*16.0))*fade;\n\n    gl_FragColor = vec4(li,li*.9,li*.85,0.0);\n    float halo = pow(li1,64.0)*fade ;\n    gl_FragColor += vec4(halo*vec3(' + this.r + ',' + this.g + ',' + this.b + '),1.0);\n}') : (this.fragmentshader = '      uniform float itime ;\n      uniform sampler2D tex ;\n      varying vec2 vUv ;\n\nvoid main()\n{\n    vec2 d = (vUv-.5) ;\n    float lg = length(d);\n    float fade = 1.0-lg*2.0;\n    float a = atan(d.y,d.x);\n    lg *= .7;\n    float n = texture2D(tex,vec2(a/(3.14159265*2.0),itime)).x;\n    float li = 1.0-lg;\n    li = (pow(li,2.0)*.1+li*.5*pow(n,lg*16.0))*fade;\n\n    gl_FragColor = vec4(li,li*.9,li*.85,0.0);\n    float halo = pow(1.0-lg,64.0)*fade ;\n    gl_FragColor += vec4(halo*vec3(' + this.r + ',' + this.g + ',' + this.b + '),1.0);\n}'), (this.vertexshader = 'varying vec2 vUv;\n\nvoid main()\n{\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n}'), (this.uniforms = { itime: { type: 'f', value: 1 }, tex: { value: t.texture } }), (this.material = new THREE.ShaderMaterial({ uniforms: this.uniforms, vertexShader: this.vertexshader, fragmentShader: this.fragmentshader, transparent: !0, depthWrite: !1, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material));
            }
            return (
                (t.prototype.dispose = function () {
                    return this.O1III.dispose(), this.material.dispose();
                }),
                (t.prototype.l1O0l = function () {
                    return (this.uniforms.itime.value = ((Date.now() + this.time_offset) % 3e4) / 3e4);
                }),
                t
            );
        })()),
        (this.Repulsor = (function () {
            function t(t) {
                (this.source = t), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.r = this.source.r), (this.g = this.source.g), (this.b = this.source.b), (this.fragmentshader = '  uniform float itime ;\n  uniform sampler2D tex ;\n  varying vec2 vUv ;\n\nvoid main()\n{\nvec2 d = (vUv-.5) ;\nfloat leng = length(d)*2.0;\nfloat fade = pow(max(0.0,1.0-leng),.75);\nfloat lg = pow(leng,2.0);\nfloat a = atan(d.y,d.x);\nfloat phase = lg*20.0+20.0-itime*20.0;\nfloat n = texture2D(tex,vec2(a/3.14159265*2.0,itime+leng)).x;\nfloat n2 = texture2D(tex,vec2(a/3.14159265*4.0,itime+leng+.5)).x;\nphase += n*.5;\nphase = abs(phase-floor(phase+.5));\nfloat Oll0O = pow((.5-phase)*2.0,4.0)*2.0*n2;\ngl_FragColor = vec4(pow(vec3(Oll0O*fade),vec3(' + this.r + ',' + this.g + ',' + this.b + ')),1.0);\n}'), (this.vertexshader = 'varying vec2 vUv;\n\nvoid main()\n{\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n}'), (this.uniforms = { itime: { type: 'f', value: 1 }, tex: { value: OI0Ol.texture } }), (this.material = new THREE.ShaderMaterial({ uniforms: this.uniforms, vertexShader: this.vertexshader, fragmentShader: this.fragmentshader, transparent: !0, depthWrite: !1, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material));
            }
            return (
                (t.prototype.l1O0l = function (t) {
                    return (this.uniforms.itime.value = t / 60 / 30);
                }),
                t
            );
        })()),
        (this.BackgroundScene = (function () {
            function t(t, e, i, s) {
                (this.l1110 = t),
                    (this.seed = e),
                    (this.I101l = i),
                    (this.welcome = s),
                    (this.random = new OII10(this.seed)),
                    (this.lIlO0 = new THREE.Scene()),
                    this.I101l.add(
                        (function (t) {
                            return function () {
                                return t.buildDeepSpace();
                            };
                        })(this)
                    ),
                    this.I101l.add(
                        (function (t) {
                            return function () {
                                return t.buildNebulas();
                            };
                        })(this)
                    ),
                    this.l1110.is_app && this.welcome
                        ? (this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.buildGalaxies();
                                  };
                              })(this)
                          ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.buildStars();
                                  };
                              })(this)
                          ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.buildSuns();
                                  };
                              })(this)
                          ),
                          this.buildAppPlanet())
                        : (this.welcome ||
                              this.I101l.add(
                                  (function (t) {
                                      return function () {
                                          return t.buildGalaxies();
                                      };
                                  })(this)
                              ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.buildStars();
                                  };
                              })(this)
                          ),
                          this.I101l.add(
                              (function (t) {
                                  return function () {
                                      return t.buildSuns();
                                  };
                              })(this)
                          ),
                          this.buildPlanets()),
                    (this.details_level = 1);
            }
            return (
                (t.prototype.buildDeepSpace = function () {
                    return this.createDeepSpace();
                }),
                (t.prototype.buildNebulas = function () {
                    return (this.nebula_group = this.createSmallNebulas()), this.lIlO0.add(this.nebula_group);
                }),
                (t.prototype.buildGalaxies = function () {
                    var t, e, i;
                    for (this.galaxy_group = new THREE.Group(), this.lIlO0.add(this.galaxy_group), this.galaxies = [], this.numgal = this.random.lI10l(3, 2), e = 1, i = this.numgal; e <= i; e += 1) (t = new Galaxy(this.random.next())), this.galaxy_group.add(t.IIl10), t.IIl10.position.set(300 * (this.random.next() - 0.5), 300 * (this.random.next() - 0.5), -150), this.galaxies.push(t);
                }),
                (t.prototype.buildStars = function () {
                    return (this.O0OOO = new Stars(500 + this.random.lI10l(4500, 2), this.welcome)), this.lIlO0.add(this.O0OOO.IIl10);
                }),
                (t.prototype.buildSuns = function () {
                    if (((this.suns = []), (this.number_of_suns = 1), !this.welcome)) for (; this.random.next() < 0.1; ) this.number_of_suns++;
                    return (this.sun_group = this.createStar(this.number_of_suns)), this.sun_group.position.set(0, 0, -150), this.welcome && this.l1110.is_mobile_app && this.sun_group.position.set(120, 25, -150), this.l1110.size < 400 && (this.sun_group.position.set(0, 0, -50), (this.sun_group.scale.x *= 0.5), (this.sun_group.scale.y *= 0.5), (this.sun_group.scale.z *= 0.5)), this.lIlO0.add(this.sun_group), (this.repulsors = []);
                }),
                (t.prototype.updateRepulsor = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    if (0 === this.repulsors.length) for (e = 0; e <= 3; e += 1) (h = this.createRepulsor()), h.position.set(0, 0, this.sun_group.position.z), this.lIlO0.add(h);
                    for (a = this.repulsors, l = 0, i = a.length; l < i; l++) (r = a[l]), r.l1O0l(this.l1110.lIlO0.IO11l.II1O0);
                    for (this.l1110.lIlO0.Ill00.status.x, this.l1110.lIlO0.Ill00.status.y, t *= 1.2 * this.l1110.size, o = this.repulsors, n = 0, s = o.length; n < s; n++) (r = o[n]), r.l0OlI.scale.set(t, t, t);
                }),
                (t.prototype.buildPlanets = function () {
                    var t;
                    if (((this.planets = []), (this.OOOI1 = new THREE.PointLight(16777215)), (this.OOOI1.intensity = 1.1), this.OOOI1.position.set(0, 0, -50), this.lIlO0.add(this.OOOI1), (this.O0llO = 0), (this.OIOOO = 0), (this.l0lOI = 0), (this.radius = 10), (t = 0), !this.welcome)) for (; this.l0lOI < this.l1110.l0I1I && t < 10; ) if ((this.buildNextPlanet(), t++, this.welcome && t > 2)) return;
                }),
                (t.prototype.buildAppPlanet = function () {
                    var t;
                    return (this.planets = []), (this.li = new THREE.DirectionalLight(16777215)), (this.li.intensity = 1.5), this.li.position.set(1, 1, -2), this.lIlO0.add(this.li), (this.li2 = new THREE.DirectionalLight(1581096)), this.li2.position.set(-1, -1, 2), this.lIlO0.add(this.li2), (this.O0llO = 0), (this.OIOOO = 0), (this.l0lOI = 0), (this.radius = 10), 0, (t = new AppPlanet(this)), t.Il1I1.position.set(-50, -35, -50), t.Il1I1.scale.set(40, 40, 40), this.lIlO0.add(t.Il1I1), (this.app_planet = t);
                }),
                (t.prototype.buildNextPlanet = function () {
                    var t;
                    if (((this.newradius = 4 + this.random.next() * (16 + this.l0lOI / 20)), (this.l0lOI += 1.3 * this.radius + this.newradius + 10 * this.random.next()), !(this.l0lOI > this.l1110.l0I1I)))
                        return (
                            (this.radius = this.newradius),
                            (t = new l1O11(this.l1110, 1 - this.random.next(), this.l0lOI, this.radius, 0, this.I101l)),
                            this.I101l.add(
                                (function (e) {
                                    return function () {
                                        if ((e.lIlO0.add(t.Il1I1), e.planets.push(t), e.l1110.size < 400)) return (t.Il1I1.position.z = -30);
                                    };
                                })(this)
                            )
                        );
                }),
                (t.prototype.createDeepSpace = function () {
                    return new DeepSpace(this);
                }),
                (t.prototype.createDeepSpaceOld = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K, W, Y, J, Z, X, Q, $, tt;
                    for (
                        localStorage.getItem('ds_detail'),
                            this.details_level = 2,
                            K = Date.now(),
                            H = new THREE.PlaneGeometry(1, 1),
                            l = document.createElement('canvas'),
                            l.width = 256 * this.details_level,
                            l.height = 256 * this.details_level,
                            a = l.getContext('2d'),
                            h = a.getImageData(0, 0, l.width, 1),
                            A = new I010I(this.random.next()),
                            M = new I010I(this.random.next()),
                            T = new I010I(this.random.next()),
                            S = new I010I(this.random.next()),
                            R = new I010I(this.random.next()),
                            P = new I010I(this.random.next()),
                            n = 4,
                            r = h.data,
                            s = O0l1l.O0IOO(this.random.next(), 1, 1),
                            p = 1 + (s[0] / 255) * 2,
                            c = 1 + (s[1] / 255) * 2,
                            u = 1 + 2 * Math.pow(s[2] / 255, 2),
                            this.welcome && (u > c && ((o = u), (u = c), (c = o)), u > p && ((o = u), (u = p), (p = o))),
                            this.random.next() < 0.5
                                ? ((w = 160),
                                  (d = 11),
                                  (I = function (t, e) {
                                      return A.periodicTurbulence2d((t / l.width) * 8, (e / l.height) * 8, 8, d, 0.7);
                                  }))
                                : ((w = 255),
                                  (d = 11),
                                  (I = function (t, e) {
                                      return A.II0O1((t / l.width) * 10, (e / l.height) * 10, 10, d, 0.8);
                                  })),
                            q = [],
                            v = [],
                            i = [],
                            W = [],
                            Y = [],
                            X = E = 0;
                        E <= 10;
                        X = E += 1
                    )
                        for ($ = _ = 0; _ <= 10; $ = _ += 1) (q[X + 11 * $] = p + 6 * M.II0O1(100 + (X / 10) * n, 200 + ($ / 10) * n, n, 4, 0.6)), (v[X + 11 * $] = c + 6 * T.II0O1(100 + (X / 10) * n, 200 + ($ / 10) * n, n, 4, 0.6)), (i[X + 11 * $] = u + 6 * S.II0O1(100 + (X / 10) * n, 200 + ($ / 10) * n, n, 4, 0.6)), (W[X + 11 * $] = (R.II0O1(100 + (X / 10) * 4, 200 + ($ / 10) * 4, 4, 4, 0.6) * l.width) / 5), (Y[X + 11 * $] = (P.II0O1(100 + (X / 10) * 4, 200 + ($ / 10) * 4, 4, 4, 0.6) * l.height) / 5);
                    for ($ = L = 0, F = l.height - 1; L <= F; $ = L += 1) {
                        for (tt = ($ / l.width) * 10, k = Math.floor(tt), m = tt - k, m = m * m * (3 - 2 * m), X = U = 0, V = l.width - 1; U <= V; X = U += 1) (Q = (X / l.width) * 10), (x = Math.floor(Q)), (O = Q - x), (O = O * O * (3 - 2 * O)), (D = x + 11 * k), (C = x + 1 + 11 * k), (j = x + 11 * (k + 1)), (G = x + 1 + 11 * (k + 1)), (B = (1 - m) * (q[D] * (1 - O) + q[C] * O) + m * (q[j] * (1 - O) + q[G] * O)), (f = (1 - m) * (v[D] * (1 - O) + v[C] * O) + m * (v[j] * (1 - O) + v[G] * O)), (t = (1 - m) * (i[D] * (1 - O) + i[C] * O) + m * (i[j] * (1 - O) + i[G] * O)), (J = (1 - m) * (W[D] * (1 - O) + W[C] * O) + m * (W[j] * (1 - O) + W[G] * O)), (Z = (1 - m) * (Y[D] * (1 - O) + Y[C] * O) + m * (Y[j] * (1 - O) + Y[G] * O)), (o = I(X + J, $ + Z)), (b = 4 * X), (N = Math.pow(o, B) * w), (g = Math.pow(o, f) * w), (e = Math.pow(o, t) * w), (y = (N + g + e) / 3), (r[b] = y + 2 * (N - y)), (r[b + 1] = y + 2 * (g - y)), (r[b + 2] = y + 2 * (e - y)), (r[b + 3] = 255);
                        a.putImageData(h, 0, $);
                    }
                    return (l = this.addNoise(l, 2048 / l.width)), (this.texture = new THREE.Texture(l)), (this.texture.wrapS = this.texture.wrapT = THREE.RepeatWrapping), (this.texture.needsUpdate = !0), (z = new THREE.MeshBasicMaterial({ color: 10526880, map: this.texture })), (this.I11OI = new THREE.Mesh(H, z)), this.welcome ? (this.I11OI.scale.set(1600, 800, 800), (this.texture.repeat.x = 2)) : this.I11OI.scale.set(800, 800, 800), this.I11OI.position.set(0, 0, -400), this.lIlO0.add(this.I11OI), (K = Date.now() - K), K < 300 ? localStorage.setItem('ds_detail', '2') : K > 1e3 ? localStorage.setItem('ds_detail', '1') : void 0;
                }),
                (t.prototype.createSmallNebulas = function () {
                    return new Nebulas(this).l0OlI;
                }),
                (t.prototype.createSmallNebulasOld = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                    for (s = new THREE.Geometry(), s.faceVertexUvs = [[]], c = 128, h = 32, t = document.createElement('canvas'), t.width = c, t.height = c * h, e = t.getContext('2d'), i = e.getImageData(0, 0, t.width, t.width), n = o = 0, d = h - 1; o <= d; n = o += 1) this.createSmallNebula(i, t.width), e.putImageData(i, 0, n * t.width), (c = 0.5 * (30 + 20 * this.random.next()) * 2), (I = 300 * (this.random.next() - 0.5)), (O = 300 * (this.random.next() - 0.5)), (m = -150 - 50 * this.random.next()), (u = 180 * THREE.Math.DEG2RAD * 2 * this.random.next()), (a = s.vertices.length), s.vertices.push(new THREE.Vector3(I + c * Math.cos(u), O + c * Math.sin(u), m)), s.vertices.push(new THREE.Vector3(I + c * Math.cos(u + (180 * THREE.Math.DEG2RAD) / 2), O + c * Math.sin(u + (180 * THREE.Math.DEG2RAD) / 2), m)), s.vertices.push(new THREE.Vector3(I + c * Math.cos(u + 180 * THREE.Math.DEG2RAD), O + c * Math.sin(u + 180 * THREE.Math.DEG2RAD), m)), s.vertices.push(new THREE.Vector3(I + c * Math.cos(u + (180 * THREE.Math.DEG2RAD * 3) / 2), O + c * Math.sin(u + (180 * THREE.Math.DEG2RAD * 3) / 2), m)), s.faces.push(new THREE.Face3(a, a + 1, a + 2)), s.faces.push(new THREE.Face3(a + 2, a + 3, a)), (l = 1 / h), s.faceVertexUvs[0].push([new THREE.Vector2(0, n * l), new THREE.Vector2(1, n * l), new THREE.Vector2(1, (n + 1) * l)]), s.faceVertexUvs[0].push([new THREE.Vector2(1, (n + 1) * l), new THREE.Vector2(0, (n + 1) * l), new THREE.Vector2(0, n * l)]);
                    return (p = new THREE.Texture(t)), (p.needsUpdate = !0), (r = new THREE.MeshBasicMaterial({ color: 8421504, map: p, transparent: !0, depthWrite: !1 })), new THREE.Mesh(s, r);
                }),
                (t.prototype.createSmallNebula = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x;
                    for (o = new Gradient(), r = 0; ; ) {
                        if (((i = O0l1l.O0IOO(this.random.next(), this.random.next(), this.random.next())), o.add([r, i[0], i[1], i[2]]), r >= 1)) break;
                        r += 0.3 * this.random.next();
                    }
                    for (
                        I = new I010I(this.random.next()),
                            l = t.data,
                            a = 2 + 3 * this.random.next(),
                            d = 0.5 + 0.3 * this.random.next(),
                            n =
                                this.random.next() < 0
                                    ? function (t, e, i, s) {
                                          return I.turbulence2d(t, e, i, s);
                                      }
                                    : function (t, e, i, s) {
                                          return I.IlOI1(t, e, i, s);
                                      },
                            v = u = 0,
                            f = e - 1;
                        u <= f;
                        v = u += 1
                    )
                        for (w = c = 0, g = e - 1; c <= g; w = c += 1) (b = ((v - 0.5 * e) / e) * 2), (x = ((w - 0.5 * e) / e) * 2), (p = n((v / e) * a, (w / e) * a, 7, d) * Math.max(0, 2 * n(20 + (v / e) * 3, 33 + (w / e) * 3, 3, 0.6) - 0.5)), (s = Math.pow(Math.max(0, 1 - Math.sqrt(b * b + x * x)), 2)), (i = o.getInt(p)), (h = 4 * (e * w + v)), (l[h] = 255 & i), (l[h + 1] = (i >> 8) & 255), (l[h + 2] = (i >> 16) & 255), (l[h + 3] = p * s * 255);
                    for (O = this.random.lI10l(20), m = 0, y = O; m <= y; m += 1) (v = Math.floor(this.random.next() * e)), (w = Math.floor(this.random.next() * e)), (b = ((v - 0.5 * e) / e) * 2), (x = ((w - 0.5 * e) / e) * 2), (s = this.random.next()), (h = 4 * (e * w + v)), (l[h] = 255), (l[h + 1] = 255), (l[h + 2] = 255), (l[h + 3] = 255 * s);
                }),
                (t.prototype.addNoise = function (e, i, s) {
                    var l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                    if ((null == i && (i = 2), null == s && (s = 12), null == t.noise_canvas || null == t.noise_canvas[s])) {
                        for (null == t.noise_canvas && (t.noise_canvas = []), l = document.createElement('canvas'), l.width = 128, l.height = 128, a = l.getContext('2d'), r = a.getImageData(0, 0, l.width, l.height), o = r.data, h = d = 0, I = o.length - 1; d <= I; h = d += 4) (o[h + 3] = Math.random() * s), (n = Math.random() < 0.5 ? 0 : 255), (o[h] = n), (o[h + 1] = n), (o[h + 2] = n);
                        a.putImageData(r, 0, 0), (t.noise_canvas[s] = l);
                    }
                    for (1 !== i ? ((l = document.createElement('canvas')), (l.width = e.width * i), (l.height = e.height * i), (a = l.getContext('2d')), a.drawImage(e, 0, 0, l.width, l.height)) : ((l = e), (a = l.getContext('2d'))), a.globalCompositeOperation = 'source-atop', h = c = 0, O = l.width - 1, m = t.noise_canvas[s].width; m > 0 ? c <= O : c >= O; h = c += m) for (u = p = 0, f = l.height - 1, g = t.noise_canvas[s].height; g > 0 ? p <= f : p >= f; u = p += g) a.drawImage(t.noise_canvas[s], h, u);
                    return l;
                }),
                (t.prototype.createStar = function (t) {
                    var e, i, s;
                    return (s = new OI0Ol(this.l1110, this.random)), (i = 1.5 * (40 + 60 * this.random.next())), this.l1110.mode.aow && (i = 200), s.l0OlI.scale.set(i, i, i), (s.scale = i), this.suns.push(s), t > 1 ? ((e = new THREE.Group()), e.add(s.l0OlI), e.add(this.createStar(t - 1)), (e.orbit_ex = 14 * this.random.next() * 1.5), (e.orbit_ey = 14 * this.random.next() * 1.5), (e.orbit_inclination = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), (e.orbit_phase = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), (i = 0.6 + 0.2 * this.random.next()), e.children[1] instanceof THREE.Group && e.children[1].scale.set(i, i, i), e) : s.l0OlI;
                }),
                (t.prototype.createRepulsor = function () {
                    var t;
                    return (t = new Repulsor(this.suns[0])), this.repulsors.push(t), t.l0OlI;
                }),
                (t.prototype.lOO01 = function () {
                    if (null != this.l1110.display && (this.l1110.display.width !== this.width || this.l1110.display.height !== this.height)) return (this.width = this.l1110.display.width), (this.height = this.l1110.display.height), (this.I1000 = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 1e3)), (this.I1000.position.z = 70), this.O0OOO.lOlI1(this.width, this.height);
                }),
                (t.prototype.mod = function (t, e) {
                    return t - e * Math.floor(t / e);
                }),
                (t.prototype.initOffsets = function () {
                    return (this.O0llO = -this.l1110.lIlO0.Ill00.status.x), (this.OIOOO = -this.l1110.lIlO0.Ill00.status.y);
                }),
                (t.prototype.lOO11 = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N;
                    if (null != this.lIlO0 && (this.lOO01(), null != this.I1000)) {
                        if ((null != this.deepspace_ready && null != this.nebulae_ready && (!this.l1110.is_app || (null != this.app_planet && this.app_planet.done)) && (null == this.l1110.l00OO.welcomeScreenLoaded || this.loaded_notified || ((this.loaded_notified = !0), this.l1110.l00OO.welcomeScreenLoaded()), (j = Math.max(this.deepspace_ready, this.nebulae_ready)), (j = Date.now() - j), j > 2e3 && ((this.deepspace_ready = null), (this.nebulae_ready = null)), (n = Math.min(128, Math.floor((j / 2e3) * 128))), (n = (n << 16) + (n << 8) + n), this.deepspace_material.color.set(n), (n = Math.min(128, Math.floor((j / 2e3) * 128))), (n = (n << 16) + (n << 8) + n), this.nebulae_material.color.set(n)), this.l1110.lIlO0.IO11l.survival)) for (null == this.valuenoise && (this.valuenoise = new I010I()), c = Math.min(1, (this.l1110.lIlO0.IO11l.II1O0 - this.l1110.lIlO0.IO11l.survival_start) / Ol000.l1000), a = Date.now() % 1e7, k = Math.min(255, Math.floor(1024 * Math.pow(this.valuenoise.IlOI1(0.002 * a, 1, 2), 1.5))), r = Math.min(255, Math.floor(512 * Math.pow(this.valuenoise.IlOI1(0.0013 * a, 7, 2), 1.5))), s = Math.min(255, Math.floor(512 * Math.pow(this.valuenoise.IlOI1(9e-4 * a, 13, 2), 1.5))), k = Math.floor(k * c + 128 * (1 - c)), r = Math.floor(r * c + 128 * (1 - c)), s = Math.floor(s * c + 128 * (1 - c)), l = (k << 16) + (r << 8) + s, this.I11OI.material.color.setHex(l), E = this.suns, p = 0, I = E.length; p < I; p++) (P = E[p]), (A = (1 + c * (2 + 0.4 * Math.sin(((Date.now() % 4e3) / 4e3) * 2 * (180 * THREE.Math.DEG2RAD) + P.phase))) * P.scale), P.l0OlI.scale.set(A, A, A);
                        for (this.I11OI.visible = this.l1110.settings.check('background'), _ = this.planets, v = 0, O = _.length; v < O; v++) (w = _[v]), w.updateVisibility(this.l1110.settings.check('moons'), this.l1110.settings.check('planets'));
                        for (this.I1000.position.x = this.l1110.lIlO0.IO11l.I1000.x + this.l1110.lIlO0.shake.x, this.I1000.position.y = this.l1110.lIlO0.IO11l.I1000.y + this.l1110.lIlO0.shake.y, this.I11OI.position.x = this.I1000.position.x, this.I11OI.position.y = this.I1000.position.y, B = this.I1000.position.x / this.l1110.l0I1I, B = Math.abs(B) < 0.5 ? 0 : B < -0.5 ? 2 * B + 1 : 2 * B - 1, V = this.I1000.position.y / this.l1110.l0I1I, V = Math.abs(V) < 0.5 ? 0 : V < -0.5 ? 2 * V + 1 : 2 * V - 1, null != this.OOOI1 && this.OOOI1.position.set(B * this.l1110.l0I1I, V * this.l1110.l0I1I, -50), z = this.planets, x = 0, m = z.length; x < m; x++) (w = z[x]), w.l1O0l(e, this.l1110.lIlO0.IO11l.I1000.x, this.l1110.lIlO0.IO11l.I1000.y);
                        if (null != this.O0OOO && ((o = (60 * this.l1110.lIlO0.IO11l.I1O01) / 1e3), this.l1110.lIlO0.Ill00.status.alive && ((this.O0llO -= (this.l1110.lIlO0.Ill00.status.lllOl + this.l1110.lIlO0.shake.lllOl) * o), (this.OIOOO -= (this.l1110.lIlO0.Ill00.status.II110 + this.l1110.lIlO0.shake.II110) * o)), this.welcome && (this.l1110.is_app ? (this.O0llO += 0.02 * o) : (this.O0llO += 0.1 * o)), this.O0OOO.l1O0l(0.02 * this.O0llO, 0.02 * this.OIOOO, this.l1110.lIlO0.IO11l.II1O0 / 60), (this.O0OOO.IIl10.position.x = this.I1000.position.x), (this.O0OOO.IIl10.position.y = this.I1000.position.y), (this.texture.offset.x = 5e-4 * -this.O0llO), (this.texture.offset.y = 5e-4 * -this.OIOOO), null != this.nebula_group && ((this.nebula_group.visible = this.l1110.settings.check('nebulae')), (this.nebula_group.position.x = this.I1000.position.x + 0.15 * this.O0llO), (this.nebula_group.position.y = this.I1000.position.y + 0.15 * this.OIOOO)), null != this.galaxy_group)) for (this.galaxy_group.visible = this.l1110.settings.check('galaxies'), this.galaxy_group.position.x = this.I1000.position.x + 0.15 * this.O0llO, this.galaxy_group.position.y = this.I1000.position.y + 0.15 * this.OIOOO, M = this.galaxies, C = 0, f = M.length; C < f; C++) (h = M[C]), h.l1O0l(this.l1110.lIlO0.IO11l.II1O0, this.width, this.height);
                        for (u = this.sun_group, H = 1; null != u && null != u.orbit_ex; ) (i = (e / 60) * (180 * THREE.Math.DEG2RAD) * 2 * 0.01 * H + u.orbit_phase), (B = Math.cos(i) * u.orbit_ex), (V = Math.sin(i) * u.orbit_ey), (F = B * Math.cos(u.orbit_inclination) + V * Math.sin(u.orbit_inclination)), (N = B * Math.sin(u.orbit_inclination) - V * Math.cos(u.orbit_inclination)), (u.children[0].position.x = F), (u.children[0].position.y = N), (u.children[1].position.x = -F), (u.children[1].position.y = -N), (u = u.children[1]), (H *= 1.41);
                        for (T = this.suns, G = 0, g = T.length; G < g; G++) (D = T[G]), D.l1O0l();
                        if (null != this.repulsors && null != this.sun_group) for (b = this.sun_group.children.length > 0 ? this.sun_group.children[0] : this.sun_group, B = this.I1000.position.x < 0 ? -this.l1110.size : 0, V = this.I1000.position.y < 0 ? -this.l1110.size : 0, B += b.position.x, V += b.position.y, S = this.repulsors, d = L = 0, y = S.length; L < y; d = ++L) (R = S[d]), (R.l0OlI.position.x = B + (d % 2) * this.l1110.size), (R.l0OlI.position.y = V + Math.floor(d / 2) * this.l1110.size), (R.l0OlI.visible = this.l1110.settings.check('gravity_field'));
                        return null != this.app_planet && ((this.app_planet.l0OlI.rotation.y = ((-Date.now() % 6e5) / 6e5) * (180 * THREE.Math.DEG2RAD) * 2), (this.app_planet.rings.rotation.x = ((-Date.now() % 18e5) / 18e5) * (180 * THREE.Math.DEG2RAD) * 2), this.stop_app_planet_zoom || ((A = this.app_planet.Il1I1.scale.x), (A = 0.045 + 0.999 * A), this.app_planet.Il1I1.scale.set(A, A, A))), t.render(this.lIlO0, this.I1000), t.clearDepth();
                    }
                }),
                (t.prototype.dispose = function () {
                    if (null != this.app_planet) return this.app_planet.dispose();
                }),
                t
            );
        })()),
        (this.DeepSpace = (function () {
            function t(t) {
                var e, i, s, l, n;
                (this.backgroundscene = t),
                    (s = new THREE.PlaneGeometry(1, 1)),
                    (i = document.createElement('canvas')),
                    '2' === localStorage.getItem('ds_detail') ? (this.details_level = 2) : (this.details_level = 1),
                    this.backgroundscene.l1110.is_mobile_app && (this.details_level = 0.5),
                    (i.width = 512 * this.details_level),
                    (i.height = 512 * this.details_level),
                    (this.texture = new THREE.Texture(i)),
                    (this.material = new THREE.MeshBasicMaterial({ color: 10526880, map: this.texture })),
                    (this.I11OI = new THREE.Mesh(s, this.material)),
                    this.backgroundscene.welcome ? this.I11OI.scale.set(1600, 800, 800) : this.I11OI.scale.set(800, 800, 800),
                    this.I11OI.position.set(0, 0, -400),
                    this.backgroundscene.lIlO0.add(this.I11OI),
                    (this.backgroundscene.I11OI = this.I11OI),
                    (this.backgroundscene.texture = this.texture),
                    (this.backgroundscene.deepspace_material = this.material),
                    (e = new Blob([deepspaceworker], { type: 'text/javascript' })),
                    (n = new Worker(window.URL.createObjectURL(e))),
                    (l = Date.now()),
                    (n.onmessage = (function (t) {
                        return function (e) {
                            var s, n, a, o, r, h, u, d, c, p, I, O;
                            for (l = Date.now() - l, l < 1e3 ? localStorage.setItem('ds_detail', '2') : l > 4e3 && localStorage.setItem('ds_detail', '1'), l = Date.now(), p = e.data.result, s = i.getContext('2d'), a = s.getImageData(0, 0, i.width, i.height), n = a.data, O = o = 0, d = i.height - 1; o <= d; O = o += 1) for (I = h = 0, c = i.width - 1; h <= c; I = h += 1) (r = 4 * (I + O * i.width)), (u = p[I + O * i.width]), (n[r] = u >> 16), (n[r + 1] = (u >> 8) & 255), (n[r + 2] = 255 & u), (n[r + 3] = 255);
                            return s.putImageData(a, 0, 0), t.backgroundscene.l1110.is_mobile_app || (i = t.backgroundscene.addNoise(i, 2048 / i.width)), (t.texture = new THREE.Texture(i)), (t.texture.wrapS = t.texture.wrapT = THREE.RepeatWrapping), (t.texture.minFilter = THREE.LinearFilter), (t.texture.magFilter = THREE.LinearFilter), t.backgroundscene.welcome && (t.texture.repeat.x = 2), (t.texture.needsUpdate = !0), (t.material.map = t.texture), (t.backgroundscene.texture = t.texture), (t.backgroundscene.deepspace_ready = Date.now());
                        };
                    })(this)),
                    n.postMessage({ seed: this.backgroundscene.random.next(), width: i.width, height: i.height, welcome: this.backgroundscene.welcome });
            }
            return t;
        })()),
        (workerfunk = function (t) {
            var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K, W, Y, J, Z, X, Q, $, tt, et, it, st, lt;
            for (
                Q = t.data.width,
                    x = t.data.height,
                    N = new OII10(t.data.seed),
                    j = new I010I(N.next()),
                    R = new I010I(N.next()),
                    P = new I010I(N.next()),
                    A = new I010I(N.next()),
                    H = new I010I(N.next()),
                    D = new I010I(N.next()),
                    C = new I010I(N.next()),
                    r = 4,
                    W = [],
                    o = O0l1l.O0IOO(N.next(), 1, 1),
                    I = 1.5 + (o[0] / 255) * 1.5,
                    p = 1.5 + (o[1] / 255) * 1.5,
                    d = 1 + 1.5 * Math.pow(o[2] / 255, 2),
                    I *= 0.75,
                    p *= 0.75,
                    d *= 0.75,
                    t.data.welcome && (d > p && ((u = d), (d = p), (p = u)), d > I && ((u = d), (d = I), (I = u))),
                    h = 6,
                    N.next() < 0.5
                        ? ((E = 160),
                          (c = 11),
                          (h = 4),
                          (O = function (t, e) {
                              return j.periodicTurbulence2d((t / Q) * 8, (e / x) * 8, 8, c, 0.8);
                          }))
                        : ((E = 255),
                          (c = 10),
                          (h = 4),
                          (O = function (t, e) {
                              return j.II0O1((t / Q) * 10, (e / x) * 10, 10, c, 0.8);
                          })),
                    J = [],
                    w = [],
                    a = [],
                    Z = [],
                    X = [],
                    i = [],
                    et = k = 0;
                k <= 10;
                et = k += 1
            )
                for (st = M = 0; M <= 10; st = M += 1) (J[et + 11 * st] = I + R.II0O1(100 + (et / 10) * r, 200 + (st / 10) * r, r, 4, 0.6) * h), (w[et + 11 * st] = p + P.II0O1(100 + (et / 10) * r, 200 + (st / 10) * r, r, 4, 0.6) * h), (a[et + 11 * st] = d + A.II0O1(100 + (et / 10) * r, 200 + (st / 10) * r, r, 4, 0.6) * h), (Z[et + 11 * st] = (H.II0O1(100 + (et / 10) * 4, 200 + (st / 10) * 4, 4, 4, 0.6) * Q) / 5), (X[et + 11 * st] = (D.II0O1(100 + (et / 10) * 4, 200 + (st / 10) * 4, 4, 4, 0.6) * x) / 5), (i[et + 11 * st] = Math.max(0, Math.min(1, 2 * C.II0O1(100 + (et / 10) * 6, 200 + (st / 10) * 6, 6, 5, 0.6))));
            for (st = T = 0, U = x - 1; T <= U; st = T += 1) for (lt = (st / Q) * 10, z = Math.floor(lt), f = lt - z, f = f * f * (3 - 2 * f), et = S = 0, K = Q - 1; S <= K; et = S += 1) (it = (et / Q) * 10), (_ = Math.floor(it)), (m = it - _), (m = m * m * (3 - 2 * m)), (G = _ + 11 * z), (L = _ + 1 + 11 * z), (B = _ + 11 * (z + 1)), (F = _ + 1 + 11 * (z + 1)), (V = (1 - f) * (J[G] * (1 - m) + J[L] * m) + f * (J[B] * (1 - m) + J[F] * m)), (g = (1 - f) * (w[G] * (1 - m) + w[L] * m) + f * (w[B] * (1 - m) + w[F] * m)), (s = (1 - f) * (a[G] * (1 - m) + a[L] * m) + f * (a[B] * (1 - m) + a[F] * m)), ($ = (1 - f) * (Z[G] * (1 - m) + Z[L] * m) + f * (Z[B] * (1 - m) + Z[F] * m)), (tt = (1 - f) * (X[G] * (1 - m) + X[L] * m) + f * (X[B] * (1 - m) + X[F] * m)), (e = (1 - f) * (i[G] * (1 - m) + i[L] * m) + f * (i[B] * (1 - m) + i[F] * m)), (u = O(et + $, st + tt) * e), 4 * et, (Y = Math.pow(u, V) * E), (y = Math.pow(u, g) * E), (l = Math.pow(u, s) * E), (v = (Y + y + l) / 3), (q = Math.max(0, Math.min(255, Math.floor(v + 2 * (Y - v))))), (b = Math.max(0, Math.min(255, Math.floor(v + 2 * (y - v))))), (n = Math.max(0, Math.min(255, Math.floor(v + 2 * (l - v))))), W.push((q << 16) | (b << 8) | n);
            return self.postMessage({ result: W });
        }),
        (deepspaceworker = 'self.onmessage = ' + workerfunk + ';'),
        (deepspaceworker += 'var O0l1l = (function() {\n  function O0l1l() {}\n\n  O0l1l.O0IOO = function(h, s, v, lOI11) {\n    var b, f, g, i, p, q, r, t;\n    if (lOI11 == null) {\n      lOI11 = [];\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n    }\n    lOI11[0] = (r * 255) | 0;\n    lOI11[1] = (g * 255) | 0;\n    lOI11[2] = (b * 255) | 0;\n    return lOI11;\n  };\n\n  O0l1l.hsvToRgbHex = function(h, s, v) {\n    var b, f, g, i, p, q, r, t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n    }\n    return (((r * 255) | 0) << 16) | (((g * 255) | 0) << 8) | ((b * 255) | 0);\n  };\n\n  return O0l1l;\n\n})();\n\nvar OII10 = (function() {\n  function OII10(seed) {\n    this.seed = seed != null ? seed : Math.random();\n    if (this.seed < 1) {\n      this.seed *= 1 << 30;\n    }\n    this.a = 13971;\n    this.b = 12345;\n    this.size = 1 << 30;\n    this.IOl11 = this.size - 1;\n    this.O01II = 1 / this.size;\n    this.IOO0O();\n    this.IOO0O();\n    this.IOO0O();\n  }\n\n  OII10.prototype.next = function() {\n    this.seed = (this.seed * this.a + this.b) & this.IOl11;\n    return this.seed * this.O01II;\n  };\n\n  OII10.prototype.lI10l = function(IOII0, pow) {\n    if (pow != null) {\n      return Math.floor(Math.pow(this.next(), pow) * IOII0);\n    } else {\n      return Math.floor(this.next() * IOII0);\n    }\n  };\n\n  OII10.prototype.IOO0O = function() {\n    return this.seed = (this.seed * this.a + this.b) & this.IOl11;\n  };\n\n  OII10.prototype.feed = function(number) {\n    return this.seed = (this.seed * this.a * number + this.b) & this.IOl11;\n  };\n\n  return OII10;\n\n})();\n\nvar I010I = (function() {\n  function I010I(lll0O) {\n    var i, l, len, ref;\n    this.seed = lll0O;\n    this.table = [670, 243, 963, 607, 432, 29, 624, 809, 254, 752, 691, 904, 275, 984, 586, 94, 1014, 614, 252, 178, 488, 954, 55, 836, 186, 858, 719, 562, 685, 898, 167, 844, 639, 505, 85, 386, 520, 988, 561, 889, 91, 329, 900, 847, 334, 531, 168, 57, 789, 529, 259, 323, 313, 72, 153, 606, 694, 442, 547, 922, 242, 983, 965, 876, 39, 728, 383, 109, 343, 810, 815, 144, 457, 434, 221, 279, 328, 136, 674, 556, 502, 896, 582, 250, 665, 370, 926, 912, 118, 543, 365, 467, 311, 700, 15, 297, 609, 731, 476, 634, 715, 777, 62, 1007, 525, 942, 310, 627, 630, 448, 437, 822, 300, 339, 924, 583, 92, 800, 698, 312, 542, 740, 271, 778, 895, 447, 175, 957, 17, 481, 347, 283, 366, 277, 843, 966, 927, 535, 503, 234, 746, 712, 1010, 544, 671, 295, 978, 729, 997, 287, 621, 782, 160, 433, 537, 121, 413, 304, 98, 657, 498, 946, 319, 595, 191, 341, 554, 523, 274, 209, 435, 644, 947, 979, 397, 261, 681, 786, 1006, 565, 472, 180, 318, 126, 874, 693, 526, 276, 340, 808, 884, 409, 486, 962, 960, 772, 901, 690, 359, 837, 129, 363, 509, 616, 88, 382, 730, 513, 623, 999, 504, 48, 4, 384, 281, 560, 417, 99, 773, 956, 943, 496, 558, 218, 170, 471, 536, 138, 19, 266, 6, 868, 845, 16, 985, 866, 601, 445, 458, 894, 950, 349, 1017, 125, 495, 723, 446, 647, 834, 880, 272, 475, 483, 227, 357, 750, 851, 139, 406, 336, 158, 284, 482, 324, 991, 632, 587, 663, 74, 256, 541, 120, 801, 831, 46, 522, 589, 1, 571, 368, 137, 761, 885, 968, 982, 948, 785, 391, 840, 932, 829, 117, 641, 466, 367, 688, 733, 229, 735, 14, 205, 31, 316, 333, 183, 521, 795, 58, 1021, 282, 794, 939, 40, 394, 793, 1002, 763, 212, 484, 133, 260, 465, 396, 769, 518, 955, 497, 377, 145, 508, 514, 224, 196, 454, 176, 975, 865, 1005, 1023, 986, 596, 426, 893, 551, 90, 130, 873, 22, 709, 686, 436, 236, 661, 579, 764, 362, 141, 112, 970, 987, 12, 317, 369, 26, 344, 66, 803, 493, 716, 9, 637, 945, 225, 703, 78, 346, 751, 123, 1009, 1016, 27, 52, 864, 902, 921, 292, 314, 599, 799, 263, 626, 338, 953, 491, 892, 353, 692, 917, 540, 882, 677, 744, 633, 821, 327, 60, 1020, 928, 788, 360, 414, 430, 462, 824, 820, 727, 398, 342, 273, 726, 981, 84, 82, 206, 388, 720, 806, 652, 550, 238, 159, 134, 732, 897, 500, 881, 805, 814, 701, 717, 566, 7, 211, 604, 816, 56, 658, 107, 61, 374, 320, 501, 13, 642, 863, 791, 438, 348, 97, 214, 86, 305, 875, 656, 24, 364, 767, 156, 879, 590, 734, 920, 655, 577, 83, 584, 660, 38, 100, 299, 580, 990, 636, 944, 463, 766, 996, 714, 8, 515, 87, 198, 280, 444, 131, 404, 108, 278, 487, 223, 598, 410, 395, 199, 268, 989, 75, 195, 760, 916, 977, 421, 11, 1000, 813, 216, 817, 823, 164, 668, 739, 572, 30, 707, 798, 291, 564, 77, 456, 478, 68, 643, 615, 172, 841, 672, 919, 1012, 613, 385, 980, 711, 771, 682, 232, 765, 143, 620, 631, 861, 468, 622, 201, 325, 424, 189, 608, 403, 775, 646, 673, 1013, 400, 859, 838, 345, 210, 860, 65, 63, 34, 755, 161, 479, 235, 783, 460, 826, 507, 854, 839, 666, 802, 441, 114, 443, 738, 770, 929, 857, 907, 741, 935, 949, 322, 995, 217, 667, 269, 184, 650, 1018, 506, 290, 787, 459, 721, 828, 567, 222, 494, 142, 743, 405, 76, 722, 588, 147, 899, 270, 695, 597, 337, 155, 569, 679, 853, 450, 21, 517, 197, 371, 257, 380, 244, 553, 952, 381, 827, 524, 877, 702, 306, 600, 1011, 431, 781, 594, 387, 1019, 411, 533, 659, 177, 725, 930, 933, 832, 41, 2, 687, 1008, 439, 307, 891, 871, 415, 651, 308, 298, 811, 0, 194, 592, 241, 918, 18, 973, 110, 654, 967, 490, 683, 914, 128, 992, 964, 122, 230, 149, 289, 392, 416, 852, 936, 262, 102, 938, 511, 255, 510, 165, 105, 419, 958, 294, 379, 49, 699, 330, 593, 539, 710, 106, 79, 440, 200, 704, 961, 326, 321, 759, 193, 890, 44, 549, 913, 776, 909, 552, 972, 132, 429, 748, 532, 115, 888, 635, 842, 649, 747, 807, 887, 856, 784, 148, 530, 116, 157, 372, 754, 28, 581, 67, 187, 202, 818, 181, 45, 959, 146, 124, 994, 872, 675, 706, 253, 247, 625, 570, 152, 423, 185, 361, 849, 971, 546, 412, 830, 1022, 188, 850, 140, 220, 451, 219, 768, 1015, 455, 780, 976, 449, 969, 848, 293, 249, 59, 390, 512, 538, 578, 906, 819, 862, 974, 33, 911, 135, 908, 248, 401, 951, 527, 169, 676, 640, 1003, 591, 103, 37, 285, 684, 104, 163, 753, 1004, 934, 645, 470, 774, 20, 489, 228, 461, 492, 469, 998, 296, 233, 869, 605, 315, 36, 5, 425, 878, 617, 886, 23, 355, 993, 93, 473, 555, 474, 464, 937, 925, 1001, 611, 35, 812, 174, 53, 286, 680, 267, 428, 335, 883, 653, 69, 718, 585, 749, 150, 408, 393, 915, 576, 664, 629, 756, 402, 638, 602, 245, 43, 545, 213, 303, 192, 70, 453, 910, 407, 742, 111, 548, 835, 452, 575, 903, 619, 376, 154, 302, 151, 804, 867, 574, 563, 239, 648, 179, 855, 378, 618, 264, 669, 427, 354, 399, 265, 50, 796, 166, 923, 825, 697, 534, 54, 173, 870, 792, 162, 713, 246, 89, 51, 350, 705, 251, 557, 237, 240, 736, 689, 203, 519, 73, 81, 628, 288, 331, 204, 528, 480, 389, 32, 418, 573, 757, 358, 215, 226, 42, 779, 231, 171, 190, 612, 301, 762, 708, 420, 846, 208, 485, 351, 790, 737, 10, 258, 309, 797, 127, 516, 559, 499, 352, 71, 758, 25, 568, 113, 3, 610, 101, 375, 96, 603, 745, 64, 80, 477, 332, 833, 940, 373, 905, 422, 182, 356, 941, 47, 119, 662, 931, 696, 95, 724, 678, 207];\n    len = this.table.length;\n    for (i = l = 0, ref = len - 1; 0 <= ref ? l <= ref : l >= ref; i = 0 <= ref ? ++l : --l) {\n      this.table.push(this.table[i]);\n    }\n    if (this.seed < 1) {\n      this.seed *= 1 << 30;\n    }\n    this.size = 1024;\n    this.normalize = 1 / 1023;\n    this.IOl11 = 1023;\n    this.OIl10 = this.seed & this.IOl11;\n    this.OIOI0 = (this.seed >> 10) & this.IOl11;\n    this.I0IlI = (this.seed >> 20) & this.IOl11;\n    this.c2d = [];\n    this.I11OO = Math.cos(.3);\n    this.III10 = Math.sin(.3);\n  }\n\n  I010I.prototype.ll1Ol = function(x, y, a) {\n    var c;\n    c = (-2 * a + 3) * a * a;\n    return x * (1 - c) + y * c;\n  };\n\n  I010I.prototype.OI0Il = function(x, y, a) {\n    return x * (1 - a) + y * a;\n  };\n\n  I010I.prototype.l0lI0 = function(x, y) {\n    var llllO, l1O10, O1000, v2, I0I1O, I011l, OIIO0, l01lI;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    OIIO0 = OIIO0 & this.IOl11;\n    l01lI = l01lI & this.IOl11;\n    O1000 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.OIOI0]]];\n    v2 = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.OIOI0]]];\n    I0I1O = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.OIOI0]]];\n    I011l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.OIOI0]]];\n    return this.ll1Ol(this.ll1Ol(O1000, v2, llllO), this.ll1Ol(I0I1O, I011l, llllO), l1O10) * this.normalize;\n  };\n\n  I010I.prototype.I1110 = function(x, y, z) {\n    var llllO, l1O10, az, O1000, v2, I0I1O, I011l, IOl0l, OI11l, ll1l1, IllOO, O1Oll, IOIOO, OIIO0, l01lI, IOlO1;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    IOlO1 = Math.floor(z);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    az = z - IOlO1;\n    OIIO0 = OIIO0 & this.IOl11;\n    l01lI = l01lI & this.IOl11;\n    IOlO1 = IOlO1 & this.IOl11;\n    O1000 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    v2 = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I0I1O = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I011l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    IOl0l = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    OI11l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    ll1l1 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    IllOO = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    O1Oll = this.ll1Ol(this.ll1Ol(O1000, v2, llllO), this.ll1Ol(I0I1O, I011l, llllO), l1O10);\n    IOIOO = this.ll1Ol(this.ll1Ol(IOl0l, OI11l, llllO), this.ll1Ol(ll1l1, IllOO, llllO), l1O10);\n    return this.ll1Ol(O1Oll, IOIOO, az) * this.normalize;\n  };\n\n  I010I.prototype.IIIOI = function(x, y, z) {\n    var llllO, l1O10, az, O1000, v2, I0I1O, I011l, IOl0l, OI11l, ll1l1, IllOO, O1Oll, IOIOO, OIIO0, l01lI, IOlO1;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    IOlO1 = Math.floor(z);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    az = z - IOlO1;\n    OIIO0 = OIIO0 & this.IOl11;\n    l01lI = l01lI & this.IOl11;\n    IOlO1 = IOlO1 & this.IOl11;\n    O1000 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    v2 = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I0I1O = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I011l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    IOl0l = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    OI11l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    ll1l1 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    IllOO = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    O1Oll = this.OI0Il(this.OI0Il(O1000, v2, llllO), this.OI0Il(I0I1O, I011l, llllO), l1O10);\n    IOIOO = this.OI0Il(this.OI0Il(IOl0l, OI11l, llllO), this.OI0Il(ll1l1, IllOO, llllO), l1O10);\n    return this.OI0Il(O1Oll, IOIOO, az) * this.normalize;\n  };\n\n  I010I.prototype.OOl0O = function(OO0l0, OOOI0, iz) {};\n\n  I010I.prototype.IlOI1 = function(x, y, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var d, i, l, O01II, IOOO1, O10O0, ref, IIlI1;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      IIlI1 += this.l0lI0(x, y) * d;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.OO01O = function(x, y, z, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var d, i, l, O01II, IOOO1, O10O0, ref, IIlI1;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      IIlI1 += this.I1110(x, y, z) * d;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n      z = OllI1 * z;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.II0O1 = function(x, y, Ol10I, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var llllO, l1O10, OO0l0, OOOI0, O1000, v2, I0I1O, I011l;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    OO0l0 = Math.floor(x / Ol10I);\n    OOOI0 = Math.floor(y / Ol10I);\n    llllO = x / Ol10I - OO0l0;\n    l1O10 = y / Ol10I - OOOI0;\n    O1000 = this.IlOI1(llllO * Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    v2 = this.IlOI1(llllO * Ol10I + Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I0I1O = this.IlOI1(llllO * Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I011l = this.IlOI1(llllO * Ol10I + Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    return this.ll1Ol(this.ll1Ol(O1000, v2, 1 - llllO), this.ll1Ol(I0I1O, I011l, 1 - llllO), 1 - l1O10);\n  };\n\n  I010I.prototype.turbulence2d = function(x, y, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var d, i, l, O01II, IOOO1, O10O0, ref, IIlI1;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      IIlI1 += 2 * (.5 - Math.abs(.5 - this.l0lI0(x, y))) * d;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.periodicTurbulence2d = function(x, y, Ol10I, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var llllO, l1O10, OO0l0, OOOI0, O1000, v2, I0I1O, I011l;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    OO0l0 = Math.floor(x / Ol10I);\n    OOOI0 = Math.floor(y / Ol10I);\n    llllO = x / Ol10I - OO0l0;\n    l1O10 = y / Ol10I - OOOI0;\n    O1000 = this.turbulence2d(llllO * Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    v2 = this.turbulence2d(llllO * Ol10I + Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I0I1O = this.turbulence2d(llllO * Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I011l = this.turbulence2d(llllO * Ol10I + Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    return this.ll1Ol(this.ll1Ol(O1000, v2, 1 - llllO), this.ll1Ol(I0I1O, I011l, 1 - llllO), 1 - l1O10);\n  };\n\n  I010I.prototype.O0O1I = function(x, y, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var O0I0l, d, i, l, O01II, IOOO1, O10O0, ref, IIlI1, v;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    O0I0l = 1;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      v = this.l0lI0(x, y) * 2;\n      if (v > 1) {\n        v = 2 - v;\n      }\n      v = Math.pow(v, 2);\n      IIlI1 += O0I0l * d * v;\n      O0I0l = v;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.lOl0l = function(x, y, z, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var O0I0l, d, i, l, O0I0O, O01II, IOOO1, O10O0, I00IO, ref, IIlI1, v;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    O0I0l = 1;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      v = this.I1110(x, y, z) * 2;\n      if (v > 1) {\n        v = 2 - v;\n      }\n      v = Math.pow(v, 2);\n      IIlI1 += O0I0l * d * v;\n      O0I0l = v;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = x * O00Il + y * ts;\n      O10O0 = y * O00Il - x * ts;\n      O0I0O = O10O0 * O00Il + z * ts;\n      I00IO = z * O00Il - O10O0 * ts;\n      x = OllI1 * IOOO1;\n      y = OllI1 * O0I0O;\n      z = OllI1 * I00IO;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.O1O01 = function(x, y, Ol10I) {\n    var llllO, l1O10, IIllI, I0OlO, OI01O, I1IO0, OIIOI, I01I1, d, d1, d2, IlIII, OII00, OlI0l, OlllI, O0OI1, I1Il1, i, j, l, m, px, l1O1l, OIIO0, l0OIl, l01lI, IlOlI;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    IIllI = 100;\n    I0OlO = 0;\n    OI01O = 0;\n    I1IO0 = 100;\n    OIIOI = 0;\n    I01I1 = 0;\n    for (i = l = 0; l <= 2; i = l += 1) {\n      for (j = m = 0; m <= 2; j = m += 1) {\n        l0OIl = (OIIO0 - 1 + i) % Ol10I;\n        IlOlI = (l01lI - 1 + j) % Ol10I;\n        px = -1 + i + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + IlOlI]]] * this.normalize * .8 + .1;\n        l1O1l = -1 + j + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[IlOlI + 1]]]] * this.normalize * .8 + .1;\n        IlIII = llllO - px;\n        OlllI = l1O10 - l1O1l;\n        d = IlIII * IlIII + OlllI * OlllI;\n        if (d < IIllI) {\n          I1IO0 = IIllI;\n          OIIOI = I0OlO;\n          I01I1 = OI01O;\n          IIllI = d;\n          I0OlO = px;\n          OI01O = l1O1l;\n        } else if (d < I1IO0) {\n          I1IO0 = d;\n          OIIOI = px;\n          I01I1 = l1O1l;\n        }\n      }\n    }\n    OII00 = llllO - I0OlO;\n    O0OI1 = l1O10 - OI01O;\n    d1 = Math.sqrt(OII00 * OII00 + O0OI1 * O0OI1);\n    OlI0l = llllO - OIIOI;\n    I1Il1 = l1O10 - I01I1;\n    d2 = Math.sqrt(OlI0l * OlI0l + I1Il1 * I1Il1);\n    return Math.min(d1, d2) / Math.max(d1, d2);\n  };\n\n  I010I.prototype.O1II1 = function(x, y, Ol10I) {\n    var llllO, l1O10, IIllI, I0OlO, OI01O, O01I1, d, IlIII, OlllI, i, j, l, m, px, l1O1l, seed, OIIO0, l0OIl, l01lI, IlOlI;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    IIllI = 100;\n    I0OlO = 0;\n    OI01O = 0;\n    O01I1 = 0;\n    for (i = l = 0; l <= 2; i = l += 1) {\n      for (j = m = 0; m <= 2; j = m += 1) {\n        l0OIl = (OIIO0 - 1 + i) % Ol10I;\n        IlOlI = (l01lI - 1 + j) % Ol10I;\n        px = -1 + i + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + IlOlI]]] * this.normalize * .8 + .1;\n        l1O1l = -1 + j + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[IlOlI + 1]]]] * this.normalize * .8 + .1;\n        seed = this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[IlOlI + 17]]]];\n        IlIII = llllO - px;\n        OlllI = l1O10 - l1O1l;\n        d = IlIII * IlIII + OlllI * OlllI;\n        if (d < IIllI) {\n          IIllI = d;\n          I0OlO = px;\n          OI01O = l1O1l;\n          O01I1 = seed;\n        }\n      }\n    }\n    return O01I1 * this.normalize;\n  };\n\n  I010I.prototype.OlO1O = function(x, y, z, Ol10I) {\n    var llllO, l1O10, az, IIllI, I0OlO, OI01O, I1I1I, I1IO0, OIIOI, I01I1, lIO1O, d, d1, d2, IlIII, OII00, OlI0l, OlllI, O0OI1, I1Il1, lIO01, Il1l0, OOI0I, i, j, k, l, m, n, px, l1O1l, O0lOO, OIIO0, l0OIl, l01lI, IlOlI, IOlO1, Ol1IO;\n    if (Ol10I == null) {\n      Ol10I = 100;\n    }\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    IOlO1 = Math.floor(z);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    az = z - IOlO1;\n    IIllI = 100;\n    I0OlO = 0;\n    OI01O = 0;\n    I1I1I = 0;\n    I1IO0 = 100;\n    OIIOI = 0;\n    I01I1 = 0;\n    lIO1O = 0;\n    for (i = l = 0; l <= 2; i = l += 1) {\n      for (j = m = 0; m <= 2; j = m += 1) {\n        for (k = n = 0; n <= 2; k = n += 1) {\n          l0OIl = ((OIIO0 - 1 + i) % Ol10I) & this.IOl11;\n          IlOlI = ((l01lI - 1 + j) % Ol10I) & this.IOl11;\n          Ol1IO = ((IOlO1 - 1 + k) % Ol10I) & this.IOl11;\n          px = -1 + i + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[Ol1IO + IlOlI]]]] * this.normalize;\n          l1O1l = -1 + j + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[this.table[IlOlI + Ol1IO] + 1]]]] * this.normalize;\n          O0lOO = -1 + k + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[this.table[IlOlI + Ol1IO] + 37]]]] * this.normalize;\n        }\n        IlIII = llllO - px;\n        OlllI = l1O10 - l1O1l;\n        lIO01 = az - O0lOO;\n        d = IlIII * IlIII + OlllI * OlllI + lIO01 * lIO01;\n        if (d < IIllI) {\n          I1IO0 = IIllI;\n          OIIOI = I0OlO;\n          I01I1 = OI01O;\n          lIO1O = I1I1I;\n          IIllI = d;\n          I0OlO = px;\n          OI01O = l1O1l;\n          I1I1I = O0lOO;\n        } else if (d < I1IO0) {\n          I1IO0 = d;\n          OIIOI = px;\n          I01I1 = l1O1l;\n          lIO1O = O0lOO;\n        }\n      }\n    }\n    OII00 = llllO - I0OlO;\n    O0OI1 = l1O10 - OI01O;\n    Il1l0 = az - I1I1I;\n    d1 = Math.sqrt(OII00 * OII00 + O0OI1 * O0OI1 + Il1l0 * Il1l0);\n    OlI0l = llllO - OIIOI;\n    I1Il1 = l1O10 - I01I1;\n    OOI0I = az - lIO1O;\n    d2 = Math.sqrt(OlI0l * OlI0l + I1Il1 * I1Il1 + OOI0I * OOI0I);\n    return Math.min(d1, d2) / Math.max(d1, d2);\n  };\n\n  I010I.OO1ll = function(size) {\n    var i, index, l, ref, t, v;\n    t = [];\n    for (i = l = 0, ref = size - 1; 0 <= ref ? l <= ref : l >= ref; i = 0 <= ref ? ++l : --l) {\n      t[i] = i;\n    }\n    v = [];\n    while (true) {\n      if (t.length === 0) {\n        break;\n      }\n      index = Math.floor(Math.random() * t.length);\n      v.push(t.splice(index, 1)[0]);\n    }\n    return v;\n  };\n\n  return I010I;\n\n})();'),
        (this.Nebulas = (function () {
            function t(t) {
                var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x;
                for (this.backgroundscene = t, a = new THREE.Geometry(), a.faceVertexUvs = [[]], f = 128, this.backgroundscene.l1110.is_mobile_app && (f = 64), p = 32, i = document.createElement('canvas'), i.width = f, i.height = f * p, s = i.getContext('2d'), g = new THREE.Texture(i), g.needsUpdate = !0, c = new THREE.MeshBasicMaterial({ color: 8421504, map: g, transparent: !0, depthWrite: !1 }), n = s.getImageData(0, 0, i.width, i.width), this.random = this.backgroundscene.random, r = u = 0, O = p - 1; u <= O; r = u += 1) (f = 0.5 * (30 + 20 * this.random.next()) * 1.5), (b = 300 * (this.random.next() - 0.5)), (w = 300 * (this.random.next() - 0.5)), (x = -150 - 50 * this.random.next()), (I = 180 * THREE.Math.DEG2RAD * 2 * this.random.next()), (h = a.vertices.length), a.vertices.push(new THREE.Vector3(b + f * Math.cos(I), w + f * Math.sin(I), x)), a.vertices.push(new THREE.Vector3(b + f * Math.cos(I + (180 * THREE.Math.DEG2RAD) / 2), w + f * Math.sin(I + (180 * THREE.Math.DEG2RAD) / 2), x)), a.vertices.push(new THREE.Vector3(b + f * Math.cos(I + 180 * THREE.Math.DEG2RAD), w + f * Math.sin(I + 180 * THREE.Math.DEG2RAD), x)), a.vertices.push(new THREE.Vector3(b + f * Math.cos(I + (180 * THREE.Math.DEG2RAD * 3) / 2), w + f * Math.sin(I + (180 * THREE.Math.DEG2RAD * 3) / 2), x)), a.faces.push(new THREE.Face3(h, h + 1, h + 2)), a.faces.push(new THREE.Face3(h + 2, h + 3, h)), (o = 1 / p), a.faceVertexUvs[0].push([new THREE.Vector2(0, r * o), new THREE.Vector2(1, r * o), new THREE.Vector2(1, (r + 1) * o)]), a.faceVertexUvs[0].push([new THREE.Vector2(1, (r + 1) * o), new THREE.Vector2(0, (r + 1) * o), new THREE.Vector2(0, r * o)]);
                for (
                    g = new THREE.Texture(i),
                        g.minFilter = THREE.LinearFilter,
                        g.magFilter = THREE.LinearFilter,
                        c = new THREE.MeshBasicMaterial({ color: 0, map: g, transparent: !0, depthWrite: !1 }),
                        this.backgroundscene.nebulae_material = c,
                        this.l0OlI = new THREE.Mesh(a, c),
                        e = new Blob([nebulasworker], { type: 'text/javascript' }),
                        v = new Worker(window.URL.createObjectURL(e)),
                        y = Date.now(),
                        l = 0,
                        v.onmessage = (function (t) {
                            return function (e) {
                                var a, o, r, u, d, c;
                                for (c = e.data.result, a = n.data, b = o = 0, u = i.width - 1; o <= u; b = o += 1) for (w = r = 0, d = i.width - 1; r <= d; w = r += 1) (h = 4 * (b + w * i.width)), (I = c[b + w * i.width]), (a[h] = (I >> 16) & 255), (a[h + 1] = (I >> 8) & 255), (a[h + 2] = 255 & I), (a[h + 3] = (I >> 24) & 255);
                                if (((h = e.data.index), s.putImageData(n, 0, h * i.width), ++l === p)) return (y = Date.now() - y), (g.needsUpdate = !0), (t.backgroundscene.nebulae_ready = Date.now());
                            };
                        })(this),
                        r = d = 0,
                        m = p - 1;
                    d <= m;
                    r = d += 1
                )
                    v.postMessage({ seed: this.backgroundscene.random.next(), size: i.width, index: r, welcome: this.backgroundscene.welcome });
            }
            return t;
        })()),
        (workerfunk = function (t) {
            var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k;
            for (v = t.data.size, O = new OII10(t.data.seed), o = t.data.index, y = [], n = new Gradient(), a = 0; ; ) {
                if (((e = O0l1l.O0IOO(O.next(), 0.75 * O.next(), O.next())), n.add([a, e[0], e[1], e[2]]), a >= 1)) break;
                a += 0.3 * O.next();
            }
            for (
                p = new I010I(O.next()),
                    l = 2 + 3 * O.next(),
                    u = 0.5 + 0.3 * O.next(),
                    s =
                        O.next() < 0
                            ? function (t, e, i, s) {
                                  return p.turbulence2d(t, e, i, s);
                              }
                            : function (t, e, i, s) {
                                  return p.IlOI1(t, e, i, s);
                              },
                    b = r = 0,
                    m = v - 1;
                r <= m;
                b = r += 1
            )
                for (x = h = 0, f = v - 1; h <= f; x = h += 1) (w = ((b - 0.5 * v) / v) * 2), (k = ((x - 0.5 * v) / v) * 2), (c = s((b / v) * l, (x / v) * l, 7, u) * Math.max(0, 2 * s(20 + (b / v) * 3, 33 + (x / v) * 3, 3, 0.6) - 0.5)), (i = Math.pow(Math.max(0, 1 - Math.sqrt(w * w + k * k)), 2)), (e = n.getInt(c)), (e |= (c * i * 255) << 24), (y[b + x * v] = e);
            for (I = O.lI10l(20), d = 0, g = I; d <= g; d += 1) (b = Math.floor(O.next() * v)), (x = Math.floor(O.next() * v)), (i = O.next()), (e = 16777215 | (Math.floor(255 * i) << 24)), (y[b + x * v] = e);
            return self.postMessage({ result: y, index: o });
        }),
        (nebulasworker = 'self.onmessage = ' + workerfunk + ';'),
        (nebulasworker += 'var Gradient = (function() {\n  function Gradient(OI01I) {\n    this.OI01I = OI01I;\n    if (this.OI01I == null) {\n      this.OI01I = [];\n    }\n  }\n\n  Gradient.prototype.add = function(v) {\n    return this.OI01I.push(v);\n  };\n\n  Gradient.prototype.getInt = function(x) {\n    var a, b, index, O1000, v2;\n    if (this.OI01I.length === 0) {\n      return 0;\n    }\n    O1000 = v2 = this.OI01I[0];\n    if (x <= O1000[0]) {\n      return (O1000[1] << 16) | (O1000[2] << 8) | O1000[3];\n    }\n    index = 1;\n    while (true) {\n      if (x < v2[0] || index >= this.OI01I.length - 1) {\n        break;\n      }\n      O1000 = v2;\n      v2 = this.OI01I[index++];\n    }\n    if (x >= v2[0]) {\n      return (v2[1] << 16) | (v2[2] << 8) | v2[3];\n    } else {\n      b = (x - O1000[0]) / (v2[0] - O1000[0]);\n      a = (v2[0] - x) / (v2[0] - O1000[0]);\n      return ((a * O1000[1] + b * v2[1]) << 16) | ((a * O1000[2] + b * v2[2]) << 8) | ((a * O1000[3] + b * v2[3]) | 0);\n    }\n  };\n\n  Gradient.prototype.get = function(x) {\n    var a, b, index, O1000, v2;\n    if (this.OI01I.length === 0) {\n      return [0, 0, 0];\n    }\n    O1000 = v2 = this.OI01I[0];\n    if (x <= O1000[0]) {\n      return [O1000[1], O1000[2], O1000[3]];\n    }\n    index = 1;\n    while (true) {\n      if (x < v2[0] || index >= this.OI01I.length - 1) {\n        break;\n      }\n      O1000 = v2;\n      v2 = this.OI01I[index++];\n    }\n    if (x >= v2[0]) {\n      return [v2[1], v2[2], v2[3]];\n    } else {\n      b = (x - O1000[0]) / (v2[0] - O1000[0]);\n      a = (v2[0] - x) / (v2[0] - O1000[0]);\n      return [a * O1000[1] + b * v2[1], a * O1000[2] + b * v2[2], a * O1000[3] + b * v2[3]];\n    }\n  };\n\n  return Gradient;\n\n})();\n\nvar O0l1l = (function() {\n  function O0l1l() {}\n\n  O0l1l.O0IOO = function(h, s, v, lOI11) {\n    var b, f, g, i, p, q, r, t;\n    if (lOI11 == null) {\n      lOI11 = [];\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n    }\n    lOI11[0] = (r * 255) | 0;\n    lOI11[1] = (g * 255) | 0;\n    lOI11[2] = (b * 255) | 0;\n    return lOI11;\n  };\n\n  O0l1l.hsvToRgbHex = function(h, s, v) {\n    var b, f, g, i, p, q, r, t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n    }\n    return (((r * 255) | 0) << 16) | (((g * 255) | 0) << 8) | ((b * 255) | 0);\n  };\n\n  return O0l1l;\n\n})();\n\nvar OII10 = (function() {\n  function OII10(seed) {\n    this.seed = seed != null ? seed : Math.random();\n    if (this.seed < 1) {\n      this.seed *= 1 << 30;\n    }\n    this.a = 13971;\n    this.b = 12345;\n    this.size = 1 << 30;\n    this.IOl11 = this.size - 1;\n    this.O01II = 1 / this.size;\n    this.IOO0O();\n    this.IOO0O();\n    this.IOO0O();\n  }\n\n  OII10.prototype.next = function() {\n    this.seed = (this.seed * this.a + this.b) & this.IOl11;\n    return this.seed * this.O01II;\n  };\n\n  OII10.prototype.lI10l = function(IOII0, pow) {\n    if (pow != null) {\n      return Math.floor(Math.pow(this.next(), pow) * IOII0);\n    } else {\n      return Math.floor(this.next() * IOII0);\n    }\n  };\n\n  OII10.prototype.IOO0O = function() {\n    return this.seed = (this.seed * this.a + this.b) & this.IOl11;\n  };\n\n  OII10.prototype.feed = function(number) {\n    return this.seed = (this.seed * this.a * number + this.b) & this.IOl11;\n  };\n\n  return OII10;\n\n})();\n\nvar I010I = (function() {\n  function I010I(lll0O) {\n    var i, l, len, ref;\n    this.seed = lll0O;\n    this.table = [670, 243, 963, 607, 432, 29, 624, 809, 254, 752, 691, 904, 275, 984, 586, 94, 1014, 614, 252, 178, 488, 954, 55, 836, 186, 858, 719, 562, 685, 898, 167, 844, 639, 505, 85, 386, 520, 988, 561, 889, 91, 329, 900, 847, 334, 531, 168, 57, 789, 529, 259, 323, 313, 72, 153, 606, 694, 442, 547, 922, 242, 983, 965, 876, 39, 728, 383, 109, 343, 810, 815, 144, 457, 434, 221, 279, 328, 136, 674, 556, 502, 896, 582, 250, 665, 370, 926, 912, 118, 543, 365, 467, 311, 700, 15, 297, 609, 731, 476, 634, 715, 777, 62, 1007, 525, 942, 310, 627, 630, 448, 437, 822, 300, 339, 924, 583, 92, 800, 698, 312, 542, 740, 271, 778, 895, 447, 175, 957, 17, 481, 347, 283, 366, 277, 843, 966, 927, 535, 503, 234, 746, 712, 1010, 544, 671, 295, 978, 729, 997, 287, 621, 782, 160, 433, 537, 121, 413, 304, 98, 657, 498, 946, 319, 595, 191, 341, 554, 523, 274, 209, 435, 644, 947, 979, 397, 261, 681, 786, 1006, 565, 472, 180, 318, 126, 874, 693, 526, 276, 340, 808, 884, 409, 486, 962, 960, 772, 901, 690, 359, 837, 129, 363, 509, 616, 88, 382, 730, 513, 623, 999, 504, 48, 4, 384, 281, 560, 417, 99, 773, 956, 943, 496, 558, 218, 170, 471, 536, 138, 19, 266, 6, 868, 845, 16, 985, 866, 601, 445, 458, 894, 950, 349, 1017, 125, 495, 723, 446, 647, 834, 880, 272, 475, 483, 227, 357, 750, 851, 139, 406, 336, 158, 284, 482, 324, 991, 632, 587, 663, 74, 256, 541, 120, 801, 831, 46, 522, 589, 1, 571, 368, 137, 761, 885, 968, 982, 948, 785, 391, 840, 932, 829, 117, 641, 466, 367, 688, 733, 229, 735, 14, 205, 31, 316, 333, 183, 521, 795, 58, 1021, 282, 794, 939, 40, 394, 793, 1002, 763, 212, 484, 133, 260, 465, 396, 769, 518, 955, 497, 377, 145, 508, 514, 224, 196, 454, 176, 975, 865, 1005, 1023, 986, 596, 426, 893, 551, 90, 130, 873, 22, 709, 686, 436, 236, 661, 579, 764, 362, 141, 112, 970, 987, 12, 317, 369, 26, 344, 66, 803, 493, 716, 9, 637, 945, 225, 703, 78, 346, 751, 123, 1009, 1016, 27, 52, 864, 902, 921, 292, 314, 599, 799, 263, 626, 338, 953, 491, 892, 353, 692, 917, 540, 882, 677, 744, 633, 821, 327, 60, 1020, 928, 788, 360, 414, 430, 462, 824, 820, 727, 398, 342, 273, 726, 981, 84, 82, 206, 388, 720, 806, 652, 550, 238, 159, 134, 732, 897, 500, 881, 805, 814, 701, 717, 566, 7, 211, 604, 816, 56, 658, 107, 61, 374, 320, 501, 13, 642, 863, 791, 438, 348, 97, 214, 86, 305, 875, 656, 24, 364, 767, 156, 879, 590, 734, 920, 655, 577, 83, 584, 660, 38, 100, 299, 580, 990, 636, 944, 463, 766, 996, 714, 8, 515, 87, 198, 280, 444, 131, 404, 108, 278, 487, 223, 598, 410, 395, 199, 268, 989, 75, 195, 760, 916, 977, 421, 11, 1000, 813, 216, 817, 823, 164, 668, 739, 572, 30, 707, 798, 291, 564, 77, 456, 478, 68, 643, 615, 172, 841, 672, 919, 1012, 613, 385, 980, 711, 771, 682, 232, 765, 143, 620, 631, 861, 468, 622, 201, 325, 424, 189, 608, 403, 775, 646, 673, 1013, 400, 859, 838, 345, 210, 860, 65, 63, 34, 755, 161, 479, 235, 783, 460, 826, 507, 854, 839, 666, 802, 441, 114, 443, 738, 770, 929, 857, 907, 741, 935, 949, 322, 995, 217, 667, 269, 184, 650, 1018, 506, 290, 787, 459, 721, 828, 567, 222, 494, 142, 743, 405, 76, 722, 588, 147, 899, 270, 695, 597, 337, 155, 569, 679, 853, 450, 21, 517, 197, 371, 257, 380, 244, 553, 952, 381, 827, 524, 877, 702, 306, 600, 1011, 431, 781, 594, 387, 1019, 411, 533, 659, 177, 725, 930, 933, 832, 41, 2, 687, 1008, 439, 307, 891, 871, 415, 651, 308, 298, 811, 0, 194, 592, 241, 918, 18, 973, 110, 654, 967, 490, 683, 914, 128, 992, 964, 122, 230, 149, 289, 392, 416, 852, 936, 262, 102, 938, 511, 255, 510, 165, 105, 419, 958, 294, 379, 49, 699, 330, 593, 539, 710, 106, 79, 440, 200, 704, 961, 326, 321, 759, 193, 890, 44, 549, 913, 776, 909, 552, 972, 132, 429, 748, 532, 115, 888, 635, 842, 649, 747, 807, 887, 856, 784, 148, 530, 116, 157, 372, 754, 28, 581, 67, 187, 202, 818, 181, 45, 959, 146, 124, 994, 872, 675, 706, 253, 247, 625, 570, 152, 423, 185, 361, 849, 971, 546, 412, 830, 1022, 188, 850, 140, 220, 451, 219, 768, 1015, 455, 780, 976, 449, 969, 848, 293, 249, 59, 390, 512, 538, 578, 906, 819, 862, 974, 33, 911, 135, 908, 248, 401, 951, 527, 169, 676, 640, 1003, 591, 103, 37, 285, 684, 104, 163, 753, 1004, 934, 645, 470, 774, 20, 489, 228, 461, 492, 469, 998, 296, 233, 869, 605, 315, 36, 5, 425, 878, 617, 886, 23, 355, 993, 93, 473, 555, 474, 464, 937, 925, 1001, 611, 35, 812, 174, 53, 286, 680, 267, 428, 335, 883, 653, 69, 718, 585, 749, 150, 408, 393, 915, 576, 664, 629, 756, 402, 638, 602, 245, 43, 545, 213, 303, 192, 70, 453, 910, 407, 742, 111, 548, 835, 452, 575, 903, 619, 376, 154, 302, 151, 804, 867, 574, 563, 239, 648, 179, 855, 378, 618, 264, 669, 427, 354, 399, 265, 50, 796, 166, 923, 825, 697, 534, 54, 173, 870, 792, 162, 713, 246, 89, 51, 350, 705, 251, 557, 237, 240, 736, 689, 203, 519, 73, 81, 628, 288, 331, 204, 528, 480, 389, 32, 418, 573, 757, 358, 215, 226, 42, 779, 231, 171, 190, 612, 301, 762, 708, 420, 846, 208, 485, 351, 790, 737, 10, 258, 309, 797, 127, 516, 559, 499, 352, 71, 758, 25, 568, 113, 3, 610, 101, 375, 96, 603, 745, 64, 80, 477, 332, 833, 940, 373, 905, 422, 182, 356, 941, 47, 119, 662, 931, 696, 95, 724, 678, 207];\n    len = this.table.length;\n    for (i = l = 0, ref = len - 1; 0 <= ref ? l <= ref : l >= ref; i = 0 <= ref ? ++l : --l) {\n      this.table.push(this.table[i]);\n    }\n    if (this.seed < 1) {\n      this.seed *= 1 << 30;\n    }\n    this.size = 1024;\n    this.normalize = 1 / 1023;\n    this.IOl11 = 1023;\n    this.OIl10 = this.seed & this.IOl11;\n    this.OIOI0 = (this.seed >> 10) & this.IOl11;\n    this.I0IlI = (this.seed >> 20) & this.IOl11;\n    this.c2d = [];\n    this.I11OO = Math.cos(.3);\n    this.III10 = Math.sin(.3);\n  }\n\n  I010I.prototype.ll1Ol = function(x, y, a) {\n    var c;\n    c = (-2 * a + 3) * a * a;\n    return x * (1 - c) + y * c;\n  };\n\n  I010I.prototype.OI0Il = function(x, y, a) {\n    return x * (1 - a) + y * a;\n  };\n\n  I010I.prototype.l0lI0 = function(x, y) {\n    var llllO, l1O10, O1000, v2, I0I1O, I011l, OIIO0, l01lI;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    OIIO0 = OIIO0 & this.IOl11;\n    l01lI = l01lI & this.IOl11;\n    O1000 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.OIOI0]]];\n    v2 = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.OIOI0]]];\n    I0I1O = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.OIOI0]]];\n    I011l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.OIOI0]]];\n    return this.ll1Ol(this.ll1Ol(O1000, v2, llllO), this.ll1Ol(I0I1O, I011l, llllO), l1O10) * this.normalize;\n  };\n\n  I010I.prototype.I1110 = function(x, y, z) {\n    var llllO, l1O10, az, O1000, v2, I0I1O, I011l, IOl0l, OI11l, ll1l1, IllOO, O1Oll, IOIOO, OIIO0, l01lI, IOlO1;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    IOlO1 = Math.floor(z);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    az = z - IOlO1;\n    OIIO0 = OIIO0 & this.IOl11;\n    l01lI = l01lI & this.IOl11;\n    IOlO1 = IOlO1 & this.IOl11;\n    O1000 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    v2 = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I0I1O = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I011l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    IOl0l = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    OI11l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    ll1l1 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    IllOO = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    O1Oll = this.ll1Ol(this.ll1Ol(O1000, v2, llllO), this.ll1Ol(I0I1O, I011l, llllO), l1O10);\n    IOIOO = this.ll1Ol(this.ll1Ol(IOl0l, OI11l, llllO), this.ll1Ol(ll1l1, IllOO, llllO), l1O10);\n    return this.ll1Ol(O1Oll, IOIOO, az) * this.normalize;\n  };\n\n  I010I.prototype.IIIOI = function(x, y, z) {\n    var llllO, l1O10, az, O1000, v2, I0I1O, I011l, IOl0l, OI11l, ll1l1, IllOO, O1Oll, IOIOO, OIIO0, l01lI, IOlO1;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    IOlO1 = Math.floor(z);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    az = z - IOlO1;\n    OIIO0 = OIIO0 & this.IOl11;\n    l01lI = l01lI & this.IOl11;\n    IOlO1 = IOlO1 & this.IOl11;\n    O1000 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    v2 = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I0I1O = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    I011l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + this.I0IlI]]]]];\n    IOl0l = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    OI11l = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    ll1l1 = this.table[this.OIl10 + this.table[OIIO0 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    IllOO = this.table[this.OIl10 + this.table[OIIO0 + 1 + this.table[l01lI + 1 + this.table[this.OIOI0 + this.table[IOlO1 + 1 + this.I0IlI]]]]];\n    O1Oll = this.OI0Il(this.OI0Il(O1000, v2, llllO), this.OI0Il(I0I1O, I011l, llllO), l1O10);\n    IOIOO = this.OI0Il(this.OI0Il(IOl0l, OI11l, llllO), this.OI0Il(ll1l1, IllOO, llllO), l1O10);\n    return this.OI0Il(O1Oll, IOIOO, az) * this.normalize;\n  };\n\n  I010I.prototype.OOl0O = function(OO0l0, OOOI0, iz) {};\n\n  I010I.prototype.IlOI1 = function(x, y, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var d, i, l, O01II, IOOO1, O10O0, ref, IIlI1;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      IIlI1 += this.l0lI0(x, y) * d;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.OO01O = function(x, y, z, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var d, i, l, O01II, IOOO1, O10O0, ref, IIlI1;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      IIlI1 += this.I1110(x, y, z) * d;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n      z = OllI1 * z;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.II0O1 = function(x, y, Ol10I, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var llllO, l1O10, OO0l0, OOOI0, O1000, v2, I0I1O, I011l;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    OO0l0 = Math.floor(x / Ol10I);\n    OOOI0 = Math.floor(y / Ol10I);\n    llllO = x / Ol10I - OO0l0;\n    l1O10 = y / Ol10I - OOOI0;\n    O1000 = this.IlOI1(llllO * Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    v2 = this.IlOI1(llllO * Ol10I + Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I0I1O = this.IlOI1(llllO * Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I011l = this.IlOI1(llllO * Ol10I + Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    return this.ll1Ol(this.ll1Ol(O1000, v2, 1 - llllO), this.ll1Ol(I0I1O, I011l, 1 - llllO), 1 - l1O10);\n  };\n\n  I010I.prototype.turbulence2d = function(x, y, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var d, i, l, O01II, IOOO1, O10O0, ref, IIlI1;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      IIlI1 += 2 * (.5 - Math.abs(.5 - this.l0lI0(x, y))) * d;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.periodicTurbulence2d = function(x, y, Ol10I, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var llllO, l1O10, OO0l0, OOOI0, O1000, v2, I0I1O, I011l;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    OO0l0 = Math.floor(x / Ol10I);\n    OOOI0 = Math.floor(y / Ol10I);\n    llllO = x / Ol10I - OO0l0;\n    l1O10 = y / Ol10I - OOOI0;\n    O1000 = this.turbulence2d(llllO * Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    v2 = this.turbulence2d(llllO * Ol10I + Ol10I, l1O10 * Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I0I1O = this.turbulence2d(llllO * Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    I011l = this.turbulence2d(llllO * Ol10I + Ol10I, l1O10 * Ol10I + Ol10I, II0OI, OOOOl, OllI1, O00Il, ts);\n    return this.ll1Ol(this.ll1Ol(O1000, v2, 1 - llllO), this.ll1Ol(I0I1O, I011l, 1 - llllO), 1 - l1O10);\n  };\n\n  I010I.prototype.O0O1I = function(x, y, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var O0I0l, d, i, l, O01II, IOOO1, O10O0, ref, IIlI1, v;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    O0I0l = 1;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      v = this.l0lI0(x, y) * 2;\n      if (v > 1) {\n        v = 2 - v;\n      }\n      v = Math.pow(v, 2);\n      IIlI1 += O0I0l * d * v;\n      O0I0l = v;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = OllI1 * (x * O00Il + y * ts);\n      O10O0 = OllI1 * (y * O00Il - x * ts);\n      x = IOOO1;\n      y = O10O0;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.lOl0l = function(x, y, z, II0OI, OOOOl, OllI1, O00Il, ts) {\n    var O0I0l, d, i, l, O0I0O, O01II, IOOO1, O10O0, I00IO, ref, IIlI1, v;\n    if (II0OI == null) {\n      II0OI = 5;\n    }\n    if (OOOOl == null) {\n      OOOOl = .5;\n    }\n    if (OllI1 == null) {\n      OllI1 = 1.9;\n    }\n    if (O00Il == null) {\n      O00Il = this.I11OO;\n    }\n    if (ts == null) {\n      ts = this.III10;\n    }\n    IIlI1 = 0;\n    O0I0l = 1;\n    d = 1;\n    O01II = 0;\n    for (i = l = 1, ref = II0OI; l <= ref; i = l += 1) {\n      v = this.I1110(x, y, z) * 2;\n      if (v > 1) {\n        v = 2 - v;\n      }\n      v = Math.pow(v, 2);\n      IIlI1 += O0I0l * d * v;\n      O0I0l = v;\n      O01II += d;\n      d *= OOOOl;\n      IOOO1 = x * O00Il + y * ts;\n      O10O0 = y * O00Il - x * ts;\n      O0I0O = O10O0 * O00Il + z * ts;\n      I00IO = z * O00Il - O10O0 * ts;\n      x = OllI1 * IOOO1;\n      y = OllI1 * O0I0O;\n      z = OllI1 * I00IO;\n    }\n    return IIlI1 / O01II;\n  };\n\n  I010I.prototype.O1O01 = function(x, y, Ol10I) {\n    var llllO, l1O10, IIllI, I0OlO, OI01O, I1IO0, OIIOI, I01I1, d, d1, d2, IlIII, OII00, OlI0l, OlllI, O0OI1, I1Il1, i, j, l, m, px, l1O1l, OIIO0, l0OIl, l01lI, IlOlI;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    IIllI = 100;\n    I0OlO = 0;\n    OI01O = 0;\n    I1IO0 = 100;\n    OIIOI = 0;\n    I01I1 = 0;\n    for (i = l = 0; l <= 2; i = l += 1) {\n      for (j = m = 0; m <= 2; j = m += 1) {\n        l0OIl = (OIIO0 - 1 + i) % Ol10I;\n        IlOlI = (l01lI - 1 + j) % Ol10I;\n        px = -1 + i + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + IlOlI]]] * this.normalize * .8 + .1;\n        l1O1l = -1 + j + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[IlOlI + 1]]]] * this.normalize * .8 + .1;\n        IlIII = llllO - px;\n        OlllI = l1O10 - l1O1l;\n        d = IlIII * IlIII + OlllI * OlllI;\n        if (d < IIllI) {\n          I1IO0 = IIllI;\n          OIIOI = I0OlO;\n          I01I1 = OI01O;\n          IIllI = d;\n          I0OlO = px;\n          OI01O = l1O1l;\n        } else if (d < I1IO0) {\n          I1IO0 = d;\n          OIIOI = px;\n          I01I1 = l1O1l;\n        }\n      }\n    }\n    OII00 = llllO - I0OlO;\n    O0OI1 = l1O10 - OI01O;\n    d1 = Math.sqrt(OII00 * OII00 + O0OI1 * O0OI1);\n    OlI0l = llllO - OIIOI;\n    I1Il1 = l1O10 - I01I1;\n    d2 = Math.sqrt(OlI0l * OlI0l + I1Il1 * I1Il1);\n    return Math.min(d1, d2) / Math.max(d1, d2);\n  };\n\n  I010I.prototype.O1II1 = function(x, y, Ol10I) {\n    var llllO, l1O10, IIllI, I0OlO, OI01O, O01I1, d, IlIII, OlllI, i, j, l, m, px, l1O1l, seed, OIIO0, l0OIl, l01lI, IlOlI;\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    IIllI = 100;\n    I0OlO = 0;\n    OI01O = 0;\n    O01I1 = 0;\n    for (i = l = 0; l <= 2; i = l += 1) {\n      for (j = m = 0; m <= 2; j = m += 1) {\n        l0OIl = (OIIO0 - 1 + i) % Ol10I;\n        IlOlI = (l01lI - 1 + j) % Ol10I;\n        px = -1 + i + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + IlOlI]]] * this.normalize * .8 + .1;\n        l1O1l = -1 + j + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[IlOlI + 1]]]] * this.normalize * .8 + .1;\n        seed = this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[IlOlI + 17]]]];\n        IlIII = llllO - px;\n        OlllI = l1O10 - l1O1l;\n        d = IlIII * IlIII + OlllI * OlllI;\n        if (d < IIllI) {\n          IIllI = d;\n          I0OlO = px;\n          OI01O = l1O1l;\n          O01I1 = seed;\n        }\n      }\n    }\n    return O01I1 * this.normalize;\n  };\n\n  I010I.prototype.OlO1O = function(x, y, z, Ol10I) {\n    var llllO, l1O10, az, IIllI, I0OlO, OI01O, I1I1I, I1IO0, OIIOI, I01I1, lIO1O, d, d1, d2, IlIII, OII00, OlI0l, OlllI, O0OI1, I1Il1, lIO01, Il1l0, OOI0I, i, j, k, l, m, n, px, l1O1l, O0lOO, OIIO0, l0OIl, l01lI, IlOlI, IOlO1, Ol1IO;\n    if (Ol10I == null) {\n      Ol10I = 100;\n    }\n    OIIO0 = Math.floor(x);\n    l01lI = Math.floor(y);\n    IOlO1 = Math.floor(z);\n    llllO = x - OIIO0;\n    l1O10 = y - l01lI;\n    az = z - IOlO1;\n    IIllI = 100;\n    I0OlO = 0;\n    OI01O = 0;\n    I1I1I = 0;\n    I1IO0 = 100;\n    OIIOI = 0;\n    I01I1 = 0;\n    lIO1O = 0;\n    for (i = l = 0; l <= 2; i = l += 1) {\n      for (j = m = 0; m <= 2; j = m += 1) {\n        for (k = n = 0; n <= 2; k = n += 1) {\n          l0OIl = ((OIIO0 - 1 + i) % Ol10I) & this.IOl11;\n          IlOlI = ((l01lI - 1 + j) % Ol10I) & this.IOl11;\n          Ol1IO = ((IOlO1 - 1 + k) % Ol10I) & this.IOl11;\n          px = -1 + i + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[Ol1IO + IlOlI]]]] * this.normalize;\n          l1O1l = -1 + j + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[this.table[IlOlI + Ol1IO] + 1]]]] * this.normalize;\n          O0lOO = -1 + k + this.table[this.OIl10 + this.table[l0OIl + this.table[this.OIOI0 + this.table[this.table[IlOlI + Ol1IO] + 37]]]] * this.normalize;\n        }\n        IlIII = llllO - px;\n        OlllI = l1O10 - l1O1l;\n        lIO01 = az - O0lOO;\n        d = IlIII * IlIII + OlllI * OlllI + lIO01 * lIO01;\n        if (d < IIllI) {\n          I1IO0 = IIllI;\n          OIIOI = I0OlO;\n          I01I1 = OI01O;\n          lIO1O = I1I1I;\n          IIllI = d;\n          I0OlO = px;\n          OI01O = l1O1l;\n          I1I1I = O0lOO;\n        } else if (d < I1IO0) {\n          I1IO0 = d;\n          OIIOI = px;\n          I01I1 = l1O1l;\n          lIO1O = O0lOO;\n        }\n      }\n    }\n    OII00 = llllO - I0OlO;\n    O0OI1 = l1O10 - OI01O;\n    Il1l0 = az - I1I1I;\n    d1 = Math.sqrt(OII00 * OII00 + O0OI1 * O0OI1 + Il1l0 * Il1l0);\n    OlI0l = llllO - OIIOI;\n    I1Il1 = l1O10 - I01I1;\n    OOI0I = az - lIO1O;\n    d2 = Math.sqrt(OlI0l * OlI0l + I1Il1 * I1Il1 + OOI0I * OOI0I);\n    return Math.min(d1, d2) / Math.max(d1, d2);\n  };\n\n  I010I.OO1ll = function(size) {\n    var i, index, l, ref, t, v;\n    t = [];\n    for (i = l = 0, ref = size - 1; 0 <= ref ? l <= ref : l >= ref; i = 0 <= ref ? ++l : --l) {\n      t[i] = i;\n    }\n    v = [];\n    while (true) {\n      if (t.length === 0) {\n        break;\n      }\n      index = Math.floor(Math.random() * t.length);\n      v.push(t.splice(index, 1)[0]);\n    }\n    return v;\n  };\n\n  return I010I;\n\n})();'),
        (this.IOIO1 = new THREE.MeshLambertMaterial({ color: 16777215, vertexColors: THREE.VertexColors })),
        (this.lIlII = (function () {
            function t(t) {
                var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U;
                for (this.l1110 = t, this.O1III = new THREE.IcosahedronGeometry(1, 3), z = new I010I(), k = new I010I(100), E = new I010I(200), _ = new I010I(300), o = this.O1III.vertices[0].x - this.O1III.vertices[1].x, r = this.O1III.vertices[0].y - this.O1III.vertices[1].y, h = this.O1III.vertices[0].z - this.O1III.vertices[1].z, V = 7, F = 0.28, P = this.O1III.vertices, d = 0, O = P.length; d < O; d++) (B = P[d]), (N = k.OO01O(B.x * V, B.y * V, B.z * V) - 0.5), (q = E.OO01O(B.x * V, B.y * V, B.z * V) - 0.5), (U = _.OO01O(B.x * V, B.y * V, B.z * V) - 0.5), (B.x += N * F), (B.y += q * F), (B.z += U * F), (x = 1 / Math.sqrt(B.x * B.x + B.y * B.y + B.z * B.z)), (B.x *= x), (B.y *= x), (B.z *= x);
                for (A = this.O1III.vertices, c = 0, m = A.length; c < m; c++) (B = A[c]), (S = 0.5 * Math.pow(z.OO01O(3 * B.x, 3 * B.y, 3 * B.z, 3), 2)), (S -= 0.25 * Math.pow(z.OO01O(4 * B.x + 10, 4 * B.y, 4 * B.z, 3), 4)), (B.x *= 1 - S), (B.y *= 1 - S), (B.z *= 1 - S);
                for (this.O1III.computeFaceNormals(), H = this.O1III.faces, p = 0, f = H.length; p < f; p++) (u = H[p]), (u.vertexNormals[0] = u.normal), (u.vertexNormals[1] = u.normal), (u.vertexNormals[2] = u.normal);
                for (D = this.O1III.vertices, I = 0, g = D.length; I < g; I++) (B = D[I]), (B.segments = []), (B.OOOI1 = 1);
                for (
                    G = {},
                        L = [],
                        R = function (t, e, i, s) {
                            var l, n;
                            return (l = Math.min(t, e) + '-' + Math.max(t, e)), null == G[l] ? ((n = { O1000: t, v2: e, f1: s, opp1: i }), (G[l] = n), L.push(n)) : ((G[l].f2 = s), (G[l].opp2 = i));
                        },
                        C = this.O1III.faces,
                        w = 0,
                        y = C.length;
                    w < y;
                    w++
                )
                    (u = C[w]), R(u.a, u.b, u.c, u), R(u.a, u.c, u.b, u), R(u.b, u.c, u.a, u);
                for (M = 0, v = L.length; M < v; M++) (j = L[M]), (x = j.f1.normal), (e = (this.O1III.vertices[j.f1.a].x + this.O1III.vertices[j.f1.b].x + this.O1III.vertices[j.f1.c].x) / 3), (i = (this.O1III.vertices[j.f1.a].y + this.O1III.vertices[j.f1.b].y + this.O1III.vertices[j.f1.c].y) / 3), (s = (this.O1III.vertices[j.f1.a].z + this.O1III.vertices[j.f1.b].z + this.O1III.vertices[j.f1.c].z) / 3), (l = (this.O1III.vertices[j.f2.a].x + this.O1III.vertices[j.f2.b].x + this.O1III.vertices[j.f2.c].x) / 3), (n = (this.O1III.vertices[j.f2.a].y + this.O1III.vertices[j.f2.b].y + this.O1III.vertices[j.f2.c].y) / 3), (a = (this.O1III.vertices[j.f2.a].z + this.O1III.vertices[j.f2.b].z + this.O1III.vertices[j.f2.c].z) / 3), (o = l - e), (r = n - i), (h = a - s), (T = x.x * o + x.y * r + x.z * h) > 0 && ((k = j.f1.normal), (E = j.f2.normal), (T = Math.max(-1, Math.min(1, k.x * E.x + k.y * E.y + k.z * E.z))), (b = 1 - Math.acos(T) / (180 * THREE.Math.DEG2RAD)), (this.O1III.vertices[j.O1000].OOOI1 *= b), (this.O1III.vertices[j.v2].OOOI1 *= b));
            }
            return (
                (t.prototype.getInstance = function () {
                    return new THREE.Mesh(this.O1III, IOIO1);
                }),
                (t.prototype.darkenColor = function (t, e) {
                    var i, s, l, n;
                    return (s = Math.min(1, Math.max(0, 1 - e))), (n = ((t >> 16) & 255) * s), (l = ((t >> 8) & 255) * s), (i = (255 & t) * s), (n << 16) | (l << 8) | i;
                }),
                (t.prototype.l1O0l = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w;
                    for (
                        v = new OII10(t),
                            t = v.next(),
                            s = O0l1l.hsvToRgbHex(t, 0.1 + 0.2 * Math.pow(v.next(), 2), 1),
                            n = O0l1l.hsvToRgbHex(t, 0.1 + 0.2 * Math.pow(v.next(), 2), 0.8),
                            l = O0l1l.hsvToRgbHex(t, 0.1 + 0.2 * Math.pow(v.next(), 2), 0.6),
                            a = O0l1l.hsvToRgbHex(t, 0.1 + 0.2 * Math.pow(v.next(), 2), 0.4),
                            y = new I010I(e.next()),
                            p = 0.5 + 1.5 * e.next(),
                            I = 0.5 + 1.5 * e.next(),
                            O = 0.5 + 1.5 * e.next(),
                            c = function (t) {
                                var e;
                                return (e = y.OO01O(t.x * p, t.y * I, t.z * O, 3)), e < 0.3 ? s : e < 0.5 ? l : e < 0.6 ? n : a;
                            },
                            w = this.O1III.faces,
                            f = 0,
                            g = w.length;
                        f < g;
                        f++
                    )
                        (d = w[f]), (r = c(this.O1III.vertices[d.a])), (h = c(this.O1III.vertices[d.b])), (u = c(this.O1III.vertices[d.c])), (b = ((((r >> 16) & 255) + ((h >> 16) & 255) + ((u >> 16) & 255)) / 3) | 0), (m = ((((r >> 8) & 255) + ((h >> 8) & 255) + ((u >> 8) & 255)) / 3) | 0), (i = (((255 & r) + (255 & h) + (255 & u)) / 3) | 0), (o = (b << 16) | (m << 8) | i), (r = this.darkenColor(o, 1 - this.O1III.vertices[d.a].OOOI1)), (h = this.darkenColor(o, 1 - this.O1III.vertices[d.b].OOOI1)), (u = this.darkenColor(o, 1 - this.O1III.vertices[d.c].OOOI1)), (d.vertexColors = []), (d.vertexColors[0] = new THREE.Color(r)), (d.vertexColors[1] = new THREE.Color(h)), (d.vertexColors[2] = new THREE.Color(u));
                    return this.O1III;
                }),
                t
            );
        })()),
        (this.lOlO1 = (function () {
            function t(t) {
                var e, i, s, l;
                for (this.l1110 = t, this.Il1I1 = new THREE.Group(), this.scale = 10, this.number = 20, this.lOl1I = new l1ll1(4e3), this.seed = -1, this.models = [], i = 0; i <= 19; i += 1) this.models.push(new lIlII(this.l1110));
                for (s = 0, l = this.number * this.number - 1; s <= l; s += 1) (e = this.models[Math.floor(Math.random() * this.models.length)].getInstance()), (e.position.x = 80 * (Math.random() - 0.5)), (e.position.y = 80 * (Math.random() - 0.5)), (e.rotation.x = Math.random() * (180 * THREE.Math.DEG2RAD) * 2), (e.rotation.y = Math.random() * (180 * THREE.Math.DEG2RAD) * 2), this.Il1I1.add(e);
                this.fadein = 1;
            }
            return (
                (t.prototype.rebuild = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    for (this.Il1I1.children = [], h = s = 0, a = this.number - 1; 0 <= a ? s <= a : s >= a; h = 0 <= a ? ++s : --s) for (r = l = 0, o = this.number - 1; 0 <= o ? l <= o : l >= o; r = 0 <= o ? ++l : --l) h * this.number + r, r >= 10 ? ((e = this.Il1I1.children[r - 10 + h * this.number]), (i = this.models[e.model].getInstance()), (i.model = e.model), (i.rotation.x = e.rotation.x), (i.rotation.y = e.rotation.y), this.Il1I1.add(i)) : h >= 10 ? ((e = this.Il1I1.children[(h - 10) * this.number + r]), (i = this.models[e.model].getInstance()), (i.model = e.model), (i.rotation.x = e.rotation.x), (i.rotation.y = e.rotation.y), this.Il1I1.add(i)) : ((n = t.lI10l(this.models.length)), (i = this.models[n].getInstance()), (i.model = n), (i.rotation.x = t.next() * (180 * THREE.Math.DEG2RAD) * 2), (i.rotation.y = t.next() * (180 * THREE.Math.DEG2RAD) * 2), this.Il1I1.add(i));
                }),
                (t.prototype.mod = function (t, e) {
                    return t - e * Math.floor(t / e);
                }),
                (t.prototype.l1IO1 = function (t) {
                    var e, i, s, l, n, a, o;
                    if (t !== this.seed) {
                        if (((this.seed = t), (this.lOl1I = new l1ll1(this.seed, this.l1110.I00l0, this.l1110.mode)), (a = new OII10(this.seed)), (i = a.next()), !this.models_updated)) {
                            for (o = this.models, s = 0, l = o.length; s < l; s++) (n = o[s]), (e = i), n.l1O0l(e, a);
                            this.models_updated = !0;
                        }
                        (a = new OII10(this.seed)), this.rebuild(a), (this.fadein = 0), (this.fadeout = !1);
                    }
                }),
                (t.prototype.l1O0l = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b;
                    for (y = this.scale, this.fadeout ? (this.fadein = Math.max(0, this.fadein - 1 / 60)) : (this.fadein = Math.min(1, this.fadein + 1 / 60)), I = e / y, O = i / y, c = Math.round(I - this.number / 2), p = Math.round(O - this.number / 2), g = {}, l = u = c, m = c + this.number - 1; u <= m; l = u += 1) for (r = d = p, f = p + this.number - 1; d <= f; r = d += 1) (a = this.mod(l, this.number)), (o = this.mod(r, this.number)), (s = this.Il1I1.children[a * this.number + o]), (n = this.mod(l + this.lOl1I.size, 2 * this.lOl1I.size) - this.lOl1I.size), (h = this.mod(r + this.lOl1I.size, 2 * this.lOl1I.size) - this.lOl1I.size), (g = this.lOl1I.IlIIl(n, h)), g.on ? (null != g.respawn && t <= 60 * g.respawn - 60 ? (s.visible = !1) : ((s.visible = !0), (v = Math.max(0.001, g.size * y * this.fadein)), (s.position.x = (g.x + l - n) * y), (s.position.y = (g.y + r - h) * y), (s.position.z = 0), s.scale.set(v, v, v), (s.rotation.z = ((Date.now() % 2e4) / 2e4) * (180 * THREE.Math.DEG2RAD) * 2), null != g.respawn && t > 60 * g.respawn - 60 && t < 60 * g.respawn ? ((b = (t - (60 * g.respawn - 60)) / 60), (b = Math.pow(b, 0.5)), (v = Math.max(0.001, v * b)), s.scale.set(v, v, v)) : (g.respawn = 0))) : (s.visible = !1);
                }),
                t
            );
        })()),
        (Scene = (function () {
            function t(t, e, i, s) {
                var l;
                (this.l1110 = t),
                    (this.seed = e),
                    (this.I101l = i),
                    (this.welcome = null != s && s),
                    (this.size = 13),
                    (this.lIlO0 = new THREE.Scene()),
                    (this.llIII = 1),
                    (this.OlIO1 = new lOlO1(this.l1110)),
                    this.welcome || this.lIlO0.add(this.OlIO1.Il1I1),
                    (this.I0O1l = new IlOI0(this.l1110)),
                    this.lIlO0.add(this.I0O1l.Il1I1),
                    (this.collectibles = new Collectibles(this.l1110)),
                    this.lIlO0.add(this.collectibles.Il1I1),
                    (this.Ill00 = this.l1110.Ill00),
                    (l = this.l1110.mode.OlII0.ships_by_code[this.Ill00.type.code]),
                    null == l && (l = this.l1110.mode.OlII0.getDefaultShip()),
                    (this.ship = new lIl1O(l, this.l1110.hue / 360)),
                    this.welcome || this.lIlO0.add(this.ship.Il1I1),
                    (this.IO11l = new ll1OI(this.l1110)),
                    (this.IO11l.Ill00 = this.Ill00),
                    this.lIlO0.add(this.IO11l.Il1I1),
                    (this.O101l = new Explosions(this)),
                    this.lIlO0.add(this.O101l.IIl10),
                    this.lIlO0.add(this.O101l.OOOI1),
                    (this.laserticles = new Laserticles(this)),
                    this.lIlO0.add(this.laserticles.IIl10),
                    (this.OOOI1 = new THREE.DirectionalLight(16777215)),
                    (this.OOOI1.intensity = 1.1),
                    this.OOOI1.position.set(-1, 1, 1.5),
                    this.lIlO0.add(this.OOOI1),
                    this.welcome || ((this.chat_bubble = new ChatBubble(this.l1110, this.l1110.hue, 'OYDLQ')), this.lIlO0.add(this.chat_bubble.l0OlI)),
                    (this.fcount = 0),
                    (this.background = new BackgroundScene(this.l1110, this.seed, this.I101l, this.welcome)),
                    (this.color = O0l1l.hsvToRgbHex((120 * Math.random() + 180) / 360, 0.5, 0.05)),
                    this.welcome ||
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return t.OlIO1.l1IO1(t.seed);
                                };
                            })(this)
                        ),
                    this.I101l.add(
                        (function (t) {
                            return function () {
                                return t.l1IO1(t.seed);
                            };
                        })(this)
                    ),
                    this.welcome && !this.l1110.is_app && (this.demo = new Demo(this.l1110, this)),
                    (this.shake = { x: 0, y: 0, lllOl: 0, II110: 0, r: 0, lIl10: 0 }),
                    this.welcome || ((this.snow = new Snow(this.l1110)), this.lIlO0.add(this.snow.IIl10));
            }
            return (
                (t.prototype.startControl = function () {
                    return (this.control = new OOOO0(this.l1110, this.Ill00));
                }),
                (t.prototype.l1IO1 = function (t) {
                    return (this.seed = t), (this.color = O0l1l.hsvToRgbHex((120 * new OII10(this.seed).next() + 180) / 360, 0.5, 0.1));
                }),
                (t.prototype.setHue = function (t) {
                    if (null != this.chat_bubble) return this.chat_bubble.setHue(t);
                }),
                (t.prototype.lOO01 = function () {
                    if (null != this.l1110.display && (this.l1110.display.width !== this.width || this.l1110.display.height !== this.height) && ((this.width = this.l1110.display.width), (this.height = this.l1110.display.height), (this.I1000 = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 1e3)), (this.I1000.position.z = 70), this.welcome)) return (this.I1000.position.z = 140);
                }),
                (t.prototype.mod = function (t, e) {
                    return t - e * Math.floor(t / e);
                }),
                (t.prototype.lI0OO = function () {}),
                (t.prototype.say = function (t) {
                    return this.chat_bubble.l0I00(t);
                }),
                (t.prototype.shakeCamera = function (t, e, i) {
                    var s, l, n, a, o;
                    if (this.l1110.settings.check('shake') && ((a = Math.abs(this.l1110.Ill00.status.x - t)), (o = Math.abs(this.l1110.Ill00.status.y - e)), (a = Math.min(a, this.l1110.size - a)), (o = Math.min(o, this.l1110.size - o)), !((n = Math.sqrt(a * a + o * o)) > 25))) return (s = Math.max(0, 1 - n / 25) * i * 0.5), (l = 2 * Math.random() * (180 * THREE.Math.DEG2RAD)), (this.shake.lllOl += Math.cos(l) * s), (this.shake.II110 += Math.sin(l) * s), (this.shake.lIl10 += 0.08 * s * (Math.random() - 0.5));
                }),
                (t.prototype.lOO11 = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    if ((this.lOO01(), null != this.I1000)) {
                        for (null != this.station && this.station.l1O0l(), null != this.demo && this.demo.l1O0l(), o = this.IO11l.I1l0O(), this.IO11l.O1lIl(o), null != this.control && this.control.I1l0O(o), l = 1, a = o; l <= a; l += 1) (this.shake.x += this.shake.lllOl), (this.shake.y += this.shake.II110), (this.shake.r += this.shake.lIl10), (n = 0.2), (this.shake.lllOl -= this.shake.x * n), (this.shake.II110 -= this.shake.y * n), (this.shake.lIl10 -= this.shake.r * n), (this.shake.lllOl *= 0.7), (this.shake.II110 *= 0.7), (this.shake.lIl10 *= 0.7);
                        return (this.I1000.position.x = this.IO11l.I1000.x + this.shake.x), (this.I1000.position.y = this.IO11l.I1000.y + this.shake.y), (this.I1000.rotation.z = 180 * THREE.Math.DEG2RAD * 2), (this.I1000.fov = 45 * this.IO11l.I1000.zoom), this.I1000.updateProjectionMatrix(), this.O101l.l1O0l(), null != this.snow && ((this.snow.IIl10.position.x = this.I1000.position.x), (this.snow.IIl10.position.y = this.I1000.position.y), this.snow.lOlI1(this.background.width, this.background.height)), (this.Ill00.type.code !== this.Ill00.status.type || Math.abs(this.Ill00.status.hue / 360 - this.ship.hue) > 0.01 || (this.Ill00.status.l1OI0 && !this.ship.ecp_verified)) && ((e = this.Ill00.type.code !== this.Ill00.status.type), this.Ill00.setType(this.l1110.mode.OI1I1.types_by_code[this.Ill00.status.type]), this.lIlO0.remove(this.ship.Il1I1), this.ship.dispose(), (this.ship = new lIl1O(this.l1110.mode.OlII0.ships_by_code[this.Ill00.type.code], this.Ill00.status.hue / 360)), this.Ill00.status.l1OI0 && ((this.ship.ecp_verified = !0), (this.ship.finish = this.l1110.l1OI0.custom.finish)), this.lIlO0.add(this.ship.Il1I1), this.ship.bump(this.IO11l.II1O0), e && this.l1110.l0I11.beep(0.5)), (r = this.IO11l.I1000.x), (h = this.IO11l.I1000.y), (i = Math.sqrt(r * r + h * h)), r > this.l1110.l0I1I / 2 ? (r = this.l1110.l0I1I - r) : r < -this.l1110.l0I1I / 2 && (r = -this.l1110.l0I1I - r), h > this.l1110.l0I1I / 2 ? (h = this.l1110.l0I1I - h) : h < -this.l1110.l0I1I / 2 && (h = -this.l1110.l0I1I - h), (s = Math.sqrt(r * r + h * h)), i > this.l1110.l0I1I / 2 ? this.OOOI1.position.set(-r, -h, s) : this.OOOI1.position.set(-r, -h, i - 10), (this.ship.Il1I1.rotation.x = this.Ill00.ll010 + 180 * THREE.Math.DEG2RAD * 2), (this.ship.Il1I1.rotation.y = 0.4 * this.Ill00.OOIlI + 180 * THREE.Math.DEG2RAD * 2), (this.ship.Il1I1.rotation.z = this.Ill00.I00O0.r + 180 * THREE.Math.DEG2RAD), (this.ship.Il1I1.position.x = this.Ill00.status.x), (this.ship.Il1I1.position.y = this.Ill00.status.y), (this.ship.I00I1.visible = this.Ill00.I00O0.up), (this.ship.Il1I1.visible = this.Ill00.status.alive), null != this.Ill00.pods && this.Ill00.pods.updateModels(this.Ill00.status.alive), (this.ship.l1OI0 = this.Ill00.status.l1OI0), this.ship.propstep(this.Ill00.I00O0.up || this.Ill00.status.dash), (this.ship.invulnerable = this.Ill00.status.invulnerable), this.ship.l1O0l(this.IO11l.II1O0), null != this.chat_bubble && ((this.chat_bubble.l0OlI.position.x = this.Ill00.status.x), (this.chat_bubble.l0OlI.position.y = this.Ill00.status.y + 6), this.chat_bubble.OO0Il()), this.OlIO1.l1O0l(this.IO11l.II1O0, this.I1000.position.x, this.I1000.position.y), this.I0O1l.l1O0l(this.IO11l), this.collectibles.l1O0l(this.IO11l), this.Ill00.l0Oll(), (t.sortObjects = !1), this.background.lOO11(t, this.IO11l.II1O0), null != this.snow && this.snow.l1O0l(0.12 * this.background.O0llO, 0.12 * this.background.OIOOO, this.l1110.lIlO0.IO11l.II1O0 / 60), t.render(this.lIlO0, this.I1000);
                    }
                }),
                (t.prototype.dispose = function () {
                    return this.background.dispose();
                }),
                t
            );
        })()),
        (this.ChatBubble = (function () {
            function t(t, e, i) {
                (this.l1110 = t), (this.hue = null != e ? e : 0), (this.text = null != i ? i : ' '), (this.score = 0), (this.I0O1l = 0), (this.shield = 0), (this.rank = 0), (this.level = 1), (this.canvas = document.createElement('canvas')), (this.size = 64), this.l1110.is_mobile_app && (this.size = 128), (this.canvas.width = this.size * this.text.length), (this.canvas.height = this.size), (this.texture = new THREE.Texture(this.canvas)), (this.texture.minFilter = THREE.LinearFilter), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, map: this.texture, transparent: !0, depthWrite: !1, depthTest: !1, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), (this.base_size = this.l1110.is_mobile_app ? 5 : 3), this.l0OlI.scale.set(this.base_size, this.base_size, 1), (this.l0OlI.visible = !1), this.updateTexture(), (this.fadeout = 0);
            }
            return (
                (t.prototype.setHue = function (t) {
                    this.hue = t;
                }),
                (t.prototype.l0I00 = function (t) {
                    return (this.text = t), this.updateTexture(), (this.fadeout = Date.now() + 3e3);
                }),
                (t.prototype.OO0Il = function () {
                    var t, e;
                    return Date.now() > this.fadeout ? (this.l0OlI.visible = !1) : ((this.l0OlI.visible = !0), (e = Math.max(0, Math.min(1, (this.fadeout - Date.now()) / 500))), (this.material.opacity = e), (t = this.text.length), 3 === t && (t = 4), this.l0OlI.scale.set(this.base_size * e * t, this.base_size * e, 1));
                }),
                (t.prototype.updateTexture = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d;
                    if (((a = this.text.length), (o = 0), 3 === a && ((a = 4), (o = this.size / 2)), (this.canvas.width = this.size * a), (this.canvas.height = this.size), this.l0OlI.scale.set(a * this.base_size, this.base_size, 1), (this.background = 'hsla(' + this.hue + ',50%,30%,.5)'), (this.medium = 'hsla(' + this.hue + ',40%,50%,.5)'), (this.color = 'hsla(' + this.hue + ',40%,75%,1)'), (e = this.canvas.getContext('2d')), (e.fillStyle = this.background), ChatButton.bubble(e, 0, 0, this.canvas.width, this.canvas.height, 0.1 * this.canvas.height), e.fill(), (e.lineWidth = 2), (e.strokeStyle = this.medium), e.stroke(), null != this.l1110.vocabulary)) {
                        for (e.font = '24pt Glyphs', e.fillStyle = this.color, e.textBaseline = 'middle', e.textAlign = 'center', i = l = 0, r = this.text.length - 1; 0 <= r ? l <= r : l >= r; i = 0 <= r ? ++l : --l) (t = this.text.charAt(i)), null != (d = this.l1110.vocabulary[t]) && ((s = d.icon), 'GG' === s ? ((e.font = (24 * this.size) / 64 + 'pt Play'), e.fillText(s, this.size / 2 + o + this.size * i, (36 * this.size) / 64)) : ((e.font = (24 * this.size) / 64 + 'pt SBGlyphs'), e.fillText(s, this.size / 2 + o + this.size * i, (36 * this.size) / 64)));
                        for (i = n = 0, h = this.text.length - 1; 0 <= h ? n <= h : n >= h; i = 0 <= h ? ++n : --n)
                            if (((t = this.text.charAt(i)), null != (d = this.l1110.vocabulary[t]))) {
                                for (u = (12 * this.size) / 64, e.font = u + 'pt Play'; u > 6 && e.measureText(d.text).width > (56 * this.size) / 64; ) (u -= 1), (e.font = u + 'pt Play');
                                e.fillText(d.text, this.size / 2 + o + this.size * i, (10 * this.size) / 64);
                            }
                    }
                    return (this.texture.needsUpdate = !0);
                }),
                t
            );
        })()),
        (this.Demo = (function () {
            function t(t, e) {
                (this.l1110 = t), (this.lIlO0 = e), (this.IO11l = this.lIlO0.IO11l);
            }
            return (
                (t.prototype.createFormation = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I;
                    for (n = 1 + Math.floor(5 * Math.pow(Math.random(), 1.5)), a = 2 * Math.random() * (180 * THREE.Math.DEG2RAD), t = 2 * Math.random() * (180 * THREE.Math.DEG2RAD), l = Math.floor(3 * Math.pow(Math.random(), 1)) + 1, u = Math.floor(Math.random() * l) + 1, u += 100 * l, d = 0 - 110 * Math.cos(t), p = -60 - 110 * Math.sin(t), e = Math.floor(360 * Math.random()), o = 2.5 * OI1I1.types_by_code[u].radius, h = [], i = s = 1, r = n; 1 <= r ? s <= r : s >= r; i = 1 <= r ? ++s : --s) (c = d + Math.cos(a + (i / n) * (180 * THREE.Math.DEG2RAD) * 2) * o), (I = p + Math.sin(a + (i / n) * (180 * THREE.Math.DEG2RAD) * 2) * o), h.push(this.lOOlI(c, I, u, t, e));
                    return h;
                }),
                (t.prototype.lOOlI = function (t, e, i, s, l) {
                    var n;
                    return (n = new O00IO()), (n.x = t), (n.y = e), (n.lllOl = 0), (n.II110 = 0), (n.r = s), (n.lIl10 = 0), (n.alive = !0), (n.up = !0), (n.hue = l), (n.angle = Math.round((360 * s) / 2 / (180 * THREE.Math.DEG2RAD))), (n.type = i), (n.O01O1 = this.lIlO0.IO11l.II1O0), this.IO11l.addDemoShip(n);
                }),
                (t.prototype.l1O0l = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w;
                    if ((null != this.station && (this.station.l1O0l(), (t = ((Date.now() % 1e6) / 1e6) * (180 * THREE.Math.DEG2RAD) * 2), (b = 300 * Math.cos(t)), (w = 300 * Math.sin(t) - 60), (this.station.Il1I1.position.x = b), (this.station.Il1I1.position.y = w)), this.IO11l.ships.length > 0)) {
                        if (((g = this.IO11l.ships[0]), Math.random() < 0)) for (v = !g.O1II0.status.up, I = this.IO11l.ships, a = 0, o = I.length; a < o; a++) (y = I[a]), (y.O1II0.status.up = v);
                        if (((l = g.O1II0.status.x), (n = g.O1II0.status.y + 60), (s = Math.sqrt(l * l + n * n)), Math.random() < 0.02 && s < 40)) for (i = Math.pow(Math.random(), 16), i -= Math.pow(Math.random(), 16), e = (g.O1II0.status.angle + 360 + 180 * i) % 360, O = this.IO11l.ships, d = 0, r = O.length; d < r; d++) (y = O[d]), (y.O1II0.status.angle = e);
                    }
                    for (m = this.IO11l.ships, c = 0, h = m.length; c < h; c++) (g = m[c]), (g.O1II0.status.O01O1 = this.lIlO0.IO11l.II1O0), Math.random() < 0.01 && (g.O1II0.status.OI00O = !g.O1II0.status.OI00O), g.O1II0.status.OI00O && this.shipShootingEval(g);
                    for (f = this.IO11l.ships, p = 0, u = f.length; p < u; p++)
                        if (((g = f[p]), (l = g.O1II0.status.x), (n = g.O1II0.status.y + 60), (s = Math.sqrt(l * l + n * n)) > 110)) {
                            this.IO11l.removeShip(g);
                            break;
                        }
                    if (this.IO11l.ships.length < 1) return this.createFormation();
                }),
                (t.prototype.shipShootingEval = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                    for (i = s = 0, r = t.O1II0.instance.lasers.length - 1; s <= r; i = s += 1) if (((n = t.O1II0.instance.lasers[i]), null == n.next_shot && (n.next_shot = 0), this.IO11l.II1O0 >= n.next_shot)) for ((void 0 !== a && null !== a) || (a = []), n.next_shot = this.IO11l.II1O0 + 60 / n.type.rate, c = Math.cos(t.O1II0.status.r), p = Math.sin(t.O1II0.status.r), u = p, d = -c, I = t.O1II0.status.x - n.type.y * c + n.type.x * u, O = t.O1II0.status.y - n.type.y * p + n.type.x * d, m = n.type.z, l = o = 0, h = n.type.number - 1; 0 <= h ? o <= h : o >= h; l = 0 <= h ? ++o : --o) (e = t.O1II0.status.r + (n.type.angle / 180) * (180 * THREE.Math.DEG2RAD)), n.type.number > 1 && (e += ((n.type.spread * (l / (n.type.number - 1) - 0.5)) / 180) * (180 * THREE.Math.DEG2RAD)), this.lIlO0.laserticles.OI00O({ x: I, y: O, z: m, lllOl: t.O1II0.status.lllOl, II110: t.O1II0.status.II110, IOllI: O0l1l.hsvToRgbHex(t.shipmodel.hue, 0.5, 1), type: 0, angle: e + (((Math.random() - 0.5) * n.type.error) / 180) * (180 * THREE.Math.DEG2RAD), speed: n.speed, damage: n.damage / 2, OI11O: 120, OOI0l: this.IO11l.II1O0 });
                }),
                t
            );
        })()),
        (this.Splash = (function () {
            function t(t, e, i, s) {
                (this.l1110 = t),
                    (this.seed = e),
                    (this.I101l = i),
                    (this.welcome = null != s && s),
                    (this.size = 13),
                    (this.lIlO0 = new THREE.Scene()),
                    (this.llIII = 1),
                    (this.OlIO1 = new lOlO1(this.l1110)),
                    (this.I0O1l = new IlOI0(this.l1110)),
                    this.lIlO0.add(this.I0O1l.Il1I1),
                    (this.Ill00 = this.l1110.Ill00),
                    (this.ship = new lIl1O(OlII0.ships_by_code[this.Ill00.type.code], this.l1110.hue / 360)),
                    this.welcome || this.lIlO0.add(this.ship.Il1I1),
                    (this.IO11l = new ll1OI(this.l1110)),
                    (this.IO11l.Ill00 = this.Ill00),
                    this.lIlO0.add(this.IO11l.Il1I1),
                    (this.O101l = new Explosions(this)),
                    this.lIlO0.add(this.O101l.IIl10),
                    this.lIlO0.add(this.O101l.OOOI1),
                    (this.laserticles = new Laserticles(this)),
                    this.lIlO0.add(this.laserticles.IIl10),
                    (this.OOOI1 = new THREE.DirectionalLight(16777215)),
                    this.OOOI1.position.set(-1, 1, 1.5),
                    this.lIlO0.add(this.OOOI1),
                    this.welcome || ((this.chat_bubble = new ChatBubble(this.l1110, this.l1110.hue, 'OYDLQ')), this.lIlO0.add(this.chat_bubble.l0OlI)),
                    (this.fcount = 0),
                    (this.background = new BackgroundScene(this.l1110, this.seed, this.I101l, this.welcome)),
                    (this.color = O0l1l.hsvToRgbHex((120 * Math.random() + 180) / 360, 0.5, 0.05)),
                    this.welcome ||
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return t.OlIO1.l1IO1(t.seed);
                                };
                            })(this)
                        ),
                    this.I101l.add(
                        (function (t) {
                            return function () {
                                return t.l1IO1(t.seed);
                            };
                        })(this)
                    ),
                    (this.shake = { x: 0, y: 0, lllOl: 0, II110: 0 }),
                    (this.demo = new SplashDemo(this.l1110, this)),
                    setTimeout(
                        (function (t) {
                            return function () {
                                var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                                for (document.getElementById('player').style.display = 'none', document.getElementById('logo').style['max-width'] = '90%', d = document.getElementsByClassName('mobile-view'), e = 0, n = d.length; e < n; e++) (t = d[e]), (t.style.display = 'none');
                                for (c = document.getElementsByClassName('social'), i = 0, a = c.length; i < a; i++) (t = c[i]), (t.style.display = 'none');
                                for (p = document.getElementsByClassName('jEHih'), s = 0, o = p.length; s < o; s++) (t = p[s]), (t.style.display = 'none');
                                for (I = document.getElementsByClassName('followtools'), l = 0, r = I.length; l < r; l++) (t = I[l]), (t.style.display = 'none');
                                for (O = document.getElementsByClassName('changelog-new'), m = [], u = 0, h = O.length; u < h; u++) (t = O[u]), m.push((t.style.display = 'none'));
                                return m;
                            };
                        })(),
                        5e3
                    );
            }
            return (
                (t.prototype.startControl = function () {
                    return (this.control = new OOOO0(this.l1110, this.Ill00));
                }),
                (t.prototype.l1IO1 = function (t) {
                    return (this.seed = t), (this.color = O0l1l.hsvToRgbHex((120 * new OII10(this.seed).next() + 180) / 360, 0.5, 0.1));
                }),
                (t.prototype.lOO01 = function () {
                    if (null != this.l1110.display && (this.l1110.display.width !== this.width || this.l1110.display.height !== this.height)) return (this.width = this.l1110.display.width), (this.height = this.l1110.display.height), (this.I1000 = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 1e3)), (this.I1000.position.z = 70);
                }),
                (t.prototype.mod = function (t, e) {
                    return t - e * Math.floor(t / e);
                }),
                (t.prototype.lI0OO = function () {}),
                (t.prototype.say = function (t) {
                    return this.chat_bubble.l0I00(t);
                }),
                (t.prototype.lOO11 = function (t) {
                    var e, i, s, l, n, a, o, r, h, u;
                    if ((this.lOO01(), null != this.I1000)) {
                        for (document.getElementById('content').style['margin-top'] = '50px', r = 240, null != this.demo && this.demo.l1O0l(), this.IO11l.II1O0 < r && (a = this.IO11l.I1l0O()), this.IO11l.I1000.zoom = 0.4, n = this.IO11l.ships, s = 0, l = n.length; s < l; s++) (o = n[s]), o.shipmodel.propstep(!0);
                        return Math.random() < 0.06 && this.IO11l.II1O0 < r && this.O101l.explode(10 * Math.random() - 5, 10 * Math.random() - 5 - 60, 360 * Math.random(), 1 + 1 * Math.random()), this.IO11l.O1lIl(a), null != this.control && this.control.I1l0O(a), (this.I1000.position.x = this.IO11l.I1000.x), (this.I1000.position.y = this.IO11l.I1000.y), (this.I1000.fov = 45 * this.IO11l.I1000.zoom), this.I1000.updateProjectionMatrix(), this.IO11l.II1O0 < r && this.O101l.l1O0l(), this.Ill00.type.code !== this.Ill00.status.type && (this.Ill00.setType(OI1I1.types_by_code[this.Ill00.status.type]), this.lIlO0.remove(this.ship.Il1I1), this.ship.dispose(), (this.ship = new lIl1O(OlII0.ships_by_code[this.Ill00.type.code], this.Ill00.status.hue / 360)), this.lIlO0.add(this.ship.Il1I1), this.ship.bump(this.IO11l.II1O0), this.l1110.l0I11.beep(0.5)), (h = this.Ill00.status.x), (u = this.Ill00.status.y), (e = Math.sqrt(h * h + u * u)), h > this.l1110.l0I1I / 2 ? (h = this.l1110.l0I1I - h) : h < -this.l1110.l0I1I / 2 && (h = -this.l1110.l0I1I - h), u > this.l1110.l0I1I / 2 ? (u = this.l1110.l0I1I - u) : u < -this.l1110.l0I1I / 2 && (u = -this.l1110.l0I1I - u), (i = Math.sqrt(h * h + u * u)), e > this.l1110.l0I1I / 2 ? this.OOOI1.position.set(-h, -u, i) : this.OOOI1.position.set(-h, -u, e - 10), (this.ship.Il1I1.rotation.x = this.Ill00.ll010), (this.ship.Il1I1.rotation.y = 0.4 * this.Ill00.OOIlI), (this.ship.Il1I1.rotation.z = this.Ill00.I00O0.r + 180 * THREE.Math.DEG2RAD), (this.ship.Il1I1.position.x = this.Ill00.status.x), (this.ship.Il1I1.position.y = this.Ill00.status.y), (this.ship.I00I1.visible = this.Ill00.I00O0.up), (this.ship.Il1I1.visible = this.Ill00.status.alive), this.ship.propstep(this.Ill00.I00O0.up), this.ship.l1O0l(this.IO11l.II1O0), null != this.chat_bubble && ((this.chat_bubble.l0OlI.position.x = this.Ill00.status.x), (this.chat_bubble.l0OlI.position.y = this.Ill00.status.y + 6), this.chat_bubble.OO0Il()), this.OlIO1.l1O0l(this.IO11l.II1O0, this.I1000.position.x, this.I1000.position.y), this.I0O1l.l1O0l(this.IO11l), this.Ill00.l0Oll(), (t.sortObjects = !1), this.background.lOO11(t, this.IO11l.II1O0), t.render(this.lIlO0, this.I1000);
                    }
                }),
                t
            );
        })()),
        (this.SplashDemo = (function () {
            function t(t, e) {
                (this.l1110 = t), (this.lIlO0 = e), (this.IO11l = this.lIlO0.IO11l), this.lOOlI(4, -66, 101, 180 * THREE.Math.DEG2RAD * 0.9, 0), this.lOOlI(7, -60, 201, 180 * THREE.Math.DEG2RAD * 1.05, 120), this.lOOlI(-115, -60, 602, 180 * THREE.Math.DEG2RAD * -0.15, 180), this.lOOlI(-5, -63, 401, 180 * THREE.Math.DEG2RAD * -0.1, 200);
            }
            return (
                (t.prototype.createFormation = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I;
                    for (n = 1 + Math.floor(5 * Math.pow(Math.random(), 1.5)), a = 2 * Math.random() * (180 * THREE.Math.DEG2RAD), t = 2 * Math.random() * (180 * THREE.Math.DEG2RAD), l = Math.floor(6 * Math.pow(Math.random(), 1.5)) + 1, u = Math.floor(Math.random() * l) + 1, u += 100 * l, d = 0 - 80 * Math.cos(t), p = -60 - 80 * Math.sin(t), e = Math.floor(360 * Math.random()), o = 2.5 * OI1I1.types_by_code[u].radius, h = [], i = s = 1, r = n; 1 <= r ? s <= r : s >= r; i = 1 <= r ? ++s : --s) (c = d + Math.cos(a + (i / n) * (180 * THREE.Math.DEG2RAD) * 2) * o), (I = p + Math.sin(a + (i / n) * (180 * THREE.Math.DEG2RAD) * 2) * o), h.push(this.lOOlI(c, I, u, t, e));
                    return h;
                }),
                (t.prototype.lOOlI = function (t, e, i, s, l) {
                    var n;
                    return (n = new O00IO()), (n.x = t), (n.y = e), (n.lllOl = 0), (n.II110 = 0), (n.r = s), (n.lIl10 = 0), (n.alive = !0), (n.up = !1), (n.OI00O = !0), (n.hue = l), (n.angle = Math.round((360 * s) / 2 / (180 * THREE.Math.DEG2RAD))), (n.type = i), (n.O01O1 = this.lIlO0.IO11l.II1O0), this.IO11l.addDemoShip(n);
                }),
                (t.prototype.l1O0l = function () {
                    var t, e, i, s, l, n, a, o, r;
                    for (this.IO11l.ships[3].O1II0.ll010 = 0.5, this.IO11l.ships[0].O1II0.ll010 = 0.2, this.IO11l.ships[1].O1II0.ll010 = -0.4, a = this.IO11l.ships, i = 0, s = a.length; i < s; i++) (r = a[i]), (r.O1II0.status.O01O1 = this.lIlO0.IO11l.II1O0), Math.random() < 0.01 && (r.O1II0.status.OI00O = !r.O1II0.status.OI00O), r.O1II0.status.OI00O && this.shipShootingEval(r);
                    for (o = this.IO11l.ships, n = 0, l = o.length; n < l && ((r = o[n]), (t = r.O1II0.status.x), (e = r.O1II0.status.y + 60), !(Math.sqrt(t * t + e * e) > 100)); n++);
                    if (this.IO11l.ships.length < 1) return this.createFormation();
                }),
                (t.prototype.shipShootingEval = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                    for (i = s = 0, r = t.O1II0.instance.lasers.length - 1; s <= r; i = s += 1) if (((n = t.O1II0.instance.lasers[i]), null == n.next_shot && (n.next_shot = 0), this.IO11l.II1O0 >= n.next_shot)) for ((void 0 !== a && null !== a) || (a = []), n.next_shot = this.IO11l.II1O0 + 60 / n.type.rate, c = Math.cos(t.O1II0.status.r), p = Math.sin(t.O1II0.status.r), u = p, d = -c, I = t.O1II0.status.x - n.type.y * c + n.type.x * u, O = t.O1II0.status.y - n.type.y * p + n.type.x * d, m = n.type.z, l = o = 0, h = n.type.number - 1; 0 <= h ? o <= h : o >= h; l = 0 <= h ? ++o : --o) (e = t.O1II0.status.r + (n.type.angle / 180) * (180 * THREE.Math.DEG2RAD)), n.type.number > 1 && (e += ((n.type.spread * (l / (n.type.number - 1) - 0.5)) / 180) * (180 * THREE.Math.DEG2RAD)), this.lIlO0.laserticles.OI00O({ x: I, y: O, z: m, lllOl: t.O1II0.status.lllOl, II110: t.O1II0.status.II110, IOllI: O0l1l.hsvToRgbHex(t.shipmodel.hue, 0.5, 1), type: 0, angle: e + (((Math.random() - 0.5) * n.type.error) / 180) * (180 * THREE.Math.DEG2RAD), speed: n.speed, damage: n.damage, OI11O: 120, OOI0l: this.IO11l.II1O0 });
                }),
                t
            );
        })()),
        (this.RIPPlate = (function () {
            function t(t, e) {
                (this.name = t), (this.l1OI0 = e), (this.OII1l = Date.now()), (this.canvas = document.createElement('canvas')), (this.canvas.width = 256), (this.canvas.height = 256), (this.texture = new THREE.Texture(this.canvas)), (this.texture.minFilter = THREE.LinearFilter), this.lOll0(), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, map: this.texture, transparent: !0, depthWrite: !1, depthTest: !1, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(12, 12, 1);
            }
            return (
                (t.prototype.l1O0l = function () {
                    var t, e;
                    return (e = Math.max(0, Math.min(1, (Date.now() - this.OII1l) / 5e3))), 1 === e ? (this.remove = !0) : ((t = Math.max(0.001, Math.pow(1 - e, 0.25))), (this.material.opacity = 0.5 * t), this.l0OlI.scale.set(12 * t, 12 * t, 1 * t));
                }),
                (t.prototype.dispose = function () {
                    return this.O1III.dispose(), this.material.dispose(), this.texture.dispose();
                }),
                (t.prototype.lOll0 = function (t) {
                    var e, i, s, l;
                    return (
                        (e = this.canvas.getContext('2d')),
                        (e.fillStyle = '#FFF'),
                        (l = this.canvas.width),
                        (e.font = Math.round(0.4 * l) + 'pt SBGlyphs'),
                        (e.textBaseLine = 'middle'),
                        (e.textAlign = 'center'),
                        e.fillText('[', 0.5 * l, 0.45 * l),
                        (e.globalCompositeOperation = 'source-in'),
                        e.fillRect(0, 0, l, l),
                        (e.globalCompositeOperation = 'source-over'),
                        (e.font = Math.round(0.08 * l) + 'pt Play'),
                        e.fillText(this.name, l / 2, 0.9 * l),
                        null != this.l1OI0
                            ? ((i = 0.2 * l),
                              (s = Il01O.I110l(this.l1OI0.badge, this.l1OI0.laser, this.l1OI0.finish, i, this.l1OI0.hue)),
                              s.complete ? e.drawImage(s, l / 2 - i, 0.7 * l - i / 2, 2 * i, i) : e.fillText('R.I.P', l / 2, 0.75 * l),
                              (s.onload = (function (e) {
                                  return function () {
                                      return e.lOll0(t);
                                  };
                              })(this)))
                            : e.fillText('R.I.P', l / 2, 0.75 * l),
                        (this.texture.needsUpdate = !0)
                    );
                }),
                t
            );
        })()),
        (this.MobileAsteroid = (function () {
            function t(t, e) {
                (this.l1110 = t), (this.size = e.getUint8(1)), (this.model_size = this.size), (this.id = e.getUint16(2, !0)), (this.IO11l = this.l1110.lIlO0.IO11l), this.read(e), this.l1O0l(e), this.createModel(), (this.pop = 0), (this.killed = !1), (this.OOI0l = this.l1110.lIlO0.IO11l.II1O0);
            }
            return (
                (t.prototype.l1O0l = function (t) {
                    var e, i, s;
                    if ((s = t.getUint32(4, !0)) > this.IO11l.II1O0) this.I0l1l = t;
                    else if (s < this.IO11l.II1O0) {
                        if ((this.read(t), this.IO11l.II1O0 - s < 30)) for (e = s + 1, i = this.IO11l.II1O0; e <= i; e += 1) this.l0Ill();
                    } else this.read(t);
                }),
                (t.prototype.read = function (t) {
                    return (this.model_size = t.getUint8(1)), (this.x = t.getFloat32(8, !0)), (this.y = t.getFloat32(12, !0)), (this.lllOl = t.getFloat32(16, !0)), (this.II110 = t.getFloat32(20, !0)), (this.last_update = this.IO11l.II1O0);
                }),
                (t.prototype.createModel = function () {
                    var t, e;
                    if ('survival' !== this.l1110.mode.id && 'team' !== this.l1110.mode.id) return (this.l0OlI = this.l1110.lIlO0.OlIO1.models[this.id % this.l1110.lIlO0.OlIO1.models.length].getInstance()), (e = new OII10(this.id)), (this.l0OlI.rotation.x = e.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.l0OlI.rotation.z = e.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.rotation_period = 200 + Math.round(1800 * e.next())), this.l1110.lIlO0.lIlO0.add(this.l0OlI);
                    if (this.size < 40) {
                        if (((this.l0OlI = GIFT_MODEL.getInstance()), null != this.l0OlI)) return (this.model_resize = 0.6), (e = new OII10(this.id)), (this.l0OlI.rotation.x = 180 * THREE.Math.DEG2RAD * 0.5), (t = new THREE.Group()), t.add(this.l0OlI), (this.l0OlI = t), (this.l0OlI.rotation.x = 180 * THREE.Math.DEG2RAD * 0.15), (this.rotation_period = 200 + Math.round(1800 * e.next())), this.l1110.lIlO0.lIlO0.add(this.l0OlI);
                    } else if (((this.l0OlI = PUMPKIN_MODEL.getInstance()), null != this.l0OlI)) return (this.model_resize = 0.7), (e = new OII10(this.id)), (this.l0OlI.rotation.x = 0), (this.l0OlI.rotation.z = 0), (this.rotation_period = 200 + Math.round(1800 * e.next())), this.l1110.lIlO0.lIlO0.add(this.l0OlI);
                }),
                (t.prototype.l0Ill = function () {
                    if ((null != this.I0l1l && this.IO11l.II1O0 >= this.I0l1l.getUint32(4, !0) && (this.read(this.I0l1l), (this.I0l1l = null)), (this.x += this.lllOl), (this.y += this.II110), this.IO11l.II1O0 > this.last_update + 90)) return (this.killed = !0);
                }),
                (t.prototype.dispose = function () {
                    if (null != this.l0OlI) return this.l1110.lIlO0.lIlO0.remove(this.l0OlI);
                }),
                (t.prototype.updateModel = function () {
                    var t, e, i;
                    if (null != this.l0OlI) return (i = (this.model_size / 100) * 10), null != this.model_resize && (i *= this.model_resize), this.pop < 15 ? (this.pop++, (e = Math.sqrt(this.pop / 15) * i), this.l0OlI.scale.set(e, e, e)) : this.l0OlI.scale.set(i, i, i), (t = this.l1110.lIlO0.IO11l.II1O0 - this.OOI0l), (this.l0OlI.rotation.y = ((t % this.rotation_period) / this.rotation_period) * 2 * (180 * THREE.Math.DEG2RAD)), (this.l0OlI.position.x = this.x), (this.l0OlI.position.y = this.y), (this.l0OlI.position.z = 0), (this.l0OlI.visible = !0), this.IO11l.Ill0l(this.l0OlI);
                }),
                t
            );
        })()),
        (Math.fmod = function (t, e) {
            return t - e * Math.floor(t / e);
        }),
        (Math.normAngle = function (t) {
            return Math.fmod(t + 180 * THREE.Math.DEG2RAD, 180 * THREE.Math.DEG2RAD * 2) - 180 * THREE.Math.DEG2RAD;
        }),
        (Math.normRange = function (t, e) {
            return Math.fmod(t + 0.5 * e, e) - 0.5 * e;
        }),
        (this.Gradient = (function () {
            function t(t) {
                (this.OI01I = t), null == this.OI01I && (this.OI01I = []);
            }
            return (
                (t.prototype.add = function (t) {
                    return this.OI01I.push(t);
                }),
                (t.prototype.getInt = function (t) {
                    var e, i, s, l, n;
                    if (0 === this.OI01I.length) return 0;
                    if (((l = n = this.OI01I[0]), t <= l[0])) return (l[1] << 16) | (l[2] << 8) | l[3];
                    for (s = 1; ; ) {
                        if (t < n[0] || s >= this.OI01I.length - 1) break;
                        (l = n), (n = this.OI01I[s++]);
                    }
                    return t >= n[0] ? (n[1] << 16) | (n[2] << 8) | n[3] : ((i = (t - l[0]) / (n[0] - l[0])), (((e = (n[0] - t) / (n[0] - l[0])) * l[1] + i * n[1]) << 16) | ((e * l[2] + i * n[2]) << 8) | (e * l[3] + i * n[3]) | 0);
                }),
                (t.prototype.get = function (t) {
                    var e, i, s, l, n;
                    if (0 === this.OI01I.length) return [0, 0, 0];
                    if (((l = n = this.OI01I[0]), t <= l[0])) return [l[1], l[2], l[3]];
                    for (s = 1; ; ) {
                        if (t < n[0] || s >= this.OI01I.length - 1) break;
                        (l = n), (n = this.OI01I[s++]);
                    }
                    return t >= n[0] ? [n[1], n[2], n[3]] : ((i = (t - l[0]) / (n[0] - l[0])), (e = (n[0] - t) / (n[0] - l[0])), [e * l[1] + i * n[1], e * l[2] + i * n[2], e * l[3] + i * n[3]]);
                }),
                t
            );
        })()),
        (this.O0l1l = (function () {
            function t() {}
            return (
                (t.O0IOO = function (t, e, i, s) {
                    var l, n, a, o, r, h, u, d;
                    switch ((null == s && (s = []), (o = Math.floor(6 * t)), (n = 6 * t - o), (r = i * (1 - e)), (h = i * (1 - n * e)), (d = i * (1 - (1 - n) * e)), o % 6)) {
                        case 0:
                            (u = i), (a = d), (l = r);
                            break;
                        case 1:
                            (u = h), (a = i), (l = r);
                            break;
                        case 2:
                            (u = r), (a = i), (l = d);
                            break;
                        case 3:
                            (u = r), (a = h), (l = i);
                            break;
                        case 4:
                            (u = d), (a = r), (l = i);
                            break;
                        case 5:
                            (u = i), (a = r), (l = h);
                    }
                    return (s[0] = (255 * u) | 0), (s[1] = (255 * a) | 0), (s[2] = (255 * l) | 0), s;
                }),
                (t.hsvToRgbHex = function (t, e, i) {
                    var s, l, n, a, o, r, h, u;
                    switch (((a = Math.floor(6 * t)), (l = 6 * t - a), (o = i * (1 - e)), (r = i * (1 - l * e)), (u = i * (1 - (1 - l) * e)), a % 6)) {
                        case 0:
                            (h = i), (n = u), (s = o);
                            break;
                        case 1:
                            (h = r), (n = i), (s = o);
                            break;
                        case 2:
                            (h = o), (n = i), (s = u);
                            break;
                        case 3:
                            (h = o), (n = r), (s = i);
                            break;
                        case 4:
                            (h = u), (n = o), (s = i);
                            break;
                        case 5:
                            (h = i), (n = o), (s = r);
                    }
                    return (((255 * h) | 0) << 16) | (((255 * n) | 0) << 8) | (255 * s) | 0;
                }),
                t
            );
        })()),
        (Ol000 = { OIOlO: 92, l1000: 36e3, OOlIl: 1.3, O0lI0: 0.003, lO0I1: 'ojct:4', l111I: 'afhy!rru', O0I01: '1gjk3', ll0lO: 'UF10l' }),
        (module.exports = Ol000),
        (I010I = (function () {
            function t(t) {
                var e, i, s, l;
                for (this.seed = t, this.table = [670, 243, 963, 607, 432, 29, 624, 809, 254, 752, 691, 904, 275, 984, 586, 94, 1014, 614, 252, 178, 488, 954, 55, 836, 186, 858, 719, 562, 685, 898, 167, 844, 639, 505, 85, 386, 520, 988, 561, 889, 91, 329, 900, 847, 334, 531, 168, 57, 789, 529, 259, 323, 313, 72, 153, 606, 694, 442, 547, 922, 242, 983, 965, 876, 39, 728, 383, 109, 343, 810, 815, 144, 457, 434, 221, 279, 328, 136, 674, 556, 502, 896, 582, 250, 665, 370, 926, 912, 118, 543, 365, 467, 311, 700, 15, 297, 609, 731, 476, 634, 715, 777, 62, 1007, 525, 942, 310, 627, 630, 448, 437, 822, 300, 339, 924, 583, 92, 800, 698, 312, 542, 740, 271, 778, 895, 447, 175, 957, 17, 481, 347, 283, 366, 277, 843, 966, 927, 535, 503, 234, 746, 712, 1010, 544, 671, 295, 978, 729, 997, 287, 621, 782, 160, 433, 537, 121, 413, 304, 98, 657, 498, 946, 319, 595, 191, 341, 554, 523, 274, 209, 435, 644, 947, 979, 397, 261, 681, 786, 1006, 565, 472, 180, 318, 126, 874, 693, 526, 276, 340, 808, 884, 409, 486, 962, 960, 772, 901, 690, 359, 837, 129, 363, 509, 616, 88, 382, 730, 513, 623, 999, 504, 48, 4, 384, 281, 560, 417, 99, 773, 956, 943, 496, 558, 218, 170, 471, 536, 138, 19, 266, 6, 868, 845, 16, 985, 866, 601, 445, 458, 894, 950, 349, 1017, 125, 495, 723, 446, 647, 834, 880, 272, 475, 483, 227, 357, 750, 851, 139, 406, 336, 158, 284, 482, 324, 991, 632, 587, 663, 74, 256, 541, 120, 801, 831, 46, 522, 589, 1, 571, 368, 137, 761, 885, 968, 982, 948, 785, 391, 840, 932, 829, 117, 641, 466, 367, 688, 733, 229, 735, 14, 205, 31, 316, 333, 183, 521, 795, 58, 1021, 282, 794, 939, 40, 394, 793, 1002, 763, 212, 484, 133, 260, 465, 396, 769, 518, 955, 497, 377, 145, 508, 514, 224, 196, 454, 176, 975, 865, 1005, 1023, 986, 596, 426, 893, 551, 90, 130, 873, 22, 709, 686, 436, 236, 661, 579, 764, 362, 141, 112, 970, 987, 12, 317, 369, 26, 344, 66, 803, 493, 716, 9, 637, 945, 225, 703, 78, 346, 751, 123, 1009, 1016, 27, 52, 864, 902, 921, 292, 314, 599, 799, 263, 626, 338, 953, 491, 892, 353, 692, 917, 540, 882, 677, 744, 633, 821, 327, 60, 1020, 928, 788, 360, 414, 430, 462, 824, 820, 727, 398, 342, 273, 726, 981, 84, 82, 206, 388, 720, 806, 652, 550, 238, 159, 134, 732, 897, 500, 881, 805, 814, 701, 717, 566, 7, 211, 604, 816, 56, 658, 107, 61, 374, 320, 501, 13, 642, 863, 791, 438, 348, 97, 214, 86, 305, 875, 656, 24, 364, 767, 156, 879, 590, 734, 920, 655, 577, 83, 584, 660, 38, 100, 299, 580, 990, 636, 944, 463, 766, 996, 714, 8, 515, 87, 198, 280, 444, 131, 404, 108, 278, 487, 223, 598, 410, 395, 199, 268, 989, 75, 195, 760, 916, 977, 421, 11, 1e3, 813, 216, 817, 823, 164, 668, 739, 572, 30, 707, 798, 291, 564, 77, 456, 478, 68, 643, 615, 172, 841, 672, 919, 1012, 613, 385, 980, 711, 771, 682, 232, 765, 143, 620, 631, 861, 468, 622, 201, 325, 424, 189, 608, 403, 775, 646, 673, 1013, 400, 859, 838, 345, 210, 860, 65, 63, 34, 755, 161, 479, 235, 783, 460, 826, 507, 854, 839, 666, 802, 441, 114, 443, 738, 770, 929, 857, 907, 741, 935, 949, 322, 995, 217, 667, 269, 184, 650, 1018, 506, 290, 787, 459, 721, 828, 567, 222, 494, 142, 743, 405, 76, 722, 588, 147, 899, 270, 695, 597, 337, 155, 569, 679, 853, 450, 21, 517, 197, 371, 257, 380, 244, 553, 952, 381, 827, 524, 877, 702, 306, 600, 1011, 431, 781, 594, 387, 1019, 411, 533, 659, 177, 725, 930, 933, 832, 41, 2, 687, 1008, 439, 307, 891, 871, 415, 651, 308, 298, 811, 0, 194, 592, 241, 918, 18, 973, 110, 654, 967, 490, 683, 914, 128, 992, 964, 122, 230, 149, 289, 392, 416, 852, 936, 262, 102, 938, 511, 255, 510, 165, 105, 419, 958, 294, 379, 49, 699, 330, 593, 539, 710, 106, 79, 440, 200, 704, 961, 326, 321, 759, 193, 890, 44, 549, 913, 776, 909, 552, 972, 132, 429, 748, 532, 115, 888, 635, 842, 649, 747, 807, 887, 856, 784, 148, 530, 116, 157, 372, 754, 28, 581, 67, 187, 202, 818, 181, 45, 959, 146, 124, 994, 872, 675, 706, 253, 247, 625, 570, 152, 423, 185, 361, 849, 971, 546, 412, 830, 1022, 188, 850, 140, 220, 451, 219, 768, 1015, 455, 780, 976, 449, 969, 848, 293, 249, 59, 390, 512, 538, 578, 906, 819, 862, 974, 33, 911, 135, 908, 248, 401, 951, 527, 169, 676, 640, 1003, 591, 103, 37, 285, 684, 104, 163, 753, 1004, 934, 645, 470, 774, 20, 489, 228, 461, 492, 469, 998, 296, 233, 869, 605, 315, 36, 5, 425, 878, 617, 886, 23, 355, 993, 93, 473, 555, 474, 464, 937, 925, 1001, 611, 35, 812, 174, 53, 286, 680, 267, 428, 335, 883, 653, 69, 718, 585, 749, 150, 408, 393, 915, 576, 664, 629, 756, 402, 638, 602, 245, 43, 545, 213, 303, 192, 70, 453, 910, 407, 742, 111, 548, 835, 452, 575, 903, 619, 376, 154, 302, 151, 804, 867, 574, 563, 239, 648, 179, 855, 378, 618, 264, 669, 427, 354, 399, 265, 50, 796, 166, 923, 825, 697, 534, 54, 173, 870, 792, 162, 713, 246, 89, 51, 350, 705, 251, 557, 237, 240, 736, 689, 203, 519, 73, 81, 628, 288, 331, 204, 528, 480, 389, 32, 418, 573, 757, 358, 215, 226, 42, 779, 231, 171, 190, 612, 301, 762, 708, 420, 846, 208, 485, 351, 790, 737, 10, 258, 309, 797, 127, 516, 559, 499, 352, 71, 758, 25, 568, 113, 3, 610, 101, 375, 96, 603, 745, 64, 80, 477, 332, 833, 940, 373, 905, 422, 182, 356, 941, 47, 119, 662, 931, 696, 95, 724, 678, 207], s = this.table.length, e = i = 0, l = s - 1; 0 <= l ? i <= l : i >= l; e = 0 <= l ? ++i : --i) this.table.push(this.table[e]);
                this.seed < 1 && (this.seed *= 1 << 30), (this.size = 1024), (this.normalize = 1 / 1023), (this.IOl11 = 1023), (this.OIl10 = this.seed & this.IOl11), (this.OIOI0 = (this.seed >> 10) & this.IOl11), (this.I0IlI = (this.seed >> 20) & this.IOl11), (this.c2d = []), (this.I11OO = Math.cos(0.3)), (this.III10 = Math.sin(0.3));
            }
            return (
                (t.prototype.ll1Ol = function (t, e, i) {
                    var s;
                    return (s = (-2 * i + 3) * i * i), t * (1 - s) + e * s;
                }),
                (t.prototype.OI0Il = function (t, e, i) {
                    return t * (1 - i) + e * i;
                }),
                (t.prototype.noise1d = function (t) {
                    var e, i, s, l;
                    return (l = Math.floor(t)), (e = t - l), (l &= this.IOl11), (i = this.table[this.OIl10 + this.table[l]]), (s = this.table[this.OIl10 + this.table[l + 1]]), this.ll1Ol(i, s, e) * this.normalize;
                }),
                (t.prototype.l0lI0 = function (t, e) {
                    var i, s, l, n, a, o, r, h;
                    return (r = Math.floor(t)), (h = Math.floor(e)), (i = t - r), (s = e - h), (r &= this.IOl11), (h &= this.IOl11), (l = this.table[this.OIl10 + this.table[r + this.table[h + this.OIOI0]]]), (n = this.table[this.OIl10 + this.table[r + 1 + this.table[h + this.OIOI0]]]), (a = this.table[this.OIl10 + this.table[r + this.table[h + 1 + this.OIOI0]]]), (o = this.table[this.OIl10 + this.table[r + 1 + this.table[h + 1 + this.OIOI0]]]), this.ll1Ol(this.ll1Ol(l, n, i), this.ll1Ol(a, o, i), s) * this.normalize;
                }),
                (t.prototype.I1110 = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                    return (m = Math.floor(t)), (f = Math.floor(e)), (g = Math.floor(i)), (s = t - m), (l = e - f), (n = i - g), (m &= this.IOl11), (f &= this.IOl11), (g &= this.IOl11), (a = this.table[this.OIl10 + this.table[m + this.table[f + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (o = this.table[this.OIl10 + this.table[m + 1 + this.table[f + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (r = this.table[this.OIl10 + this.table[m + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (h = this.table[this.OIl10 + this.table[m + 1 + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (u = this.table[this.OIl10 + this.table[m + this.table[f + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (d = this.table[this.OIl10 + this.table[m + 1 + this.table[f + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (c = this.table[this.OIl10 + this.table[m + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (p = this.table[this.OIl10 + this.table[m + 1 + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (I = this.ll1Ol(this.ll1Ol(a, o, s), this.ll1Ol(r, h, s), l)), (O = this.ll1Ol(this.ll1Ol(u, d, s), this.ll1Ol(c, p, s), l)), this.ll1Ol(I, O, n) * this.normalize;
                }),
                (t.prototype.IIIOI = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                    return (m = Math.floor(t)), (f = Math.floor(e)), (g = Math.floor(i)), (s = t - m), (l = e - f), (n = i - g), (m &= this.IOl11), (f &= this.IOl11), (g &= this.IOl11), (a = this.table[this.OIl10 + this.table[m + this.table[f + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (o = this.table[this.OIl10 + this.table[m + 1 + this.table[f + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (r = this.table[this.OIl10 + this.table[m + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (h = this.table[this.OIl10 + this.table[m + 1 + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + this.I0IlI]]]]]), (u = this.table[this.OIl10 + this.table[m + this.table[f + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (d = this.table[this.OIl10 + this.table[m + 1 + this.table[f + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (c = this.table[this.OIl10 + this.table[m + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (p = this.table[this.OIl10 + this.table[m + 1 + this.table[f + 1 + this.table[this.OIOI0 + this.table[g + 1 + this.I0IlI]]]]]), (I = this.OI0Il(this.OI0Il(a, o, s), this.OI0Il(r, h, s), l)), (O = this.OI0Il(this.OI0Il(u, d, s), this.OI0Il(c, p, s), l)), this.OI0Il(I, O, n) * this.normalize;
                }),
                (t.prototype.OOl0O = function (t, e, i) {}),
                (t.prototype.basic1d = function (t, e, i, s) {
                    var l, n, a, o, r;
                    for (null == e && (e = 5), null == i && (i = 0.5), null == s && (s = 1.9), r = 0, l = 1, a = 0, n = 1, o = e; n <= o; n += 1) (r += this.noise1d(t) * l), (a += l), (l *= i), (t *= s);
                    return r / a;
                }),
                (t.prototype.IlOI1 = function (t, e, i, s, l, n, a) {
                    var o, r, h, u, d, c, p;
                    for (null == i && (i = 5), null == s && (s = 0.5), null == l && (l = 1.9), null == n && (n = this.I11OO), null == a && (a = this.III10), p = 0, o = 1, h = 0, r = 1, c = i; r <= c; r += 1) (p += this.l0lI0(t, e) * o), (h += o), (o *= s), (u = l * (t * n + e * a)), (d = l * (e * n - t * a)), (t = u), (e = d);
                    return p / h;
                }),
                (t.prototype.OO01O = function (t, e, i, s, l, n, a, o) {
                    var r, h, u, d, c, p, I;
                    for (null == s && (s = 5), null == l && (l = 0.5), null == n && (n = 1.9), null == a && (a = this.I11OO), null == o && (o = this.III10), I = 0, r = 1, u = 0, h = 1, p = s; h <= p; h += 1) (I += this.I1110(t, e, i) * r), (u += r), (r *= l), (d = n * (t * a + e * o)), (c = n * (e * a - t * o)), (t = d), (e = c), (i *= n);
                    return I / u;
                }),
                (t.prototype.periodicBasic1d = function (t, e, i, s, l) {
                    var n, a, o, r;
                    return null == i && (i = 5), null == s && (s = 0.5), null == l && (l = 1.9), (a = Math.floor(t / e)), (n = t / e - a), (o = this.basic1d(n * e, i, s, l)), (r = this.basic1d(n * e + e, i, s, l)), this.ll1Ol(o, r, 1 - n);
                }),
                (t.prototype.II0O1 = function (t, e, i, s, l, n, a, o) {
                    var r, h, u, d, c, p, I, O;
                    return null == s && (s = 5), null == l && (l = 0.5), null == n && (n = 1.9), null == a && (a = this.I11OO), null == o && (o = this.III10), (u = Math.floor(t / i)), (d = Math.floor(e / i)), (r = t / i - u), (h = e / i - d), (c = this.IlOI1(r * i, h * i, s, l, n, a, o)), (p = this.IlOI1(r * i + i, h * i, s, l, n, a, o)), (I = this.IlOI1(r * i, h * i + i, s, l, n, a, o)), (O = this.IlOI1(r * i + i, h * i + i, s, l, n, a, o)), this.ll1Ol(this.ll1Ol(c, p, 1 - r), this.ll1Ol(I, O, 1 - r), 1 - h);
                }),
                (t.prototype.turbulence2d = function (t, e, i, s, l, n, a) {
                    var o, r, h, u, d, c, p;
                    for (null == i && (i = 5), null == s && (s = 0.5), null == l && (l = 1.9), null == n && (n = this.I11OO), null == a && (a = this.III10), p = 0, o = 1, h = 0, r = 1, c = i; r <= c; r += 1) (p += 2 * (0.5 - Math.abs(0.5 - this.l0lI0(t, e))) * o), (h += o), (o *= s), (u = l * (t * n + e * a)), (d = l * (e * n - t * a)), (t = u), (e = d);
                    return p / h;
                }),
                (t.prototype.turbulence3d = function (t, e, i, s, l, n, a, o) {
                    var r, h, u, d, c, p, I, O;
                    for (null == s && (s = 5), null == l && (l = 0.5), null == n && (n = 1.9), null == a && (a = this.I11OO), null == o && (o = this.III10), O = 0, r = 1, u = 0, h = 1, I = s; h <= I; h += 1) (O += 2 * (0.5 - Math.abs(0.5 - this.l0lI0(t, e, i))) * r), (u += r), (r *= l), (d = n * (t * a + e * o)), (c = n * (e * a - t * o)), (p = n * i), (t = d), (e = c), (i = p);
                    return O / u;
                }),
                (t.prototype.periodicTurbulence2d = function (t, e, i, s, l, n, a, o) {
                    var r, h, u, d, c, p, I, O;
                    return null == s && (s = 5), null == l && (l = 0.5), null == n && (n = 1.9), null == a && (a = this.I11OO), null == o && (o = this.III10), (u = Math.floor(t / i)), (d = Math.floor(e / i)), (r = t / i - u), (h = e / i - d), (c = this.turbulence2d(r * i, h * i, s, l, n, a, o)), (p = this.turbulence2d(r * i + i, h * i, s, l, n, a, o)), (I = this.turbulence2d(r * i, h * i + i, s, l, n, a, o)), (O = this.turbulence2d(r * i + i, h * i + i, s, l, n, a, o)), this.ll1Ol(this.ll1Ol(c, p, 1 - r), this.ll1Ol(I, O, 1 - r), 1 - h);
                }),
                (t.prototype.O0O1I = function (t, e, i, s, l, n, a) {
                    var o, r, h, u, d, c, p, I, O;
                    for (null == i && (i = 5), null == s && (s = 0.5), null == l && (l = 1.9), null == n && (n = this.I11OO), null == a && (a = this.III10), I = 0, o = 1, r = 1, u = 0, h = 1, p = i; h <= p; h += 1) (O = 2 * this.l0lI0(t, e)), O > 1 && (O = 2 - O), (O = Math.pow(O, 2)), (I += o * r * O), (o = O), (u += r), (r *= s), (d = l * (t * n + e * a)), (c = l * (e * n - t * a)), (t = d), (e = c);
                    return I / u;
                }),
                (t.prototype.lOl0l = function (t, e, i, s, l, n, a, o) {
                    var r, h, u, d, c, p, I, O, m, f, g;
                    for (null == s && (s = 5), null == l && (l = 0.5), null == n && (n = 1.9), null == a && (a = this.I11OO), null == o && (o = this.III10), f = 0, r = 1, h = 1, c = 0, u = 1, m = s; u <= m; u += 1) (g = 2 * this.I1110(t, e, i)), g > 1 && (g = 2 - g), (g = Math.pow(g, 2)), (f += r * h * g), (r = g), (c += h), (h *= l), (p = t * a + e * o), (I = e * a - t * o), (d = I * a + i * o), (O = i * a - I * o), (t = n * p), (e = n * d), (i = n * O);
                    return f / c;
                }),
                (t.prototype.O1O01 = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T;
                    for (_ = Math.floor(t), M = Math.floor(e), s = t - _, l = e - M, n = 100, a = 0, o = 0, r = 100, h = 0, u = 0, v = w = 0; w <= 2; v = w += 1) for (b = x = 0; x <= 2; b = x += 1) (z = (_ - 1 + v) % i), (T = (M - 1 + b) % i), (k = -1 + v + this.table[this.OIl10 + this.table[z + this.table[this.OIOI0 + T]]] * this.normalize * 0.8 + 0.1), (E = -1 + b + this.table[this.OIl10 + this.table[z + this.table[this.OIOI0 + this.table[T + 1]]]] * this.normalize * 0.8 + 0.1), (I = s - k), (f = l - E), (d = I * I + f * f), d < n ? ((r = n), (h = a), (u = o), (n = d), (a = k), (o = E)) : d < r && ((r = d), (h = k), (u = E));
                    return (O = s - a), (g = l - o), (c = Math.sqrt(O * O + g * g)), (m = s - h), (y = l - u), (p = Math.sqrt(m * m + y * y)), Math.min(c, p) / Math.max(c, p);
                }),
                (t.prototype.O1II1 = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    for (f = Math.floor(t), y = Math.floor(e), s = t - f, l = e - y, n = 100, 0, 0, a = 0, u = c = 0; c <= 2; u = c += 1) for (d = p = 0; p <= 2; d = p += 1) (g = (f - 1 + u) % i), (v = (y - 1 + d) % i), (I = -1 + u + this.table[this.OIl10 + this.table[g + this.table[this.OIOI0 + v]]] * this.normalize * 0.8 + 0.1), (O = -1 + d + this.table[this.OIl10 + this.table[g + this.table[this.OIOI0 + this.table[v + 1]]]] * this.normalize * 0.8 + 0.1), (m = this.table[this.OIl10 + this.table[g + this.table[this.OIOI0 + this.table[v + 17]]]]), (r = s - I), (h = l - O), (o = r * r + h * h) < n && ((n = o), I, O, (a = m));
                    return a * this.normalize;
                }),
                (t.prototype.OlO1O = function (t, e, i, s) {
                    var l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F;
                    for (null == s && (s = 100), C = Math.floor(t), G = Math.floor(e), B = Math.floor(i), l = t - C, n = e - G, a = i - B, o = 100, r = 0, h = 0, u = 0, d = 100, c = 0, p = 0, I = 0, z = S = 0; S <= 2; z = S += 1)
                        for (M = R = 0; R <= 2; M = R += 1) {
                            for (T = P = 0; P <= 2; T = P += 1) (j = (C - 1 + z) % s & this.IOl11), (L = (G - 1 + M) % s & this.IOl11), (F = (B - 1 + T) % s & this.IOl11), (A = -1 + z + this.table[this.OIl10 + this.table[j + this.table[this.OIOI0 + this.table[F + L]]]] * this.normalize), (H = -1 + M + this.table[this.OIl10 + this.table[j + this.table[this.OIOI0 + this.table[this.table[L + F] + 1]]]] * this.normalize), (D = -1 + T + this.table[this.OIl10 + this.table[j + this.table[this.OIOI0 + this.table[this.table[L + F] + 37]]]] * this.normalize);
                            (g = l - A), (b = n - H), (k = a - D), (O = g * g + b * b + k * k), O < o ? ((d = o), (c = r), (p = h), (I = u), (o = O), (r = A), (h = H), (u = D)) : O < d && ((d = O), (c = A), (p = H), (I = D));
                        }
                    return (y = l - r), (w = n - h), (E = a - u), (m = Math.sqrt(y * y + w * w + E * E)), (v = l - c), (x = n - p), (_ = a - I), (f = Math.sqrt(v * v + x * x + _ * _)), Math.min(m, f) / Math.max(m, f);
                }),
                (t.OO1ll = function (t) {
                    var e, i, s, l, n, a;
                    for (n = [], e = s = 0, l = t - 1; 0 <= l ? s <= l : s >= l; e = 0 <= l ? ++s : --s) n[e] = e;
                    for (a = []; ; ) {
                        if (0 === n.length) break;
                        (i = Math.floor(Math.random() * n.length)), a.push(n.splice(i, 1)[0]);
                    }
                    return a;
                }),
                t
            );
        })()),
        (module.exports = I010I),
        (OII10 = require('./random.js', OII10)),
        (I010I = require('./valuenoise.js', I010I)),
        (this.l1ll1 = (function () {
            function t(t, e, i) {
                var s, l, n, a, o, r;
                for (this.seed = null != t ? t : Math.random(), this.size = null != e ? e : 20, this.mode = i, this.random = new OII10(this.seed), this.lll0O = 1e5 * this.random.next(), this.l1Il1 = 1e5 * this.random.next(), this.a = 13971, this.c = 12345, this.mod = 1 << 30, this.inv = 1 / this.mod, this.IOl11 = this.mod - 1, this.IIIlO = 0.5, this.IlO1O = 0.5, this.lOO0I = 5, this.Ol10I = 1 + this.random.lI10l(8), this.fx = this.Ol10I / this.size, this.fy = this.Ol10I / this.size, this.fx = (2 + 8 * this.random.next()) / (2 * this.size), this.fy = (2 + 8 * this.random.next()) / (2 * this.size), this.OIOl1 = new I010I(this.random.next()), this.lOIOl = 2 * this.size, this.buffer = [], this.custom_map = null, s = n = 0, o = this.lOIOl - 1; n <= o; s = n += 1) for (l = a = 0, r = this.lOIOl - 1; a <= r; l = a += 1) this.buffer[s + l * this.lOIOl] = this.get(s - 0.5 * this.lOIOl, l - 0.5 * this.lOIOl);
            }
            return (
                (t.prototype.IlIIl = function (t, e) {
                    return (t = (t + (3 * this.lOIOl) / 2) % this.lOIOl), (e = (e + (3 * this.lOIOl) / 2) % this.lOIOl), this.buffer[t + this.lOIOl * e];
                }),
                (t.prototype.getCustomMap = function (t, e) {
                    var i, s, l, n;
                    return (e = -e - 1), null == this.custom_map && ((this.custom_map = []), null != this.mode.options.custom_map && 'string' == typeof this.mode.options.custom_map && (this.custom_map = this.mode.options.custom_map.split('\n'))), (i = this.custom_map.length), i > 0 && ((l = Math.floor(-i / 2)), e >= l && e < l + i && ((s = this.custom_map[e - l]), (i = s.length), (l = Math.floor(-i / 2)), t >= l && t < l + i && (n = s.charCodeAt(t - l) - 48) >= 0 && n <= 9)) ? n / 9 : 0;
                }),
                (t.prototype.get = function (t, e, i) {
                    var s, l, n, a, o, r;
                    return null == i && (i = {}), (i.bx = t), (i.by = e), (o = t * this.lll0O + e * this.l1Il1), (o = (this.a * o + this.c) & this.IOl11), (o = (this.a * o + this.c) & this.IOl11), (o = (this.a * o + this.c) & this.IOl11), (a = Math.sqrt((t * t + e * e) / (this.size * this.size))), (r = 1), (s = a > 1 ? 0.5 : 0.5 * Math.pow(a, this.lOO0I)), (s = s * this.IlO1O + (1 - this.IlO1O) * (this.OIOl1.II0O1((t + this.size) * this.fx, (e + this.size) * this.fy, this.Ol10I, 3) - 0.5)), (s = Math.max(4 / this.lOIOl, s)), null != this.mode && ((s *= this.mode.asteroidsDensityModifier((2 * t) / this.lOIOl, (2 * e) / this.lOIOl)), null != this.mode.options.custom_map) ? ((i.size = 0.5 * this.getCustomMap(t, e)), (i.on = i.size > 0), (o = (this.a * o + this.c) & this.IOl11), (l = o * this.inv), (o = (this.a * o + this.c) & this.IOl11), (n = o * this.inv), (l = l > 0.5 ? 0.5 * Math.pow(2 * (l - 0.5), 0.1) + 0.5 : 0.5 - 0.5 * Math.pow(2 * (0.5 - l), 0.1)), (n = n > 0.5 ? 0.5 * Math.pow(2 * (n - 0.5), 0.1) + 0.5 : 0.5 - 0.5 * Math.pow(2 * (0.5 - n), 0.1)), (i.x = t + i.size + l * (1 - 2 * i.size)), (i.y = e + i.size + n * (1 - 2 * i.size)), i) : ((o = (this.a * o + this.c) & this.IOl11), o * this.inv < s ? ((i.on = !0), (o = (this.a * o + this.c) & this.IOl11), (i.size = (0.1 + this.IIIlO * o * this.inv) * r), (o = (this.a * o + this.c) & this.IOl11), (l = o * this.inv), (o = (this.a * o + this.c) & this.IOl11), (n = o * this.inv), (l = l > 0.5 ? 0.5 * Math.pow(2 * (l - 0.5), 0.1) + 0.5 : 0.5 - 0.5 * Math.pow(2 * (0.5 - l), 0.1)), (n = n > 0.5 ? 0.5 * Math.pow(2 * (n - 0.5), 0.1) + 0.5 : 0.5 - 0.5 * Math.pow(2 * (0.5 - n), 0.1)), (i.x = t + i.size + l * (1 - 2 * i.size)), (i.y = e + i.size + n * (1 - 2 * i.size))) : (i.on = !1), i);
                }),
                t
            );
        })()),
        (module.exports = this.l1ll1),
        (this.Ol1O1 = (function () {
            function t() {
                (this.types = []), (this.types_by_code = []), (this.types_by_name = []), (this.levels = []);
            }
            return (
                (t.prototype.clear = function () {
                    return (this.types = []), (this.types_by_code = []), (this.types_by_name = []), (this.levels = []);
                }),
                (t.prototype.l100l = function () {
                    return this.types[Math.floor(Math.random() * this.types.length)];
                }),
                (t.prototype.add = function (t) {
                    var e, i, s, l, n;
                    for (this.types.push(t), this.types_by_code[t.code] = t, this.types_by_name[t.name] = t, null == this.levels[t.level] && (this.levels[t.level] = []), l = this.levels[t.level], e = i = 0, s = l.length; i < s; e = ++i) {
                        if (((n = l[e]), t.model < n.model)) return void this.levels[t.level].splice(e, 0, t);
                        if (t.model === n.model) return void (this.levels[t.level][e] = t);
                    }
                    return this.levels[t.level].push(t);
                }),
                (t.prototype.getDefaultShip = function () {
                    return this.types[0];
                }),
                (t.prototype.next = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    if (((l = t.level), (n = t.model), null != t.next)) {
                        for (o = [], a = t.next, i = 0, s = a.length; i < s; i++) (e = a[i]), null != (r = this.types_by_code[e]) && o.push(r);
                        return o;
                    }
                    return null == this.levels[l + 1] ? [] : ((h = (n - 1) / Math.max(1, this.levels[l].length - 1)), (h = Math.max(0, Math.round(h * (this.levels[l + 1].length - 2)))), (o = [this.levels[l + 1][h]]), h < this.levels[l + 1].length - 1 && o.push(this.levels[l + 1][h + 1]), o);
                }),
                (t.prototype.levelUpgrades = function (t) {
                    return t < 7;
                }),
                (t.prototype.shipUpgrades = function (t, e) {
                    return null == e && (e = !1), e ? t < 6 : null != this.levels[t + 1];
                }),
                (t.prototype.makePairs = function () {
                    var t, e, i, s, l, n, a, o, r, h;
                    for (h = [], n = i = 2; i <= 6; n = i += 1) for (l = this.levels[n].length, t = s = 0, o = l - 1; s <= o; t = s += 1) for (e = a = t + 1, r = l - 1; a <= r; e = a += 1) h.push(['' + this.levels[n][t].name, '' + this.levels[n][e].name]);
                }),
                t
            );
        })()),
        (OI1I1 = new this.Ol1O1()),
        (module.exports = OI1I1),
        (OI1I1 = require('./shiptypes.js', OI1I1)),
        OI1I1.add({ name: 'Fly', level: 1, model: 1, code: 101, specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } }, shape: [1.368, 1.368, 1.093, 0.965, 0.883, 0.827, 0.791, 0.767, 0.758, 0.777, 0.847, 0.951, 1.092, 1.667, 1.707, 1.776, 1.856, 1.827, 1.744, 1.687, 1.525, 1.415, 1.335, 1.606, 1.603, 1.578, 1.603, 1.606, 1.335, 1.415, 1.525, 1.687, 1.744, 1.827, 1.856, 1.776, 1.707, 1.667, 1.654, 0.951, 0.847, 0.777, 0.758, 0.767, 0.791, 0.827, 0.883, 0.965, 1.093, 1.368], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-1.365', z: -0.21, angle: 0, damage: [5, 6], rate: 4, type: 1, speed: [160, 180], number: 1, spread: 0, error: 2.5, recoil: 0 }], radius: 1.856 }),
        OI1I1.add({ name: 'Delta-Fighter', level: 2, model: 1, code: 201, specs: { shield: { capacity: [100, 150], reload: [3, 4] }, generator: { capacity: [50, 80], reload: [15, 25] }, ship: { mass: 80, speed: [110, 135], rotation: [80, 100], acceleration: [110, 120] } }, shape: [2.081, 1.969, 1.501, 1.455, 1.403, 1.368, 1.263, 1.192, 1.095, 1.063, 1.128, 1.209, 1.352, 1.545, 1.85, 2.348, 2.965, 3.211, 3.33, 2.93, 2.496, 2.442, 2.441, 1.866, 1.967, 1.954, 1.967, 1.866, 2.441, 2.442, 2.496, 2.93, 3.33, 3.211, 2.965, 2.348, 1.85, 1.545, 1.352, 1.209, 1.128, 1.063, 1.095, 1.192, 1.263, 1.368, 1.403, 1.455, 1.501, 1.969], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-2.080', z: -0.39, angle: 0, damage: [3, 5], rate: 3, type: 1, speed: [100, 120], number: 3, spread: 15, error: 0, recoil: 0 }], radius: 3.33 }),
        OI1I1.add({
            name: 'Trident',
            level: 2,
            model: 2,
            code: 202,
            specs: { shield: { capacity: [125, 175], reload: [3, 5] }, generator: { capacity: [50, 80], reload: [15, 20] }, ship: { mass: 100, speed: [110, 135], rotation: [70, 85], acceleration: [90, 110] } },
            shape: [2.4, 2.164, 1.784, 1.529, 1.366, 0.981, 0.736, 0.601, 0.516, 0.457, 0.415, 2.683, 2.66, 2.66, 2.724, 2.804, 2.763, 2.605, 2.502, 2.401, 2.596, 2.589, 2.426, 2.448, 2.443, 2.52, 2.443, 2.448, 2.426, 2.589, 2.596, 2.401, 2.502, 2.605, 2.763, 2.804, 2.724, 2.66, 2.66, 2.683, 0.415, 0.457, 0.516, 0.601, 0.736, 0.981, 1.366, 1.529, 1.784, 2.164],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '1.200', y: '-0.240', z: 0, angle: 0, damage: [4, 8], rate: 2.5, type: 1, speed: [100, 120], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-1.200', y: '-0.240', z: 0, angle: 0, damage: [4, 8], rate: 2.5, type: 1, speed: [100, 120], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 2.804,
        }),
        OI1I1.add({ name: 'Side-Fighter', level: 3, model: 2, next: [403, 404], code: 302, specs: { shield: { capacity: [125, 175], reload: [2, 4] }, generator: { capacity: [75, 125], reload: [20, 35] }, ship: { mass: 90, speed: [100, 120], rotation: [50, 70], acceleration: [100, 130] } }, shape: [0.902, 0.912, 0.888, 0.892, 0.731, 0.749, 0.779, 2.343, 2.255, 2.136, 2.061, 2.022, 2.038, 2.04, 2.022, 2.061, 2.136, 2.255, 2.343, 0.836, 0.924, 1.106, 1.282, 1.262, 1.222, 1.202, 1.222, 1.262, 1.282, 1.106, 0.924, 0.836, 2.343, 2.255, 2.136, 2.061, 2.022, 2.038, 2.04, 2.022, 2.061, 2.136, 2.255, 2.343, 0.779, 0.749, 0.731, 0.892, 0.888, 0.912], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-0.900', z: 0, angle: 0, damage: [4, 6], rate: 10, type: 1, speed: [150, 240], number: 1, spread: 0, error: 20, recoil: 0 }], radius: 2.343 }),
        OI1I1.add({
            name: 'Pulse-Fighter',
            level: 3,
            model: 1,
            code: 301,
            specs: { shield: { capacity: [150, 200], reload: [3, 5] }, generator: { capacity: [60, 90], reload: [20, 30] }, ship: { mass: 120, speed: [105, 120], rotation: [60, 80], acceleration: [80, 100] } },
            shape: [2.343, 2.204, 1.998, 1.955, 2.088, 1.91, 1.085, 0.974, 0.895, 0.842, 0.829, 0.95, 1.429, 2.556, 2.618, 2.726, 2.851, 2.837, 2.825, 2.828, 2.667, 2.742, 2.553, 2.766, 2.779, 2.735, 2.779, 2.766, 2.553, 2.742, 2.667, 2.828, 2.825, 2.837, 2.851, 2.726, 2.618, 2.556, 1.43, 0.95, 0.829, 0.842, 0.895, 0.974, 1.085, 1.91, 2.088, 1.955, 1.998, 2.204],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '0.000', y: '-2.340', z: -0.26, angle: 0, damage: [15, 30], rate: 1, type: 2, speed: [150, 175], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '1.300', y: '-0.052', z: -0.26, angle: 0, damage: [3, 6], rate: 3, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-1.300', y: '-0.052', z: -0.26, angle: 0, damage: [3, 6], rate: 3, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 2.851,
        }),
        OI1I1.add({
            name: 'Shadow X-1',
            level: 3,
            model: 3,
            next: [403, 404],
            code: 303,
            specs: { shield: { capacity: [90, 130], reload: [3, 6] }, generator: { capacity: [50, 80], reload: [13, 19] }, ship: { mass: 70, speed: [120, 150], rotation: [35, 60], acceleration: [90, 120] } },
            shape: [2, 1.978, 1.939, 1.641, 1.422, 1.261, 1.149, 0.937, 0.86, 0.885, 0.916, 1.446, 1.622, 1.699, 1.74, 1.789, 2.12, 2.469, 2.739, 2.823, 2.076, 1.786, 1.975, 2.035, 2.131, 2.294, 2.131, 2.035, 1.975, 1.786, 2.076, 2.823, 2.739, 2.469, 2.12, 1.789, 1.74, 1.699, 1.622, 1.446, 0.916, 0.885, 0.86, 0.937, 1.149, 1.261, 1.422, 1.641, 1.939, 1.978],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '1.400', y: '-0.200', z: -0.4, angle: 0, damage: [3, 5], rate: 10, type: 1, speed: [140, 190], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-1.400', y: '-0.200', z: -0.4, angle: 0, damage: [3, 5], rate: 10, type: 1, speed: [140, 190], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 2.823,
        }),
        OI1I1.add({ name: 'Y-Defender', level: 3, model: 4, code: 304, specs: { shield: { capacity: [175, 225], reload: [4, 6] }, generator: { capacity: [50, 80], reload: [18, 25] }, ship: { mass: 200, speed: [80, 100], rotation: [40, 60], acceleration: [70, 80] } }, shape: [3, 2.959, 2.915, 2.203, 1.734, 0.652, 0.639, 1.358, 1.816, 2.118, 2.23, 2.139, 2.06, 2.016, 2.023, 2.04, 2.551, 2.584, 2.67, 3.055, 3.578, 3.552, 3.315, 3.834, 2.269, 2.104, 2.269, 3.834, 3.315, 3.552, 3.578, 3.055, 2.67, 2.584, 2.551, 2.04, 2.023, 2.016, 2.06, 2.139, 2.23, 2.118, 1.816, 1.358, 0.639, 0.652, 1.734, 2.203, 2.915, 2.959], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-3.000', z: 0, angle: 0, damage: [20, 40], rate: 2, type: 1, speed: [130, 170], number: 1, spread: 0, error: 0, recoil: 75 }], radius: 3.834 }),
        OI1I1.add({
            name: 'Vanguard',
            level: 4,
            model: 1,
            code: 401,
            specs: { shield: { capacity: [140, 190], reload: [3, 4] }, generator: { capacity: [80, 140], reload: [25, 35] }, ship: { mass: 200, speed: [75, 90], rotation: [90, 120], acceleration: [75, 100] } },
            shape: [1.128, 4.427, 4.643, 4.646, 4.01, 3.568, 3.144, 2.81, 2.808, 3.088, 3.087, 3.077, 3.045, 2.998, 2.935, 2.552, 2.417, 2.317, 1.954, 1.88, 1.891, 2.158, 2.148, 2.228, 2.236, 2.256, 2.236, 2.228, 2.148, 2.158, 1.891, 1.88, 1.954, 2.317, 2.417, 2.552, 2.935, 2.998, 3.045, 3.077, 3.087, 3.088, 2.808, 2.81, 3.144, 3.568, 4.01, 4.646, 4.643, 4.427],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '0.432', y: '-4.392', z: 0.192, angle: 0, damage: [18, 25], rate: 3, type: 2, speed: [170, 200], number: 1, spread: 0, error: 0, recoil: 70 },
                { x: '-0.432', y: '-4.392', z: 0.192, angle: 0, damage: [18, 25], rate: 3, type: 2, speed: [170, 200], number: 1, spread: 0, error: 0, recoil: 70 },
            ],
            radius: 4.646,
        }),
        OI1I1.add({
            name: 'X-Warrior',
            level: 4,
            model: 3,
            code: 403,
            specs: { shield: { capacity: [150, 200], reload: [3, 5] }, generator: { capacity: [90, 150], reload: [35, 55] }, ship: { mass: 250, speed: [75, 100], rotation: [50, 90], acceleration: [90, 110] } },
            shape: [3.2, 3.096, 3.365, 3.37, 2.625, 2.149, 2.266, 2.325, 2.329, 1.208, 1.156, 3.483, 3.455, 3.472, 3.565, 3.811, 4.087, 4.351, 4.352, 3.594, 3.502, 3.848, 3.867, 3.701, 3.258, 3.206, 3.258, 3.701, 3.867, 3.848, 3.502, 3.594, 4.352, 4.351, 4.087, 3.811, 3.565, 3.472, 3.455, 3.483, 1.156, 1.208, 2.329, 2.325, 2.266, 2.149, 2.625, 3.37, 3.365, 3.096],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '0.960', y: '-3.200', z: 0, angle: 0, damage: [5, 8], rate: 3, type: 1, speed: [120, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-0.960', y: '-3.200', z: 0, angle: 0, damage: [5, 8], rate: 3, type: 1, speed: [120, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '3.360', y: '-0.640', z: -1.28, angle: 0, damage: [3, 5], rate: 2.5, type: 1, speed: [100, 160], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-3.360', y: '-0.640', z: -1.28, angle: 0, damage: [3, 5], rate: 2.5, type: 1, speed: [100, 160], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 4.352,
        }),
        OI1I1.add({
            name: 'Mercury',
            level: 4,
            model: 2,
            code: 402,
            specs: { shield: { capacity: [150, 200], reload: [3, 5] }, generator: { capacity: [100, 150], reload: [30, 50] }, ship: { mass: 200, speed: [85, 105], rotation: [60, 90], acceleration: [60, 80] } },
            shape: [1.303, 1.306, 1.221, 1.135, 3.514, 3.457, 3.283, 3.008, 2.819, 2.69, 2.614, 2.461, 2.233, 3.14, 3.312, 3.323, 3.182, 2.865, 2.958, 3.267, 3.33, 3.079, 2.187, 2.651, 2.647, 2.605, 2.647, 2.651, 2.187, 3.079, 3.33, 3.267, 2.958, 2.865, 3.182, 3.323, 3.312, 3.14, 2.233, 2.461, 2.614, 2.69, 2.819, 3.008, 3.283, 3.457, 3.514, 1.135, 1.221, 1.306],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '0.000', y: '-1.300', z: 0.26, angle: 0, damage: [20, 40], rate: 1, type: 2, speed: [170, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '2.972', y: '0.130', z: -0.13, angle: 2, damage: [3, 5], rate: 4, type: 1, speed: [150, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-2.972', y: '0.130', z: -0.13, angle: -2, damage: [3, 5], rate: 4, type: 1, speed: [150, 180], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 3.514,
        }),
        OI1I1.add({
            name: 'Side-Interceptor',
            level: 4,
            model: 4,
            code: 404,
            specs: { shield: { capacity: [175, 225], reload: [3, 6] }, generator: { capacity: [100, 150], reload: [30, 40] }, ship: { mass: 120, speed: [80, 125], rotation: [50, 100], acceleration: [110, 140] } },
            shape: [0.962, 0.973, 0.948, 0.951, 3.427, 3.044, 2.657, 2.383, 2.207, 2.233, 2.2, 2.147, 2.096, 2.096, 2.147, 2.2, 2.233, 2.37, 2.4, 1.63, 1.451, 1.323, 1.061, 1.009, 0.977, 0.962, 0.977, 1.009, 1.061, 1.323, 1.451, 1.63, 2.4, 2.37, 2.233, 2.2, 2.147, 2.096, 2.096, 2.147, 2.2, 2.233, 2.207, 2.383, 2.657, 3.044, 3.427, 0.951, 0.948, 0.973],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '1.920', y: '-0.960', z: 0, angle: 0, damage: [5, 7], rate: 7, type: 1, speed: [100, 200], number: 1, spread: 0, error: 5, recoil: 0 },
                { x: '-1.920', y: '-0.960', z: 0, angle: 0, damage: [5, 7], rate: 7, type: 1, speed: [100, 200], number: 1, spread: 0, error: 5, recoil: 0 },
            ],
            radius: 3.427,
        }),
        OI1I1.add({
            name: 'Pioneer',
            level: 4,
            model: 5,
            code: 405,
            specs: { shield: { capacity: [175, 230], reload: [4, 7] }, generator: { capacity: [50, 100], reload: [25, 30] }, ship: { mass: 250, speed: [90, 120], rotation: [40, 80], acceleration: [50, 100] } },
            shape: [3.204, 3.168, 3.365, 3.37, 2.625, 2.907, 3.057, 3.073, 2.942, 2.664, 2.548, 2.441, 1.29, 1.032, 1.136, 1.287, 2.732, 2.911, 3.245, 3.523, 3.553, 3.411, 3.132, 3.263, 3.258, 3.206, 3.258, 3.263, 3.132, 3.411, 3.553, 3.523, 3.245, 2.911, 2.732, 1.287, 1.136, 1.032, 1.29, 2.441, 2.548, 2.664, 2.942, 3.073, 3.057, 2.907, 2.625, 3.37, 3.365, 3.168],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '0.960', y: '-3.200', z: 0, angle: 0, damage: [6, 11], rate: 3, type: 1, speed: [100, 140], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-0.960', y: '-3.200', z: 0, angle: 0, damage: [6, 11], rate: 3, type: 1, speed: [100, 140], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 3.553,
        });
    for (
        OI1I1.add({
            name: 'Crusader',
            level: 4,
            model: 6,
            code: 406,
            specs: { shield: { capacity: [250, 300], reload: [5, 7] }, generator: { capacity: [50, 90], reload: [20, 34] }, ship: { mass: 250, speed: [75, 100], rotation: [40, 70], acceleration: [80, 100] } },
            shape: [3.2, 3.14, 2.815, 2.366, 2.084, 2.4, 2.332, 2.322, 2.128, 1.994, 1.918, 2.067, 2.304, 2.644, 3.134, 4.525, 4.797, 4.922, 4.238, 3.554, 3.649, 3.411, 2.88, 3.263, 3.258, 3.206, 3.258, 3.263, 2.88, 3.411, 3.649, 3.554, 4.238, 4.922, 4.797, 4.525, 3.134, 2.644, 2.304, 2.067, 1.918, 1.994, 2.128, 2.322, 2.332, 2.4, 2.084, 2.366, 2.815, 3.14],
            O1I1I: 0.15,
            llOI1: 0.4,
            IlII0: 0.98,
            lasers: [
                { x: '1.440', y: '-1.920', z: -0.16, angle: 0, damage: [20, 35], rate: 3, type: 1, speed: [130, 155], number: 1, spread: 0, error: 0, recoil: 0 },
                { x: '-1.440', y: '-1.920', z: -0.16, angle: 0, damage: [20, 35], rate: 3, type: 1, speed: [130, 155], number: 1, spread: 0, error: 0, recoil: 0 },
            ],
            radius: 4.922,
        }),
            OI1I1.add({
                name: 'U-Sniper',
                level: 5,
                model: 1,
                code: 501,
                specs: { shield: { capacity: [200, 300], reload: [4, 6] }, generator: { capacity: [80, 160], reload: [40, 60] }, ship: { mass: 200, speed: [70, 90], rotation: [50, 70], acceleration: [60, 110] } },
                shape: [0.361, 0.366, 0.378, 4.774, 4.83, 4.17, 3.608, 3.248, 3.245, 3.083, 2.915, 2.807, 2.751, 2.829, 2.976, 3.22, 3.412, 3.521, 3.693, 3.681, 3.138, 2.937, 3.473, 3.407, 3.618, 3.607, 3.618, 3.407, 3.473, 2.937, 3.138, 3.681, 3.693, 3.521, 3.412, 3.22, 2.976, 2.829, 2.751, 2.807, 2.915, 3.083, 3.245, 3.248, 3.608, 4.17, 4.83, 4.774, 0.378, 0.366],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '2.520', y: '-1.800', z: 0, angle: 0, damage: [40, 60], rate: 2, type: 2, speed: [190, 240], number: 1, spread: 0, error: 0, recoil: 200 },
                    { x: '-2.520', y: '-1.800', z: 0, angle: 0, damage: [40, 60], rate: 2, type: 2, speed: [190, 240], number: 1, spread: 0, error: 0, recoil: 200 },
                ],
                radius: 4.83,
            }),
            OI1I1.add({ name: 'T-Warrior', level: 5, model: 3, code: 503, specs: { shield: { capacity: [225, 325], reload: [4, 7] }, generator: { capacity: [80, 140], reload: [35, 50] }, ship: { mass: 250, speed: [80, 100], rotation: [50, 80], acceleration: [90, 120] } }, shape: [3.204, 3.125, 2.591, 2.145, 1.713, 1.46, 1.282, 1.155, 1.073, 1.009, 0.977, 0.955, 0.957, 2.594, 3.217, 3.408, 3.55, 3.898, 4.204, 4.633, 5.051, 4.926, 2.67, 2.95, 4.171, 4.168, 4.171, 2.95, 2.67, 4.926, 5.051, 4.633, 4.204, 3.898, 3.55, 3.408, 3.217, 2.594, 0.96, 0.955, 0.977, 1.009, 1.073, 1.155, 1.282, 1.46, 1.713, 2.145, 2.591, 3.125], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-3.040', z: -0.48, angle: 0, damage: [4, 6], rate: 5, type: 1, speed: [130, 160], number: 5, spread: 30, error: 0, recoil: 0 }], radius: 5.051 }),
            OI1I1.add({
                name: 'Aetos',
                level: 5,
                model: 4,
                code: 504,
                specs: { shield: { capacity: [200, 300], reload: [5, 7] }, generator: { capacity: [80, 140], reload: [35, 45] }, ship: { mass: 175, speed: [90, 120], rotation: [70, 90], acceleration: [110, 130] } },
                shape: [3, 2.917, 2.069, 1.61, 1.343, 1.158, 1.037, 0.95, 0.895, 0.853, 0.83, 0.824, 3.271, 3.283, 3.312, 3.232, 3.135, 3.283, 3.38, 3.09, 2.882, 2.75, 2.726, 3.059, 3.054, 3.006, 3.054, 3.059, 2.726, 2.75, 2.882, 3.09, 3.38, 3.283, 3.135, 3.232, 3.312, 3.283, 3.271, 0.824, 0.83, 0.853, 0.895, 0.95, 1.037, 1.158, 1.343, 1.61, 2.069, 2.917],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '2.440', y: '-0.150', z: -0.9, angle: 2, damage: [6, 10], rate: 5, type: 1, speed: [120, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-2.440', y: '-0.150', z: -0.9, angle: -2, damage: [6, 10], rate: 5, type: 1, speed: [120, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 3.38,
            }),
            OI1I1.add({
                name: 'Shadow X-2',
                level: 5,
                model: 5,
                code: 505,
                specs: { shield: { capacity: [150, 220], reload: [5, 7] }, generator: { capacity: [80, 145], reload: [20, 34] }, ship: { mass: 150, speed: [110, 145], rotation: [35, 55], acceleration: [140, 160] } },
                shape: [2.6, 2.53, 2.111, 1.751, 1.503, 1.341, 1.272, 1.223, 1.201, 1.404, 1.587, 1.596, 1.62, 1.674, 1.725, 1.848, 2.231, 2.565, 2.842, 3.253, 3.735, 2.463, 3.297, 3.78, 3.139, 2.735, 3.139, 3.78, 3.297, 2.463, 3.735, 3.253, 2.842, 2.565, 2.231, 1.848, 1.725, 1.674, 1.621, 1.596, 1.587, 1.404, 1.201, 1.223, 1.272, 1.341, 1.503, 1.751, 2.111, 2.53],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '1.300', y: '-0.520', z: -0.338, angle: 0, damage: [5, 7], rate: 10, type: 1, speed: [160, 190], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-1.300', y: '-0.520', z: -0.338, angle: 0, damage: [5, 7], rate: 10, type: 1, speed: [160, 190], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 3.78,
            }),
            OI1I1.add({
                name: 'FuryStar',
                level: 5,
                model: 2,
                code: 502,
                specs: { shield: { capacity: [200, 275], reload: [6, 7] }, generator: { capacity: [100, 150], reload: [30, 40] }, ship: { mass: 200, speed: [70, 100], rotation: [120, 180], acceleration: [150, 180] } },
                shape: [1.59, 1.832, 1.891, 1.874, 1.458, 1.479, 1.524, 1.571, 1.645, 1.757, 1.925, 3.322, 3.427, 3.455, 3.48, 3.666, 3.822, 4.057, 4.521, 4.774, 5.039, 5.299, 1.577, 1.71, 1.679, 1.653, 1.679, 1.71, 1.577, 5.299, 5.039, 4.774, 4.521, 4.057, 3.822, 3.666, 3.48, 3.455, 3.428, 3.322, 1.925, 1.757, 1.645, 1.571, 1.524, 1.479, 1.458, 1.874, 1.891, 1.832],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '1.050', y: '-1.050', z: 0.3, angle: 0, damage: [1, 2], rate: 4, type: 1, speed: [100, 125], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-1.050', y: '-1.050', z: 0.3, angle: 0, damage: [1, 2], rate: 4, type: 1, speed: [100, 125], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '0.450', y: '-1.800', z: -0.45, angle: 0, damage: [12, 18], rate: 2, type: 1, speed: [200, 250], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-0.450', y: '-1.800', z: -0.45, angle: 0, damage: [12, 18], rate: 2, type: 1, speed: [200, 250], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 5.299,
            }),
            OI1I1.add({
                name: 'Howler',
                level: 5,
                model: 6,
                code: 506,
                specs: { shield: { capacity: [275, 340], reload: [5, 7] }, generator: { capacity: [80, 110], reload: [35, 50] }, ship: { mass: 225, speed: [85, 98], rotation: [70, 95], acceleration: [90, 120] } },
                shape: [3.96, 3.579, 3.36, 2.703, 2.264, 1.914, 1.655, 1.622, 1.629, 1.67, 2.637, 2.622, 2.666, 2.756, 2.878, 3.003, 3.196, 3.358, 3.496, 3.55, 2.322, 2.273, 2.121, 2.457, 2.443, 2.405, 2.443, 2.457, 2.121, 2.273, 2.322, 3.55, 3.496, 3.358, 3.196, 3.003, 2.878, 2.756, 2.666, 2.622, 2.637, 1.67, 1.629, 1.622, 1.655, 1.914, 2.264, 2.703, 3.36, 3.579],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-3.960', z: 0, angle: 0, damage: [2.5, 4], rate: 6, type: 1, speed: [160, 210], number: 2, spread: 0, error: 0, recoil: 0 },
                    { x: '0.528', y: '-3.540', z: 0, angle: 0, damage: [9, 15], rate: 1, type: 2, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 25 },
                    { x: '-0.528', y: '-3.540', z: 0, angle: 0, damage: [9, 15], rate: 1, type: 2, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 25 },
                ],
                radius: 3.96,
            }),
            OI1I1.add({
                name: 'Toscain',
                level: 5,
                model: 7,
                code: 507,
                specs: { shield: { capacity: [275, 350], reload: [5, 8] }, generator: { capacity: [75, 100], reload: [32, 48] }, ship: { mass: 300, speed: [70, 90], rotation: [50, 75], acceleration: [80, 110] } },
                shape: [3.4, 3.354, 3.556, 2.748, 2.336, 2.055, 1.858, 1.732, 1.634, 1.548, 1.462, 1.404, 1.371, 1.36, 1.241, 1.161, 1.723, 4.485, 5.01, 4.795, 4.111, 3.842, 3.82, 3.753, 3.634, 3.407, 3.634, 3.753, 3.82, 3.842, 4.111, 4.795, 5.01, 4.485, 1.723, 1.161, 1.241, 1.353, 1.371, 1.404, 1.462, 1.548, 1.634, 1.732, 1.858, 2.055, 2.336, 2.748, 3.556, 3.354],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-3.400', z: 0, angle: 0, damage: [25, 45], rate: 1, type: 2, speed: [145, 190], number: 1, spread: 0, error: 0, recoil: 50 },
                    { x: '-0.846', y: '-3.454', z: -0.102, angle: 15, damage: [4, 6], rate: 2, type: 1, speed: [100, 130], number: 2, spread: 35, error: 0, recoil: 0 },
                    { x: '0.846', y: '-3.454', z: -0.102, angle: -15, damage: [4, 6], rate: 2, type: 1, speed: [100, 130], number: 2, spread: 35, error: 0, recoil: 0 },
                ],
                radius: 5.01,
            }),
            OI1I1.add({
                name: 'Bat-Defender',
                level: 5,
                model: 8,
                code: 508,
                specs: { shield: { capacity: [300, 400], reload: [7, 10] }, generator: { capacity: [70, 100], reload: [25, 35] }, ship: { mass: 400, speed: [70, 90], rotation: [40, 70], acceleration: [90, 100] } },
                shape: [3.604, 3.424, 2.813, 2.415, 2.149, 1.968, 1.913, 1.973, 2.073, 2.759, 3.932, 3.974, 4.081, 4.084, 4.04, 4.116, 4.187, 3.661, 2.16, 2.365, 2.719, 3.22, 3.183, 3.028, 2.016, 1.984, 2.016, 3.028, 3.183, 3.22, 2.719, 2.365, 2.16, 3.661, 4.187, 4.116, 4.04, 4.081, 4.084, 3.974, 3.932, 2.759, 2.073, 1.973, 1.913, 1.968, 2.149, 2.415, 2.813, 3.424],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '2.539', y: '-1.080', z: 0.36, angle: 3, damage: [10, 15], rate: 2.5, type: 1, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-2.539', y: '-1.080', z: 0.36, angle: -3, damage: [10, 15], rate: 2.5, type: 1, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 4.187,
            }),
            OI1I1.add({
                name: 'Advanced-Fighter',
                level: 6,
                model: 1,
                code: 601,
                specs: { shield: { capacity: [200, 350], reload: [4, 6] }, generator: { capacity: [120, 200], reload: [50, 60] }, ship: { mass: 400, speed: [70, 80], rotation: [30, 50], acceleration: [70, 100] } },
                shape: [4, 3.65, 3.454, 3.504, 3.567, 2.938, 1.831, 1.707, 1.659, 1.943, 1.92, 1.882, 1.896, 3.96, 5.654, 5.891, 6.064, 5.681, 5.436, 5.573, 5.122, 4.855, 4.675, 4.626, 4.479, 4.008, 4.479, 4.626, 4.675, 4.855, 5.122, 5.573, 5.436, 5.681, 6.064, 5.891, 5.654, 3.96, 3.88, 1.882, 1.92, 1.943, 1.659, 1.707, 1.831, 2.938, 3.567, 3.504, 3.454, 3.65],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-4.000', z: 0.4, angle: 0, damage: [90, 150], rate: 1, type: 2, speed: [180, 240], number: 1, spread: 0, error: 0, recoil: 150 },
                    { x: '2.800', y: '0.000', z: -1.2, angle: 0, damage: [6, 12], rate: 3, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-2.800', y: '0.000', z: -1.2, angle: 0, damage: [6, 12], rate: 3, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '3.800', y: '0.000', z: -1.6, angle: 0, damage: [4, 10], rate: 3, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-3.800', y: '0.000', z: -1.6, angle: 0, damage: [4, 10], rate: 3, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 6.064,
            }),
            OI1I1.add({
                name: 'Scorpion',
                level: 6,
                model: 2,
                code: 602,
                specs: { shield: { capacity: [225, 400], reload: [5, 7] }, generator: { capacity: [80, 175], reload: [38, 50] }, ship: { mass: 450, speed: [75, 90], rotation: [50, 70], acceleration: [80, 100] } },
                shape: [3.6, 2.846, 2.313, 2.192, 5.406, 5.318, 5.843, 5.858, 5.621, 4.134, 3.477, 3.601, 3.622, 3.464, 3.351, 3.217, 1.458, 1.391, 1.368, 1.37, 1.635, 2.973, 3.47, 3.911, 4.481, 4.804, 4.481, 3.911, 3.47, 2.973, 1.635, 1.37, 1.368, 1.391, 1.458, 3.217, 3.351, 3.464, 3.622, 3.601, 3.477, 4.134, 5.621, 5.858, 5.843, 5.318, 5.406, 2.192, 2.313, 2.846],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '0.000', z: 2, angle: 0, damage: [50, 100], rate: 0.9, type: 2, speed: [170, 230], number: 1, spread: 0, error: 0, recoil: 100 },
                    { x: '2.800', y: '-4.600', z: -0.4, angle: 0, damage: [2, 3], rate: 1.8, type: 1, speed: [130, 170], number: 2, spread: 5, error: 0, recoil: 0 },
                    { x: '-2.800', y: '-4.600', z: -0.4, angle: 0, damage: [2, 3], rate: 1.8, type: 1, speed: [130, 170], number: 2, spread: 5, error: 0, recoil: 0 },
                ],
                radius: 5.858,
            }),
            OI1I1.add({
                name: 'Marauder',
                level: 6,
                model: 3,
                code: 603,
                specs: { shield: { capacity: [210, 350], reload: [8, 11] }, generator: { capacity: [85, 160], reload: [25, 45] }, ship: { mass: 250, speed: [85, 115], rotation: [60, 80], acceleration: [80, 120] } },
                shape: [2.665, 3.563, 3.573, 2.856, 2.359, 2.03, 2.85, 2.741, 2.228, 1.71, 1.404, 1.199, 1.11, 3.408, 3.491, 3.521, 3.44, 3.385, 3.439, 3.481, 3.181, 2.932, 2.962, 2.944, 2.85, 2.244, 2.85, 2.944, 2.962, 2.932, 3.181, 3.481, 3.439, 3.385, 3.44, 3.521, 3.491, 3.408, 1.11, 1.199, 1.404, 1.71, 2.228, 2.741, 2.85, 2.03, 2.359, 2.856, 3.573, 3.563],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-2.660', z: 0.28, angle: 0, damage: [10, 16], rate: 10, type: 1, speed: [170, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '0.560', y: '-3.500', z: -0.28, angle: 0, damage: [4, 8], rate: 3, type: 1, speed: [110, 140], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-0.560', y: '-3.500', z: -0.28, angle: 0, damage: [4, 8], rate: 3, type: 1, speed: [110, 140], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 3.573,
            }),
            OI1I1.add({
                name: 'Condor',
                level: 6,
                model: 4,
                code: 604,
                specs: { shield: { capacity: [225, 400], reload: [7, 10] }, generator: { capacity: [70, 130], reload: [30, 48] }, ship: { mass: 200, speed: [95, 120], rotation: [50, 70], acceleration: [80, 120] } },
                shape: [3.3, 3.015, 2.45, 1.959, 1.658, 1.477, 1.268, 1.11, 1.148, 1.237, 2.34, 2.448, 2.489, 3.283, 3.363, 3.501, 3.586, 3.333, 3.496, 3.502, 3.154, 2.52, 3.016, 3.132, 3.054, 3.006, 3.054, 3.132, 3.016, 2.52, 3.154, 3.502, 3.496, 3.333, 3.586, 3.501, 3.363, 3.283, 2.49, 2.448, 2.34, 1.237, 1.148, 1.11, 1.268, 1.477, 1.658, 1.959, 2.45, 3.015],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-3.300', z: 0, angle: 0, damage: [30, 60], rate: 2, type: 2, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '2.250', y: '-0.600', z: -0.75, angle: 0, damage: [3, 6], rate: 4, type: 1, speed: [100, 130], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-2.250', y: '-0.600', z: -0.75, angle: 0, damage: [3, 6], rate: 4, type: 1, speed: [100, 130], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 3.586,
            }),
            OI1I1.add({
                name: 'A-Speedster',
                level: 6,
                model: 5,
                code: 605,
                specs: { shield: { capacity: [200, 300], reload: [6, 8] }, generator: { capacity: [80, 140], reload: [30, 45] }, ship: { mass: 165, speed: [90, 130], rotation: [40, 70], acceleration: [90, 120] } },
                shape: [3, 2.914, 2.408, 1.952, 1.675, 1.49, 1.349, 1.263, 1.198, 1.163, 1.146, 1.254, 1.286, 1.689, 2.06, 2.227, 2.362, 2.472, 2.832, 3.082, 3.436, 3.621, 3.481, 2.48, 2.138, 2.104, 2.138, 2.48, 3.481, 3.621, 3.436, 3.082, 2.832, 2.472, 2.362, 2.227, 2.06, 1.689, 1.286, 1.254, 1.146, 1.163, 1.198, 1.263, 1.349, 1.49, 1.675, 1.952, 2.408, 2.914],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-3.000', z: 0, angle: 0, damage: [38, 84], rate: 1, type: 2, speed: [150, 205], number: 1, spread: 0, error: 0, recoil: 50 },
                    { x: '1.160', y: '-0.277', z: 1.35, angle: -10, damage: [8, 12], rate: 2, type: 1, speed: [100, 130], number: 1, spread: -10, error: 0, recoil: 0 },
                    { x: '-1.160', y: '-0.277', z: 1.35, angle: 10, damage: [8, 12], rate: 2, type: 1, speed: [100, 130], number: 1, spread: -10, error: 0, recoil: 0 },
                ],
                radius: 3.621,
            }),
            OI1I1.add({
                name: 'Rock-Tower',
                level: 6,
                model: 6,
                code: 606,
                specs: { shield: { capacity: [300, 500], reload: [8, 11] }, generator: { capacity: [75, 115], reload: [35, 45] }, ship: { mass: 450, speed: [85, 110], rotation: [50, 70], acceleration: [80, 90] } },
                shape: [3.78, 3.758, 3.974, 3.976, 3.946, 3.508, 1.532, 1.64, 1.556, 1.426, 1.347, 1.298, 1.269, 1.764, 1.894, 2.075, 3.269, 3.539, 3.933, 3.989, 4.058, 4.127, 4.524, 4.416, 3.634, 3.577, 3.634, 4.416, 4.524, 4.127, 4.058, 3.989, 3.933, 3.539, 3.269, 2.075, 1.894, 1.764, 1.68, 1.298, 1.347, 1.426, 1.556, 1.64, 1.532, 3.508, 3.946, 3.976, 3.974, 3.758],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '1.050', y: '-3.780', z: -0.42, angle: 0, damage: [4, 6], rate: 8, type: 1, speed: [150, 230], number: 1, spread: 0, error: 5, recoil: 0 },
                    { x: '-1.050', y: '-3.780', z: -0.42, angle: 0, damage: [4, 6], rate: 8, type: 1, speed: [150, 230], number: 1, spread: 0, error: 5, recoil: 0 },
                ],
                radius: 4.524,
            }),
            OI1I1.add({
                name: 'H-Mercury',
                level: 6,
                model: 7,
                code: 607,
                specs: { shield: { capacity: [250, 350], reload: [6, 8] }, generator: { capacity: [100, 150], reload: [45, 60] }, ship: { mass: 500, speed: [75, 95], rotation: [50, 60], acceleration: [55, 90] } },
                shape: [3.206, 3.202, 2.648, 2.29, 4.484, 4.459, 4.216, 3.914, 3.713, 3.585, 4.258, 4.248, 4.244, 4.307, 4.355, 4.529, 4.673, 4.676, 3.99, 4.494, 4.598, 4.267, 3.073, 3.218, 4.02, 4.008, 4.02, 3.218, 3.073, 4.267, 4.598, 4.494, 3.99, 4.676, 4.673, 4.529, 4.355, 4.307, 4.244, 4.248, 4.258, 3.585, 3.713, 3.914, 4.216, 4.459, 4.484, 2.29, 2.648, 3.202],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-3.200', z: 0.8, angle: 0, damage: [5, 9], rate: 8, type: 1, speed: [100, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '2.341', y: '-3.799', z: -0.4, angle: 1, damage: [3, 5], rate: 4, type: 1, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-2.341', y: '-3.799', z: -0.4, angle: -1, damage: [3, 5], rate: 4, type: 1, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '3.895', y: '-1.317', z: 0.2, angle: 3, damage: [5, 11], rate: 2, type: 1, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-3.895', y: '-1.317', z: 0.2, angle: -3, damage: [5, 11], rate: 2, type: 1, speed: [150, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 4.676,
            }),
            OI1I1.add({ name: 'Barracuda', level: 6, model: 8, code: 608, specs: { shield: { capacity: [300, 400], reload: [8, 12] }, generator: { capacity: [100, 150], reload: [8, 14] }, ship: { mass: 675, speed: [70, 90], rotation: [30, 45], acceleration: [130, 150], dash: { rate: 2, burst_speed: [160, 200], speed: [120, 150], acceleration: [70, 70], initial_energy: [50, 75], energy: [20, 30] } } }, shape: [5.28, 5.25, 5.332, 5.393, 4.944, 1.997, 1.745, 1.556, 1.435, 3.587, 3.81, 3.779, 3.838, 3.84, 3.779, 3.81, 3.587, 3.205, 3.571, 3.9, 5.132, 5.888, 5.835, 5.551, 4.886, 5.808, 4.886, 5.551, 5.835, 5.888, 5.132, 3.9, 3.571, 3.205, 3.587, 3.81, 3.779, 3.838, 3.84, 3.779, 3.81, 3.587, 1.435, 1.556, 1.745, 1.997, 4.944, 5.393, 5.332, 5.25], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [], radius: 5.888 }),
            OI1I1.add({ name: 'O-Defender', level: 6, model: 9, code: 609, specs: { shield: { capacity: [400, 550], reload: [9, 13] }, generator: { capacity: [70, 100], reload: [25, 40] }, ship: { mass: 550, speed: [70, 80], rotation: [30, 40], acceleration: [80, 110] } }, shape: [4.409, 4.448, 4.372, 4.204, 4.119, 4.136, 4.174, 4.107, 4.066, 4.094, 4.073, 4.141, 4.16, 4.062, 4.015, 3.966, 3.83, 3.76, 3.742, 3.591, 3.502, 3.494, 3.575, 3.764, 4.449, 4.409, 4.449, 3.764, 3.575, 3.494, 3.502, 3.591, 3.742, 3.76, 3.83, 3.966, 4.015, 4.062, 4.16, 4.141, 4.073, 4.094, 4.066, 4.107, 4.174, 4.136, 4.119, 4.204, 4.372, 4.448], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-3.960', z: 0, angle: 0, damage: [35, 60], rate: 2, type: 2, speed: [130, 180], number: 1, spread: 0, error: 0, recoil: 0 }], radius: 4.449 }),
            OI1I1.add({
                name: 'Odyssey',
                level: 7,
                model: 1,
                code: 701,
                specs: { shield: { capacity: [750, 750], reload: [15, 15] }, generator: { capacity: [330, 330], reload: [120, 120] }, ship: { mass: 600, speed: [45, 45], rotation: [20, 20], acceleration: [150, 150] } },
                shape: [9.007, 9.054, 8.611, 7.078, 6.102, 2.816, 2.858, 6.866, 6.883, 6.673, 7.249, 7.245, 7.186, 7.186, 7.245, 7.249, 6.945, 6.851, 6.966, 7.014, 6.83, 4.817, 6.083, 6.422, 6.312, 6.107, 6.312, 6.422, 6.083, 4.817, 6.83, 7.014, 6.966, 6.851, 6.945, 7.249, 7.245, 7.186, 7.186, 7.245, 7.249, 6.673, 6.883, 6.866, 2.858, 2.816, 6.102, 7.078, 8.611, 9.054],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-8.990', z: 0, angle: 0, damage: [250, 250], rate: 1, type: 1, speed: [105, 105], number: 1, spread: 0, error: 0, recoil: 400 },
                    { x: '6.820', y: '-1.860', z: 0, angle: 0, damage: [20, 20], rate: 3, type: 1, speed: [200, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-6.820', y: '-1.860', z: 0, angle: 0, damage: [20, 20], rate: 3, type: 1, speed: [200, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '6.820', y: '1.860', z: 0, angle: 180, damage: [20, 20], rate: 3, type: 1, speed: [200, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-6.820', y: '1.860', z: 0, angle: -180, damage: [20, 20], rate: 3, type: 1, speed: [200, 200], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 9.054,
            }),
            OI1I1.add({
                name: 'Shadow X-3',
                level: 7,
                model: 2,
                code: 702,
                specs: { shield: { capacity: [500, 500], reload: [10, 10] }, generator: { capacity: [225, 225], reload: [65, 65] }, ship: { mass: 225, speed: [110, 110], rotation: [50, 50], acceleration: [90, 90] } },
                shape: [6.25, 5.85, 4.899, 4.337, 3.953, 3.658, 2.838, 2.831, 2.775, 2.64, 3.681, 4.028, 4.246, 4.572, 5.034, 5.238, 5.549, 6.017, 6.686, 6.807, 5.19, 5.78, 5.821, 6.419, 5.405, 5.26, 5.405, 6.419, 5.821, 5.78, 5.19, 6.807, 6.686, 6.017, 5.549, 5.238, 5.034, 4.572, 4.246, 4.028, 3.681, 2.64, 2.775, 2.831, 2.838, 3.658, 3.953, 4.337, 4.899, 5.85],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-6.250', z: 0, angle: 0, damage: [200, 200], rate: 2, type: 1, speed: [150, 150], number: 1, spread: 0, error: 0, recoil: 200 },
                    { x: '1.750', y: '-2.250', z: -0.75, angle: 0, damage: [25, 25], rate: 1, type: 1, speed: [150, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-1.750', y: '-2.250', z: -0.75, angle: 0, damage: [25, 25], rate: 1, type: 1, speed: [150, 150], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 6.807,
            }),
            OI1I1.add({
                name: 'Bastion',
                level: 7,
                model: 3,
                code: 703,
                specs: { shield: { capacity: [400, 400], reload: [10, 10] }, generator: { capacity: [350, 350], reload: [110, 110] }, ship: { mass: 275, speed: [80, 80], rotation: [25, 25], acceleration: [105, 105] } },
                shape: [4.867, 7.069, 10.53, 9.426, 9.867, 9.246, 8.247, 7.253, 6.749, 6.417, 6.187, 6.076, 6.095, 6.133, 6.28, 6.485, 6.469, 6.534, 6.727, 6.796, 5.069, 4.774, 4.582, 4.582, 4.561, 4.489, 4.561, 4.582, 4.582, 4.774, 5.069, 6.796, 6.727, 6.534, 6.469, 6.485, 6.28, 6.133, 6.095, 6.076, 6.187, 6.417, 6.749, 7.253, 8.247, 9.246, 9.867, 9.426, 10.53, 7.069],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.640', y: '-7.040', z: 0.064, angle: 0, damage: [10, 10], rate: 4, type: 1, speed: [175, 175], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-0.640', y: '-7.040', z: 0.064, angle: 0, damage: [10, 10], rate: 4, type: 1, speed: [175, 175], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '2.709', y: '-10.176', z: 0.512, angle: 1, damage: [10, 10], rate: 6, type: 1, speed: [180, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-2.709', y: '-10.176', z: 0.512, angle: -1, damage: [10, 10], rate: 6, type: 1, speed: [180, 180], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '4.767', y: '-8.639', z: -0.512, angle: 3, damage: [10, 10], rate: 3, type: 1, speed: [170, 170], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-4.767', y: '-8.639', z: -0.512, angle: -3, damage: [10, 10], rate: 3, type: 1, speed: [170, 170], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 10.53,
            }),
            OI1I1.add({
                name: 'Aries',
                level: 7,
                model: 4,
                code: 704,
                specs: { shield: { capacity: [775, 775], reload: [11, 11] }, generator: { capacity: [180, 180], reload: [100, 100] }, ship: { mass: 700, speed: [75, 75], rotation: [25, 25], acceleration: [95, 95] } },
                shape: [7.659, 7.674, 7.149, 6.467, 6.039, 5.561, 5.132, 4.793, 4.558, 4.415, 4.346, 4.278, 5.332, 5.896, 6.029, 7.427, 5.82, 5.603, 6.593, 6.339, 8.225, 7.32, 6.398, 7.159, 7.488, 7.425, 7.488, 7.159, 6.398, 7.32, 8.225, 6.339, 6.593, 5.603, 5.82, 7.427, 6.029, 5.896, 5.332, 4.278, 4.346, 4.415, 4.558, 4.793, 5.132, 5.561, 6.039, 6.467, 7.149, 7.674],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.000', y: '-7.644', z: 0, angle: 0, damage: [120, 120], rate: 2, type: 1, speed: [105, 105], number: 1, spread: 0, error: 0, recoil: 150 },
                    { x: '6.966', y: '2.574', z: 0.702, angle: -120, damage: [15, 15], rate: 2, type: 1, speed: [155, 155], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-6.966', y: '2.574', z: 0.702, angle: 120, damage: [15, 15], rate: 2, type: 1, speed: [155, 155], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '4.686', y: '6.760', z: 0.858, angle: 215, damage: [15, 15], rate: 2, type: 1, speed: [155, 155], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-4.686', y: '6.760', z: 0.858, angle: -215, damage: [15, 15], rate: 2, type: 1, speed: [155, 155], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 8.225,
            }),
            module.exports = OI1I1,
            this.BattleShipTypes = (function () {
                function t() {
                    (this.types = []), (this.types_by_code = []), (this.types_by_name = []), (this.levels = []);
                }
                return (
                    (t.prototype.l100l = function () {
                        return this.types[Math.floor(Math.random() * this.types.length)];
                    }),
                    (t.prototype.add = function (t) {
                        var e, i, s, l, n;
                        for (this.types.push(t), this.types_by_code[t.code] = t, this.types_by_name[t.name] = t, null == this.levels[t.level] && (this.levels[t.level] = []), l = this.levels[t.level], e = i = 0, s = l.length; i < s; e = ++i) if (((n = l[e]), t.model < n.model)) return void this.levels[t.level].splice(e, 0, t);
                        return this.levels[t.level].push(t);
                    }),
                    (t.prototype.getDefaultShip = function () {
                        return this.types[0];
                    }),
                    (t.prototype.next = function (t) {
                        var e, i, s, l;
                        return (e = t.level), (i = t.model), null == this.levels[e + 1] ? [] : ((l = (i - 1) / Math.max(1, this.levels[e].length - 1)), (l = Math.round(l * (this.levels[e + 1].length - 2))), (s = [this.levels[e + 1][l]]), l < this.levels[e + 1].length - 1 && s.push(this.levels[e + 1][l + 1]), s);
                    }),
                    (t.prototype.levelUpgrades = function (t) {
                        return t < 7;
                    }),
                    (t.prototype.shipUpgrades = function (t, e) {
                        return null == e && (e = !1), e ? t < 6 : null != this.levels[t + 1];
                    }),
                    (t.prototype.makePairs = function () {
                        var t, e, i, s, l, n, a, o, r, h;
                        for (h = [], n = i = 2; i <= 6; n = i += 1) for (l = this.levels[n].length, t = s = 0, o = l - 1; s <= o; t = s += 1) for (e = a = t + 1, r = l - 1; a <= r; e = a += 1) h.push(['' + this.levels[n][t].name, '' + this.levels[n][e].name]);
                    }),
                    t
                );
            })(),
            BATTLE_SHIP_TYPES = new this.BattleShipTypes(),
            module.exports = BATTLE_SHIP_TYPES,
            BATTLE_SHIP_TYPES = require('./battleshiptypes.js', BATTLE_SHIP_TYPES),
            BATTLE_SHIP_TYPES.add({ name: 'Renegade', level: 3, model: 1, code: 301, specs: { shield: { capacity: [350, 350], reload: [0, 0] }, generator: { capacity: [450, 450], reload: [0, 0] }, ship: { mass: 200, speed: [120, 120], rotation: [80, 80], acceleration: [120, 120] } }, shape: [2.736, 2.713, 4.12, 4.122, 3.698, 3.386, 3.008, 2.848, 2.745, 3.602, 3.567, 3.426, 3.35, 3.348, 3.428, 3.554, 3.608, 1.822, 1.71, 1.637, 1.292, 1.052, 1.26, 1.619, 1.774, 1.751, 1.774, 1.619, 1.26, 1.052, 1.292, 1.637, 1.71, 1.822, 3.608, 3.554, 3.428, 3.348, 3.35, 3.426, 3.567, 3.602, 2.745, 2.848, 3.008, 3.386, 3.698, 4.122, 4.12, 2.713], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [{ x: '0.000', y: '-2.736', z: 0, angle: 0, damage: [55, 55], rate: 1, type: 1, speed: [110, 110], number: 1, spread: 0, error: 0, recoil: 0 }], radius: 4.122 }),
            BATTLE_SHIP_TYPES.add({
                name: 'Stingray',
                level: 3,
                model: 2,
                code: 302,
                specs: { shield: { capacity: [440, 440], reload: [0, 0] }, generator: { capacity: [400, 400], reload: [0, 0] }, ship: { mass: 250, speed: [100, 100], rotation: [90, 90], acceleration: [110, 110] } },
                shape: [2.7, 3.359, 3.421, 3.066, 2.548, 2.582, 2.553, 2.551, 2.547, 2.464, 3.05, 3.006, 2.936, 2.936, 3.006, 3.05, 2.758, 2.676, 2.798, 2.627, 2.482, 2.804, 2.811, 2.761, 3.174, 3.156, 3.174, 2.761, 2.811, 2.804, 2.482, 2.627, 2.798, 2.676, 2.758, 3.05, 3.006, 2.936, 2.936, 3.006, 3.05, 2.464, 2.547, 2.551, 2.553, 2.582, 2.548, 3.066, 3.421, 3.359],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.690', y: '-3.300', z: -1.05, angle: 0, damage: [20, 20], rate: 2, type: 1, speed: [150, 150], number: 1, spread: 0, error: 0, recoil: 40 },
                    { x: '-0.690', y: '-3.300', z: -1.05, angle: 0, damage: [20, 20], rate: 2, type: 1, speed: [150, 150], number: 1, spread: 0, error: 0, recoil: 40 },
                ],
                radius: 3.421,
            }),
            BATTLE_SHIP_TYPES.add({
                name: 'Intrepid',
                level: 3,
                model: 3,
                code: 303,
                specs: { shield: { capacity: [320, 320], reload: [0, 0] }, generator: { capacity: [320, 320], reload: [0, 0] }, ship: { mass: 180, speed: [130, 130], rotation: [110, 110], acceleration: [80, 80] } },
                shape: [4.16, 4.111, 3.886, 3.506, 3.001, 2.581, 2.254, 1.974, 1.69, 1.479, 1.282, 1.132, 1.028, 0.958, 0.909, 0.877, 2.005, 2.173, 2.422, 2.791, 3.326, 3.652, 3.537, 3.177, 3.283, 3.36, 3.283, 3.177, 3.537, 3.652, 3.326, 2.791, 2.422, 2.173, 2.005, 0.877, 0.909, 0.958, 1.028, 1.132, 1.282, 1.479, 1.69, 1.974, 2.254, 2.581, 3.001, 3.506, 3.886, 4.111],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '0.783', y: '-3.200', z: 0.544, angle: 3, damage: [4, 4], rate: 5, type: 1, speed: [170, 170], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-0.783', y: '-3.200', z: 0.544, angle: -3, damage: [4, 4], rate: 5, type: 1, speed: [170, 170], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 4.16,
            }),
            BATTLE_SHIP_TYPES.add({ name: 'Hammer', level: 3, model: 4, code: 304, specs: { shield: { capacity: [500, 500], reload: [0, 0] }, generator: { capacity: [350, 350], reload: [0, 0] }, ship: { mass: 280, speed: [130, 130], rotation: [80, 80], acceleration: [60, 60], dash: { rate: 2, burst_speed: [240, 240], speed: [150, 150], acceleration: [130, 130], initial_energy: [60, 60], energy: [30, 30] } } }, shape: [3.44, 3.451, 3.433, 3.473, 3.493, 3.518, 3.286, 2.026, 1.9, 1.818, 1.768, 1.754, 1.785, 1.85, 1.952, 2.058, 2.097, 2.271, 2.53, 2.762, 3.589, 4.112, 4.128, 3.932, 3.438, 3.407, 3.438, 3.932, 4.128, 4.112, 3.589, 2.762, 2.53, 2.271, 2.097, 2.058, 1.952, 1.85, 1.788, 1.754, 1.768, 1.818, 1.9, 2.026, 3.286, 3.518, 3.493, 3.473, 3.433, 3.451], O1I1I: 0.15, llOI1: 0.4, IlII0: 0.98, lasers: [], radius: 4.128 }),
            BATTLE_SHIP_TYPES.add({
                name: 'Cronus',
                level: 3,
                model: 5,
                code: 305,
                specs: { shield: { capacity: [300, 300], reload: [0, 0] }, generator: { capacity: [500, 500], reload: [0, 0] }, ship: { mass: 130, speed: [140, 140], rotation: [100, 100], acceleration: [140, 140] } },
                shape: [2.976, 2.926, 2.734, 2.757, 3.249, 3.239, 3.176, 3.248, 4.092, 3.943, 3.773, 3.593, 3.519, 3.535, 0.516, 0.552, 0.601, 0.673, 0.776, 0.937, 1.154, 1.137, 1.061, 1.009, 0.977, 0.962, 0.977, 1.009, 1.061, 1.137, 1.154, 0.937, 0.776, 0.673, 0.601, 0.552, 0.516, 3.535, 3.52, 3.593, 3.773, 3.943, 4.092, 3.248, 3.176, 3.239, 3.249, 2.757, 2.734, 2.926],
                O1I1I: 0.15,
                llOI1: 0.4,
                IlII0: 0.98,
                lasers: [
                    { x: '1.920', y: '-2.560', z: 0, angle: 0, damage: [3, 3], rate: 4, type: 1, speed: [120, 120], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-1.920', y: '-2.560', z: 0, angle: 0, damage: [3, 3], rate: 4, type: 1, speed: [120, 120], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '0.960', y: '-2.560', z: 0, angle: 0, damage: [5, 5], rate: 3, type: 1, speed: [140, 140], number: 1, spread: 0, error: 0, recoil: 0 },
                    { x: '-0.960', y: '-2.560', z: 0, angle: 0, damage: [5, 5], rate: 3, type: 1, speed: [140, 140], number: 1, spread: 0, error: 0, recoil: 0 },
                ],
                radius: 4.092,
            }),
            module.exports = BATTLE_SHIP_TYPES,
            this.WeaponTypes = (function () {
                function t() {
                    (this.types = []), (this.types_by_code = []);
                }
                return (
                    (t.prototype.add = function (t) {
                        return (t.id = this.types.length), this.types.push(t), (this.types_by_code[t.code] = t);
                    }),
                    t
                );
            })(),
            WEAPON_TYPES = new this.WeaponTypes(),
            WEAPON_TYPES.add({ code: 10, name: 'Rockets', type: 'rocket', model: 'ROCKET_MODEL', ammo: 4, damage: 50, damage_area: 20, price: 100, shape: [1.2, 1.127, 1.017, 0.934, 0.8, 0.71, 0.584, 0.484, 0.42, 0.377, 0.347, 0.326, 0.312, 0.317, 0.335, 0.363, 0.402, 0.46, 0.52, 0.592, 0.92, 1.116, 1.225, 1.429, 1.425, 1.403, 1.425, 1.429, 1.225, 1.116, 0.92, 0.592, 0.52, 0.46, 0.402, 0.363, 0.335, 0.317, 0.312, 0.326, 0.347, 0.377, 0.42, 0.484, 0.584, 0.71, 0.8, 0.934, 1.017, 1.127], speed: 250, IlII0: 250, shield: 20, mass: 50, OI00O: !0, rate: 0.5, armed_delay: 0, glyph: 'l' }),
            WEAPON_TYPES.add({ code: 11, name: 'Missiles', type: 'rocket', model: 'MISSILE_MODEL', ammo: 2, damage: 150, damage_area: 30, price: 250, shape: [2, 1.908, 1.768, 1.53, 1.332, 0.841, 0.693, 0.597, 0.53, 0.485, 0.452, 0.455, 0.494, 0.495, 0.484, 0.487, 0.501, 0.523, 0.557, 0.606, 0.703, 1.657, 2.027, 2.03, 2.036, 2.004, 2.036, 2.03, 2.027, 1.657, 0.703, 0.606, 0.557, 0.523, 0.501, 0.487, 0.484, 0.493, 0.495, 0.455, 0.452, 0.485, 0.53, 0.597, 0.693, 0.841, 1.332, 1.53, 1.768, 1.908], speed: 160, IlII0: 200, shield: 75, mass: 100, OI00O: !0, rate: 0.2, armed_delay: 60, glyph: 'k' }),
            WEAPON_TYPES.add({ code: 12, name: 'Torpedo', type: 'rocket', model: 'TORPEDO_MODEL', ammo: 1, damage: 500, damage_area: 35, price: 500, shape: [3, 2.877, 2.614, 1.831, 1.34, 1.064, 0.89, 0.78, 0.704, 0.648, 0.613, 0.588, 0.575, 0.575, 0.589, 0.61, 0.648, 0.705, 0.773, 0.891, 1.05, 1.334, 1.837, 3.245, 3.312, 3.306, 3.312, 3.245, 1.837, 1.334, 1.05, 0.891, 0.773, 0.705, 0.648, 0.61, 0.589, 0.575, 0.575, 0.588, 0.613, 0.648, 0.704, 0.78, 0.89, 1.064, 1.34, 1.831, 2.614, 2.877], speed: 140, IlII0: 20, shield: 300, mass: 200, OI00O: !0, icon_scale: 1.2, rate: 1, armed_delay: 120, glyph: 'j' }),
            WEAPON_TYPES.add({ code: 20, name: 'Space Mines', type: 'mine', model: 'MINE_MODEL', ammo: 8, damage: 50, damage_area: 15, shield: 30, price: 100, IlII0: 200, mass: 100, radius: 1.5, icon_scale: 0.75, OI00O: !0, shape: [1.12, 1.1, 1.16, 1.448, 1.61, 1.573, 1.306, 1.005, 1.01, 0.981, 0.963, 1.353, 1.609, 1.61, 1.353, 0.963, 0.981, 1.01, 1.005, 1.306, 1.573, 1.61, 1.448, 1.16, 1.1, 1.12, 1.1, 1.16, 1.448, 1.61, 1.573, 1.306, 1.005, 1.01, 0.981, 0.963, 1.353, 1.609, 1.61, 1.353, 0.963, 0.981, 1.01, 1.005, 1.306, 1.573, 1.61, 1.448, 1.16, 1.1], rate: 4, armed_delay: 120, glyph: 'm' }),
            WEAPON_TYPES.add({ code: 21, name: 'Heavy Mines', type: 'mine', model: 'MINE2_MODEL', ammo: 4, damage: 200, damage_area: 30, shield: 100, price: 200, IlII0: 150, mass: 200, radius: 2.5, OI00O: !0, shape: [2.415, 2.335, 1.926, 1.68, 1.666, 2.091, 2.415, 2.373, 1.976, 1.68, 1.674, 2.03, 2.414, 2.415, 2.03, 1.674, 1.68, 1.976, 2.373, 2.415, 2.091, 1.666, 1.68, 1.926, 2.335, 2.415, 2.335, 1.926, 1.68, 1.666, 2.091, 2.415, 2.373, 1.976, 1.68, 1.674, 2.03, 2.414, 2.415, 2.03, 1.674, 1.68, 1.976, 2.373, 2.415, 2.091, 1.666, 1.68, 1.926, 2.335], rate: 1, armed_delay: 240, glyph: 'n' }),
            WEAPON_TYPES.add({ code: 40, name: 'Mining Pod', type: 'pod', model: 'MINING_POD_MODEL', damage: 10, price: 120, shield: 50, ammo: 1, icon_scale: 1.2, rate: 1, glyph: 'o' }),
            WEAPON_TYPES.add({ code: 41, name: 'Attack Pod', type: 'pod', model: 'ATTACK_POD_MODEL', damage: 5, price: 120, shield: 70, ammo: 1, icon_scale: 1.2, rate: 2, glyph: 'p' }),
            WEAPON_TYPES.add({ code: 42, name: 'Defense Pod', type: 'pod', model: 'DEFENCE_POD_MODEL', shield: 150, regen: 0, price: 120, ammo: 1, icon_scale: 1.2, rate: 1, glyph: 'q' }),
            WEAPON_TYPES.add({ code: 90, name: 'Power Cells', type: 'pod', shield: 100, regen: 100, price: 0, ammo: 2, icon_scale: 1.2, rate: 1, OI00O: !0, glyph: '»' }),
            WEAPON_TYPES.add({ code: 91, name: 'Shield Cells', type: 'pod', shield: 100, regen: 100, price: 0, ammo: 2, icon_scale: 1.2, rate: 1, OI00O: !0, glyph: '¹' }),
            module.exports = WEAPON_TYPES,
            this.AlienTypes = (function () {
                function t() {
                    (this.types = []), (this.types_by_code = []);
                }
                return (
                    (t.prototype.add = function (t) {
                        return (t.id = this.types.length), this.types.push(t), (this.types_by_code[t.code] = t);
                    }),
                    t
                );
            })(),
            ALIEN_TYPES = new this.AlienTypes(),
            ALIEN_TYPES.add({ code: 10, name: 'Chicken', damage: [8, 10, 15, 30], rate: [1, 2, 3, 2], laser_speed: [90, 100, 100, 90], shape: [2.646, 2.688, 6.507, 6.482, 6.292, 6.209, 6.046, 5.763, 5.583, 5.493, 5.576, 5.752, 5.928, 5.84, 5.711, 5.724, 5.866, 6.006, 4.858, 5.097, 5.447, 5.938, 6.19, 6.149, 6.164, 6.209, 6.159, 6.139, 6.176, 5.901, 5.409, 5.06, 4.822, 6.006, 5.866, 5.724, 5.711, 5.84, 5.928, 5.752, 5.576, 5.493, 5.583, 5.763, 6.046, 6.209, 6.292, 6.482, 6.507, 2.689], speed: [60, 50, 40, 20], IlII0: [200, 150, 130, 80], shield: [10, 20, 50, 1e3], regen: [0, 1, 2], mass: [50, 100, 200, 600], scale: [0.25, 0.4, 0.6, 2], hue: [120, 60, 0, 300], facing: !0, I001O: [4, 6, 8, 15], move: 0, OI00O: 0 }),
            ALIEN_TYPES.add({ code: 11, name: 'Crab', damage: [8, 10, 15], rate: [5, 5, 5], laser_speed: [80, 90, 100], shape: [6.087, 6.215, 5.513, 8.082, 7.584, 7.148, 6.465, 7.437, 7.223, 7.063, 7.078, 7.172, 7.07, 6.92, 6.953, 7.137, 7.445, 7.504, 7.487, 7.652, 7.728, 7.601, 7.587, 7.593, 9.273, 9.319, 7.503, 7.371, 7.204, 7.208, 7.175, 6.899, 6.752, 6.721, 6.467, 6.189, 6.027, 5.999, 6.122, 6.267, 6.218, 6.2, 6.344, 6.59, 6.772, 5.987, 6.755, 7.306, 7.83, 5.303], speed: [80, 80, 70], IlII0: [180, 200, 230], shield: [30, 60, 120], regen: [1, 2, 3], mass: [50, 80, 150], scale: [0.25, 0.35, 0.4], hue: [120, 60, 0], facing: !1, I001O: [4, 6, 8], move: 1, OI00O: 1 }),
            ALIEN_TYPES.add({ code: 12, name: 'Fortress', damage: [15, 50], rate: [3, 2], laser_speed: [110, 130], shape: [13.842, 15.193, 15.57, 14.421, 13.336, 12.623, 12.152, 11.917, 11.891, 11.419, 11.8, 13.151, 14.854, 16.13, 16.083, 14.982, 14.019, 11.944, 11.74, 11.565, 11.379, 11.773, 12.587, 13.769, 14.664, 15.208, 14.688, 13.895, 12.599, 11.814, 11.394, 11.587, 11.76, 11.971, 14.019, 14.982, 16.083, 16.13, 14.854, 13.151, 11.8, 11.419, 11.891, 11.917, 12.152, 12.623, 13.336, 14.421, 15.57, 15.193], speed: [55, 50], IlII0: 200, shield: [1200, 2500], regen: [2, 6], mass: [500, 1e3], scale: [0.7, 1.3], facing: !0, I001O: [8, 10], hue: [60, 0], move: 2, OI00O: 0 }),
            ALIEN_TYPES.add({ code: 13, name: 'Caterpillar', damage: 1, rate: 1, laser_speed: 100, shape: [1.293, 1.312, 1.355, 1.424, 1.522, 3.471, 3.382, 3.327, 3.371, 3.474, 3.648, 3.901, 4.032, 4.089, 4.215, 4.256, 4.162, 4.107, 4.112, 3.761, 3.458, 3.223, 3.049, 2.942, 2.881, 2.88, 2.881, 2.942, 3.049, 3.223, 3.458, 3.761, 4.112, 4.107, 4.162, 4.256, 4.215, 4.089, 4.032, 3.901, 3.648, 3.474, 3.371, 3.327, 3.382, 3.471, 1.522, 1.424, 1.355, 1.312], speed: 60, IlII0: 200, shield: 50, regen: 0, mass: 50, scale: 0.5, facing: !0, I001O: 4, hue: [180], move: 0, OI00O: 1 }),
            ALIEN_TYPES.add({ code: 14, name: 'Candlestick', damage: [4, 5, 5], rate: [2, 3, 4], laser_speed: [120, 130, 140], laser_x: [-2.5, -1.5, 0, 1.5, 2.5], laser_y: [0, 0, 0, 0, 0], shape: [3.318, 3.209, 2.697, 1.948, 4.143, 3.803, 5.34, 5.082, 6.274, 5.865, 5.48, 5.094, 4.727, 4.469, 4.153, 3.929, 3.791, 3.642, 3.537, 3.493, 3.514, 3.485, 3.529, 3.636, 3.813, 3.902, 3.736, 3.563, 3.455, 3.414, 3.429, 3.397, 3.442, 3.551, 3.691, 3.835, 4.061, 4.377, 4.647, 5.027, 5.447, 5.837, 6.305, 4.917, 5.265, 3.637, 4.052, 4.09, 2.412, 3.119], speed: [120, 130, 140], IlII0: [200, 210, 220], shield: [80, 80, 80], regen: [1, 2, 3], mass: [70, 60, 50], scale: [0.7, 0.6, 0.5], facing: !1, I001O: [4, 3, 2], hue: [120, 60, 0], move: 1, OI00O: 1 }),
            ALIEN_TYPES.add({ code: 15, name: 'Hirsute', damage: [50, 80], rate: [2, 1.7], laser_speed: [130, 110], shape: [7.852, 7.246, 6.376, 5.831, 5.408, 5.129, 5.217, 5.318, 4.56, 4.365, 4.265, 4.23, 4.059, 3.915, 3.91, 4.05, 6.25, 5.593, 7.855, 6.987, 9.754, 8.492, 7.691, 7.592, 7.722, 7.852, 7.742, 7.611, 7.709, 8.509, 9.77, 7.018, 7.868, 5.617, 6.258, 4.118, 3.981, 3.989, 4.132, 4.302, 4.336, 4.442, 4.807, 5.431, 5.271, 5.205, 5.465, 5.884, 6.464, 7.334], speed: [60, 40], IlII0: [100, 80], shield: [1500, 2500], regen: [10, 20], mass: [400, 800], scale: [1.2, 1.5], facing: !1, I001O: [8, 13], hue: [60, 0], move: 1, OI00O: 1 }),
            ALIEN_TYPES.add({ code: 16, name: 'Piranha', damage: [1], rate: [0.25, 0.5, 0.75, 1], laser_speed: [240, 275, 300, 300], shape: [6.588, 6.545, 6.457, 6.348, 5.9, 6.953, 6.772, 6.246, 4.55, 3.797, 3.087, 2.964, 2.852, 3.536, 3.548, 2.87, 2.711, 2.612, 2.591, 2.78, 2.798, 2.873, 3.451, 3.964, 5.243, 6.588, 5.243, 3.964, 3.451, 2.873, 2.798, 2.78, 2.591, 2.612, 2.711, 2.87, 3.548, 3.536, 2.852, 2.964, 3.087, 3.797, 4.55, 6.246, 6.772, 6.953, 5.9, 6.348, 6.457, 6.545], speed: [60, 70, 80, 40], IlII0: [250, 280, 320, 225], shield: [40, 75, 120, 1750], regen: [5], mass: [150, 200, 250, 1e3], scale: [0.4, 0.55, 0.7, 1.6], facing: !1, I001O: [4, 4.5, 5, 10], hue: [120, 60, 0, 300], move: 0, OI00O: 2 }),
            ALIEN_TYPES.add({ code: 17, name: 'Pointu', damage: [5, 6, 7], rate: [6, 7, 8], laser_speed: [120, 130, 150], shape: [10.24, 9.158, 5.586, 4.245, 3.446, 7.026, 6.974, 6.804, 6.787, 6.94, 6.998, 6.057, 5.238, 4.667, 4.279, 4.017, 3.822, 4.011, 6.12, 7.485, 9.399, 8.378, 9.998, 8.776, 10.443, 8.969, 10.443, 8.776, 9.998, 8.378, 9.399, 7.485, 6.12, 4.011, 3.822, 4.017, 4.279, 4.667, 5.238, 6.057, 6.998, 6.94, 6.787, 6.804, 6.974, 7.026, 3.446, 4.245, 5.586, 9.158], speed: [100, 110, 120], IlII0: [200, 220, 240], shield: [80, 100, 150], regen: [3, 3, 4], mass: [50, 60, 70], scale: [0.25, 0.3, 0.35], facing: !1, I001O: [4], hue: [120, 60, 300], move: 1, OI00O: 1 }),
            ALIEN_TYPES.add({ code: 18, name: 'Fork', damage: [15, 15, 15], rate: [0.8, 1.3, 2], laser_speed: [100, 120, 140], laser_x: [-2.5, -1.5, 1.5, 2.5], laser_y: [0, 1, 1, 0], shape: [0.272, 0.268, 0.264, 0.267, 3.182, 3.551, 3.378, 3.092, 2.889, 2.738, 2.641, 2.588, 2.554, 2.554, 2.563, 2.497, 2.352, 2.261, 2.268, 2.391, 2.499, 2.197, 2.09, 2.197, 2.555, 2.859, 2.555, 2.197, 2.09, 2.197, 2.499, 2.391, 2.268, 2.261, 2.352, 2.497, 2.563, 2.554, 2.554, 2.588, 2.641, 2.738, 2.889, 3.092, 3.378, 3.542, 3.172, 0.267, 0.264, 0.268], speed: [100, 90, 80], IlII0: [200, 180, 160], shield: [100, 200, 300], regen: [2, 4, 6], mass: [80, 100, 120], scale: [0.6, 0.7, 0.8], facing: !1, I001O: [4, 5, 6], hue: [100, 40, 340], move: 1, OI00O: 1, ll010: -1 }),
            ALIEN_TYPES.add({ code: 19, name: 'Saucer', damage: [120, 150, 200], rate: [0.3, 0.4, 0.5], laser_speed: [120, 120, 120], shape: [7.148, 7.253, 7.488, 7.871, 8.437, 9.212, 9.96, 10.033, 10.097, 10.107, 9.718, 8.984, 8.281, 8.281, 8.984, 9.838, 10.051, 10.029, 9.961, 9.877, 9.114, 8.789, 8.794, 8.719, 8.608, 8.528, 8.604, 8.719, 8.776, 8.766, 9.081, 9.885, 9.953, 10.042, 10.057, 9.775, 8.931, 8.221, 8.221, 8.931, 9.664, 10.104, 10.1, 10.027, 9.97, 9.224, 8.438, 7.894, 7.49, 7.251], speed: [60, 50, 40], IlII0: [120, 100, 80], shield: [1e3, 2500, 4e3], regen: [5, 10, 15], mass: [300, 600, 900], scale: [0.4, 0.8, 1.2], facing: !0, I001O: [4, 8, 12], hue: [50, 0, 300], move: 2, OI00O: 0, rotative: !0 }),
            ALIEN_TYPES.add({ code: 20, name: 'Boss', damage: [200, 300], rate: [1, 1.2], laser_speed: [100, 90], shape: [23.71, 23.783, 23.966, 22.65, 26.18, 25.944, 37.153, 39.341, 40.226, 39.571, 39.445, 39.45, 36.49, 34.512, 32.393, 28.147, 25.152, 24.169, 24.107, 24.657, 30.595, 30.564, 24.99, 24.908, 22.941, 22.579, 22.941, 24.908, 24.99, 30.564, 30.595, 24.657, 24.107, 24.169, 25.152, 28.147, 32.393, 34.512, 36.49, 39.45, 39.445, 39.571, 40.225, 39.341, 37.153, 25.944, 26.227, 22.65, 23.966, 23.783], speed: [30, 20], IlII0: [75, 50], shield: [5e3, 1e4], regen: [20, 30], mass: [500, 1e3], scale: [0.5, 0.7], facing: !1, I001O: [15, 25], hue: [0, 300], move: 0, OI00O: 0 }),
            module.exports = ALIEN_TYPES,
            'undefined' != typeof require && null !== require && require('../util/math.js'),
            this.ll0O0 = (function () {
                function t(t) {
                    this.l1110 = t;
                }
                return (
                    (t.prototype.lOlOO = function (t, e) {
                        var i, s, l;
                        if (((i = (e.angle / 180) * (180 * THREE.Math.DEG2RAD)), i < 0 && (i += 180 * THREE.Math.DEG2RAD * 2), e.r < i - 180 * THREE.Math.DEG2RAD && (i -= 180 * THREE.Math.DEG2RAD * 2), e.r > i + 180 * THREE.Math.DEG2RAD && (i += 180 * THREE.Math.DEG2RAD * 2), Math.abs(i - e.r) < 5 * t.O1I1I && 0 === e.I0lOO)) {
                            if (((s = e.r), (e.r = 0.8 * e.r + 0.2 * i), (e.lIl10 = e.r - s), e.r < 0 && (e.r += 180 * THREE.Math.DEG2RAD * 2), e.r > 180 * THREE.Math.DEG2RAD * 2)) return (e.r -= 180 * THREE.Math.DEG2RAD * 2);
                        } else if ((i < e.r ? (l = -1) : i > e.r && (l = 1), 0 === e.I0lOO && (e.lIl10 = 0.8 * e.lIl10 + 0.2 * t.O1I1I * l), (e.r += e.lIl10), e.r < 0 && (e.r += 180 * THREE.Math.DEG2RAD * 2), e.r > 180 * THREE.Math.DEG2RAD * 2)) return (e.r -= 180 * THREE.Math.DEG2RAD * 2);
                    }),
                    (t.prototype.l0Ill = function (t, e) {
                        var i, s, l, n, a;
                        this.lOlOO(t, e), e.alive && ((s = t.speed), e.dash && null != t.dash_speed && (s = t.dash_speed), (s *= this.l1110.mode.options.speed_mod), e.up || e.dash ? ((n = s * Math.cos(e.r)), (a = s * Math.sin(e.r))) : e.OOlO1 ? ((n = -s * Math.cos(e.r)), (a = -s * Math.sin(e.r))) : ((n = 0), (a = 0)), this.l1110.mode.options.strafe > 0 && (e.strafe_left && ((n -= s * Math.sin(e.r) * this.l1110.mode.options.strafe), (a += s * Math.cos(e.r) * this.l1110.mode.options.strafe), (l = Math.sqrt(n * n + a * a)) > s && ((n = (n / l) * s), (a = (a / l) * s))), e.strafe_right && ((n += s * Math.sin(e.r) * this.l1110.mode.options.strafe), (a -= s * Math.cos(e.r) * this.l1110.mode.options.strafe), (l = Math.sqrt(n * n + a * a)) > s && ((n = (n / l) * s), (a = (a / l) * s)))), (i = t.IlII0), e.dash && null != t.dash_inertia && (i = t.dash_inertia), null == this.l1110.mode || null == this.l1110.mode.options.friction_ratio || e.up || e.dash || (i = Math.pow(i, this.l1110.mode.options.friction_ratio)), 0 !== e.I0lOO || e.guided || (!(e.up || e.strafe_left || e.strafe_right || e.dash) && e.glide) ? (0 === e.I0lOO && Math.sqrt(e.lllOl * e.lllOl + e.II110 * e.II110) > t.speed * this.l1110.mode.options.speed_mod && ((e.lllOl = e.lllOl * i), (e.II110 = e.II110 * i)), (e.I0lOO = Math.max(0, e.I0lOO - 1))) : ((e.lllOl = e.lllOl * i + n * (1 - i)), (e.II110 = e.II110 * i + a * (1 - i))), (e.x += e.lllOl), (e.y += e.II110), (e.x = Math.fmod(e.x + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I), (e.y = Math.fmod(e.y + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I), e.dash && null != t.dash_energy && ((e.generator = Math.max(0, e.generator - t.dash_energy / 60)), 0 === e.generator && (e.dash = !1)));
                    }),
                    t
                );
            })(),
            module.exports = this.ll0O0,
            'undefined' != typeof require && null !== require && require('../util/math.js'),
            this.WeaponPhysics = (function () {
                function t(t) {
                    (this.l1110 = t), (this.miningpod_k = 0.01), (this.miningpod_f = 0.2), (this.miningpod_ak = 0.05), (this.miningpod_af = 0.3), (this.attackpod_k = 0.02), (this.attackpod_f = 0.2), (this.attackpod_ak = 0.1), (this.attackpod_af = 0.3), (this.defencepod_k = 0.05), (this.defencepod_f = 0.3), (this.defencepod_ak = 0.05), (this.defencepod_af = 0.3);
                }
                return (
                    (t.prototype.miningPodStep = function (t, e, i, s, l) {
                        var n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                        return (c = t.ship.status.r), (n = t.ship.status.x + Math.cos(c) * (s + 4) - t.x), (a = t.ship.status.y + Math.sin(c) * (s + 4) - t.y), n < -this.l1110.l0I1I && (n += this.l1110.size), n > this.l1110.l0I1I && (n -= this.l1110.size), a < -this.l1110.l0I1I && (a += this.l1110.size), a > this.l1110.l0I1I && (a -= this.l1110.size), (c = Math.atan2(a, n)), c < t.r - 180 * THREE.Math.DEG2RAD && (c += 180 * THREE.Math.DEG2RAD * 2), c > t.r + 180 * THREE.Math.DEG2RAD && (c -= 180 * THREE.Math.DEG2RAD * 2), (t.lIl10 += (c - t.r) * this.miningpod_ak), (t.lIl10 *= 1 - this.miningpod_af), (t.r += t.lIl10), (o = e / i), (d = (l % 2400) / 600 + o), (p = Math.cos(t.ship.status.r)), (I = Math.sin(t.ship.status.r)), (O = I), (m = -p), (v = 0 === s ? 0 : 1), (f = Math.sin(2 * d * (180 * THREE.Math.DEG2RAD) * 3.25) * s * 0.5 - s - 4), (g = Math.cos(2 * d * (180 * THREE.Math.DEG2RAD)) * s), (y = (Math.sin(2 * d * (180 * THREE.Math.DEG2RAD)) + 4) * v), (r = t.ship.status.x + p * f + O * g), (h = t.ship.status.y + I * f + m * g), (u = y), (t.lllOl += (r - t.x) * this.miningpod_k), (t.II110 += (h - t.y) * this.miningpod_k), (t.Il0II += (u - t.z) * this.miningpod_k), (t.lllOl *= 1 - this.miningpod_f), (t.II110 *= 1 - this.miningpod_f), (t.Il0II *= 1 - this.miningpod_f), (t.x += t.lllOl), (t.y += t.II110), (t.z += t.Il0II);
                    }),
                    (t.prototype.attackPodStep = function (t, e, i, s, l, n) {
                        var a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b;
                        return (p = t.ship.status.r), null != n && ((a = n.x - t.x), (o = n.y - t.y), a < -this.l1110.l0I1I && (a += this.l1110.size), a > this.l1110.l0I1I && (a -= this.l1110.size), o < -this.l1110.l0I1I && (o += this.l1110.size), o > this.l1110.l0I1I && (o -= this.l1110.size), (p = Math.atan2(o, a))), p < t.r - 180 * THREE.Math.DEG2RAD && (p += 180 * THREE.Math.DEG2RAD * 2), p > t.r + 180 * THREE.Math.DEG2RAD && (p -= 180 * THREE.Math.DEG2RAD * 2), (t.lIl10 += (p - t.r) * this.attackpod_ak), (t.lIl10 *= 1 - this.attackpod_af), (t.r += t.lIl10), (r = e / i + 0.3), (c = (l % 2400) / 600 + r), (I = Math.cos(t.ship.status.r)), (O = Math.sin(t.ship.status.r)), (m = O), (f = -I), (b = 0 === s ? 0 : 1), (g = Math.sin(2 * c * (180 * THREE.Math.DEG2RAD) * 3.25) * s * 0.5 - s - 2), (y = Math.cos(2 * c * (180 * THREE.Math.DEG2RAD)) * s), (v = (Math.sin(2 * c * (180 * THREE.Math.DEG2RAD)) + 4) * b), (h = t.ship.status.x + I * g + m * y), (u = t.ship.status.y + O * g + f * y), (d = v), (t.lllOl += (h - t.x) * this.attackpod_k), (t.II110 += (u - t.y) * this.attackpod_k), (t.Il0II += (d - t.z) * this.attackpod_k), (t.lllOl *= 1 - this.attackpod_f), (t.II110 *= 1 - this.attackpod_f), (t.Il0II *= 1 - this.attackpod_f), (t.x += t.lllOl), (t.y += t.II110), (t.z += t.Il0II);
                    }),
                    (t.prototype.defencePodStep = function (t, e, i, s, l, n) {
                        var a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w;
                        return (a = t.x - t.ship.status.x), (o = t.y - t.ship.status.y), a < -this.l1110.l0I1I && (a += this.l1110.size), a > this.l1110.l0I1I && (a -= this.l1110.size), o < -this.l1110.l0I1I && (o += this.l1110.size), o > this.l1110.l0I1I && (o -= this.l1110.size), (I = Math.atan2(o, a)), I < t.r - 180 * THREE.Math.DEG2RAD && (I += 180 * THREE.Math.DEG2RAD * 2), I > t.r + 180 * THREE.Math.DEG2RAD && (I -= 180 * THREE.Math.DEG2RAD * 2), (t.lIl10 += (I - t.r) * this.defencepod_ak), (t.lIl10 *= 1 - this.defencepod_af), (t.r += t.lIl10), (h = e / i + 0.6), (p = (l % 4800) / 1200 + h), (O = Math.cos(t.ship.status.r)), (m = Math.sin(t.ship.status.r)), (f = m), (g = -O), (w = 0 === s ? 0 : 1), (y = Math.sin(2 * p * (180 * THREE.Math.DEG2RAD) * 3.25) * (s + 1)), (v = Math.cos(2 * p * (180 * THREE.Math.DEG2RAD)) * (s + 1)), (b = (Math.sin(2 * p * (180 * THREE.Math.DEG2RAD)) + 4) * w), null != n ? ((a = n.x - t.ship.status.x), (o = n.y - t.ship.status.y), a < -this.l1110.l0I1I && (a += this.l1110.size), a > this.l1110.l0I1I && (a -= this.l1110.size), o < -this.l1110.l0I1I && (o += this.l1110.size), o > this.l1110.l0I1I && (o -= this.l1110.size), (I = Math.atan2(o, a) + Math.sin(2 * p * (180 * THREE.Math.DEG2RAD)) * (180 * THREE.Math.DEG2RAD) * 0.125), (r = 1.2 + 0.2 * Math.cos(2 * p * (180 * THREE.Math.DEG2RAD))), (u = t.ship.status.x + Math.cos(I) * (s + r)), (d = t.ship.status.y + Math.sin(I) * (s + r))) : ((u = t.ship.status.x + O * y + f * v), (d = t.ship.status.y + m * y + g * v)), (c = b), (t.lllOl += (u - t.x) * this.defencepod_k), (t.II110 += (d - t.y) * this.defencepod_k), (t.Il0II += (c - t.z) * this.defencepod_k), (t.lllOl *= 1 - this.defencepod_f), (t.II110 *= 1 - this.defencepod_f), (t.Il0II *= 1 - this.defencepod_f), (t.x += t.lllOl), (t.y += t.II110), (t.z += t.Il0II);
                    }),
                    (t.prototype.rocketStep = function (t) {
                        for (var e, i; t.r < t.target_r - 180 * THREE.Math.DEG2RAD; ) t.r += 180 * THREE.Math.DEG2RAD * 2;
                        for (; t.r > t.target_r + 180 * THREE.Math.DEG2RAD; ) t.r -= 180 * THREE.Math.DEG2RAD * 2;
                        return (t.r = 0.94 * t.r + 0.06 * t.target_r), (e = t.speed * Math.cos(t.r)), (i = t.speed * Math.sin(t.r)), (t.lllOl = t.lllOl * t.IlII0 + e * (1 - t.IlII0)), (t.II110 = t.II110 * t.IlII0 + i * (1 - t.IlII0)), (t.x += t.lllOl), (t.y += t.II110), (t.x = Math.fmod(t.x + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I), (t.y = Math.fmod(t.y + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I);
                    }),
                    (t.prototype.mineStep = function (t) {
                        var e, i, s, l, n, a;
                        return this.l1110.mode.rotate_mines ? ((n = -t.y), (a = t.x), (l = Math.sqrt(n * n + a * a)), l > 0 && ((n /= l), (a /= l)), (e = l * (180 * THREE.Math.DEG2RAD) * 2), (i = (n * e) / 216e3), (s = (a * e) / 216e3)) : ((i = 0), (s = 0)), (t.lllOl = t.lllOl * t.IlII0 + i * (1 - t.IlII0)), (t.II110 = t.II110 * t.IlII0 + s * (1 - t.IlII0)), (t.x += t.lllOl), (t.y += t.II110), (t.x = Math.fmod(t.x + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I), (t.y = Math.fmod(t.y + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I);
                    }),
                    t
                );
            })(),
            module.exports = this.WeaponPhysics,
            'undefined' != typeof require && null !== require && require('../util/math.js'),
            this.AlienPhysics = (function () {
                function t(t) {
                    (this.l1110 = t), (this.kr = 0.05), (this.fr = 0.3);
                }
                return (
                    (t.prototype.alienStep = function (t) {
                        for (var e, i, s, l; t.r < t.target_r - 180 * THREE.Math.DEG2RAD; ) t.r += 180 * THREE.Math.DEG2RAD * 2;
                        for (; t.r > t.target_r + 180 * THREE.Math.DEG2RAD; ) t.r -= 180 * THREE.Math.DEG2RAD * 2;
                        return (e = t.target_r - t.r), (t.lIl10 = e * this.kr), (t.lIl10 *= 1 - this.fr), (t.r += t.lIl10), (i = t.speed), t.dashing && (i = t.dash_speed), (s = i * Math.cos(t.r)), (l = i * Math.sin(t.r)), (t.lllOl = t.lllOl * t.IlII0 + s * (1 - t.IlII0)), (t.II110 = t.II110 * t.IlII0 + l * (1 - t.IlII0)), (t.x += t.lllOl), (t.y += t.II110), (t.x = Math.fmod(t.x + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I), (t.y = Math.fmod(t.y + this.l1110.l0I1I, this.l1110.size) - this.l1110.l0I1I);
                    }),
                    t
                );
            })(),
            module.exports = this.AlienPhysics,
            this.ShipInstance = (function () {
                function t(t) {
                    (this.type = t), (this.levels = [0, 0, 0, 0, 0, 0, 0, 0]), this.buildLasers(), this.updateParameters(), (this.next_dash = 0);
                }
                return (
                    (t.prototype.buildLasers = function () {
                        var t, e, i, s, l;
                        for (this.lasers = [], s = this.type.lasers, l = [], t = 0, i = s.length; t < i; t++) (e = s[t]), l.push(this.lasers.push({ type: e, next_shot: 0 }));
                        return l;
                    }),
                    (t.prototype.clone = function () {
                        var e, i, s, l;
                        for (l = new t(this.type), e = i = 0, s = this.levels.length - 1; 0 <= s ? i <= s : i >= s; e = 0 <= s ? ++i : --i) l.levels[e] = this.levels[e];
                        return l;
                    }),
                    (t.prototype.lOlIO = function () {}),
                    (t.prototype.read = function (t) {
                        var e, i;
                        for (e = i = 0; i <= 7; e = i += 1) (this.levels[e] = 15 & t), (t >>= 4);
                    }),
                    (t.prototype.ll1IO = function () {
                        var t, e, i;
                        for (i = 0, t = e = 0; e <= 7; t = e += 1) i += this.levels[t] << (4 * t);
                        return i;
                    }),
                    (t.prototype.countUpgrades = function () {
                        var t, e, i;
                        for (i = 0, t = e = 0; e <= 7; t = e += 1) i += this.levels[t];
                        return i;
                    }),
                    (t.prototype.ll1Ol = function (t, e) {
                        var i;
                        return 'number' == typeof t ? t : ((i = e / this.type.level), t[0] * (1 - i) + t[1] * i);
                    }),
                    (t.prototype.allMaxed = function () {
                        var t, e, i;
                        for (i = this.levels, t = 0, e = i.length; t < e; t++) if (i[t] < this.type.level) return !1;
                        return !0;
                    }),
                    (t.prototype.O1lI1 = function () {
                        return this.read(0);
                    }),
                    (t.prototype.set = function (t, e) {
                        var i, s, l;
                        for (null == e && (e = 1), i = s = 0; s <= 7; i = s += 1) (l = Math.pow(10, 7 - i)), (this.levels[i] = Math.floor(Math.max(0, Math.min(e, (t / l) % 10))));
                    }),
                    (t.prototype.isUpgraded = function () {
                        var t, e, i, s, l;
                        for (l = 0, s = this.levels, t = 0, i = s.length; t < i; t++) (e = s[t]), (l += e);
                        return l >= 8;
                    }),
                    (t.prototype.updateParameters = function () {
                        var t, e, i, s, l;
                        for (this.shield_capacity = this.ll1Ol(this.type.specs.shield.capacity, this.levels[0]), this.shield_reload = this.ll1Ol(this.type.specs.shield.reload, this.levels[1]), this.generator_capacity = this.ll1Ol(this.type.specs.generator.capacity, this.levels[2]), this.generator_reload = this.ll1Ol(this.type.specs.generator.reload, this.levels[3]), l = this.lasers, t = 0, i = l.length; t < i; t++) (e = l[t]), (e.damage = this.ll1Ol(e.type.damage, this.levels[4])), (e.speed = this.ll1Ol(e.type.speed, this.levels[5]));
                        if (((this.speed = 0.004 * this.ll1Ol(this.type.specs.ship.speed, this.levels[6])), (s = this.ll1Ol(this.type.specs.ship.acceleration, this.levels[7])), (this.IlII0 = Math.exp(Math.log(0.5) / (3e3 / s))), (this.O1I1I = (0.15 * this.ll1Ol(this.type.specs.ship.rotation, this.levels[7])) / 100), (this.crystals_capacity = this.type.level * this.type.level * 20), null != this.type.specs.ship.dash)) return (this.dash_speed = 0.004 * this.ll1Ol(this.type.specs.ship.dash.speed, this.levels[5])), (this.dash_burst_speed = 0.004 * this.ll1Ol(this.type.specs.ship.dash.burst_speed, this.levels[4])), (s = this.ll1Ol(this.type.specs.ship.dash.acceleration, this.levels[4])), (this.dash_inertia = Math.exp(Math.log(0.5) / (3e3 / s))), (this.dash_initial_energy = this.ll1Ol(this.type.specs.ship.dash.initial_energy, this.levels[4])), (this.dash_energy = this.ll1Ol(this.type.specs.ship.dash.energy, this.levels[5]));
                    }),
                    t
                );
            })(),
            module.exports = this.ShipInstance,
            OII10 = (function () {
                function t(t) {
                    (this.seed = null != t ? t : Math.random()), this.seed < 1 && (this.seed *= 1 << 30), (this.a = 13971), (this.b = 12345), (this.size = 1 << 30), (this.IOl11 = this.size - 1), (this.O01II = 1 / this.size), this.IOO0O(), this.IOO0O(), this.IOO0O();
                }
                return (
                    (t.prototype.next = function () {
                        return (this.seed = (this.seed * this.a + this.b) & this.IOl11), this.seed * this.O01II;
                    }),
                    (t.prototype.lI10l = function (t, e) {
                        return null != e ? Math.floor(Math.pow(this.next(), e) * t) : Math.floor(this.next() * t);
                    }),
                    (t.prototype.IOO0O = function () {
                        return (this.seed = (this.seed * this.a + this.b) & this.IOl11);
                    }),
                    (t.prototype.feed = function (t) {
                        return (this.seed = (this.seed * this.a * t + this.b) & this.IOl11);
                    }),
                    t
                );
            })(),
            module.exports = OII10,
            this.IOIOI = (function () {
                function t(t, e, i, s, l, n, a, o) {
                    var r;
                    (this.parent = t), (this.x = e), (this.y = i), (this.lllOl = s), (this.II110 = l), (this.points = n), (this.OOI0l = a), (this.id = o), (r = new OII10(this.id)), (this.l0OlI = this.parent.getModelInstance(this.id)), this.l0OlI.position.set(this.x, this.y, 0), (this.l0OlI.rotation.x = r.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.l0OlI.rotation.y = r.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.size = 0.4 * Math.pow(this.points, 0.4)), this.l0OlI.scale.set(this.size, this.size, this.size), (this.eat_time = 0);
                }
                return (
                    (t.prototype.check = function (t) {
                        var e;
                        if (((e = t.II1O0), this.eat_time > 0)) {
                            if (e - this.eat_time > 30) return this.parent.remove(this);
                        } else if (e - this.OOI0l > 540 && e - this.OOI0l > 600) return this.parent.remove(this);
                    }),
                    (t.prototype.dispose = function () {}),
                    (t.prototype.l1O0l = function (t) {
                        var e, i, s, l;
                        return (i = ((Date.now() % 1e4) / 1e4) * (180 * THREE.Math.DEG2RAD) * 2), (this.l0OlI.rotation.z = i), (l = t.II1O0), (s = (l - this.OOI0l) / 60), (s = 1 - Math.exp(-s)), (this.l0OlI.position.x = this.x + this.lllOl * s), (this.l0OlI.position.y = this.y + this.II110 * s), t.Ill0l(this.l0OlI), null != this.eater ? ((s = l - this.eat_time), (e = Math.pow(Math.max(0, Math.min(1, s / 30)), 1)), t.fixPositionXY(this.eater), (this.l0OlI.position.x *= 1 - e), (this.l0OlI.position.y *= 1 - e), (this.l0OlI.position.x += e * this.eater.x), (this.l0OlI.position.y += e * this.eater.y)) : l - this.OOI0l > 540 ? ((e = Math.max(0, Math.min(1, (l - this.OOI0l - 540) / 60))), (e = Math.max(0.001, Math.pow(1 - e, 0.5) * this.size)), this.l0OlI.scale.set(e, e, e)) : void 0;
                    }),
                    t
                );
            })(),
            this.CrystalModel = (function () {
                function t(t) {
                    var e, i, s, l, n, a;
                    for (this.id = t, this.geometry = new THREE.IcosahedronGeometry(1, 0), s = new I010I(this.id), new OII10(this.id), n = this.geometry.vertices, e = 0, i = n.length; e < i; e++) (a = n[e]), (l = Math.pow(s.OO01O(a.x, a.y, a.z, 2), 2)), (a.x *= 1 + l), (a.y *= 1 + l), (a.z *= 1 + l);
                    this.geometry.computeFaceNormals(), this.geometry.computeVertexNormals();
                }
                return t;
            })(),
            this.IlOI0 = (function () {
                function t(t) {
                    var e, i;
                    for (this.l1110 = t, this.Il1I1 = new THREE.Group(), this.Il1I1.position.set(0, 0, -1), this.crystals_by_id = [], this.I0O1l = [], this.models = [], e = i = 1; i <= 10; e = i += 1) this.models.push(this.createModel(e));
                    this.material = new THREE.MeshPhongMaterial({ color: 16711680, opacity: 0.7, specular: 16744576, shininess: 30, transparent: !0, side: THREE.DoubleSide, shading: THREE.FlatShading, depthWrite: !1 });
                }
                return (
                    (t.prototype.add = function (t, e, i, s, l, n, a) {
                        var o;
                        return (o = new IOIOI(this, t, e, i, s, l, n, a)), (this.crystals_by_id[a] = o), this.I0O1l.push(o), this.Il1I1.add(o.l0OlI);
                    }),
                    (t.prototype.eat = function (t, e) {
                        var i, s;
                        if ((e === this.l1110.Ill00.status.id ? ((s = this.l1110.Ill00.status), 1) : ((s = this.l1110.lIlO0.IO11l.ll0l1[e]), null != s && ((s = s.O1II0.status), this.l1110.lIlO0.IO11l.II1O0 >= s.O01O1 + 60 && (s = null)), 0.5), null != (i = this.crystals_by_id[t]) && ((i.eater = s), (i.eat_time = this.l1110.lIlO0.IO11l.II1O0), null != s && this.l1110.l0I11.collect(s.x, s.y, i.points), null != this.l1110.display.screen.lO100.figures))) return this.l1110.display.screen.lO100.figures.bonus(i.points, i.l0OlI.position.x, i.l0OlI.position.y, 16744576, 11);
                    }),
                    (t.prototype.remove = function (t) {
                        var e;
                        return this.Il1I1.remove(t.l0OlI), delete this.crystals_by_id[t.id], (e = this.I0O1l.indexOf(t)), e >= 0 && this.I0O1l.splice(e, 1), t.dispose();
                    }),
                    (t.prototype.l1O0l = function (t) {
                        var e, i, s, l, n, a;
                        for (a = this.I0O1l, s = 0, n = a.length; s < n; s++) (e = a[s]), e.l1O0l(t);
                        for (i = l = this.I0O1l.length - 1; l >= 0; i = l += -1) (e = this.I0O1l[i]), e.check(t);
                    }),
                    (t.prototype.createModel = function () {
                        return new CrystalModel();
                    }),
                    (t.prototype.getModelInstance = function (t) {
                        var e, i;
                        return (i = t % this.models.length), (e = this.l1110.settings.check('colorblind') ? 16752704 : 16711680), this.material.color.set(e), new THREE.Mesh(this.models[i].geometry, this.material);
                    }),
                    t
                );
            })(),
            this.Collectible = (function () {
                function t(t, e, i, s, l, n, a, o) {
                    (this.parent = t), (this.x = e), (this.y = i), (this.lllOl = s), (this.II110 = l), (this.OOI0l = n), (this.id = a), (this.type = o), (this.l0OlI = this.getModelInstance()), (this.sun = new CollectibleGlow(new OII10(0))), (this.Il1I1 = new THREE.Group()), this.Il1I1.add(this.sun.l0OlI), this.Il1I1.add(this.l0OlI), this.sun.l0OlI.scale.set(8, 8, 8), this.Il1I1.position.set(this.x, this.y, 0), (this.eat_time = 0);
                }
                return (
                    (t.prototype.getModelInstance = function () {
                        var e, i;
                        return this.type >= 90
                            ? ((i = '' + this.type),
                              null == t.models[i] && (t.models[i] = new AlienModel(this.type)),
                              (this.l0OlI = new THREE.Group()),
                              t.models[i].getInstance(
                                  (function (t) {
                                      return function (e) {
                                          return (t.size = 0.6), (e.scale.x = t.size), (e.scale.y = t.size), (e.scale.z = t.size), (e.rotation.x = (180 * THREE.Math.DEG2RAD) / 2), t.l0OlI.add(e), e.material.emissive.setHex(16777215);
                                      };
                                  })(this)
                              ),
                              this.l0OlI)
                            : ((i = WEAPON_TYPES.types_by_code[this.type].model), null == t.models[i] && (t.models[i] = new WeaponModel(WeaponModel[i], 0)), (e = t.models[i].getCollectibleInstance()), (this.size = 0.6 * t.models[i].data.size * 2), (e.scale.x = this.size), (e.scale.y = this.size), (e.scale.z = this.size), e);
                    }),
                    (t.prototype.check = function (t) {
                        var e;
                        if (((e = t.II1O0), this.eat_time > 0)) {
                            if (e - this.eat_time > 30) return this.parent.remove(this);
                        } else if (e - this.OOI0l > 540 && e - this.OOI0l > 600) return this.parent.remove(this);
                    }),
                    (t.prototype.dispose = function () {
                        return null != this.l0OlI.geometry && this.l0OlI.geometry.dispose(), null != this.l0OlI.material && this.l0OlI.material.dispose(), this.sun.dispose();
                    }),
                    (t.prototype.l1O0l = function (t) {
                        var e, i, s, l;
                        return ((Date.now() % 1e4) / 1e4) * (180 * THREE.Math.DEG2RAD) * 2, (this.l0OlI.rotation.z = 0.5 * Math.sin(((Date.now() % 2e3) / 2e3) * (180 * THREE.Math.DEG2RAD) * 2)), (this.l0OlI.rotation.x = 0.5 * Math.sin(((Date.now() % 2190) / 2190) * (180 * THREE.Math.DEG2RAD) * 2)), (this.l0OlI.rotation.y = 0.5 * Math.sin(((Date.now() % 2410) / 2410) * (180 * THREE.Math.DEG2RAD) * 2)), (i = this.size * (1 + 0.1 * Math.sin(((Date.now() % 1790) / 1790) * (180 * THREE.Math.DEG2RAD) * 2))), this.l0OlI.scale.set(i, i, i), (l = t.II1O0), (s = (l - this.OOI0l) / 60), (s = 1 - Math.exp(-s)), (this.Il1I1.position.x = this.x + this.lllOl * s), (this.Il1I1.position.y = this.y + this.II110 * s), t.Ill0l(this.Il1I1), this.sun.l1O0l(), null != this.eater ? ((s = l - this.eat_time), (e = Math.pow(Math.max(0, Math.min(1, s / 30)), 1)), t.fixPositionXY(this.eater), (this.Il1I1.position.x *= 1 - e), (this.Il1I1.position.y *= 1 - e), (this.Il1I1.position.x += e * this.eater.x), (this.Il1I1.position.y += e * this.eater.y)) : l - this.OOI0l > 540 ? ((e = Math.max(0, Math.min(1, (l - this.OOI0l - 540) / 60))), (e = Math.max(0.001, Math.pow(1 - e, 0.5))), this.Il1I1.scale.set(e, e, e)) : l - this.OOI0l < 60 ? ((e = Math.pow(Math.max(0.001, (l - this.OOI0l) / 60), 0.75)), this.Il1I1.scale.set(e, e, e)) : void 0;
                    }),
                    t
                );
            })(),
            Collectible.models = {},
            this.CollectibleGlow = (function () {
                function t(t) {
                    (this.random = t), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.time_offset = this.random.lI10l(3e4)), (this.phase = this.random.next() * (180 * THREE.Math.DEG2RAD) * 2), (this.fragmentshader = '  uniform float itime ;\n  uniform sampler2D tex ;\n  varying vec2 vUv ;\n\nvoid main()\n{\nvec2 d = (vUv-.5) ;\nfloat lg = length(d);\nfloat fade = 1.0-lg*2.0;\nfloat a = atan(d.y,d.x);\nlg *= .7;\nfloat n = texture2D(tex,vec2(a/(3.14159265*2.0),itime)).x;\nfloat li = 1.0-lg;\nli = (pow(li,2.0)*.1+li*.5*pow(n,lg*16.0))*fade;\n\ngl_FragColor = vec4(li,li*.9,li*.85,1.0);\n}'), (this.vertexshader = 'varying vec2 vUv;\n\nvoid main()\n{\n\tvUv = uv;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n}'), (this.uniforms = { itime: { type: 'f', value: 1 }, tex: { value: OI0Ol.texture } }), (this.material = new THREE.ShaderMaterial({ uniforms: this.uniforms, vertexShader: this.vertexshader, fragmentShader: this.fragmentshader, transparent: !0, depthWrite: !1, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material));
                }
                return (
                    (t.prototype.dispose = function () {
                        return this.O1III.dispose(), this.material.dispose();
                    }),
                    (t.prototype.l1O0l = function () {
                        return (this.uniforms.itime.value = ((Date.now() + this.time_offset) % 3e4) / 3e4);
                    }),
                    t
                );
            })(),
            this.Collectibles = (function () {
                function t(t) {
                    (this.l1110 = t), (this.Il1I1 = new THREE.Group()), this.Il1I1.position.set(0, 0, -1), (this.collectibles_by_id = []), (this.collectibles = []);
                }
                return (
                    (t.prototype.add = function (t, e, i, s, l, n, a) {
                        var o;
                        return (o = new Collectible(this, t, e, i, s, l, n, a)), (this.collectibles_by_id[n] = o), this.collectibles.push(o), this.Il1I1.add(o.Il1I1);
                    }),
                    (t.prototype.eat = function (t, e) {
                        var i, s;
                        if ((e === this.l1110.Ill00.status.id ? ((s = this.l1110.Ill00.status), 1) : ((s = this.l1110.lIlO0.IO11l.ll0l1[e]), null != s && ((s = s.O1II0.status), this.l1110.lIlO0.IO11l.II1O0 >= s.O01O1 + 60 && (s = null)), 0.5), null != (i = this.collectibles_by_id[t]) && ((i.eater = s), (i.eat_time = this.l1110.lIlO0.IO11l.II1O0), null != s))) return this.l1110.l0I11.collect(s.x, s.y, 1);
                    }),
                    (t.prototype.remove = function (t) {
                        var e;
                        return this.Il1I1.remove(t.Il1I1), delete this.collectibles_by_id[t.id], (e = this.collectibles.indexOf(t)), e >= 0 && this.collectibles.splice(e, 1), t.dispose();
                    }),
                    (t.prototype.l1O0l = function (t) {
                        var e, i, s, l, n, a;
                        for (a = this.collectibles, s = 0, n = a.length; s < n; s++) (e = a[s]), e.l1O0l(t);
                        for (i = l = this.collectibles.length - 1; l >= 0; i = l += -1) (e = this.collectibles[i]), e.check(t);
                    }),
                    t
                );
            })(),
            this.OIO1I = (function () {
                function t() {
                    var t, e, i;
                    (this.Il1I1 = new THREE.Group()), (this.Il1I1.rotation.order = 'ZYX'), (t = new THREE.BoxGeometry(1, 1, 1)), (e = this.IIO0l()), (this.l0OlI = new THREE.Mesh(t, e)), this.l0OlI.scale.set(4, 1, 1), this.Il1I1.add(this.l0OlI), (t = new THREE.BoxGeometry(1, 1, 1)), (i = new THREE.Mesh(t, e)), i.scale.set(2, 5, 0.2), (i.position.x = 0.8), this.Il1I1.add(i);
                }
                return (
                    (t.prototype.IIO0l = function () {
                        var t, e, i, s, l, n, a, o, r, h;
                        for (t = document.createElement('canvas'), t.width = 256, t.height = 256, e = t.getContext('2d'), e.fillStyle = '#FFF', e.fillRect(0, 0, t.width, t.height), e.strokeStyle = '#AAA', s = 0; s <= 9; ++s) e.beginPath(), (n = Math.random() * t.width), e.moveTo(n, 0), e.lineTo(n, t.height), e.stroke(), (n = Math.random() * t.height), e.moveTo(0, n), e.lineTo(t.width, n), e.stroke();
                        for (l = 0; l <= 29; ++l) (e.fillStyle = '#AAA'), (r = Math.random() * t.width), (h = Math.random() * t.height), (o = Math.random() * t.width * 0.2), (i = Math.random() * t.height * 0.2), e.fillRect(r, h, o, i);
                        return (a = new THREE.Texture(t)), (a.needsUpdate = !0), (this.material = new THREE.MeshPhongMaterial({ map: a, bumpMap: a, bumpScale: -0.1, specular: 0 }));
                    }),
                    t
                );
            })(),
            this.ShipTexture = (function () {
                function t(t) {
                    var e, i, s, l, n, a, o, r;
                    for (this.size = null != t ? t : 1024, this.canvas = document.createElement('canvas'), this.canvas.width = this.size, this.canvas.height = this.size / 2, this.llOOI = 8, this.blocksize = this.size / this.llOOI, i = this.canvas.getContext('2d'), i.fillStyle = '#FFF', i.fillRect(0, 0, this.size, this.size), this.index = 0, o = ['#FFF', '#CCC', '#999', '#666', '#333', '#000', '#FDA', '#456'], l = 0, n = o.length; l < n; l++)
                        (e = o[l]),
                            this.createTexture(function (t) {
                                return (t.fillStyle = e), t.fillRect(-0.2, -0.2, 1.4, 1.4);
                            });
                    for (
                        this.createTexture(function (t) {
                            return (t.fillStyle = '#666'), t.fillRect(-0.2, -0.2, 1.4, 1.4), (t.fillStyle = '#CCC'), t.fillRect(0.1, 0.1, 0.3, 0.8), t.fillRect(0.6, 0.1, 0.3, 0.8), (t.fillStyle = '#333'), t.fillRect(0.15, 0.15, 0.2, 0.7), t.fillRect(0.65, 0.15, 0.2, 0.7);
                        }),
                            this.createTexture(function (t) {
                                var e, i;
                                for (t.fillStyle = '#DDD', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#000', t.fillRect(0.05, 0.05, 0.4, 0.9), t.fillRect(0.55, 0.05, 0.4, 0.9), t.fillStyle = '#345', t.fillRect(0.06, 0.06, 0.38, 0.88), t.fillRect(0.56, 0.06, 0.38, 0.88), e = i = 0; i <= 10; e = i += 1) t.beginPath(), (t.fillStyle = '#333'), t.arc(1, 0.1 * e, 0.0125, 0, 180 * THREE.Math.DEG2RAD * 2, !0), t.fill(), t.beginPath(), t.arc(0.5, 0.1 * e, 0.0125, 0, 180 * THREE.Math.DEG2RAD * 2, !0), t.fill(), t.beginPath(), t.arc(0, 0.1 * e, 0.0125, 0, 180 * THREE.Math.DEG2RAD * 2, !0), t.fill(), t.beginPath(), t.arc(0.1 * e, 0, 0.0125, 0, 180 * THREE.Math.DEG2RAD * 2, !0), t.fill(), t.beginPath(), t.arc(0.1 * e, 1, 0.0125, 0, 180 * THREE.Math.DEG2RAD * 2, !0), t.fill();
                            }),
                            this.createTexture(function (t) {
                                (t.fillStyle = '#CCC'), t.fillRect(-0.2, -0.2, 1.4, 1.4), (t.fillStyle = '#111'), t.fillRect(0.1, 0.1, 0.2, 0.76), t.fillRect(0.7, 0.1, 0.2, 0.76);
                            }),
                            this.createTexture(function (t) {
                                var e, i;
                                for (t.fillStyle = '#CCC', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#222', t.fillRect(0, 0, 1, 0.1), t.fillRect(0, 0.9, 1, 0.1), t.fillStyle = '#FFF', t.fillRect(0, 0, 1, 0.08), t.fillRect(0, 0.92, 1, 0.08), t.fillStyle = '#222', e = i = 0.2; i <= 0.8; e = i += 0.3) t.fillRect(e - 0.01, 0, 0.02, 0.1), t.fillRect(e - 0.01, 0.9, 0.02, 0.1);
                                return (t.strokeStyle = '#333'), (t.lineWidth = 0.05), t.strokeRect(0.1, 0.25, 0.8, 0.5), (t.fillStyle = '#222'), t.fillRect(0.4, 0, 0.2, 0.1), t.fillRect(0.8, 0, 0.2, 0.1), t.fillRect(0, 0, 0.2, 0.1), t.fillRect(0.4, 0.8, 0.2, 0.1), t.fillRect(0.8, 0.8, 0.2, 0.1), t.fillRect(0, 0.8, 0.2, 0.1);
                            }),
                            this.createTexture(function (t) {
                                var e, i, s;
                                for (t.fillStyle = '#CCC', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#222', t.fillRect(0, -0.1, 1, 0.15), s = [], e = i = 0; i <= 1; e = i += 0.1) s.push(t.fillRect(e - 0.025, -0.1, 0.05, 1.2));
                                return s;
                            }),
                            this.createTexture(function (t) {
                                var e, i, s;
                                for (t.fillStyle = '#333', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#FFF', s = [], e = i = 0; i <= 1; e = i += 0.1) s.push(t.fillRect(e - 0.01, -0.1, 0.02, 1.2));
                                return s;
                            }),
                            this.createTexture(function (t) {
                                var e, i, s, l, n, a, o, r, h, u, d;
                                for (t.fillStyle = '#051245', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#93C5D8', t.save(), u = s = 0.25; s <= 0.75; u = s += 0.5) for (d = l = 0.25; l <= 0.75; d = l += 0.5) (e = t.createRadialGradient(u, d, 0, u, d, 0.5)), e.addColorStop(0, 'rgba(47,89,158,1)'), e.addColorStop(0.75, 'rgba(47,89,158,0)'), (t.fillStyle = e), t.fillRect(-0.2, -0.2, 1.4, 1.4);
                                for (t.restore(), i = n = 0; n <= 1; i = n += 0.2) t.fillRect(i - 0.01, -0.1, 0.01, 1.2);
                                for (i = a = -0.2; a <= 1.4; i = a += 0.05) t.fillRect(-0.1, i - 0.1, 1.2, 0.001);
                                for (t.fillStyle = 'rgba(60,60,70,.8)', u = o = 0; o <= 1; u = o += 0.5) t.fillRect(-0.2, u - 0.02, 1.4, 0.04), t.fillRect(u - 0.02, -0.2, 0.04, 1.4);
                                for (t.globalCompositeOperation = 'xor', t.fillStyle = '#333', h = [], u = r = 0; r <= 1; u = r += 0.5)
                                    h.push(
                                        (function () {
                                            var e, i;
                                            for (e = [], d = i = 0; i <= 1; d = i += 0.5) t.beginPath(), t.moveTo(u - 0.1, d), t.lineTo(u, d - 0.1), t.lineTo(u + 0.1, d), t.lineTo(u, d + 0.1), t.closePath(), e.push(t.fill());
                                            return e;
                                        })()
                                    );
                                return h;
                            }),
                            this.createTexture(function (t) {
                                var e, i, s, l, n;
                                for (t.save(), t.fillStyle = '#000', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.rotate((180 * THREE.Math.DEG2RAD) / 4), t.fillStyle = '#333', t.fillRect(-0.2, -0.2, 2, 0.4), t.fillStyle = '#444', t.fillRect(-0.2, -0.6, 2, 0.4), t.fillRect(-0.2, 0.2, 2, 0.4), t.fillStyle = '#333', t.fillRect(-0.2, -1, 2, 0.4), t.fillRect(-0.2, 0.6, 2, 0.4), t.rotate((180 * THREE.Math.DEG2RAD) / 2), t.fillStyle = 'rgba(0,0,30,.3)', t.fillRect(-0.9, -0.9, 2, 0.4), t.fillStyle = 'rgba(0,0,30,.2)', t.fillRect(-0.9, -0.5, 2, 0.4), t.fillRect(-0.9, -1.3, 2, 0.4), t.fillStyle = 'rgba(0,0,30,.3)', t.fillRect(-0.9, -0.1, 2, 0.4), t.fillRect(-0.9, -1.7, 2, 0.4), t.restore(), s = [], l = e = -0.2; e <= 1.4; l = e += 0.01)
                                    s.push(
                                        (function () {
                                            var e, s;
                                            for (s = [], n = e = -0.2; e <= 1.4; n = e += 0.01) (i = Math.floor(80 * Math.random())), (t.fillStyle = 'rgba(' + i + ',' + i + ',' + i + ',.1)'), s.push(t.fillRect(l, n, 0.01, 0.01));
                                            return s;
                                        })()
                                    );
                                return s;
                            }),
                            this.createTexture(function (t) {
                                var e, i, s, l;
                                for (t.fillStyle = '#AAA', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#000', i = [], s = e = 0; e <= 1; s = e += 0.1)
                                    i.push(
                                        (function () {
                                            var e, i;
                                            for (i = [], l = e = 0; e <= 1; l = e += 0.1) i.push(t.fillRect(s - 0.05, l - 0.05, 0.07, 0.07));
                                            return i;
                                        })()
                                    );
                                return i;
                            }),
                            this.createTexture(function (t) {
                                return (t.fillStyle = '#111'), t.fillRect(-0.2, -0.2, 1.4, 1.4);
                            }),
                            this.createTexture(function (t) {
                                var e, i;
                                for (t.fillStyle = '#333', t.fillRect(-0.2, -0.2, 1.4, 1.4), t.fillStyle = '#CCC', t.fillRect(0, 0, 1, 0.1), t.fillRect(0, 0.9, 1, 0.1), t.fillStyle = '#000', t.fillRect(0, 0, 1, 0.08), t.fillRect(0, 0.92, 1, 0.08), t.fillStyle = '#CCC', e = i = 0.2; i <= 0.8; e = i += 0.3) t.fillRect(e - 0.01, 0, 0.02, 0.1), t.fillRect(e - 0.01, 0.9, 0.02, 0.1);
                                return (t.strokeStyle = '#BBB'), (t.lineWidth = 0.05), t.strokeRect(0.1, 0.25, 0.8, 0.5), (t.fillStyle = '#CCC'), t.fillRect(0.4, 0, 0.2, 0.1), t.fillRect(0.8, 0, 0.2, 0.1), t.fillRect(0, 0, 0.2, 0.1), t.fillRect(0.4, 0.8, 0.2, 0.1), t.fillRect(0.8, 0.8, 0.2, 0.1), t.fillRect(0, 0.8, 0.2, 0.1);
                            }),
                            i = this.canvas.getContext('2d'),
                            i.fillStyle = 'hsl(0,70%,50%)',
                            i.fillRect(this.size - 2 * this.blocksize, 3 * this.blocksize, this.blocksize, this.blocksize),
                            s = a = 0,
                            r = this.blocksize - 1;
                        a <= r;
                        s = a += 1
                    )
                        (i.fillStyle = 'hsl(' + Math.floor((s / this.blocksize) * 360) + ',70%,50%)'), i.fillRect(this.size - this.blocksize + s, 3 * this.blocksize, 1, this.blocksize);
                }
                return (
                    (t.prototype.createTexture = function (t) {
                        var e, i, s;
                        return (e = this.canvas.getContext('2d')), e.save(), (i = this.index % this.llOOI), (s = Math.floor(this.index / this.llOOI)), e.translate(i * this.blocksize, s * this.blocksize), e.scale(this.blocksize, this.blocksize), e.beginPath(), e.rect(0, 0, 1, 1), e.clip(), e.translate(0.1, 0.1), e.scale(0.8, 0.8), t(e), e.restore(), this.index++;
                    }),
                    t
                );
            })(),
            this.ShipEmissiveTexture = (function () {
                function t(t, e) {
                    var i, s, l, n, a;
                    for (this.size = null != t ? t : 1024, null == e && (e = !1), this.canvas = document.createElement('canvas'), this.canvas.width = this.size, this.canvas.height = this.size / 2, this.llOOI = 8, this.blocksize = this.size / this.llOOI, s = this.canvas.getContext('2d'), s.fillStyle = '#000', s.fillRect(0, 0, this.size, this.size), this.index = 0, a = ['#000', '#000', '#000', '#000', '#000', '#000', '#000', '000'], l = 0, n = a.length; l < n; l++)
                        (i = a[l]),
                            this.createTexture(function (t) {
                                var e, s, l, n, a, o;
                                for (t.fillStyle = i, a = [0.4, 0.55], o = [], n = 0, l = a.length; n < l; n += 0.05)
                                    (e = a[n]),
                                        o.push(
                                            (function () {
                                                var i, l, n, a;
                                                for (n = [0.4, 0.55], a = [], l = 0, i = n.length; l < i; l += 0.05) (s = n[l]), a.push(t.fillRect(e + 0.0125, s + 0.0125, 0.025, 0.025));
                                                return a;
                                            })()
                                        );
                                return o;
                            });
                    this.createTexture(function (t) {}),
                        this.createTexture(function (t) {}),
                        this.createTexture(
                            (function (t) {
                                return function (e) {
                                    var i, s, l, n;
                                    for (l = new OII10(0), n = [], i = s = 0; s <= 8; i = s += 1) t.createLight(e, 0.16, 0.16 + 0.08 * i, 0.04, 0.04, l.next() > 0.1), t.createLight(e, 0.24, 0.16 + 0.08 * i, 0.04, 0.04, l.next() > 0.1), t.createLight(e, 0.76, 0.16 + 0.08 * i, 0.04, 0.04, l.next() > 0.1), n.push(t.createLight(e, 0.84, 0.16 + 0.08 * i, 0.04, 0.04, l.next() > 0.1));
                                    return n;
                                };
                            })(this)
                        ),
                        this.createTexture(
                            (function (t) {
                                return function (e) {
                                    (e.fillStyle = '#FFF'), t.createLight(e, 0.5, 0.05, 0.1, 0.05), t.createLight(e, 0.9, 0.05, 0.1, 0.05), t.createLight(e, 0.1, 0.05, 0.1, 0.05), t.createLight(e, 0.5, 0.85, 0.1, 0.05), t.createLight(e, 0.9, 0.85, 0.1, 0.05), t.createLight(e, 0.1, 0.85, 0.1, 0.05);
                                };
                            })(this)
                        ),
                        this.createTexture(function (t) {}),
                        this.createTexture(function (t) {}),
                        this.createTexture(function (t) {}),
                        this.createTexture(function (t) {}),
                        this.createTexture(
                            (function (t) {
                                return function (e) {
                                    var i, s, l, n;
                                    for (e.fillStyle = '#FFF', s = [], l = i = 0; i <= 1; l = i += 0.1)
                                        s.push(
                                            function () {
                                                var t, i;
                                                for (i = [], n = t = 0; t <= 1; n = t += 0.1) Math.random() < 0.4 ? i.push(this.createLight(e, l - 0.025, n - 0.025, 0.06, 0.06, Math.random() > 0.3)) : i.push(void 0);
                                                return i;
                                            }.call(t)
                                        );
                                    return s;
                                };
                            })(this)
                        ),
                        this.createTexture(
                            (function (t) {
                                return function (t) {
                                    var e, i, s, l;
                                    for (e = t.createLinearGradient(0, 0, 0, 1), e.addColorStop(0, '#000'), e.addColorStop(0.6, '#FFF'), t.fillStyle = e, t.fillRect(-0.1, -0.1, 1.2, 1.2), t.fillStyle = '#FFF', l = [], i = s = 0; s <= 1; i = s += 0.2) t.fillRect(i - 0.05, 0.15, 0.1, 0.1), l.push(t.fillRect(i - 0.05, 0.35, 0.1, 0.1));
                                    return l;
                                };
                            })()
                        ),
                        this.createTexture(
                            (function (t) {
                                return function (e) {
                                    (e.fillStyle = '#FFF'), t.createLight(e, 0.3, 0.05, 0.1, 0.05), t.createLight(e, 0.7, 0.05, 0.1, 0.05), t.createLight(e, 0.1, 0.05, 0.1, 0.05), t.createLight(e, 0.7, 0.85, 0.1, 0.05), t.createLight(e, 0.9, 0.85, 0.1, 0.05), t.createLight(e, 0.1, 0.85, 0.1, 0.05);
                                };
                            })(this)
                        ),
                        e && ((s = this.canvas.getContext('2d')), (s.fillStyle = '#888'), s.fillRect(this.size - this.blocksize, 3 * this.blocksize, this.blocksize, this.blocksize));
                }
                return (
                    (t.prototype.createLight = function (t, e, i, s, l, n) {
                        var a, o;
                        return null == n && (n = !0), (t.fillStyle = n ? '#FFF' : '#444'), t.fillRect(e - s / 2, i - l / 2, s, l), (a = t.createRadialGradient(e, i, 0, e, i, Math.max(s, l))), a.addColorStop(0, n ? 'rgba(255,255,255,.7)' : 'rgba(255,255,255,.3)'), a.addColorStop(1, 'rgba(255,255,255,0)'), (t.fillStyle = a), (o = Math.max(s, l)), t.fillRect(e - o, i - o, 2 * o, 2 * o);
                    }),
                    (t.prototype.createTexture = function (t, e) {
                        var i, s, l;
                        return null != e && (this.index = e), (i = this.canvas.getContext('2d')), i.save(), (s = this.index % this.llOOI), (l = Math.floor(this.index / this.llOOI)), i.translate(s * this.blocksize, l * this.blocksize), i.scale(this.blocksize, this.blocksize), i.beginPath(), i.rect(0, 0, 1, 1), i.clip(), i.translate(0.1, 0.1), i.scale(0.8, 0.8), t(i), i.restore(), this.index++;
                    }),
                    t
                );
            })(),
            this.ShipShieldTexture = (function () {
                function t(t) {
                    var e;
                    for (this.size = null != t ? t : 1024, this.canvas = document.createElement('canvas'), this.canvas.width = this.size, this.canvas.height = this.size / 2, this.llOOI = 8, this.blocksize = this.size / this.llOOI, this.index = 0, e = 0; e <= 29; e += 1)
                        this.createTexture(function (t) {
                            var e, i, s, l, n;
                            for (t.fillStyle = '#FFF', t.fillRect(-0.2, -0.2, 1.4, 1.4), n = [], s = l = 0; l <= 1; s = l += 1)
                                n.push(
                                    (function () {
                                        var l, n;
                                        for (n = [], i = l = 0; l <= 1; i = l += 1) (e = t.createRadialGradient(0.25 + 0.5 * s, 0.25 + 0.5 * i, 0, 0.25 + 0.5 * s, 0.25 + 0.5 * i, 0.5)), e.addColorStop(0, '#000'), e.addColorStop(0.1, '#000'), e.addColorStop(1, '#FFF'), (t.fillStyle = e), n.push(t.fillRect(0.25 + 0.5 * s - 0.225, 0.25 + 0.5 * i - 0.225, 0.45, 0.45));
                                        return n;
                                    })()
                                );
                            return n;
                        });
                    this.createTexture(function (t) {
                        return (t.fillStyle = '#888'), t.fillRect(-0.2, -0.2, 1.4, 1.4);
                    }),
                        this.createTexture(function (t) {
                            return (t.fillStyle = '#888'), t.fillRect(-0.2, -0.2, 1.4, 1.4);
                        });
                }
                return (
                    (t.prototype.createTexture = function (t, e) {
                        var i, s, l;
                        return null != e && (this.index = e), (i = this.canvas.getContext('2d')), i.save(), (s = this.index % this.llOOI), (l = Math.floor(this.index / this.llOOI)), i.translate(s * this.blocksize, l * this.blocksize), i.scale(this.blocksize, this.blocksize), i.beginPath(), i.rect(0, 0, 1, 1), i.clip(), i.translate(0.1, 0.1), i.scale(0.8, 0.8), t(i), i.restore(), this.index++;
                    }),
                    t
                );
            })(),
            I1II0 = new THREE.Texture(new this.ShipTexture().canvas),
            I1II0.needsUpdate = !0,
            O1llI = new THREE.Texture(new this.ShipEmissiveTexture().canvas),
            O1llI.wrapS = O1llI.wrapT = THREE.RepeatWrapping,
            O1llI.needsUpdate = !0,
            OI01l = new THREE.Texture(new this.ShipEmissiveTexture(null, !0).canvas),
            OI01l.wrapS = OI01l.wrapT = THREE.RepeatWrapping,
            OI01l.needsUpdate = !0,
            l1IIl = new THREE.Texture(new ShipShieldTexture().canvas),
            l1IIl.minFilter = THREE.LinearFilter,
            l1IIl.needsUpdate = !0,
            hasProp = {}.hasOwnProperty,
            this.lIl1O = (function () {
                function t(t, e, i, s) {
                    var l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K;
                    if (((this.data = t), (this.hue = null != e ? e : 0), (this.finish = null != i ? i : 'zinc'), (this.options = s), null == this.options && (this.options = { shield: !0, propulsion: !0, OIl0O: !0 }), (this.hue = Math.max(0.01, Math.min(0.99, this.hue))), (this.geometry = new THREE.Geometry()), (this.geometry.faceVertexUvs[0] = []), (this.quads = []), (this.l1OI0 = !1), null != this.data.bodies)) {
                        T = this.data.bodies;
                        for (m in T) hasProp.call(T, m) && ((n = T[m]), this.I0100(n));
                    }
                    if (null != this.data.tori) {
                        S = this.data.tori;
                        for (m in S) hasProp.call(S, m) && ((n = S[m]), this.buildTorus(n));
                    }
                    if (this.data.wings) {
                        P = this.data.wings;
                        for (m in P) hasProp.call(P, m) && ((N = P[m]), this.llO11(N));
                    }
                    if (null != this.data.scale && 1 !== this.data.scale) for (B = this.data.scale, A = this.geometry.vertices, I = 0, f = A.length; I < f; I++) (V = A[I]), (V.x *= B), (V.y *= B), (V.z *= B);
                    for (this.geometry.computeBoundingSphere(), this.geometry.computeBoundingBox(), this.geometry.computeFaceNormals(), H = this.quads, O = 0, g = H.length; O < g; O++) (M = H[O]), (r = M[0]), (h = M[1]), r.normal.lengthSq() > 0 && h.normal.lengthSq() > 0 && (r.normal.add(h.normal), r.normal.normalize(), (h.normal = r.normal));
                    for (D = this.geometry.faces, w = 0, y = D.length; w < y; w++) (o = D[w]), (o.vertexNormals[0] = o.normal), (o.vertexNormals[1] = o.normal), (o.vertexNormals[2] = o.normal);
                    if (((this.Il1I1 = new THREE.Group()), (this.Il1I1.rotation.order = 'ZYX'), (this.Illl0 = this.IIO0l()), (this.l0OlI = new THREE.Mesh(this.geometry, this.Illl0)), (this.OOl01 = 0), this.options.propulsion)) {
                        (z = new THREE.Geometry()), (a = O0l1l.O0IOO(this.hue, 0.5, 1)), (this.OO001 = new THREE.MeshBasicMaterial({ color: new THREE.Color(a[0] / 255, a[1] / 255, a[2] / 255), opacity: 1, map: Ol01l, transparent: !0, depthWrite: !1, side: THREE.DoubleSide, blending: THREE.AdditiveBlending })), (C = this.data.bodies);
                        for (m in C)
                            if (hasProp.call(C, m) && ((n = C[m]), n.propeller)) {
                                for (_ = 0, K = -200, d = x = 0, j = n.width.length - 1; x <= j; d = x += 1) n.position.y[d] > K && ((K = n.position.y[d]), (_ = d));
                                for (q = 0.01 * n.width[_] * 2, u = 0.01 * n.height[_] * 2, b = 5 * q, K = 0.01 * (n.position.y[_] + n.offset.y) + b / 4, U = 0.01 * (n.position.x[_] + n.offset.x), k = 6, d = E = 0, G = k - 1; E <= G; d = E += 1) (l = ((d + 0.5) / k) * (180 * THREE.Math.DEG2RAD)), (p = z.vertices.length), z.vertices.push(new THREE.Vector3(K - b / 2, U - (q / 2) * Math.cos(l), 0.01 * n.offset.z - (u / 2) * Math.sin(l))), z.vertices.push(new THREE.Vector3(K + b / 2, U - (q / 2) * Math.cos(l), 0.01 * n.offset.z - (u / 2) * Math.sin(l))), z.vertices.push(new THREE.Vector3(K + b / 2, U + (q / 2) * Math.cos(l), 0.01 * n.offset.z + (u / 2) * Math.sin(l))), z.vertices.push(new THREE.Vector3(K - b / 2, U + (q / 2) * Math.cos(l), 0.01 * n.offset.z + (u / 2) * Math.sin(l))), z.faces.push(new THREE.Face3(p, p + 1, p + 2)), z.faces.push(new THREE.Face3(p + 2, p + 3, p)), z.faceVertexUvs[0].push([new THREE.Vector2(0, 0), new THREE.Vector2(0, 1), new THREE.Vector2(1, 1)]), z.faceVertexUvs[0].push([new THREE.Vector2(1, 1), new THREE.Vector2(1, 0), new THREE.Vector2(0, 0)]);
                                if (0 !== n.offset.x) for (U = -U, d = F = 0, L = k - 1; F <= L; d = F += 1) (l = ((d + 0.5) / k) * (180 * THREE.Math.DEG2RAD)), (p = z.vertices.length), z.vertices.push(new THREE.Vector3(K - b / 2, U - (q / 2) * Math.cos(l), 0.01 * n.offset.z - (u / 2) * Math.sin(l))), z.vertices.push(new THREE.Vector3(K + b / 2, U - (q / 2) * Math.cos(l), 0.01 * n.offset.z - (u / 2) * Math.sin(l))), z.vertices.push(new THREE.Vector3(K + b / 2, U + (q / 2) * Math.cos(l), 0.01 * n.offset.z + (u / 2) * Math.sin(l))), z.vertices.push(new THREE.Vector3(K - b / 2, U + (q / 2) * Math.cos(l), 0.01 * n.offset.z + (u / 2) * Math.sin(l))), z.faces.push(new THREE.Face3(p, p + 1, p + 2)), z.faces.push(new THREE.Face3(p + 2, p + 3, p)), z.faceVertexUvs[0].push([new THREE.Vector2(0, 0), new THREE.Vector2(0, 1), new THREE.Vector2(1, 1)]), z.faceVertexUvs[0].push([new THREE.Vector2(1, 1), new THREE.Vector2(1, 0), new THREE.Vector2(0, 0)]);
                            }
                        if (null != this.data.scale && 1 !== this.data.scale) for (B = this.data.scale, R = z.vertices, c = 0, v = R.length; c < v; c++) (V = R[c]), (V.x *= B), (V.y *= B), (V.z *= B);
                        (z.verticesNeedUpdate = !0), (z.l1III = !0), z.computeBoundingSphere(), (this.O10lI = z), (this.I00I1 = new THREE.Mesh(z, this.OO001));
                    }
                    this.Il1I1.add(this.l0OlI), this.options.propulsion && this.Il1I1.add(this.I00I1), this.Il1I1.scale.set(2 * this.data.size, 2 * this.data.size, 2 * this.data.size), this.options.shield && ((this.shield_mat = new THREE.MeshBasicMaterial({ map: l1IIl, color: 0, blending: THREE.AdditiveBlending, transparent: !0, side: THREE.DoubleSide })), (this.shield_mesh = new THREE.Mesh(this.geometry, this.shield_mat)), this.shield_mesh.scale.set(1.2, 1.2, 1.2), this.Il1I1.add(this.shield_mesh), (this.shield_mesh.visible = !1)), this.options.OIl0O && 'undefined' != typeof OO10I && null !== OO10I && (this.OIl0O = new OO10I(Math.floor(360 * this.hue))), (this.O0OIO = 0), (this.OI0O0 = 0), (this.OIOl1 = new I010I());
                }
                return (
                    (t.prototype.dispose = function () {
                        if ((this.geometry.dispose(), (this.quads = []), this.Illl0.dispose(), this.options.propulsion && this.OO001.dispose(), this.options.propulsion)) return this.O10lI.dispose();
                    }),
                    (t.prototype.bump = function (t) {
                        return (this.bumpframe = t), (this.bumping = !0);
                    }),
                    (t.prototype.propstep = function (t) {
                        if (this.options.propulsion) return (this.OOl01 = t ? Math.max(0.02, Math.min(1, 1.1 * this.OOl01)) : 0.94 * this.OOl01), (this.I00I1.visible = this.OOl01 > 0.01), (this.OO001.opacity = (0.5 + 0.5 * Math.random()) * this.OOl01);
                    }),
                    (t.prototype.IIO0l = function (t) {
                        var e, i, s;
                        switch ((null == t && (t = 10), (this.built_material = this.finish), this.finish)) {
                            case 'alloy':
                                this.buildAlloyMaterial();
                                break;
                            case 'gold':
                                this.buildGoldMaterial();
                                break;
                            case 'titanium':
                                this.buildTitaniumMaterial();
                                break;
                            case 'carbon':
                                this.buildCarbonMaterial();
                                break;
                            default:
                                this.buildDefaultMaterial();
                        }
                        return (this.base_color = this.material.color.getHex()), (s = (this.base_color >> 16) & 255), (i = (this.base_color >> 8) & 255), (e = 255 & this.base_color), (this.dark_color = (Math.floor(s / 2) << 16) | (Math.floor(i / 2) << 8) | Math.floor(e / 2)), this.material;
                    }),
                    (t.prototype.buildDefaultMaterial = function (t) {
                        return null == t && (t = 10), (this.material = new THREE.MeshLambertMaterial({ map: I1II0, color: 16777215, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildX27Material = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 4243711, shininess: 30, bumpScale: 0.1, color: 5275808, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildAlloyMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 8413264, shininess: 30, bumpScale: 0.1, color: 10531008, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildTitaniumMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 6316128, shininess: 20, bumpScale: 0.1, color: 6316128, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildCarbonMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specular: 6316128, shininess: 5, bumpScale: 0.1, color: 1052688, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: OI01l }));
                    }),
                    (t.prototype.buildFullColorMaterial = function () {
                        var t;
                        return (t = O0l1l.hsvToRgbHex(this.hue, 1, 1)), (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 12632256, shininess: 50, bumpScale: 0.1, color: t, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildGoldMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 10506256, shininess: 50, bumpScale: 0.1, color: 8413232, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildCopperMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 11554864, shininess: 15, bumpScale: 0.1, color: 10514512, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildDiamondMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specular: 16777215, opacity: 0.5, shininess: 50, side: THREE.DoubleSide, bumpScale: 0.1, transparent: !0, color: 8421504, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.l1O0l = function (t) {
                        var e, i;
                        if ((this.built_material !== this.finish && (this.IIO0l(this.hue), (this.l0OlI.material = this.material)), this.options.shield && (this.shield_mesh.visible = !1), this.material.color.setHex(this.base_color), this.invulnerable ? (Date.now() % 500 < 250 ? (this.material.emissive.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 0.5)), this.material.color.setHex(this.dark_color), this.options.shield && (this.shield_mat.color.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)), (this.shield_mesh.visible = !0))) : (this.material.emissive.set(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)), this.material.color.setHex(this.base_color), this.options.shield && this.shield_mat.color.setHex(0))) : this.O0OIO > 0 && ((this.OI0O0 = Math.random() < this.O0OIO ? 1 : 0), this.options.shield && (this.shield_mesh.visible = !0), 1 === this.OI0O0 ? (this.material.emissive.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 0.5)), this.material.color.setHex(this.dark_color), this.options.shield && this.shield_mat.color.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 1))) : (this.material.emissive.set(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)), this.material.color.setHex(this.base_color), this.options.shield && this.shield_mat.color.setHex(0)), (this.O0OIO *= 0.95), this.O0OIO < 0.1 && ((this.O0OIO = 0), this.options.shield && (this.shield_mesh.visible = !1), this.material.color.setHex(this.base_color), this.material.emissive.set(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)))), this.bumping && (t > this.bumpframe + 30 ? ((this.bumping = !1), this.Il1I1.scale.set(2 * this.data.size, 2 * this.data.size, 2 * this.data.size)) : ((i = Math.max(0, t - this.bumpframe) / 30), (e = 1.5 - Math.cos(Math.pow(i, 0.5) * (180 * THREE.Math.DEG2RAD) * 2)), this.Il1I1.scale.set(2 * this.data.size * e, 2 * this.data.size * e, 2 * this.data.size * e))), (this.last_frame = t), this.bump_shield && this.options.shield)) return t > this.bump_shield_frame + 30 ? ((this.bump_shield = !1), this.shield_mesh.scale.set(1.2, 1.2, 1.2)) : ((i = Math.max(0, t - this.bump_shield_frame) / 30), (e = 1.2 - 0.1 * Math.cos(Math.pow(i, 0.5) * (180 * THREE.Math.DEG2RAD) * 2)), this.shield_mesh.scale.set(e, e, e), this.shield_mat.color.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, Math.pow(1 - i, 0.25))), (this.shield_mesh.visible = !0));
                    }),
                    (t.prototype.bumpShield = function () {
                        if (null != this.last_frame && !this.bump_shield) return (this.bump_shield_frame = this.last_frame), (this.bump_shield = !0);
                    }),
                    (t.prototype.getTextureIndex = function (t, e) {
                        return null == t ? 0 : 'number' == typeof t ? t : t[e] || t[t.length - 1];
                    }),
                    (t.prototype.addQuad = function (t, e, i, s, l, n, a, o, r, h, u, d) {
                        return this.geometry.faces.push(new THREE.Face3(t, e, i)), this.geometry.faces.push(new THREE.Face3(s, t, i)), this.quads.push([this.geometry.faces[this.geometry.faces.length - 2], this.geometry.faces[this.geometry.faces.length - 1]]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(l, n), new THREE.Vector2(a, o), new THREE.Vector2(r, h)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(u, d), new THREE.Vector2(l, n), new THREE.Vector2(r, h)]);
                    }),
                    (t.prototype.I0100 = function (t, e) {
                        var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G;
                        if ((null == e && (e = 0), 0 === e)) return this.I0100(t, 1), void (0 !== t.offset.x && this.I0100(t, -1));
                        for (i = t.angle || 0, o = Math.cos((i / 180) * (180 * THREE.Math.DEG2RAD) * e), _ = Math.sin((i / 180) * (180 * THREE.Math.DEG2RAD) * e), A = this.geometry.vertices.length, c = Math.min(t.position.x.length, t.position.y.length, t.width.length, t.height.length) - 1, I = 8, p = O = 0, v = I - 1; 0 <= v ? O <= v : O >= v; p = 0 <= v ? ++O : --O) l = (p / I) * (180 * THREE.Math.DEG2RAD) * 2;
                        if (
                            (null != t.section_segments &&
                                ('number' == typeof t.section_segments
                                    ? ((I = t.section_segments),
                                      (l = (function () {
                                          var t, e, i;
                                          for (i = [], p = t = 0, e = I - 1; 0 <= e ? t <= e : t >= e; p = 0 <= e ? ++t : --t) i.push((p / I) * (180 * THREE.Math.DEG2RAD) * 2);
                                          return i;
                                      })()))
                                    : ((I = t.section_segments.length),
                                      (l = (function () {
                                          var e, i, s;
                                          for (s = [], p = e = 0, i = I - 1; 0 <= i ? e <= i : e >= i; p = 0 <= i ? ++e : --e) s.push((t.section_segments[p] / 180) * (180 * THREE.Math.DEG2RAD));
                                          return s;
                                      })()))),
                            null == t.position.z)
                        )
                            for (t.position.z = [], p = m = 1, b = t.position.y.length; 1 <= b ? m <= b : m >= b; p = 1 <= b ? ++m : --m) t.position.z.push(0);
                        for (d = f = 0, w = c; f <= w; d = f += 1) for (C = 0.01 * t.position.y[d], p = g = 0, x = I - 1; g <= x; p = g += 1) (s = l[p] + (180 * THREE.Math.DEG2RAD) / 2), (H = (0.01 * t.position.x[d] + Math.cos(s) * t.width[d] * 0.01) * e), (G = Math.sin(s) * t.height[d] * 0.01 * e + 0.01 * t.offset.z + 0.01 * t.position.z[d]), (D = o * H + _ * C), (j = o * C - _ * H), (j += 0.01 * t.offset.y), (D += 0.01 * t.offset.x * e), t.vertical ? this.geometry.vertices.push(new THREE.Vector3(-G, D, j)) : this.geometry.vertices.push(new THREE.Vector3(j, D, G));
                        for (d = y = 0, k = c - 1; y <= k; d = y += 1) for (a = 0.25 * (t.width[d] + t.width[d + 1] + t.height[d] + t.height[d + 1]) * 6.28, n = Math.abs(t.position.y[d] - t.position.y[d + 1]), M = 1, n > 0 && a / n > 4 && I % 8 == 0 ? (M = 4) : n > 0 && a / n > 2 && I % 4 == 0 && (M = 2), p = P = 0, E = I - 1; P <= E; p = P += 1) p < I / 2 ? (this.geometry.faces.push(new THREE.Face3(A + (d + 1) * I + p, A + d * I + p, A + d * I + ((p + 1) % I))), this.geometry.faces.push(new THREE.Face3(A + (d + 1) * I + ((p + 1) % I), A + (d + 1) * I + p, A + d * I + ((p + 1) % I))), this.quads.push([this.geometry.faces[this.geometry.faces.length - 2], this.geometry.faces[this.geometry.faces.length - 1]])) : (this.geometry.faces.push(new THREE.Face3(A + (d + 1) * I + p, A + d * I + p, A + (d + 1) * I + ((p + 1) % I))), this.geometry.faces.push(new THREE.Face3(A + d * I + p, A + d * I + ((p + 1) % I), A + (d + 1) * I + ((p + 1) % I))), this.quads.push([this.geometry.faces[this.geometry.faces.length - 2], this.geometry.faces[this.geometry.faces.length - 1]])), (r = (((l[p] - l[0] + (180 * THREE.Math.DEG2RAD) / 2) / (180 * THREE.Math.DEG2RAD)) * M) % 1), (u = l[(p + 1) % l.length] - l[p]), u < 0 && (u += 180 * THREE.Math.DEG2RAD * 2), (h = r + (u / (180 * THREE.Math.DEG2RAD)) * M), (z = this.getTextureIndex(t.texture, d)), 15 === z && (z = 13), 63 === z && (z = 31), (T = (z % 8) * 0.125), (S = 0.25 * (3 - Math.floor(z / 8) + 0.1)), (r = T + 0.125 * (0.1 + 0.8 * r)), (h = T + 0.125 * (0.1 + 0.8 * h)), (R = S + 0.2), 31 === z && ((T += 0.125 * this.hue), (r = T), (h = T)), p < I / 2 ? (this.geometry.faceVertexUvs[0].push([new THREE.Vector2(r, S), new THREE.Vector2(r, R), new THREE.Vector2(h, R)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(h, S), new THREE.Vector2(r, S), new THREE.Vector2(h, R)])) : (this.geometry.faceVertexUvs[0].push([new THREE.Vector2(r, S), new THREE.Vector2(r, R), new THREE.Vector2(h, S)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(r, R), new THREE.Vector2(h, R), new THREE.Vector2(h, S)]));
                    }),
                    (t.prototype.buildTorus = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G;
                        if ('number' == typeof (x = t.segments))
                            (O = x),
                                (k = (function () {
                                    var t, e, i;
                                    for (i = [], h = t = 0, e = O; 0 <= e ? t <= e : t >= e; h = 0 <= e ? ++t : --t) i.push((h / O) * (180 * THREE.Math.DEG2RAD) * 2);
                                    return i;
                                })());
                        else for (k = [], h = d = 0, f = x.length - 1; 0 <= f ? d <= f : d >= f; h = 0 <= f ? ++d : --d) k[h] = (x[h] / 180) * (180 * THREE.Math.DEG2RAD);
                        for (S = this.geometry.vertices.length, r = k.length - 1, u = 8, h = c = 0, g = u - 1; 0 <= g ? c <= g : c >= g; h = 0 <= g ? ++c : --c) s = (h / u) * (180 * THREE.Math.DEG2RAD) * 2;
                        for (
                            null != t.section_segments &&
                            ('number' == typeof t.section_segments
                                ? ((u = t.section_segments),
                                  (s = (function () {
                                      var t, e, i;
                                      for (i = [], h = t = 0, e = u - 1; 0 <= e ? t <= e : t >= e; h = 0 <= e ? ++t : --t) i.push((h / u) * (180 * THREE.Math.DEG2RAD) * 2);
                                      return i;
                                  })()))
                                : ((u = t.section_segments.length),
                                  (s = (function () {
                                      var e, i, s;
                                      for (s = [], h = e = 0, i = u - 1; 0 <= i ? e <= i : e >= i; h = 0 <= i ? ++e : --e) s.push((t.section_segments[h] / 180) * (180 * THREE.Math.DEG2RAD));
                                      return s;
                                  })())));
                            t.position.x.length < r + 1;

                        )
                            t.position.x.push(t.position.x[t.position.x.length - 1]);
                        for (; t.position.y.length < r + 1; ) t.position.y.push(t.position.y[t.position.y.length - 1]);
                        for (; t.position.z.length < r + 1; ) t.position.z.push(t.position.z[t.position.z.length - 1]);
                        for (; t.width.length < r + 1; ) t.width.push(t.width[t.width.length - 1]);
                        for (; t.height.length < r + 1; ) t.height.push(t.height[t.height.length - 1]);
                        for (o = p = 0, y = r; p <= y; o = p += 1) for (e = k[o], R = Math.cos(e), P = Math.sin(e), h = I = 0, v = u - 1; I <= v; h = I += 1) (i = s[h]), (A = 0.01 * (t.offset.x + t.position.x[o] + Math.cos(i) * t.height[o] + t.radius)), (D = 0.01 * (t.offset.y + t.position.y[o] + Math.sin(i) * t.width[o])), (j = 0), (H = R * A + P * j), (G = R * j - P * A + 0.01 * t.offset.z), (C = D), this.geometry.vertices.push(new THREE.Vector3(C, H, G));
                        for (o = m = 0, b = r - 1; m <= b; o = m += 1) for (h = T = 0, w = u - 1; T <= w; h = T += 1) this.geometry.faces.push(new THREE.Face3(S + (o + 1) * u + h, S + o * u + h, S + o * u + ((h + 1) % u))), this.geometry.faces.push(new THREE.Face3(S + (o + 1) * u + ((h + 1) % u), S + (o + 1) * u + h, S + o * u + ((h + 1) % u))), this.quads.push([this.geometry.faces[this.geometry.faces.length - 2], this.geometry.faces[this.geometry.faces.length - 1]]), (l = ((s[h] - s[0]) / (180 * THREE.Math.DEG2RAD)) % 1), (a = s[(h + 1) % s.length] - s[h]), a < 0 && (a += 180 * THREE.Math.DEG2RAD * 2), (n = l + a / (180 * THREE.Math.DEG2RAD)), (E = this.getTextureIndex(t.texture, o)), 15 === E && (E = 13), 63 === E && (E = 31), (_ = (E % 8) * 0.125), (z = 0.25 * (3 - Math.floor(E / 8) + 0.1)), (l = _ + 0.125 * (l + 0.1) * 0.8), (n = _ + 0.125 * (n + 0.1) * 0.8), (M = z + 0.2), 31 === E && ((_ += 0.125 * this.hue), (l = _), (n = _)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(l, z), new THREE.Vector2(l, M), new THREE.Vector2(n, M)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(n, z), new THREE.Vector2(l, z), new THREE.Vector2(n, M)]);
                    }),
                    (t.prototype.llO11 = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z;
                        for (E = this.geometry.vertices.length, u = Math.min(t.length.length, t.width.length - 1, t.angle.length, t.position.length - 1), null == t.offset && (t.offset = { x: 0, y: 0, z: 0 }), _ = 0, z = 0, l = n = 0, c = u; n <= c; l = n += 1) (d = 0.01 * t.position[l]), (f = 0.01 * t.width[l]), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d - f / 2, 0.01 * t.offset.x + _, 0.01 * t.offset.z + z)), l < u && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), 0 === l && ((e = 1), (m = 0)), (s = 0.01 * t.bump.size * f * e), (i = 0.01 * -t.bump.size * f * m), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * t.offset.x + _ + i, 0.01 * t.offset.z + z + s)), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * t.offset.x + _ - i, 0.01 * t.offset.z + z - s))), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f / 2, 0.01 * t.offset.x + _, 0.01 * t.offset.z + z)), null != t.length[l] && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (o = 0.01 * t.length[l]), (_ += o * e), (z += o * m));
                        for (l = a = 0, p = u - 1; a <= p; l = a += 1) (g = this.getTextureIndex(t.texture, l)), 15 === g && (g = 13), 63 === g && (g = 31), (y = (g % 8) * 0.125), (v = y + 0.0125), (b = v + 0.1), (w = 0.25 * (3 - Math.floor(g / 8) + 0.1)), (x = w + 0.2), (k = w + (x - w) * (0.5 + 0.01 * t.bump.position)), 31 === g && ((v = y + 0.125 * this.hue), (b = v)), l < u - 1 ? (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 1, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 3, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 5, E + 4 * l + 3, E + 4 * l + 7)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(v, k), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(v, k), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, x), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, k), new THREE.Vector2(v, x), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 4, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 6, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 6, E + 4 * l + 3)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 6, E + 4 * l + 7, E + 4 * l + 3)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(b, w), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(b, k), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, k), new THREE.Vector2(v, x)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, k), new THREE.Vector2(b, x), new THREE.Vector2(v, x)]))) : (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 1, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 3, E + 4 * l + 5)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(v, k), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(v, k), new THREE.Vector2(b, x)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, x), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 4, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 5, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 5, E + 4 * l + 3)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(b, w), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(b, x), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, x), new THREE.Vector2(v, x)])));
                        for (E = this.geometry.vertices.length, _ = 0, z = 0, l = r = 0, I = u; r <= I; l = r += 1) (d = 0.01 * t.position[l]), (f = 0.01 * t.width[l]), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d - f / 2, 0.01 * -t.offset.x + _, 0.01 * t.offset.z + z)), l < u && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), 0 === l && ((e = 1), (m = 0)), (s = 0.01 * t.bump.size * f * e), (i = 0.01 * t.bump.size * f * m), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * -t.offset.x + _ + i, 0.01 * t.offset.z + z + s)), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * -t.offset.x + _ - i, 0.01 * t.offset.z + z - s))), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f / 2, 0.01 * -t.offset.x + _, 0.01 * t.offset.z + z)), null != t.length[l] && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (o = 0.01 * t.length[l]), (_ -= o * e), (z += o * m));
                        for (l = h = 0, O = u - 1; h <= O; l = h += 1) (g = this.getTextureIndex(t.texture, l)), 15 === g && (g = 13), 63 === g && (g = 31), (y = (g % 8) * 0.125), (v = y + 0.0125), (b = v + 0.1), (w = 0.25 * (3 - Math.floor(g / 8) + 0.1)), (x = w + 0.2), (k = w + (x - w) * (0.5 + 0.01 * t.bump.position)), 31 === g && ((v = y + 0.125 * this.hue), (b = v)), l < u - 1 ? (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 4, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 5, E + 4 * l + 7)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, w), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(v, k), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, k), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 4, E + 4 * l)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 6, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 6, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 7, E + 4 * l + 6)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(v, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, k), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, k), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, x), new THREE.Vector2(b, k)]))) : (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 4, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, w), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(b, x)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(v, k), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 4, E + 4 * l)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 5, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 5, E + 4 * l + 2)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(v, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, x), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, x), new THREE.Vector2(v, k)])));
                    }),
                    (t.prototype.computeBounds = function () {
                        var t, e, i, s, l, n, a, o;
                        for (l = 0, i = 0, n = 0, s = 0, a = this.geometry.vertices, t = 0, e = a.length; t < e; t++) (o = a[t]), (l = Math.min(l, o.x)), (n = Math.min(n, o.y)), (i = Math.max(i, o.x)), (s = Math.max(s, o.y));
                        return (this.bounds = { minx: l, maxx: i, miny: n, maxy: s, width: i - l, height: s - n, cx: (l + i) / 2, cy: (n + s) / 2 });
                    }),
                    (t.prototype.shapePoint = function (t, e, i) {
                        var s, l, n;
                        return (n = i.length), (s = Math.atan2(e, -t)), (s = Math.round(((s + 180 * THREE.Math.DEG2RAD * 2) / (180 * THREE.Math.DEG2RAD * 2)) * n) % n), (l = Math.sqrt(t * t + e * e)), (i[s] = Math.max(i[s], l));
                    }),
                    (t.prototype.l0IO0 = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                        for (null == t && (t = 50), p = [], s = n = 0, u = t - 1; 0 <= u ? n <= u : n >= u; s = 0 <= u ? ++n : --n) p[s] = 0;
                        for (d = this.geometry.faces, a = 0, o = d.length; a < o; a++) for (i = d[a], I = this.geometry.vertices[i.a], O = this.geometry.vertices[i.b], m = this.geometry.vertices[i.c], s = r = 0; r <= 99; s = r += 1) (e = s / 100), (f = I.x * e + O.x * (1 - e)), (g = I.y * e + O.y * (1 - e)), this.shapePoint(f, g, p), (f = m.x * e + O.x * (1 - e)), (g = m.y * e + O.y * (1 - e)), this.shapePoint(f, g, p), (f = m.x * e + I.x * (1 - e)), (g = m.y * e + I.y * (1 - e)), this.shapePoint(f, g, p);
                        for (s = h = 0, c = p.length - 1; h <= c; s = h += 1) p[s] *= 2 * this.data.size;
                        for (l in p) p[l] = parseFloat(p[l].toFixed(3));
                        return p;
                    }),
                    (t.prototype.I110l = function (e) {
                        var i, s, l, n, a, o, r;
                        return null == e && (e = 128), (r = new THREE.Scene()), (i = new THREE.OrthographicCamera(0, e, 0, e, 1, 3e3)), this.material.emissive.setHex(16777215), (this.material.emissiveMap = l1IIl), (this.material.side = THREE.DoubleSide), this.material.color.setHex(0), (this.OO001.opacity = 0), r.add(this.Il1I1), this.Il1I1.position.set(e / 2, e / 2, -1e3), this.computeBounds(), (o = 0.9 * Math.min(e / this.bounds.width, e / this.bounds.height)), (l = o * this.bounds.cy), (n = o * this.bounds.cx), this.Il1I1.position.set(e / 2 - l, e / 2 - n, -1e3), (a = o), this.Il1I1.scale.set(a, a, a), (this.Il1I1.rotation.z = (180 * THREE.Math.DEG2RAD) / 2), t.l1011 || (t.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), t.l1011.setSize(e, e), t.l1011.render(r, i), (s = document.createElement('canvas')), (s.width = e), (s.height = e), s.getContext('2d').drawImage(t.l1011.domElement, 0, 0), s;
                    }),
                    (t.prototype.get3DImage = function (e, i) {
                        var s, l, n, a, o;
                        return null == e && (e = 128), null == i && (i = 0), (o = new THREE.Scene()), (s = new THREE.OrthographicCamera(0, e, 0, e, 1, 3e3)), (this.OO001.opacity = 1), (this.finish = 'alloy'), this.IIO0l(), (this.l0OlI.material = this.material), o.add(this.Il1I1), (n = new THREE.DirectionalLight()), n.position.set(2, -1, 1), o.add(n), this.Il1I1.position.set(e / 2, e / 2, -1e3), (a = 0.25 * e), this.Il1I1.scale.set(-a, a, a), (this.Il1I1.rotation.z = (180 * THREE.Math.DEG2RAD) / 2 + i), (this.Il1I1.rotation.x = (180 * THREE.Math.DEG2RAD) / 4), (this.Il1I1.rotation.order = 'XYZ'), t.l1011 || (t.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), t.l1011.setSize(e, e), t.l1011.render(o, s), (l = document.createElement('canvas')), (l.width = e), (l.height = e), l.getContext('2d').drawImage(t.l1011.domElement, 0, 0), l;
                    }),
                    (t.prototype.getIcon = function (e) {
                        var i, s, l, n, a, o, r;
                        return null == e && (e = 64), (r = new THREE.Scene()), (i = new THREE.OrthographicCamera(0, e, 0, e, 1, 3e3)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, side: THREE.DoubleSide })), (this.l0OlI.material = this.material), (this.OO001.opacity = 0), r.add(this.Il1I1), this.computeBounds(), (o = 0.9 * Math.min(e / this.bounds.width, e / this.bounds.height)), (l = o * this.bounds.cy), (n = o * this.bounds.cx), this.Il1I1.position.set(e / 2 - l, e / 2 - n, -1e3), (a = o), this.Il1I1.scale.set(a, a, a), (this.Il1I1.rotation.z = (180 * THREE.Math.DEG2RAD) / 2), t.l1011 || (t.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), t.l1011.setSize(e, e), t.l1011.render(r, i), (s = document.createElement('canvas')), (s.width = e), (s.height = e), s.getContext('2d').drawImage(t.l1011.domElement, 0, 0), s;
                    }),
                    (t.prototype.getHorizontalThumbnail = function (e, i) {
                        var s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                        for (null == e && (e = 128), null == i && (i = 0), I = new THREE.Scene(), s = new THREE.OrthographicCamera(0, 2 * e, 0, e, 1, 3e3), this.OO001.opacity = 0.5, I.add(this.Il1I1), this.Il1I1.position.set(e, e / 2, -1e3), p = 0.4 * e, this.Il1I1.scale.set(p, -p, p), d = new THREE.DirectionalLight(16777215), d.position.set(1, -0.5, 3), I.add(d), this.Il1I1.rotation.z = 180 * THREE.Math.DEG2RAD, t.l1011 || (t.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), t.l1011.setSize(2 * e, e), t.l1011.render(I, s), l = document.createElement('canvas'), l.width = 2 * e, l.height = e, l.getContext('2d').drawImage(t.l1011.domElement, 0, 0), n = l.getContext('2d'), n.translate(e, e / 2), n.rotate((-180 * THREE.Math.DEG2RAD) / 2), n.translate(0, e / 2), n.scale(e / 15, e / 15), m = ll000.getShape(parseInt(i)), o = 0, h = m.length; o < h; o++) {
                            for (O = m[o], n.beginPath(), a = n.createRadialGradient(0, 0, 0, 0, 0, 2), a.addColorStop(0, 'hsl(' + Math.floor(360 * this.hue) + ',100%,100%)'), a.addColorStop(1, 'hsl(' + Math.floor(360 * this.hue) + ',80%,40%)'), n.fillStyle = a, r = 0, u = O.length; r < u; r++) (c = O[r]), n.lineTo(c[1], c[0]);
                            n.closePath(), n.fill();
                        }
                        return l;
                    }),
                    (t.prototype.getThumbnail = function (e, i) {
                        var s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                        for (null == e && (e = 128), null == i && (i = 0), I = new THREE.Scene(), s = new THREE.OrthographicCamera(0, e, 0, e, 1, 3e3), this.OO001.opacity = 0.5, I.add(this.Il1I1), this.Il1I1.position.set(e / 2, e / 2, -1e3), p = 0.4 * e, this.Il1I1.scale.set(p, -p, p), d = new THREE.PointLight(16777215, 1, 0), d.position.set(0.3 * e, 0.3 * e, e - 1e3), I.add(d), this.Il1I1.rotation.z = (180 * THREE.Math.DEG2RAD) / 2, t.l1011 || (t.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), t.l1011.setSize(e, e), t.l1011.render(I, s), l = document.createElement('canvas'), l.width = e, l.height = e, l.getContext('2d').drawImage(t.l1011.domElement, 0, 0), n = l.getContext('2d'), n.translate(e / 2, e / 8), n.scale(e / 20, e / 20), m = ll000.getShape(parseInt(i)), o = 0, h = m.length; o < h; o++) {
                            for (O = m[o], n.beginPath(), a = n.createRadialGradient(0, 0, 0, 0, 0, 2), a.addColorStop(0, 'hsl(' + Math.floor(360 * this.hue) + ',100%,100%)'), a.addColorStop(1, 'hsl(' + Math.floor(360 * this.hue) + ',80%,40%)'), n.fillStyle = a, r = 0, u = O.length; r < u; r++) (c = O[r]), n.lineTo(c[1], c[0]);
                            n.closePath(), n.fill();
                        }
                        return l;
                    }),
                    (t.exportThumbnail = function (e, i, s, l, n) {
                        var a;
                        return null == e && (e = 101), null == i && (i = 0), null == s && (s = 'zinc'), null == l && (l = 0), null == n && (n = 128), (a = new t(OlII0.ships_by_code[e], i / 360, s)), a.getThumbnail(n, l);
                    }),
                    (t.exportHorizontalThumbnail = function (e, i, s, l, n) {
                        var a;
                        return null == e && (e = 101), null == i && (i = 0), null == s && (s = 'zinc'), null == l && (l = 0), null == n && (n = 128), (a = new t(OlII0.ships_by_code[e], i / 360, s)), a.getHorizontalThumbnail(n, l);
                    }),
                    (t.icons_buffer = []),
                    (t.getShipIcon = function (e) {
                        var i, s;
                        return null == t.icons_buffer[e] && null != (s = OlII0.ships_by_code[e]) && ((i = new t(s, 0)), (t.icons_buffer[e] = i.getIcon()), i.dispose()), t.icons_buffer[e];
                    }),
                    t
                );
            })(),
            this.createPropTexture = function () {
                var t, e, i, s;
                return (t = document.createElement('canvas')), (t.width = 64), (t.height = 64), (e = t.getContext('2d')), e.clearRect(0, 0, t.width, t.height), e.save(), e.translate(t.width / 2, 0.75 * t.height), e.scale(t.width / 2, 0.75 * -t.height), (i = e.createRadialGradient(0, 0, 0, 0, 0, 1)), i.addColorStop(0, 'rgba(255,255,255,1)'), i.addColorStop(1, 'rgba(255,255,255,0)'), (e.fillStyle = i), e.fillRect(-1, -1, 2, 2), (i = e.createLinearGradient(0, -1, 0, 1)), i.addColorStop(0, 'rgba(255,255,255,1)'), i.addColorStop(1, 'rgba(255,255,255,0)'), (e.fillStyle = i), (e.globalCompositeOperation = 'destination-in'), e.fillRect(-1, -1, 2, 2), e.restore(), (s = new THREE.Texture(t)), (s.needsUpdate = !0), s;
            },
            Ol01l = this.createPropTexture(),
            this.OO10I = (function () {
                function t(t) {
                    (this.hue = null != t ? t : 0), (this.name = ''), (this.shield = 0), (this.I0O1l = 8), (this.canvas = document.createElement('canvas')), (this.canvas.width = 256), (this.canvas.height = 64), (this.texture = new THREE.Texture(this.canvas)), (this.texture.minFilter = THREE.LinearFilter), (this.score = 0), (this.I0O1l = 0), (this.shield = 0), (this.healing = !1), (this.rank = 0), (this.level = 1), (this.l1OI0 = !1), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, map: this.texture, transparent: !0, depthWrite: !1, depthTest: !1 })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(10, 2.5, 1), (this.anonymous = !1), (this.target = !1), this.lOll0();
                }
                return (
                    (t.computeHue = function (t) {
                        var e, i, s, l;
                        for (l = 0, e = i = 0, s = t.length - 1; i <= s; e = i += 1) l += 111 * t.charCodeAt(e);
                        return l % 360;
                    }),
                    (t.prototype.l1O0l = function (t, e, i, s) {
                        var l, n, a, o, r;
                        if (((this.anonymous = t.mode.anonymous_ships), this.anonymous && (this.hue = (t.hue + 180) % 360), (o = Math.min(100, Math.round((100 * i.shield) / s.shield_capacity))), (l = Math.min(100, Math.round((100 * i.I0O1l) / s.crystals_capacity))), (a = Math.floor(i.type / 100)), (this.l1OI0 = i.l1OI0), (n = i.healing && i.hue === t.lIlO0.Ill00.status.hue), (this.shipid = i.id), (this.friendly = i.friendly), (r = t.mode.isTarget(i.id)), (this.target === r && this.name === e && i.score === this.score && o === this.shield && l === this.I0O1l && i.rank === this.rank && a === this.level && this.healing === n) || ((this.name = e), (this.I0O1l = l), (this.score = i.score), (this.rank = i.rank), (this.shield = o), (this.healing = n), (this.level = a), (this.target = r), this.lOll0(t)), t.is_mobile_app && null != this.l0OlI)) return this.l0OlI.scale.set(1.5 * (n ? 12.5 : 10), 3.75, 1);
                    }),
                    (t.prototype.lOll0 = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O;
                        return (this.background = 'hsla(' + this.hue + ',50%,30%,.25)'), (this.medium = 'hsla(' + this.hue + ',40%,50%,.5)'), (this.color = 'hsla(' + this.hue + ',40%,75%,1)'), (l = this.canvas.getContext('2d')), l.clearRect(0, 0, this.canvas.width, this.canvas.height), l.save(), (s = !1), (e = !1), (i = !1), null != t && null != t.names && null != t.mode && null != t.mode.team_stats && null != (a = t.names.getData(this.shipid)) && a.friendly && ((s = null != t.mode.team_stats[a.friendly] && t.mode.team_stats[a.friendly].killer.id === this.shipid), (e = null != t.mode.team_stats[a.friendly] && t.mode.team_stats[a.friendly].contributor.id === this.shipid), (i = null != t.mode.team_stats[a.friendly] && t.mode.team_stats[a.friendly].healer.id === this.shipid)), (I = 10), (r = 2.5), this.healing && (I = 12.5), (s || e || i) && (r = 3.75), l.scale(10 / I, 2.5 / r), this.l0OlI.scale.set(I, r, 1), (l.fillStyle = this.background), (c = this.canvas.width), (p = c / 32), c / 64, (o = this.canvas.height), (l.fillStyle = 'hsl(' + this.hue + ',50%,80%)'), (d = Math.round((this.canvas.width / 512) * 32)), (l.font = d + 'pt Play'), (l.textAlign = 'left'), (l.textBaseline = 'middle'), this.anonymous || (l.fillText(this.name, 2 * p, o / 6), l.fillText('' + this.score, 2 * p, (3 * o) / 6), (l.textAlign = 'right'), l.fillText('Lv' + this.level, c - 2 * p, o / 6), l.fillText('#' + this.rank, c - 2 * p, (3 * o) / 6)), (O = c - 2 * p), (l.fillStyle = 'rgba(0,0,0,.5)'), l.fillRect(2 * p - 1, 0.65 * o - 1, O + 2, 0.15 * o + 2), l.fillRect(2 * p - 1, 0.85 * o - 1, O + 2, 0.15 * o + 2), (l.fillStyle = 'hsla(180,100%,75%,.75)'), l.fillRect(2 * p, 0.65 * o, (O * this.shield) / 100, 0.15 * o), (l.fillStyle = 'hsla(0,100%,75%,.75)'), l.fillRect(2 * p, 0.85 * o, (O * this.I0O1l) / 100, 0.15 * o), null == this.shipid || null == t || this.anonymous || (null != (n = t.names.getCustom(this.shipid)) && ((r = Math.round(0.7 * o)), (h = Il01O.I110l(n.badge, n.laser, n.finish, r, n.hue)), h.complete && l.drawImage(h, c / 2 - r, 0.6 * o - r / 2, 2 * r, r))), this.target && ((l.fillStyle = '#F66'), (l.strokeStyle = '#000'), (l.lineWidth = 6), (l.font = Math.round(0.9 * this.canvas.height) + 'pt FontAwesome'), (l.textAlign = 'center'), (l.textBaseline = 'middle'), l.strokeText('', this.canvas.width / 2, this.canvas.height / 2), l.fillText('', this.canvas.width / 2, this.canvas.height / 2)), this.healing && ((l.font = Math.round(0.6 * this.canvas.height) + 'pt FontAwesome'), (l.fillStyle = 'hsla(180,100%,75%,.75)'), (l.textAlign = 'center'), (l.textBaseline = 'middle'), l.fillText('', (9 * this.canvas.width) / 8, this.canvas.height / 2)), (u = 2 * p), (l.textAlign = 'left'), (l.textBaseline = 'middle'), (l.fillStyle = '#FFF'), (l.font = Math.round(0.35 * this.canvas.height) + 'pt SBGlyphs'), s && (l.fillText('[', u, 1.25 * this.canvas.height), (u += 0.8 * this.canvas.height)), e && (l.fillText('D', u, 1.25 * this.canvas.height), (u += 0.8 * this.canvas.height)), i && (l.fillText('', u, 1.25 * this.canvas.height), (u += 0.8 * this.canvas.height)), l.restore(), (this.texture.needsUpdate = !0);
                    }),
                    t
                );
            })(),
            this.l0I0I = (function () {
                function t(t, e, i) {
                    (this.l1110 = t), (this.type = null != e ? e : OI1I1.types_by_code[101]), (this.O0IO0 = null != i && i), (this.status = new O00IO()), (this.status.type = this.type.code), (this.OlOlI = new ll0O0(this.l1110)), (this.instance = new ShipInstance(this.type)), (this.levels_mem = 0), (this.last_t = Date.now()), (this.I1O01 = 16), (this.phase = 0), (this.previous_shoot = !1), (this.I00O0 = { OI00O: !1, left: !1, right: !1, strafe_left: !1, strafe_right: !1, release_crystal: !1, up: !1, OOlO1: !1, I0lOO: 0, guided: !1, glide: !1, angle: 0, r: 0, lIl10: 0 }), (this.ll010 = 0), (this.IlI1I = 0), (this.OOIlI = 0), (this.II01l = 0), (this.OII1l = Date.now()), (this.I000O = 0.02), (this.OlIOI = 0.2), (this.II0lI = 0), (this.O01OI = 0), (this.III11 = 3), (this.lI100 = 0), (this.OIlIl = 0), (this.last_pulse_shot = 0), (this.pods = new Pods(this.l1110, this));
                }
                return (
                    (t.prototype.setType = function (t) {
                        return (this.type = t), (this.instance = new ShipInstance(this.type)), (this.levels_mem = -1);
                    }),
                    (t.prototype.l0Ill = function () {
                        var t, e, i, s, l, n;
                        if ((this.status.levels !== this.levels_mem && (this.instance.read(this.status.levels), this.instance.updateParameters(), (this.levels_mem = this.status.levels), this.l1110.Ill00 === this && this.l1110.l0I11.beep()), (this.I00O0.I0lOO = this.status.I0lOO), (this.I00O0.guided = this.status.guided), this.status.guided && (this.I00O0.angle = this.status.angle), this.OlOlI.l0Ill(this.instance, this.status), this.status.I0lOO > 0 && (this.I00O0.lIl10 = this.status.lIl10), this.OlOlI.lOlOO(this.instance, this.I00O0), this.O0IO0 && ((this.I00O0.lIl10 = this.status.lIl10), (this.I00O0.strafe_left = this.status.strafe_left), (this.I00O0.strafe_right = this.status.strafe_right)), (s = 10 * this.I00O0.lIl10), this.I00O0.strafe_left ? (s += (180 * THREE.Math.DEG2RAD) / 6) : this.I00O0.strafe_right && (s -= (180 * THREE.Math.DEG2RAD) / 6), (this.IlI1I += (s - this.ll010) * this.I000O), (this.IlI1I *= 1 - this.OlIOI), (this.ll010 += this.IlI1I), (l = Math.cos(this.status.r)), (n = Math.sin(this.status.r)), (t = this.status.lllOl - this.lI100), (e = this.status.II110 - this.OIlIl), (i = l * t + n * e), (this.lI100 = this.status.lllOl), (this.OIlIl = this.status.II110), (this.II01l += (100 * -i - this.OOIlI) * this.I000O), (this.II01l *= 1 - this.OlIOI), (this.OOIlI += this.II01l), null != this.pods)) return this.pods.l0Ill(this.l1110.lIlO0.IO11l.II1O0);
                    }),
                    (t.prototype.O1O0O = function () {
                        return (this.send = !0);
                    }),
                    (t.prototype.l0Oll = function () {
                        var t, e, i, s;
                        if (((e = this.I00O0.OI00O && !this.previous_shoot), (s = Date.now()), (t = Math.min(16.6666667, s - this.last_t)), (this.last_t = s), (this.I1O01 = 0.9 * this.I1O01 + 0.1 * t), 1e3 / this.I1O01, (this.phase += (60 * this.I1O01) / 1e3), !(this.phase < 1 && !e && this.I1O01 < 16))) return (this.phase -= Math.floor(this.phase)), this.O01OI++, this.send ? (this.O01OI >= this.III11 || e ? (this.O01OI === this.III11 && (this.III11 = Math.min(6, this.III11 + 1)), (this.previous_shoot = this.I00O0.OI00O), (this.O01OI = 0), (this.send = !1), (i = (this.I00O0.angle + 360) % 360), this.I00O0.up && (i += 4096), this.I00O0.OI00O && (i += 8192), this.I00O0.glide && (i += 16384), this.I00O0.strafe_left && (i += 32768), this.I00O0.strafe_right && (i += 65536), this.I00O0.release_crystal && (i += 131072), null != this.l1110.I0O01 && this.l1110.I0O01.O1O0O(i), this.log()) : void 0) : (this.III11 = Math.max(1, this.III11 - 1));
                    }),
                    (t.prototype.log = function () {
                        return this.II0lI++;
                    }),
                    (t.prototype.isPulseType = function () {
                        var t, e, i, s, l, n, a, o;
                        if (null == this.instance.pulse_type) {
                            for (t = null, a = this.instance.lasers, e = 0, l = a.length; e < l; e++) (s = a[e]), s.damage >= 15 && (null == t || s.damage > t.damage) && (t = s);
                            if (null != t) for (this.instance.pulse_type = !0, this.instance.pulse_laser = t, o = this.instance.lasers, i = 0, n = o.length; i < n; i++) (s = o[i]) !== t && s.damage > t.damage / 2 && (this.instance.pulse_type = !1);
                            else null != this.type.specs.ship.dash ? (this.instance.pulse_type = !0) : (this.instance.pulse_type = !1);
                        }
                        return this.instance.pulse_type;
                    }),
                    (t.prototype.pulsePower = function () {
                        return null != this.instance.pulse_laser ? this.instance.pulse_laser.damage : null != this.instance.dash_initial_energy ? this.instance.dash_initial_energy : 0;
                    }),
                    (t.prototype.pulseRate = function () {
                        return null != this.instance.pulse_laser ? this.instance.pulse_laser.type.rate : 1;
                    }),
                    t
                );
            })(),
            this.Gamepad = (function () {
                function t(t, e) {
                    var i;
                    (this.O1IO0 = t),
                        (this.index = null != e ? e : 0),
                        null != navigator.getGamepads &&
                            ((i = navigator.getGamepads()),
                            this.index < i.length && null != i[this.index] && (this.pad = i[this.index]),
                            (this.interval = setInterval(
                                (function (t) {
                                    return function () {
                                        return t.check();
                                    };
                                })(this),
                                16
                            )));
                }
                return (
                    (t.prototype.stop = function () {
                        if ((null != this.interval && clearInterval(this.interval), null != this.next)) return this.next.stop();
                    }),
                    (t.prototype.check = function () {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                        if (((u = navigator.getGamepads()), this.index < u.length && (this.pad = u[this.index]), this.index + 1 < u.length && null == this.next && (this.next = new t(this.O1IO0, this.index + 1)), null != this.pad)) {
                            if (null == this.status) {
                                for (this.status = { buttons: [], joysticks: [] }, d = this.pad.buttons, s = l = 0, o = d.length; l < o; s = ++l) (i = d[s]), this.status.buttons.push(!1);
                                for (s = n = 0, c = this.pad.axes.length - 2; n <= c; s = n += 2) this.status.joysticks.push(-1);
                            }
                            for (p = this.pad.buttons, s = a = 0, r = p.length; a < r; s = ++a) (i = p[s]), i.pressed !== this.status.buttons[s] && ((this.status.buttons[s] = i.pressed), this.O1IO0.gamepadButtonStatus(s, i.pressed));
                            for (s = h = 0, I = this.pad.axes.length - 2; h <= I && !(s / 2 >= this.status.joysticks.length); s = h += 2) {
                                if (((e = -1), (O = this.pad.axes[s]), (m = this.pad.axes[s + 1]), Math.sqrt(O * O + m * m) >= 0.5)) for (e = -Math.atan2(m, O), e = Math.round((e / (180 * THREE.Math.DEG2RAD)) * 180); e < 0; ) e += 360;
                                e !== this.status.joysticks[s / 2] && ((this.status.joysticks[s / 2] = e), this.O1IO0.gamepadJoystickStatus(s / 2, e));
                            }
                        }
                    }),
                    (t.drawButton = function (t, e, i, s, l, n, a) {
                        var o, r, h, u, d;
                        switch ((null == a && (a = !1), (o = 'hsl(' + n + ',20%,20%)'), (r = 'hsla(' + n + ',50%,80%,1)'), t)) {
                            case 'menu':
                                (h = 'Fontawesome'), (u = 1), (l = Math.round(l)), (t = '');
                                break;
                            default:
                                (h = 'Play'), (u = t.length), (l = Math.round(l)), 1 === u && (d = 1.2 * l);
                        }
                        switch (((d = null != d ? d : l), (e.font = d + 'pt ' + h), (e.fillStyle = a ? r : o), u)) {
                            case 1:
                                e.beginPath(), e.arc(i, s, 1.1 * l, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.closePath(), e.fill();
                                break;
                            default:
                                OpenChatButton.roundRect(e, i - 2 * l, s - l, 4 * l, 2 * l, 0.5 * l), e.fill();
                        }
                        return (e.textBaseline = 'middle'), (e.textAlign = 'center'), (e.fillStyle = a ? '#000' : r), e.fillText(t, i, s);
                    }),
                    (t.drawDPad = function (t, e, i, s, l, n, a) {
                        switch ((null == n && (n = null), null == a && (a = '#444'), (t.fillStyle = '#888'), t.beginPath(), OpenChatButton.roundRect(t, e - s / 2, i - (1 * s) / 6, s, s / 3, s / 16), t.fill(), t.beginPath(), OpenChatButton.roundRect(t, e - s / 6, i - s / 2, s / 3, s, s / 16), t.fill(), (t.fillStyle = '#FFF'), l)) {
                            case 'bottom':
                                return t.save(), t.beginPath(), t.rect(e - s / 2, i + s / 6, s, s / 3), t.clip(), OpenChatButton.roundRect(t, e - s / 6, i - s / 2, s / 3, s, s / 16), t.fill(), (t.fillStyle = a), (t.font = Math.round(s / 6) + 'pt FontAwesome'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (n = n || ''), t.fillText(n, e, i + (2 * s) / 6), t.restore();
                            case 'top':
                                return t.save(), t.beginPath(), t.rect(e - s / 2, i - s / 2, s, s / 3), t.clip(), OpenChatButton.roundRect(t, e - s / 6, i - s / 2, s / 3, s, s / 16), t.fill(), (t.fillStyle = a), (t.font = Math.round(s / 6) + 'pt FontAwesome'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), (n = n || ''), t.fillText(n, e, i - (2 * s) / 6), t.restore();
                            case 'leftright':
                                return t.save(), OpenChatButton.roundRect(t, e - s / 2, i - s / 6, s, s / 3, s / 16), t.fill(), (t.fillStyle = '#444'), (t.font = Math.round(s / 6) + 'pt FontAwesome'), (t.textAlign = 'center'), (t.textBaseline = 'middle'), t.fillText('', e - (2 * s) / 6, i), t.fillText('', e + (2 * s) / 6, i), t.restore();
                        }
                    }),
                    t
                );
            })(),
            this.OOOO0 = (function () {
                function t(t, e) {
                    (this.l1110 = t),
                        (this.ship = e),
                        (this.map = { 38: 'up', 40: 'OOlO1', 37: 'left', 39: 'right', 40: 'OOlO1', 32: 'OI00O' }),
                        (this.left = !1),
                        (this.right = !1),
                        (this.endup = 0),
                        (this.control_pressed = !1),
                        (this.inc = 1),
                        (this.last_keyboard_action = 0),
                        (this.last_gamepad_action = 0),
                        (this.pad_status = { up: !1, OI00O: !1, angle: 0, rcs: !1, lb: !1 }),
                        (this.element = this.l1110.display.l1011.domElement),
                        (this.next_wheel_action = 0),
                        document.addEventListener(
                            'mousewheel',
                            (function (t) {
                                return function (e) {
                                    return t.mouseWheel(e);
                                };
                            })(this),
                            !1
                        ),
                        document.addEventListener(
                            'DOMMouseScroll',
                            (function (t) {
                                return function (e) {
                                    return t.mouseWheel(e);
                                };
                            })(this),
                            !1
                        ),
                        (document.onkeydown = (function (t) {
                            return function (e) {
                                var i, s, l;
                                if (((e = e || window.event), (i = e.keyCode), null != t.navigation_listener))
                                    switch (i) {
                                        case 13:
                                            return e.preventDefault(), t.navigation_listener.gamepadNavigation('ok');
                                        case 27:
                                            return e.preventDefault(), t.navigation_listener.gamepadNavigation('cancel');
                                        case 38:
                                            return e.preventDefault(), t.navigation_listener.gamepadNavigation('up');
                                        case 40:
                                            return e.preventDefault(), t.navigation_listener.gamepadNavigation('OOlO1');
                                        case 37:
                                            return e.preventDefault(), t.navigation_listener.gamepadNavigation('left');
                                        case 39:
                                            return e.preventDefault(), t.navigation_listener.gamepadNavigation('right');
                                    }
                                if ((16 === i && null != t.l1110.display.screen.lO100.weapons_bar && t.l1110.display.screen.lO100.weapons_bar.shiftSelection(), 18 === i && (t.alt_pressed = !0), 87 === i && null != t.l1110.display.screen.lO100.weapons_bar && (t.l1110.display.screen.lO100.weapons_bar.toggleStore(), e.preventDefault()), 'KeyA' === e.code && null != t.l1110.mode && t.l1110.mode.options.strafe > 0 && (t.ship.I00O0.strafe_left || ((t.ship.I00O0.strafe_left = !0), t.ship.O1O0O())), 'KeyD' === e.code && null != t.l1110.mode && t.l1110.mode.options.strafe > 0 && (t.ship.I00O0.strafe_right || ((t.ship.I00O0.strafe_right = !0), t.ship.O1O0O())), 'KeyV' === e.code && null != t.l1110.mode && t.l1110.mode.options.release_crystal && (t.ship.I00O0.release_crystal || ((t.ship.I00O0.release_crystal = !0), t.ship.O1O0O())), 122 === i && (t.l1110.is_app || (t.l1110.l00OO.toggleFullScreen(), e.preventDefault())), null != t.map[i])) {
                                    if ((('left' !== t.map[i] && 'right' !== t.map[i]) || (t.last_keyboard_action = Date.now()), e.preventDefault(), ('left' !== t.map[i] && 'right' !== t.map[i]) || t[t.map[i]] || ((t[t.map[i]] = !0), (t.l1110.using_keyboard = 0.2 + 0.8 * t.l1110.using_keyboard), t.OO0Il()), (38 !== i && 32 !== i) || t.ship.I00O0[t.map[i]] || ((t.ship.I00O0[t.map[i]] = !0), t.ship.O1O0O()), 'OOlO1' === t.map[i] && !t[t.map[i]])) return (t[t.map[i]] = !0), (t.ship.I00O0.angle = (t.ship.I00O0.angle + 180) % 360), t.ship.O1O0O(), (s = 0.5 * t.l1110.display.width + 0.25 * t.l1110.display.height * Math.cos((-t.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD))), (l = t.l1110.display.height * (0.5 + 0.25 * Math.sin((-t.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD)))), t.l1110.display.screen.lO100.cursor.set(s, l);
                                } else {
                                    if (17 === i && null != t.l1110.mode && t.l1110.mode.options.rcs_toggle && !t.control_pressed) return (t.control_pressed = !0), t.ship.I00O0.glide ? ((t.ship.I00O0.glide = !1), t.ship.O1O0O()) : ((t.ship.I00O0.glide = !0), t.ship.O1O0O(), (t.glide_pressed_time = Date.now()));
                                    if ((9 === i && (t.alt_pressed = !1), 9 === i && e.shiftKey)) return;
                                    if (13 === i && e.altKey && t.l1110.is_app) return t.l1110.l00OO.toggleFullScreen(), void e.preventDefault();
                                    if (!e.altKey && t.l1110.keyPressed(i)) return e.preventDefault();
                                }
                            };
                        })(this)),
                        (document.onkeyup = (function (t) {
                            return function (e) {
                                var i;
                                if (((e = e || window.event), e.preventDefault(), (i = e.keyCode), 18 === i && t.alt_pressed && null != t.l1110.display.screen.lO100.weapons_bar && (t.l1110.display.screen.lO100.weapons_bar.OI00O(), e.preventDefault()), 'KeyA' === e.code && null != t.l1110.mode && t.l1110.mode.options.strafe > 0 && t.ship.I00O0.strafe_left && ((t.ship.I00O0.strafe_left = !1), t.ship.O1O0O()), 'KeyD' === e.code && null != t.l1110.mode && t.l1110.mode.options.strafe > 0 && t.ship.I00O0.strafe_right && ((t.ship.I00O0.strafe_right = !1), t.ship.O1O0O()), 'KeyV' === e.code && null != t.l1110.mode && t.l1110.mode.options.release_crystal && t.ship.I00O0.release_crystal && ((t.ship.I00O0.release_crystal = !1), t.ship.O1O0O()), null != t.map[i])) {
                                    if (((t[t.map[i]] = !1), t.ship.I00O0[t.map[i]])) return (t.ship.I00O0[t.map[i]] = !1), t.ship.O1O0O();
                                } else if (17 === e.keyCode) {
                                    if (((t.control_pressed = !1), Date.now() > t.glide_pressed_time + 300 && t.ship.I00O0.glide)) return (t.ship.I00O0.glide = !1), t.ship.O1O0O();
                                } else if (t.l1110.keyReleased(i)) return e.preventDefault();
                            };
                        })(this)),
                        (this.l1110.display.screen.control_listener = this),
                        this.element.addEventListener(
                            'mouseout',
                            (function (t) {
                                return function (e) {
                                    return t.doMouseOut(e);
                                };
                            })(this)
                        ),
                        this.element.addEventListener(
                            'oncontextmenu',
                            (function (t) {
                                return function (t) {
                                    return !1;
                                };
                            })()
                        ),
                        (this.l0OOO = null),
                        (this.IllI1 = 0),
                        (this.IOIl0 = 0),
                        (this.OIO0O = 0),
                        (this.first = !1),
                        (this.touchmoved = !1),
                        (this.nextauto = 0);
                }
                return (
                    (t.prototype.setNavigationListener = function (t) {
                        var e;
                        return (e = this.navigation_listener), (this.navigation_listener = null), null != e && e.gamepadNavigation('interrupted'), (this.navigation_listener = t);
                    }),
                    (t.prototype.I1l0O = function (t) {
                        var e, i;
                        for (e = 1, i = t; e <= i; e += 1) this.OO0Il();
                        0 !== this.endup && this.l1110.lIlO0.IO11l.II1O0 >= this.endup && ((this.endup = 0), null === this.l0OOO && this.ship.I00O0.up && ((this.ship.I00O0.up = !1), this.ship.O1O0O()));
                    }),
                    (t.prototype.OO0Il = function () {
                        var t, e;
                        if ((this.l1110.settings.check('gamepad_control') && null == this.gamepad && (this.gamepad = new Gamepad(this)), this.autoPilot(), this.left ? ((this.inc = Math.min(6, this.inc + 0.3)), (this.ship.I00O0.angle = Math.round((this.ship.I00O0.angle + this.inc) % 360)), this.ship.O1O0O(), (t = 0.5 * this.l1110.display.width + 0.25 * this.l1110.display.height * Math.cos((-this.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD))), (e = this.l1110.display.height * (0.5 + 0.25 * Math.sin((-this.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD)))), this.l1110.display.screen.lO100.cursor.set(t, e)) : this.right ? ((this.inc = Math.min(6, this.inc + 0.3)), (this.ship.I00O0.angle = Math.round((this.ship.I00O0.angle + 360 - this.inc) % 360)), this.ship.O1O0O(), (t = 0.5 * this.l1110.display.width + 0.25 * this.l1110.display.height * Math.cos((-this.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD))), (e = this.l1110.display.height * (0.5 + 0.25 * Math.sin((-this.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD)))), this.l1110.display.screen.lO100.cursor.set(t, e)) : (this.inc = Math.max(1, this.inc - 1)), null != this.aim_id && Date.now() > this.aim_time + 200)) return this.aim_x < this.l1110.display.width / 2 ? (this.startJoystick(this.aim_x, this.aim_y, this.aim_id), (this.aim_id = null)) : ((this.OIO0O = this.aim_id), (this.aim_id = null), (this.ship.I00O0.OI00O = !0), this.ship.O1O0O()), this.l1110.display.screen.lO100.cursor.set(-1e4, -1e4);
                    }),
                    (t.prototype.gamepadButtonStatus = function (t, e) {
                        if ((this.l1110.is_app && (this.l1110.using_gamepad = !0), null != this.navigation_listener && e))
                            switch (t) {
                                case 0:
                                    if (this.navigation_listener.gamepadNavigation('ok')) return;
                                    break;
                                case 1:
                                    if (this.navigation_listener.gamepadNavigation('cancel')) return;
                                    break;
                                case 12:
                                    if (this.navigation_listener.gamepadNavigation('up')) return;
                                    break;
                                case 13:
                                    if (this.navigation_listener.gamepadNavigation('OOlO1')) return;
                                    break;
                                case 14:
                                    if (this.navigation_listener.gamepadNavigation('left')) return;
                                    break;
                                case 15:
                                    if (this.navigation_listener.gamepadNavigation('right')) return;
                            }
                        switch (t) {
                            case 0:
                                return (this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), (this.ship.I00O0.OI00O = e), this.ship.O1O0O();
                            case 1:
                                if (e && ((this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), null != this.l1110.display.screen.lO100.weapons_bar)) return this.l1110.display.screen.lO100.weapons_bar.OI00O();
                                break;
                            case 2:
                                if (e && ((this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), null != this.l1110.display.screen.lO100.weapons_bar)) return this.l1110.display.screen.lO100.weapons_bar.toggleStore();
                                break;
                            case 3:
                                if (e && ((this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), null != this.l1110.display.screen.lO100.weapons_bar)) return this.l1110.display.screen.lO100.weapons_bar.shiftSelection();
                                break;
                            case 7:
                                return (this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), (this.ship.I00O0.up = e), this.ship.O1O0O();
                            case 6:
                                return (this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), (this.ship.I00O0.glide = e), this.ship.O1O0O();
                            case 4:
                                if (null != this.l1110.mode && this.l1110.mode.options.strafe > 0) return (this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), (this.ship.I00O0.strafe_left = e), this.ship.O1O0O();
                                if (null != this.l1110.mode && this.l1110.mode.options.release_crystal && !this.ship.I00O0.release_crystal === e) return (this.ship.I00O0.release_crystal = e), this.ship.O1O0O();
                                break;
                            case 5:
                                if (null != this.l1110.mode && this.l1110.mode.options.strafe > 0) return (this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), (this.ship.I00O0.strafe_right = e), this.ship.O1O0O();
                                if (e) return this.l1110.keyPressed(9);
                                break;
                            case 8:
                                if (e) return this.l1110.keyPressed('Z'.charCodeAt(0));
                                break;
                            case 9:
                                if (this.l1110.is_app && e && !this.l1110.display.screen.lO100.hidden) return this.l1110.display.screen.lO100.toggleOptions();
                                break;
                            case 11:
                                if (this.l1110.is_app && e) return this.l1110.display.screen.lO100.chatpanel.gamepadChatClick();
                                break;
                            case 12:
                                if (e) return this.l1110.display.screen.lO100.shipUpgradesNavigation();
                                break;
                            case 13:
                                if (e) return this.l1110.display.screen.lO100.statsUpgradesNavigation();
                        }
                    }),
                    (t.prototype.gamepadJoystickStatus = function (t, e) {
                        var i, s;
                        switch ((this.l1110.is_app && (this.l1110.using_gamepad = !0), t)) {
                            case 0:
                                if (e >= 0) return (this.angle = e), (this.last_keyboard_action = Date.now()), (this.last_gamepad_action = Date.now()), (this.ship.I00O0.angle = this.angle), this.ship.O1O0O(), (i = 0.5 * this.l1110.display.width + 0.35 * this.l1110.display.height * Math.cos((-this.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD))), (s = this.l1110.display.height * (0.5 + 0.35 * Math.sin((-this.ship.I00O0.angle / 180) * (180 * THREE.Math.DEG2RAD)))), this.l1110.display.screen.lO100.cursor.set(i, s);
                                break;
                            case 1:
                                if (this.l1110.is_app) return this.l1110.display.screen.lO100.chatpanel.gamepadChat(e >= 0, e);
                        }
                    }),
                    (t.prototype.mouseDown = function (t, e, i) {
                        if (null == this.navigation_listener || !this.navigation_listener.block_ship_control) return (this.mousepressed = !0), 1 === i.which && ((this.ship.I00O0.OI00O = !0), this.ship.O1O0O()), 2 === i.which && null != this.l1110.display.screen.lO100.weapons_bar && this.l1110.display.screen.lO100.weapons_bar.OI00O(), 3 === i.which && ((this.ship.I00O0.up = !0), this.ship.O1O0O()), !0;
                    }),
                    (t.prototype.mouseMove = function (t, e, i) {
                        if (!(Date.now() < this.last_keyboard_action + 1e3 || Date.now() < this.last_gamepad_action + 1e3 || (this.l1110.display.screen.lO100.cursor.set(t, e), null != this.navigation_listener && this.navigation_listener.block_ship_control))) {
                            for (t -= this.l1110.display.width / 2, e -= this.l1110.display.height / 2, this.angle = -Math.atan2(e, t), this.angle = Math.round((this.angle / (180 * THREE.Math.DEG2RAD)) * 180); this.angle < 0; ) this.angle += 360;
                            return this.angle !== this.ship.I00O0.angle && ((this.l1110.using_keyboard *= 0.9), (this.ship.I00O0.angle = this.angle), this.ship.O1O0O()), !0;
                        }
                    }),
                    (t.prototype.doMouseOut = function (t) {
                        return this.l1110.display.screen.lO100.figures.hideMouse();
                    }),
                    (t.prototype.mouseUp = function (t, e, i) {
                        return 1 === i.which && ((this.ship.I00O0.OI00O = !1), this.ship.O1O0O()), 3 === i.which && ((this.ship.I00O0.up = !1), this.ship.O1O0O()), !0;
                    }),
                    (t.prototype.joystickRatio = function () {
                        return (667 / Math.max(screen.width, screen.height)) * 0.8;
                    }),
                    (t.prototype.joystickRadius = function () {
                        return (this.l1110.display.height / 8) * this.joystickRatio();
                    }),
                    (t.prototype.lIl1I = function (t, e, i) {
                        return (this.touchmoved = !1), this.l1110.display.height, this.joystickRadius(), null === this.l0OOO ? ((this.aim_time = Date.now()), (this.aim_x = t), (this.aim_y = e), (this.aim_id = i), this.l1110.display.screen.lO100.cursor.set(this.aim_x, this.aim_y)) : t < this.l1110.display.width / 2 ? this.startJoystick(t, e, i) : ((this.OIO0O = i), (this.ship.I00O0.OI00O = !0), this.ship.O1O0O()), !0;
                    }),
                    (t.prototype.startJoystick = function (t, e, i) {
                        var s, l, n, a;
                        return (this.auto = !1), (a = this.joystickRadius()), (n = this.l1110.display.height), (s = this.ship.I00O0.angle), (s = (-s * (180 * THREE.Math.DEG2RAD)) / 180), (l = a / 2), (this.l0OOO = i), (this.IllI1 = t - Math.cos(s) * l), (this.IOIl0 = e - Math.sin(s) * l), (this.ship.I00O0.up = !1), this.ship.O1O0O(), this.l1110.display.screen.lO100.arrow.set(s, 0), this.l1110.display.screen.lO100.joystick.set(this.IllI1 / n, this.IOIl0 / n, t / n, e / n), this.l1110.display.screen.lO100.cursor.set(-1e4, -1e4);
                    }),
                    (t.prototype.O110l = function (t, e, i) {
                        var s, l, n, a, o, r, h, u;
                        if (((this.touchmoved = !0), (l = this.l1110.display.height), (n = this.joystickRadius()), this.l0OOO === i)) {
                            for (t -= this.IllI1, e -= this.IOIl0, s = Math.sqrt(t * t + e * e), o = t / s, r = e / s, h = this.IllI1 + Math.min(1.5 * n, s) * o, u = this.IOIl0 + Math.min(1.5 * n, s) * r, this.l1110.display.screen.lO100.joystick.set(this.IllI1 / l, this.IOIl0 / l, h / l, u / l), a = s > this.joystickRadius(), this.angle = -Math.atan2(e, t), this.angle = Math.round((this.angle / (180 * THREE.Math.DEG2RAD)) * 180); this.angle < 0; ) this.angle += 360;
                            this.l1110.display.screen.lO100.arrow.set((-this.angle / 360) * (180 * THREE.Math.DEG2RAD) * 2, s / (l / 8)), (this.angle === this.ship.I00O0.angle && a === this.ship.I00O0.up) || ((this.ship.I00O0.angle = this.angle), (this.ship.I00O0.up = a), this.ship.O1O0O());
                        }
                        return !0;
                    }),
                    (t.prototype.autoPilot = function () {
                        var t, e, i, s;
                        if (((this.nextauto = Math.max(this.nextauto - 1, 0)), this.auto && 0 === this.nextauto)) {
                            if (((this.nextauto = 10), (e = this.lOl00 - this.l1110.lIlO0.Ill00.status.x), (i = this.OIll1 - this.l1110.lIlO0.Ill00.status.y), e < -this.l1110.l0I1I && (e += this.l1110.size), e > this.l1110.l0I1I && (e -= this.l1110.size), i < -this.l1110.l0I1I && (i += this.l1110.size), i > this.l1110.l0I1I && (i -= this.l1110.size), Math.sqrt(e * e + i * i) < 8)) return (this.auto = !1), (this.ship.I00O0.up = !1), this.ship.O1O0O();
                            for (this.angle = Math.atan2(i, e), this.angle = Math.round((this.angle / (180 * THREE.Math.DEG2RAD)) * 180); this.angle < 0; ) this.angle += 360;
                            (t = (this.angle - this.ship.status.angle + 360) % 360), (t = Math.min(t, 360 - t)), (s = t < 10 || this.ship.I00O0.up), (this.angle === this.ship.I00O0.angle && s === this.ship.I00O0.up) || ((this.ship.I00O0.angle = this.angle), (this.ship.I00O0.up = s), this.ship.O1O0O());
                        }
                    }),
                    (t.prototype.lI1O0 = function (t, e, i) {
                        if (this.aim_id === i) {
                            for (this.aim_id = null, this.l1110.display.screen.lO100.cursor.set(this.aim_x, this.aim_y), t = this.aim_x - this.l1110.display.width / 2, e = this.aim_y - this.l1110.display.height / 2, this.angle = -Math.atan2(e, t), this.angle = Math.round((this.angle / (180 * THREE.Math.DEG2RAD)) * 180); this.angle < 0; ) this.angle += 360;
                            if (this.angle !== this.ship.I00O0.angle) return (this.ship.I00O0.angle = this.angle), this.ship.O1O0O();
                        } else {
                            if (this.l0OOO === i) return (this.l0OOO = null), (this.ship.I00O0.up = !1), this.ship.O1O0O(), (this.l1110.display.screen.lO100.joystick.pressed = !1);
                            if (this.OIO0O === i) return (this.OIO0O = null), (this.ship.I00O0.OI00O = !1), this.ship.O1O0O();
                        }
                    }),
                    (t.prototype.mouseWheel = function (t) {
                        if (null != this.l1110.display.screen.lO100.weapons_bar && !(Date.now() < this.next_wheel_action)) return (this.next_wheel_action = Date.now() + 200), t.wheelDelta < 0 || t.detail > 0 ? this.l1110.display.screen.lO100.weapons_bar.selectDown() : this.l1110.display.screen.lO100.weapons_bar.selectUp();
                    }),
                    t
                );
            })(),
            this.StationModules = (function () {
                function t() {
                    (this.modules = []), (this.structures = []), (this.structures_n = []), (this.structures_ns = []), (this.structures_ne = []), (this.structures_nes = []), (this.structures_nesw = []), (this.deposits = []), (this.spawnings = []), (this.types_by_id = {});
                }
                return (
                    (t.prototype.add = function (t) {
                        switch ((this.modules.push(t), (this.types_by_id[t.id] = t), t.type)) {
                            case 'structure':
                                switch ((this.structures.push(t), t.hook)) {
                                    case 'N':
                                        return this.structures_n.push(t);
                                    case 'NE':
                                        return this.structures_ne.push(t);
                                    case 'NS':
                                        return this.structures_ns.push(t);
                                    case 'NES':
                                        return this.structures_nes.push(t);
                                    case 'NESW':
                                        return this.structures_nesw.push(t);
                                    default:
                                        return this.structures_ns.push(t);
                                }
                                break;
                            case 'deposit':
                                return this.deposits.push(t);
                            case 'spawning':
                                return this.spawnings.push(t);
                        }
                    }),
                    (t.prototype.l100l = function () {
                        return this.modules[Math.floor(Math.random() * this.modules.length)];
                    }),
                    (t.prototype.getDeposit = function () {
                        return this.deposits[Math.floor(Math.random() * this.deposits.length)];
                    }),
                    (t.prototype.getSpawning = function () {
                        return this.spawnings[Math.floor(Math.random() * this.spawnings.length)];
                    }),
                    (t.prototype.getStructure = function (t) {
                        switch (t) {
                            case 'N':
                                return this.structures_n[Math.floor(Math.random() * this.structures_n.length)];
                            case 'NS':
                                return this.structures_ns[Math.floor(Math.random() * this.structures_ns.length)];
                            case 'NE':
                                return this.structures_ne[Math.floor(Math.random() * this.structures_ne.length)];
                            case 'NES':
                                return this.structures_nes[Math.floor(Math.random() * this.structures_nes.length)];
                            default:
                                return this.structures_nesw[Math.floor(Math.random() * this.structures_nesw.length)];
                        }
                    }),
                    t
                );
            })(),
            STATION_MODULES = new this.StationModules(),
            STATION_MODULES.add({
                type: 'deposit',
                id: 'd1',
                generate: function (t) {
                    return { type: 'deposit', size: 0.5, tori: { main: { radius: 60, segments: 16, section_segments: 8, offset: { x: 0, y: -40, z: 0 }, position: { x: [0], y: [0], z: [0] }, width: [10], height: [10], texture: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 63, 63, 2] }, main2: { radius: 60, segments: 16, section_segments: 8, offset: { x: 0, y: -70, z: 0 }, position: { x: [0], y: [0], z: [0] }, width: [10], height: [10], texture: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 63, 2, 2, 63, 2] } }, bodies: { hook: { section_segments: 16, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0], y: [-130, -120, -55] }, width: [0, 10, 12], height: [0, 10, 12], texture: [6, 12] }, deposit: { section_segments: [40, 45, 50, 130, 135, 140, 220, 225, 230, 310, 315, 320], offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -100, -90, 70, 85, 85, 0, -10] }, width: [0, 95, 100, 100, 100, 90, 90, 0], height: [0, 45, 50, 50, 50, 40, 30, 0], texture: [1, 4, 2, 4, 63, 10, 12] }, sidewalls: { section_segments: 12, offset: { x: 80, y: -20, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-55, -50, -20, 0, 20, 45, 50] }, width: [0, 15, 15, 10, 10, 5, 0], height: [0, 15, 15, 10, 10, 5, 0], angle: 0, propeller: !1, texture: [4, 4, 10, 4, 63, 4] }, antenna: { vertical: !0, section_segments: [40, 45, 50, 130, 135, 140, 220, 225, 230, 310, 315, 320], offset: { x: 0, y: 90, z: -20 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-50, -45, -20, -19, 20, 21, 30, 60] }, width: [50, 30, 30, 12, 12, 3, 3, 0], height: [50, 30, 30, 12, 12, 3, 3, 0], texture: [3, [15], 4, 16, 63, 6, 10] } } };
                },
            }),
            STATION_MODULES.add({
                type: 'deposit',
                id: 'd2',
                generate: function (t) {
                    var e, i, s, l, n, a;
                    for (a = new OII10(t), 1 + a.lI10l(4), e = { type: 'deposit', size: 0.5, bodies: { hook: { section_segments: 16, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0], y: [-130, -120, -55] }, width: [0, 10, 12], height: [0, 10, 12], texture: [6, 12] }, deposit: { section_segments: [40, 45, 50, 130, 135, 140, 220, 225, 230, 310, 315, 320], offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -100, -90, 70, 85, 85, 0, -10] }, width: [0, 95, 100, 100, 100, 90, 90, 0], height: [0, 45, 50, 50, 50, 40, 30, 0], texture: [1, 4, 1, 4, 63, 1, 12] }, antenna: { vertical: !0, section_segments: [40, 45, 50, 130, 135, 140, 220, 225, 230, 310, 315, 320], offset: { x: 0, y: 90, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-50, -45, -20, -19, 20, 21, 30, 60] }, width: [20, 10, 10, 8, 8, 3, 3, 0], height: [20, 10, 10, 8, 8, 3, 3, 0], texture: [3, 10, 1, 12, 63, 6, 10] }, sidewalls: { section_segments: 12, offset: { x: 80, y: 10, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-55, -50, -20, 0, 20, 45, 50] }, width: [0, 15, 15, 10, 10, 5, 0], height: [0, 15, 15, 10, 10, 5, 0], angle: 0, propeller: !1, texture: [4, 4, 10, 4, 63, 4] } } }, i = l = 0; l <= 40; i = l += 20) for (s = n = -40; n <= 40; s = n += 20) a.lI10l(50), (e.bodies['body' + i + s] = { section_segments: [40, 45, 50, 130, 135, 140, 220, 225, 230, 310, 315, 320], offset: { x: 1.2 * i, y: 1.6 * s - 12, z: 38 }, position: { x: [0, 0, 0, 0, 0], y: [-7, -5, 10, 12] }, width: [0, 8, 8, 0], height: [0, 8, 8, 0], texture: [12, a.next() < 0.3 ? 63 : 1 + a.lI10l(4), 12] });
                    return e;
                },
            }),
            STATION_MODULES.add({
                type: 'spawning',
                id: 'sp1',
                generate: function (t) {
                    var e, i, s, l, n;
                    for (l = new OII10(t), e = 1 + l.lI10l(3), n = { type: 'spawn', rotate: !0, size: 0.5, tori: [], bodies: { sphere: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-160, -150, -100, -85, -70, -50, -20, 20, 50, 70, -50, -50] }, width: [0, 20, 20, 40, 70, 90, 100, 100, 90, 60, 30, 0], height: [0, 20, 20, 40, 70, 90, 100, 100, 90, 60, 30, 0], texture: [6, 1, e, e, e, e, e, e, 1, 11, 12] } }, wings: { sidejoin: { offset: { x: 65, y: 0, z: 65 }, doubleside: !0, length: [100], width: [50, 20], angle: [45], position: [0, 0], texture: [63], bump: { position: 0, size: 30 } }, sidejoin2: { offset: { x: 65, y: 0, z: -65 }, doubleside: !0, length: [100], width: [50, 20], angle: [-45], position: [0, 0], texture: [63], bump: { position: 0, size: 30 } }, sidejoin3: { offset: { x: 90, y: 0, z: 0 }, doubleside: !0, length: [100], width: [50, 20], angle: [0], position: [0, 0], texture: [63], bump: { position: 10, size: 30 } }, topjoin: { offset: { x: 0, y: 0, z: 95 }, doubleside: !0, length: [100], width: [50, 20], angle: [90], position: [0, 0], texture: [63], bump: { position: 10, size: 30 } }, bottomjoin: { offset: { x: 0, y: 0, z: -95 }, doubleside: !0, length: [100], width: [50, 20], angle: [-90], position: [0, 0], texture: [63], bump: { position: 10, size: 30 } } } }, i = s = -4; s <= 0; i = ++s)
                        n.tori['circle' + i] = {
                            radius: 200 + 20 * i,
                            segments: 16,
                            section_segments: 8,
                            offset: { x: 0, y: 25 * i, z: 0 },
                            position: { x: [0], y: [0], z: [0] },
                            width: [15],
                            height: [10],
                            texture: (function () {
                                var t, e;
                                for (e = [], i = t = 0; t <= 16; i = ++t) e.push([l.next() < 0.3 ? 8 : 3]);
                                return e;
                            })(),
                        };
                    return n;
                },
            }),
            STATION_MODULES.add({
                type: 'spawning',
                id: 'sp2',
                generate: function (t) {
                    var e, i, s;
                    return (
                        (s = new OII10(t)),
                        (e = 1 + s.lI10l(3)),
                        {
                            type: 'spawning',
                            rotate: !0,
                            size: 0.5,
                            tori: {
                                main: {
                                    radius: 200,
                                    segments: 42,
                                    section_segments: 8,
                                    offset: { x: 0, y: 0, z: 0 },
                                    position: { x: [0], y: [0], z: [0] },
                                    width: [30],
                                    height: [15],
                                    texture: (function () {
                                        var t, e;
                                        for (e = [], i = t = 0; t <= 42; i = ++t) e.push([i % 7 == 0 ? 10 : 1]);
                                        return e;
                                    })(),
                                },
                            },
                            bodies: { sphere: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-160, -150, -100, -85, -70, -50, -20, 20, 50, 70, -50, -50] }, width: [0, 20, 20, 40, 70, 90, 100, 100, 90, 60, 30, 0], height: [0, 20, 20, 40, 70, 90, 100, 100, 90, 60, 30, 0], texture: [6, 1, e, e, e, e, e, e, 1, 11, 12] } },
                            wings: { topjoin: { offset: { x: 45, y: 0, z: 80 }, doubleside: !0, length: [100], width: [50, 20], angle: [60], position: [0, 0], texture: [63], bump: { position: 0, size: 30 } }, sidejoin: { offset: { x: 90, y: 0, z: 0 }, doubleside: !0, length: [100], width: [50, 20], angle: [0], position: [0, 0], texture: [63], bump: { position: 10, size: 30 } }, bottomjoin: { offset: { x: 45, y: 0, z: -80 }, doubleside: !0, length: [100], width: [50, 20], angle: [-60], position: [0, 0], texture: [63], bump: { position: 0, size: 30 } } },
                        }
                    );
                },
            }),
            STATION_MODULES.add({
                type: 'spawning',
                id: 'sp3',
                generate: function (t) {
                    var e, i, s;
                    return (
                        (s = new OII10(t)),
                        (e = 1 + s.lI10l(4)),
                        {
                            type: 'spawning',
                            rotate: !0,
                            size: 0.5,
                            tori: {
                                main: {
                                    radius: 100,
                                    segments: 12,
                                    section_segments: 8,
                                    offset: { x: 0, y: 0, z: 0 },
                                    position: { x: [0], y: [0], z: [0] },
                                    width: [30],
                                    height: [15],
                                    texture: (function () {
                                        var t, s;
                                        for (s = [], i = t = 0; t <= 20; i = ++t) s.push(i % 2 == 0 ? 10 : e);
                                        return s;
                                    })(),
                                },
                            },
                            bodies: { sphere: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-160, -150, -100, -85, -70, -50, -20, 20, 50, 70, -50, -50] }, width: [0, 30, 30, 40, 70, 90, 100, 100, 90, 60, 30, 0], height: [0, 30, 30, 40, 70, 90, 100, 100, 90, 60, 30, 0], texture: [6, 12, e, e, e, e, e, e, 1, 11, 12] } },
                        }
                    );
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NESW',
                id: 'st1',
                generate: function (t) {
                    var e, i, s, l, n, a;
                    for (
                        n = new OII10(t),
                            i = 1 + n.lI10l(4),
                            e = {
                                type: 'structure',
                                size: 0.5,
                                tori: {
                                    main: {
                                        radius: 80,
                                        segments: 20,
                                        section_segments: 8,
                                        offset: { x: 0, y: 0, z: 0 },
                                        position: { x: [0], y: [0], z: [0] },
                                        width: [20],
                                        height: [10],
                                        texture: (function () {
                                            var t, e;
                                            for (e = [], s = t = 0; t <= 20; s = ++t) e.push([(s - 2) % 5 == 0 ? 10 : i]);
                                            return e;
                                        })(),
                                    },
                                },
                                bodies: [],
                            },
                            s = l = 0;
                        l <= 90;
                        s = l += 90
                    )
                        (a = n.lI10l(40)), (e.bodies['body' + s] = { angle: s, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -55 - a, -40 - a, 40 + a, 55 + a, 120, 130] }, width: [0, 15, 16, 40 + i, 40 + i, 12, 10, 0], height: [0, 15, 16, 40 + i, 40 + i, 12, 10, 0], texture: [6, 12, 10, i, 10, 4, 6] });
                    return e;
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NS',
                id: 'st2',
                generate: function (t) {
                    var e, i, s, l, n, a, o;
                    for (n = new OII10(t), a = n.lI10l(20), i = 1 + n.lI10l(4), o = n.lI10l(20), e = { type: 'structure', rotate: !0, size: 0.5, tori: [], bodies: { main: { section_segments: 16, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -55 - o, -40 - o, 40 + o, 55 + o, 120, 130] }, width: [0, 15, 16, 40, 40, 12, 10, 0], height: [0, 15, 16, 40, 40, 12, 10, 0], texture: [6, 12, 10, 11, 1, 4, 6] } } }, s = l = -4; l <= 4; s = l += 2)
                        e.tori['circle' + s] = {
                            segments: 4 + o,
                            radius: 100 - Math.abs(s * a),
                            section_segments: 8,
                            offset: { x: 0, y: 20 * s, z: 0 },
                            position: { x: [0], y: [0], z: [0] },
                            width: [10],
                            height: [o + 3],
                            texture: (function () {
                                var t, e;
                                for (e = [], s = t = 0; t <= 40; s = ++t) e.push([(s - 2) % 5 == 0 ? 10 : i]);
                                return e;
                            })(),
                        };
                    return e;
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NS',
                id: 'st3',
                generate: function (t) {
                    return { type: 'structure', rotate: 2 * (new OII10(t).next() - 0.5), size: 0.5, bodies: { main: { section_segments: 16, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -75, -60, 60, 75, 120, 130] }, width: [0, 15, 16, 40, 40, 12, 10, 0], height: [0, 15, 16, 40, 40, 12, 10, 0], texture: [6, 12, 10, 11, 1, 4, 6] } } };
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NS',
                id: 'st4',
                generate: function (t) {
                    var e;
                    return {
                        type: 'structure',
                        size: 0.5,
                        tori: {
                            main: {
                                radius: 100,
                                segments: 20,
                                section_segments: 8,
                                offset: { x: 0, y: 0, z: 0 },
                                position: { x: [0], y: [0], z: [0] },
                                width: [20],
                                height: [10],
                                texture: (function () {
                                    var t, i;
                                    for (i = [], e = t = 0; t <= 20; e = ++t) i.push([(e - 2) % 5 == 0 ? 10 : 1]);
                                    return i;
                                })(),
                            },
                        },
                        bodies: { bumpers: { section_segments: [40, 45, 50, 130, 135, 140, 220, 225, 230, 310, 315, 320], offset: { x: 97, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -55, -30, -20, 20, 30, 90, 100] }, width: [0, 12, 2, 20, 20, 2, 2, 0], height: [0, 12, 5, 30, 30, 5, 2, 0], texture: [4, 4, 1, 10, 1, 1, 1] }, main: { section_segments: 15, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-110, -100, -55, -40, 40, 55, 110, 120] }, width: [0, 20, 20, 50, 50, 12, 10, 0], height: [0, 20, 20, 30, 30, 12, 10, 0], texture: [6, 15, 10, 11, 10, 4, 6] } },
                        wings: { topjoin: { offset: { x: 0, y: -3, z: 0 }, doubleside: !0, length: [100], width: [20, 20], angle: [45], position: [0, 0, 0, 50], texture: [1], bump: { position: 10, size: 30 } }, bottomjoin: { offset: { x: 0, y: -3, z: 0 }, doubleside: !0, length: [100], width: [20, 20], angle: [-45], position: [0, 0, 0, 50], texture: [1], bump: { position: -10, size: 30 } } },
                    };
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'N',
                id: 'st5',
                generate: function (t) {
                    var e, i, s;
                    return (
                        (s = new OII10(t)),
                        (e = 1 + s.lI10l(4)),
                        {
                            type: 'structure',
                            size: 0.5,
                            tori: {
                                main: {
                                    radius: 70,
                                    segments: 20,
                                    section_segments: 8,
                                    offset: { x: 0, y: 0, z: 0 },
                                    position: { x: [0], y: [0], z: [0] },
                                    width: [20],
                                    height: [10],
                                    texture: (function () {
                                        var t, s;
                                        for (s = [], i = t = 0; t <= 20; i = ++t) s.push([(i - 2) % 5 == 0 ? 10 : e]);
                                        return s;
                                    })(),
                                },
                            },
                            bodies: { main: { angle: 0, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -55, -40, 40, 55] }, width: [0, 15, 16, 40 + e, 40 + e, 0], height: [0, 15, 16, 40 + e, 40 + e, 0], texture: [6, 12, 10, e, 10, 4, 6] } },
                        }
                    );
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NE',
                id: 'st6',
                generate: function (t) {
                    var e, i;
                    return (i = new OII10(t)), (e = 1 + i.lI10l(4)), { type: 'structure', size: 0.5, bodies: { main: { angle: 0, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -100, -40, 20, 30] }, width: [0, 15, 16, 40, 20, 0], height: [0, 15, 16, 40, 20, 0], texture: [6, 12, 8, e, 10, 4, 6] }, angle: { angle: -90, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -55, -40, 40, 55] }, width: [0, 15, 16, 40, 40, 0], height: [0, 15, 16, 40, 40, 0], texture: [6, 12, 10, e, 10, 4, 6] } } };
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NES',
                id: 'st7',
                generate: function (t) {
                    var e, i;
                    return (i = new OII10(t)), (e = 1 + i.lI10l(4)), { type: 'structure', size: 0.5, bodies: { main: { angle: 0, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -100, -40, 0, 40, 100, 120, 130] }, width: [0, 15, 16, 40, 20, 40, 12, 10, 0], height: [0, 15, 16, 40, 20, 40, 12, 10, 0], texture: [6, 12, 8, e, e, 8, 12, 6] }, angle: { angle: -90, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -55, -40, 40, 55] }, width: [0, 15, 16, 40, 40, 0], height: [0, 15, 16, 40, 40, 0], texture: [6, 12, 10, e, 10, 4, 6] } } };
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'N',
                id: 'st8',
                generate: function (t) {
                    var e, i;
                    return (i = new OII10(t)), (e = 1 + i.lI10l(4)), { type: 'structure', rotate: 30 * (new OII10(t).next() - 0.5), transparent: !0, size: 0.5, bodies: { main: { angle: 0, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -55, -40, 40, 55] }, width: [0, 15, 16, 40 + e, 40 + e, 0], height: [0, 15, 16, 40 + e, 40 + e, 0], texture: [6, 12, 10, e, 10, 4, 6] } }, wings: { topsolarpanel: { noshape: !0, doubleside: !0, offset: { x: 0, y: 0, z: 0 }, length: [60, 60, 60, 60], width: [70, 70, 65, 60, 55], angle: [90, 90, 90, 90, 90], position: [0, 0, 0, 0, 0], texture: [14], bump: { position: 0, size: 5 } }, solarpanels: { noshape: !0, doubleside: !0, offset: { x: 0, y: 0, z: 0 }, length: [60, 60, 60, 60], width: [70, 70, 65, 60, 55], angle: [-30, -30, -30, -30, -30], position: [0, 0, 0, 0, 0], texture: [14], bump: { position: 0, size: 5 } } } };
                },
            }),
            STATION_MODULES.add({
                type: 'structure',
                hook: 'NS',
                id: 'st9',
                generate: function (t) {
                    return { type: 'structure', rotate: 2 * (new OII10(t).next() - 0.5), size: 0.5, bodies: { main: { section_segments: 16, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -120, -75, -70, 70, 75, 120, 130] }, width: [0, 15, 16, 40, 40, 12, 10, 0], height: [0, 15, 16, 40, 40, 12, 10, 0], texture: [6, 12, 10, 11, 1, 4, 6] } }, wings: { topsolarpanel: { noshape: !0, doubleside: !0, offset: { x: 0, y: 0, z: 0 }, length: [60, 60, 60, 60], width: [70, 70, 65, 60, 55], angle: [90, 90, 90, 90, 90], position: [0, 0, 0, 0, 0], texture: [14], bump: { position: 0, size: 5 } }, solarpanels: { noshape: !0, doubleside: !0, offset: { x: 0, y: 0, z: 0 }, length: [60, 60, 60, 60], width: [70, 70, 65, 60, 55], angle: [-30, -30, -30, -30, -30], position: [0, 0, 0, 0, 0], texture: [14], bump: { position: 0, size: 5 } } } };
                },
            }),
            this.StationModel = (function () {
                function e(t, e) {
                    var i, s, l, n, a, o;
                    for (this.team = e, this.phase = t.phase, this.hue = t.hue, this.open = !1, this.I0O1l = 0, this.crystals_max = 10, this.level = 0, this.modules = [], this.Il1I1 = new THREE.Group(), this.last_station_message = 0, this.alive = !0, o = t.modules, i = 0, s = o.length; i < s; i++) (l = o[i]), (n = STATION_MODULES.types_by_id[l.type]), (a = new StationModuleModel(n.generate(l.id + this.hue), this.hue / 360, 'alloy', this)), (a.id = l.id), (a.type = l.type), (a.dir = l.dir), this.modules.push(a), (a.Il1I1.rotation.z = -180 * THREE.Math.DEG2RAD * l.dir * 0.5), (a.Il1I1.position.y = 20 * l.y), (a.Il1I1.position.x = 20 * l.x), a.Il1I1.scale.set(10, 10, 10), this.Il1I1.add(a.Il1I1), 'deposit' === n.type ? a.createCarpet('deposit') : 'spawning' === n.type && a.createCarpet('spawning');
                    this.Il1I1.scale.set(0.5, 0.5, 0.5), (this.bar = new ShieldBar()), this.Il1I1.add(this.bar.l0OlI), (this.last_bar_module_change = 0), (this.bar_module = null);
                }
                return (
                    (e.prototype.setLevel = function (e, i) {
                        if (e > this.level && ((this.level = e), i.mode.team === this.team)) return (this.last_station_message = Date.now()), i.message(t('Station upgraded'), '#8FF');
                    }),
                    (e.prototype.hasDestroyedModule = function () {
                        var t, e, i, s;
                        for (s = this.modules, t = 0, e = s.length; t < e; t++) if (((i = s[t]), !i.alive)) return !0;
                        return !1;
                    }),
                    (e.prototype.setModuleShield = function (t, e, i) {
                        if (t !== this.bar_module) {
                            if (!(Date.now() > this.last_bar_module_change + 1e3)) return;
                            (this.last_bar_module_change = Date.now()), (this.bar_module = t);
                        }
                        return (this.bar.l0OlI.position.x = t.Il1I1.position.x), (this.bar.l0OlI.position.y = t.Il1I1.position.y), this.bar.set(e, i);
                    }),
                    (e.prototype.l1O0l = function (t) {
                        var e, i, s, l, n, a, o;
                        for (o = (0.5 * (10 + 2.5 * this.level)) / 10, this.Il1I1.scale.set(o, o, o), e = !1, a = this.modules, s = 0, l = a.length; s < l; s++) (n = a[s]), (n.Il1I1.visible = n.alive), n.data.rotate && (n.Il1I1.rotation.x += 0.001), n.l1O0l(t), n.updateCarpet(this.level), n.alive && (e = !0);
                        return (this.alive = e), (i = ((-t / 60 / 1200) % 1) * (180 * THREE.Math.DEG2RAD) * 2), (this.Il1I1.rotation.z = i), this.bar.l1O0l(), (this.bar.l0OlI.rotation.z = -i);
                    }),
                    e
                );
            })(),
            this.Carpet = (function () {
                function e(t) {
                    (this.type = t), (this.level = 0), (this.canvas = document.createElement('canvas')), (this.canvas.width = 256), (this.canvas.height = 256), (this.texture = new THREE.Texture(this.canvas)), this.lOll0(), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, map: this.texture, transparent: !0, depthWrite: !1, depthTest: !0, blending: THREE.AdditiveBlending })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(2, 2, 2), (this.l0OlI.rotation.z = (180 * THREE.Math.DEG2RAD) / 2), (this.Il1I1 = new THREE.Group()), this.Il1I1.add(this.l0OlI);
                }
                return (
                    (e.prototype.setLevel = function (t) {
                        if (t !== this.level) return (this.level = t), this.lOll0();
                    }),
                    (e.prototype.lOll0 = function () {
                        var e, i, s, l, n, a, o;
                        if (((e = this.canvas.getContext('2d')), e.clearRect(0, 0, this.canvas.width, this.canvas.height), 'deposit' === this.type)) {
                            for (i = e.createLinearGradient(0, 0, 0, this.canvas.height), i.addColorStop(0, 'hsla(0,60%,60%,0)'), i.addColorStop(0.1, 'hsla(0,60%,60%,.2)'), i.addColorStop(1, 'hsla(0,60%,60%,0)'), e.fillStyle = i, e.beginPath(), e.moveTo(0.2 * this.canvas.width, 0), e.lineTo(0.8 * this.canvas.width, 0), e.lineTo(this.canvas.width, this.canvas.height), e.lineTo(0, this.canvas.height), e.closePath(), e.fill(), e.fillStyle = 'hsla(0,60%,60%,1)', e.font = '30pt Play', e.textAlign = 'center', e.textBaseline = 'middle', e.fillText('Lv' + (this.level + 3), this.canvas.width / 2, this.canvas.height / 2), e.font = '14pt Play', e.fillText(t('DEPOT'), this.canvas.width / 2, this.canvas.height / 8), e.fillRect(0.25 * this.canvas.width, this.canvas.height / 6, 0.5 * this.canvas.width, 4), e.font = '20pt FontAwesome', e.fillText('', this.canvas.width / 4, this.canvas.height / 2), e.fillText('', 0.75 * this.canvas.width, this.canvas.height / 2), e.fillText('', 0.35 * this.canvas.width, this.canvas.height / 4), e.fillText('', 0.5 * this.canvas.width, this.canvas.height / 4), e.fillText('', 0.65 * this.canvas.width, this.canvas.height / 4), e.fillStyle = 'rgba(0,0,0,.5)', s = l = 0, a = this.canvas.height - 1; l <= a; s = l += 2) e.fillRect(0, s, this.canvas.width, 1);
                            return (this.texture.needsUpdate = !0);
                        }
                        for (i = e.createLinearGradient(0, 0, 0, this.canvas.height), i.addColorStop(0, 'hsla(180,60%,60%,0)'), i.addColorStop(0.1, 'hsla(180,60%,60%,.2)'), i.addColorStop(1, 'hsla(180,60%,60%,0)'), e.fillStyle = i, e.beginPath(), e.moveTo(0.2 * this.canvas.width, 0), e.lineTo(0.8 * this.canvas.width, 0), e.lineTo(this.canvas.width, this.canvas.height), e.lineTo(0, this.canvas.height), e.closePath(), e.fill(), e.fillStyle = 'hsla(180,60%,60%,1)', e.font = '30pt Play', e.textAlign = 'center', e.textBaseline = 'middle', e.fillText('Lv' + (this.level + 3), this.canvas.width / 2, this.canvas.height / 2), e.font = '14pt Play', e.fillText(t('TAKE OFF'), this.canvas.width / 2, this.canvas.height / 8), e.fillRect(0.25 * this.canvas.width, this.canvas.height / 6, 0.5 * this.canvas.width, 4), e.fillText(t('KEEP CLEAR'), this.canvas.width / 2, 0.875 * this.canvas.height), e.font = '20pt FontAwesome', e.fillText('', this.canvas.width / 4, this.canvas.height / 2), e.fillText('', 0.75 * this.canvas.width, this.canvas.height / 2), e.fillText('', 0.35 * this.canvas.width, this.canvas.height / 4), e.fillText('', 0.5 * this.canvas.width, this.canvas.height / 4), e.fillText('', 0.65 * this.canvas.width, this.canvas.height / 4), e.fillStyle = 'rgba(0,0,0,.5)', s = n = 0, o = this.canvas.height - 1; n <= o; s = n += 2) e.fillRect(0, s, this.canvas.width, 1);
                        return (this.texture.needsUpdate = !0);
                    }),
                    e
                );
            })(),
            this.ShieldBar = (function () {
                function t() {
                    (this.name = ''), (this.shield = 0), (this.shield_max = 1), (this.canvas = document.createElement('canvas')), (this.canvas.width = 256), (this.canvas.height = 64), (this.texture = new THREE.Texture(this.canvas)), (this.O1III = new THREE.PlaneGeometry(1, 1)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, map: this.texture, transparent: !0, depthWrite: !1, depthTest: !1 })), (this.l0OlI = new THREE.Mesh(this.O1III, this.material)), this.l0OlI.scale.set(24, 6, 3), this.l0OlI.position.set(0, 0, 2), (this.last_update = 0), (this.l0OlI.visible = !1);
                }
                return (
                    (t.prototype.l1O0l = function () {
                        if (this.l0OlI.visible && Date.now() > this.last_update + 5e3) return (this.l0OlI.visible = !1);
                    }),
                    (t.prototype.set = function (t, e) {
                        if (((this.shield = t), (this.shield_max = e), Date.now() > this.last_update + 500)) return (this.last_update = Date.now()), this.lOll0(), (this.l0OlI.visible = !0);
                    }),
                    (t.prototype.lOll0 = function (t) {
                        var e, i, s, l, n, a;
                        return (e = this.shield / this.shield_max), (this.color = e > 0.5 ? 'hsl(180,' + Math.round(2 * (e - 0.5) * 100) + '%,75%)' : 'hsl(0,' + Math.round(2 * (0.5 - e) * 100) + '%,75%)'), (i = this.canvas.getContext('2d')), i.clearRect(0, 0, this.canvas.width, this.canvas.height), (i.fillStyle = 'rgba(0,0,0,.5)'), i.fillRect(0, 0, this.canvas.width, this.canvas.height), (a = this.canvas.width), (s = this.canvas.height), (n = this.canvas.height / 8), (i.strokeStyle = this.color), (i.fillStyle = this.color), i.strokeRect(n, s / 2 + n, a - 2 * n, s / 2 - 2 * n), (l = a - 2 * n - 4), i.fillRect(n + 2, s / 2 + n + 2, l * e, s / 2 - 2 * n - 4), (i.textAlign = 'left'), (i.textBaseline = 'middle'), (i.font = '16pt Play'), i.fillText(this.shield, n, s / 4), (i.textAlign = 'right'), i.fillText(this.shield_max, a - n, s / 4), (this.texture.needsUpdate = !0);
                    }),
                    t
                );
            })(),
            extend = function (t, e) {
                function i() {
                    this.constructor = t;
                }
                for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
                return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
            },
            hasProp = {}.hasOwnProperty,
            this.StationModuleModel = (function (e) {
                function i(t, e, s, l) {
                    (this.station = l), i.IO0OI.constructor.call(this, t, e, s), (this.alive = !0), (this.shield = 1);
                }
                return (
                    extend(i, e),
                    (i.prototype.setAlive = function (e, i) {
                        if (this.alive !== e && ((this.alive = e), i.mode.team === this.station.team)) return (this.station.last_station_message = Date.now()), this.alive ? i.message(t('Station module repaired'), '#8FF') : i.message(t('Station module destroyed'), '#F88');
                    }),
                    (i.prototype.createCarpet = function (t) {
                        if (null == this.carpet) return (this.carpet = new Carpet(t)), this.Il1I1.add(this.carpet.Il1I1), this.carpet.l0OlI.position.set(2, 0, -1);
                    }),
                    (i.prototype.l1O0l = function (t) {
                        var e, s, l, n;
                        if ((i.IO0OI.l1O0l.call(this, t), null != this.material)) return (s = Math.floor(255 * Math.max(0.15, this.shield))), this.material.color.set((s << 16) + (s << 8) + s), (n = Math.floor((128 * s) / 255)), (l = Math.floor((96 * s) / 255)), (e = Math.floor((80 * s) / 255)), this.material.specular.set((n << 16) + (l << 8) + e);
                    }),
                    (i.prototype.updateCarpet = function (t) {
                        if (null != this.carpet) return (this.carpet.material.opacity = Math.pow(Math.random(), 0.2)), this.carpet.setLevel(t), (this.carpet.Il1I1.rotation.x = -this.Il1I1.rotation.x);
                    }),
                    (i.prototype.setShield = function (e, i) {
                        if (this.shield !== e) {
                            if (!(e < 0.99 * this.shield && i.mode.team === this.station.team)) return (this.shield = e);
                            if (((this.shield = e), i.mode.attackWarning(), Date.now() > this.station.last_station_message + 1e4)) return (this.station.last_station_message = Date.now()), i.message(t('Station is under attack'), '#F88');
                        }
                    }),
                    (i.prototype.I110l = function (t, e) {
                        var i, s, l, n;
                        return null == t && (t = 128), null == e && (e = 16777215), (n = new THREE.Scene()), (i = new THREE.OrthographicCamera(0, t, 0, t, 1, 3e3)), this.material.emissive.setHex(e), (this.material.map = l1IIl), (this.material.emissiveMap = l1IIl), (this.material.side = THREE.DoubleSide), this.material.color.setHex(0), (this.OO001.opacity = 0), n.add(this.Il1I1), this.Il1I1.position.set(t / 2, t / 2, -1e3), (l = (0.5 * t) / 3), this.Il1I1.scale.set(l, -l, l), (this.Il1I1.rotation.z = (180 * THREE.Math.DEG2RAD) / 2), lIl1O.l1011 || (lIl1O.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), lIl1O.l1011.setSize(t, t), lIl1O.l1011.render(n, i), (s = document.createElement('canvas')), (s.width = t), (s.height = t), s.getContext('2d').drawImage(lIl1O.l1011.domElement, 0, 0), s;
                    }),
                    (i.images_buffer = []),
                    (i.getModuleImage = function (t) {
                        return null == i.images_buffer[t.id] && (i.images_buffer[t.id] = new i(t.generate(0)).I110l()), i.images_buffer[t.id];
                    }),
                    (i.getModuleImageColorized = function (t, e) {
                        var s;
                        return null == i.images_buffer[t.id + e] && ((s = new i(t.generate(0)).I110l(128, e)), (i.images_buffer[t.id + e] = s)), i.images_buffer[t.id + e];
                    }),
                    i
                );
            })(this.lIl1O),
            this.StationGrid = (function () {
                function t(t, e, i) {
                    (this.ends = t), (this.modules = e), (this.size = null != i ? i : 2 * Math.floor(Math.sqrt(this.modules))), (this.types = []), (this.types[0] = { type: 'NS', dir: 0 }), (this.types[1] = { type: 'N', dir: 0 }), (this.types[2] = { type: 'N', dir: 1 }), (this.types[3] = { type: 'NE', dir: 0 }), (this.types[4] = { type: 'N', dir: 2 }), (this.types[5] = { type: 'NS', dir: 0 }), (this.types[6] = { type: 'NE', dir: 1 }), (this.types[7] = { type: 'NES', dir: 0 }), (this.types[8] = { type: 'N', dir: 3 }), (this.types[9] = { type: 'NE', dir: 3 }), (this.types[10] = { type: 'NS', dir: 1 }), (this.types[11] = { type: 'NES', dir: 3 }), (this.types[12] = { type: 'NE', dir: 2 }), (this.types[13] = { type: 'NES', dir: 2 }), (this.types[14] = { type: 'NES', dir: 1 }), (this.types[15] = { type: 'NESW', dir: 0 });
                }
                return (
                    (t.prototype.lO1I1 = function () {
                        var t, e, i, s, l;
                        for (
                            this.ends = Math.max(2, this.ends),
                                this.grid = function () {
                                    var i, s, l;
                                    for (l = [], t = i = 0, s = this.size - 1; i <= s; t = i += 1)
                                        l.push(
                                            function () {
                                                var t, i, s;
                                                for (s = [], e = t = 0, i = this.size - 1; t <= i; e = t += 1) s.push(0);
                                                return s;
                                            }.call(this)
                                        );
                                    return l;
                                }.call(this),
                                this.points = [],
                                0,
                                this.x = Math.floor(this.size / 2),
                                this.y = Math.floor(this.size / 2),
                                this.dir = Math.floor(4 * Math.random()),
                                this.IOII0 = 0,
                                this.mark(this.x, this.y),
                                this.l0Ill(),
                                i = 2;
                            ;

                        ) {
                            if (this.IOII0 >= this.modules || 0 === this.points.length) break;
                            (s = this.points[Math.floor(this.points.length * Math.random())]), (l = this.type(s.x, s.y).type), 'N' === l && this.IOII0 < this.modules - (this.ends - i) ? ((this.x = s.x), (this.y = s.y), this.l0Ill() || this.points.splice(this.points.indexOf(s), 1)) : ('NS' === l || 'NE' === l) && i < this.ends ? ((this.x = s.x), (this.y = s.y), this.l0Ill() ? i++ : this.points.splice(this.points.indexOf(s), 1)) : this.points.splice(this.points.indexOf(s), 1);
                        }
                        return i === this.ends && this.IOII0 === this.modules;
                    }),
                    (t.prototype.O1lI1 = function () {}),
                    (t.prototype.isClear = function (t, e) {
                        return t < 0 || e < 0 || t >= this.size || e >= this.size || 0 === this.grid[e][t];
                    }),
                    (t.prototype.get = function (t, e) {
                        return t < 0 || e < 0 || t >= this.size || e >= this.size ? 0 : this.grid[e][t];
                    }),
                    (t.prototype.type = function (t, e) {
                        var i;
                        return (i = 0), this.isClear(t, e - 1) || (i |= 1), this.isClear(t, e + 1) || (i |= 4), this.isClear(t - 1, e) || (i |= 8), this.isClear(t + 1, e) || (i |= 2), this.types[i];
                    }),
                    (t.prototype.isDirClear = function (t, e, i) {
                        switch (i) {
                            case 0:
                                return e > 0 && this.isClear(t, e - 1) && this.isClear(t - 1, e - 1) && this.isClear(t + 1, e - 1) && this.isClear(t, e - 2) && this.isClear(t - 1, e - 2) && this.isClear(t + 1, e - 2);
                            case 2:
                                return e < this.size - 1 && this.isClear(t, e + 1) && this.isClear(t - 1, e + 1) && this.isClear(t + 1, e + 1) && this.isClear(t, e + 2) && this.isClear(t - 1, e + 2) && this.isClear(t + 1, e + 2);
                            case 1:
                                return t < this.size - 1 && this.isClear(t + 1, e) && this.isClear(t + 1, e - 1) && this.isClear(t + 1, e + 1) && this.isClear(t + 2, e) && this.isClear(t + 2, e - 1) && this.isClear(t + 2, e + 1);
                            default:
                                return t > 0 && this.isClear(t - 1, e) && this.isClear(t - 1, e - 1) && this.isClear(t - 1, e + 1) && this.isClear(t - 2, e) && this.isClear(t - 2, e - 1) && this.isClear(t - 2, e + 1);
                        }
                    }),
                    (t.prototype.mark = function (t, e) {
                        return (this.grid[e][t] = 1), this.points.push({ x: t, y: e }), this.IOII0++;
                    }),
                    (t.prototype.l0Ill = function () {
                        var t, e, i;
                        if (((i = Math.random()), !this.isDirClear(this.x, this.y, this.dir))) {
                            for (t = i < 0.5 ? 1 : 3, e = 0; e <= 2 && ((this.dir = (this.dir + t) % 4), !this.isDirClear(this.x, this.y, this.dir)); e += 1);
                            i = 1;
                        }
                        if ((i < 0.2 && this.isDirClear(this.x, this.y, (this.dir + 1) % 4) ? (this.dir = (this.dir + 1) % 4) : i < 0.4 && this.isDirClear(this.x, this.y, (this.dir + 3) % 4) && (this.dir = (this.dir + 3) % 4), this.isDirClear(this.x, this.y, this.dir))) {
                            switch (this.dir) {
                                case 2:
                                    (this.y += 1), this.mark(this.x, this.y);
                                    break;
                                case 0:
                                    (this.y -= 1), this.mark(this.x, this.y);
                                    break;
                                case 1:
                                    (this.x += 1), this.mark(this.x, this.y);
                                    break;
                                case 3:
                                    (this.x -= 1), this.mark(this.x, this.y);
                            }
                            return !0;
                        }
                        return !1;
                    }),
                    (t.prototype.lOO11 = function () {
                        var t, e, i, s, l, n, a, o;
                        for (t = document.createElement('canvas'), t.width = 1024, t.height = 1024, e = t.getContext('2d'), e.scale(1024 / this.size, 1024 / this.size), i = l = 0, a = this.size - 1; 0 <= a ? l <= a : l >= a; i = 0 <= a ? ++l : --l) for (s = n = 0, o = this.size - 1; 0 <= o ? n <= o : n >= o; s = 0 <= o ? ++n : --n) 0 !== this.grid[s][i] && ((e.fillStyle = '#000'), e.fillRect(i, s, 1, 1));
                        return t;
                    }),
                    t
                );
            })(),
            this.Weapons = (function () {
                function t(t) {
                    (this.l1110 = t), (this.weapons = []), (this.next_shot_time = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), (this.credits = 0);
                }
                return (
                    (t.prototype.read = function (t) {
                        var e, i, s, l, n, a, o, r, h;
                        for (o = this.weapons.length, this.weapons = [], this.credits = t.getUint32(1, !0), l = 5; l < t.byteLength; ) (i = t.getUint8(l++)), (e = t.getUint8(l++)), (a = t.getUint8(l++)), this.weapons.push({ code: i, type: WEAPON_TYPES.types_by_code[i], ammo: e, next_shot: this.l1110.lIlO0.IO11l.II1O0 + a });
                        for (this.signature = '', r = this.weapons, s = 0, n = r.length; s < n; s++) (h = r[s]), (this.signature += h.code + '-' + h.ammo + ':');
                        this.weapons.length > o && this.l1110.l0I11.beep();
                    }),
                    t
                );
            })(),
            extend = function (t, e) {
                function i() {
                    this.constructor = t;
                }
                for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
                return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
            },
            hasProp = {}.hasOwnProperty,
            this.Pod = (function () {
                function t(t, e, i, s) {
                    (this.l1110 = t), (this.ship = e), (this.pods = i), (this.pod_type_id = s), (this.x = this.ship.status.x), (this.y = this.ship.status.y), (this.z = 0), (this.r = this.ship.status.r), (this.lIl10 = 0), (this.lllOl = 0), (this.II110 = 0), (this.Il0II = 0), (this.last_visible = !0);
                }
                return (
                    (t.prototype.l0Ill = function (t, e, i) {
                        return this.x < this.ship.status.x - this.l1110.l0I1I ? (this.x += this.l1110.size) : this.x > this.ship.status.x + this.l1110.l0I1I && (this.x -= this.l1110.size), this.y < this.ship.status.y - this.l1110.l0I1I ? (this.y += this.l1110.size) : this.y > this.ship.status.y + this.l1110.l0I1I && (this.y -= this.l1110.size), this.physicsStep(t, e, i);
                    }),
                    (t.prototype.dispose = function () {
                        if (this.added) return this.l1110.lIlO0.lIlO0.remove(this.l0OlI), this.l0OlI.geometry.dispose(), this.l0OlI.material.dispose();
                    }),
                    (t.prototype.updateModel = function (t) {
                        return this.added || ((this.added = !0), this.l1110.lIlO0.lIlO0.add(this.l0OlI)), t && !this.last_visible && ((this.x = this.ship.status.x), (this.y = this.ship.status.y), (this.z = 0), (this.lllOl = 0), (this.II110 = 0), (this.Il0II = 0)), (this.l0OlI.rotation.x = this.ship.ll010), (this.l0OlI.rotation.y = 0.4 * this.ship.OOIlI), (this.l0OlI.rotation.z = this.r + 180 * THREE.Math.DEG2RAD), (this.l0OlI.position.x = this.x), (this.l0OlI.position.y = this.y), (this.l0OlI.position.z = this.z), (this.l0OlI.visible = t), (this.last_visible = t);
                    }),
                    (t.prototype.Ill0l = function () {
                        return this.l1110.lIlO0.IO11l.Ill0l(this.l0OlI);
                    }),
                    t
                );
            })(),
            this.MiningPod = (function (t) {
                function e(t, i, s) {
                    e.IO0OI.constructor.call(this, t, i, s, 0), (this.l0OlI = this.ship.pods.getModelInstance('MINING_POD_MODEL'));
                }
                return (
                    extend(e, t),
                    (e.prototype.physicsStep = function (t, e, i) {
                        var s;
                        return (s = this.ship.type.radius), this.ship.status.guided && (s = 0), this.l1110.lIlO0.IO11l.weapon_physics.miningPodStep(this, e, this.pods.mining_pods.length, s, t, i);
                    }),
                    e
                );
            })(Pod),
            this.AttackPod = (function (t) {
                function e(t, i, s) {
                    e.IO0OI.constructor.call(this, t, i, s, 1), (this.l0OlI = this.ship.pods.getModelInstance('ATTACK_POD_MODEL'));
                }
                return (
                    extend(e, t),
                    (e.prototype.physicsStep = function (t, e, i) {
                        var s;
                        return (s = this.ship.type.radius), this.ship.status.guided && (s = 0), this.l1110.lIlO0.IO11l.weapon_physics.attackPodStep(this, e, this.pods.attack_pods.length, s, t, i);
                    }),
                    e
                );
            })(Pod),
            this.DefencePod = (function (t) {
                function e(t, i, s) {
                    e.IO0OI.constructor.call(this, t, i, s, 2), (this.l0OlI = this.ship.pods.getModelInstance('DEFENCE_POD_MODEL'));
                }
                return (
                    extend(e, t),
                    (e.prototype.physicsStep = function (t, e, i) {
                        var s;
                        return (s = this.ship.type.radius), this.ship.status.guided && (s = 0), this.l1110.lIlO0.IO11l.weapon_physics.defencePodStep(this, e, this.pods.defence_pods.length, s, t, i);
                    }),
                    e
                );
            })(Pod),
            this.Pods = (function () {
                function t(t, e) {
                    (this.l1110 = t), (this.Ill00 = e), (this.mining_pods = []), (this.attack_pods = []), (this.defence_pods = []), (this.target = null), (this.models = {});
                }
                return (
                    (t.prototype.getModelInstance = function (t) {
                        var e, i, s;
                        return null == this.models[t] && ((i = 'zinc'), this.Ill00 === this.l1110.Ill00 ? this.l1110.l1OI0.Il1lI() && (i = this.l1110.l1OI0.custom.finish) : null != (e = this.l1110.names.getCustom(this.Ill00.status.id)) && null != e.finish && (i = e.finish), (this.models[t] = new WeaponModel(WeaponModel[t], this.Ill00.status.hue / 360, i))), (s = this.models[t].getInstance()), (s.scale.x = 0.6 * this.models[t].data.size * 2), (s.scale.y = 0.6 * this.models[t].data.size * 2), (s.scale.z = 0.6 * this.models[t].data.size * 2), s;
                    }),
                    (t.prototype.setMiningNum = function (t) {
                        for (; this.mining_pods.length > t; ) this.mining_pods[0].dispose(), this.mining_pods.splice(0, 1);
                        for (; this.mining_pods.length < t; ) this.mining_pods.push(new MiningPod(this.l1110, this.Ill00, this));
                    }),
                    (t.prototype.setAttackNum = function (t) {
                        for (; this.attack_pods.length > t; ) this.attack_pods[0].dispose(), this.attack_pods.splice(0, 1);
                        for (; this.attack_pods.length < t; ) this.attack_pods.push(new AttackPod(this.l1110, this.Ill00, this));
                    }),
                    (t.prototype.setDefenceNum = function (t) {
                        for (; this.defence_pods.length > t; ) this.defence_pods[0].dispose(), this.defence_pods.splice(0, 1);
                        for (; this.defence_pods.length < t; ) this.defence_pods.push(new DefencePod(this.l1110, this.Ill00, this));
                    }),
                    (t.prototype.l0Ill = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d;
                        for (h = this.mining_pods, e = i = 0, n = h.length; i < n; e = ++i) (r = h[e]), r.l0Ill(t, e, this.target);
                        for (u = this.attack_pods, e = s = 0, a = u.length; s < a; e = ++s) (r = u[e]), r.l0Ill(t, e, this.target);
                        for (d = this.defence_pods, e = l = 0, o = d.length; l < o; e = ++l) (r = d[e]), r.l0Ill(t, e, this.target);
                    }),
                    (t.prototype.remove = function (t, e) {
                        switch (t) {
                            case 0:
                                return this.removeMiningPod(e);
                            case 1:
                                return this.removeAttackPod(e);
                            case 2:
                                return this.removeDefencePod(e);
                        }
                    }),
                    (t.prototype.removeMiningPod = function (t) {
                        if (t < this.mining_pods.length) return this.mining_pods[t].dispose(), this.mining_pods.splice(t, 1);
                    }),
                    (t.prototype.removeAttackPod = function (t) {
                        if (t < this.attack_pods.length) return this.attack_pods[t].dispose(), this.attack_pods.splice(t, 1);
                    }),
                    (t.prototype.removeDefencePod = function (t) {
                        if (t < this.defence_pods.length) return this.defence_pods[t].dispose(), this.defence_pods.splice(t, 1);
                    }),
                    (t.prototype.updateModels = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d;
                        for (h = this.mining_pods, e = i = 0, n = h.length; i < n; e = ++i) (r = h[e]), r.updateModel(t);
                        for (u = this.attack_pods, e = s = 0, a = u.length; s < a; e = ++s) (r = u[e]), r.updateModel(t);
                        for (d = this.defence_pods, e = l = 0, o = d.length; l < o; e = ++l) (r = d[e]), r.updateModel(t);
                    }),
                    (t.prototype.fixPositions = function () {
                        var t, e, i, s, l, n, a, o, r, h, u;
                        for (r = this.mining_pods, t = e = 0, l = r.length; e < l; t = ++e) (o = r[t]), o.Ill0l();
                        for (h = this.attack_pods, t = i = 0, n = h.length; i < n; t = ++i) (o = h[t]), o.Ill0l();
                        for (u = this.defence_pods, t = s = 0, a = u.length; s < a; t = ++s) (o = u[t]), o.Ill0l();
                    }),
                    t
                );
            })(),
            this.Mine = (function () {
                function t(t, e) {
                    (this.l1110 = t), (this.typeid = e.getUint8(1)), (this.id = e.getUint16(2, !0)), (this.shipid = e.getUint16(4, !0)), (this.IO11l = this.l1110.lIlO0.IO11l), (this.type = WEAPON_TYPES.types_by_code[this.typeid]), (this.speed = 0.004 * this.type.speed), (this.IlII0 = Math.exp((Math.log(0.5) * this.type.IlII0) / 3e3)), this.read(e), this.l1O0l(e), this.createModel(), (this.pop = 0), (this.killed = !1);
                }
                return (
                    (t.prototype.l1O0l = function (t) {
                        var e, i, s;
                        if ((s = t.getUint32(6, !0)) > this.IO11l.II1O0) this.I0l1l = t;
                        else if (s < this.IO11l.II1O0) {
                            if ((this.read(t), this.IO11l.II1O0 - s < 30)) for (e = s + 1, i = this.IO11l.II1O0; e <= i; e += 1) this.l0Ill();
                        } else this.read(t);
                    }),
                    (t.prototype.read = function (t) {
                        return (this.x = t.getFloat32(10, !0)), (this.y = t.getFloat32(14, !0)), (this.lllOl = t.getFloat32(18, !0)), (this.II110 = t.getFloat32(22, !0)), (this.hue = Math.floor((360 * t.getUint8(26)) / 256)), this.l1110.mode.anonymous_ships && this.shipid !== this.l1110.lIlO0.Ill00.status.id && (this.hue = (this.l1110.hue + 180) % 360), (this.last_update = this.IO11l.II1O0);
                    }),
                    (t.prototype.createModel = function () {
                        var t, e, i;
                        return (e = 'zinc'), this.shipid === this.l1110.Ill00.status.id ? this.l1110.l1OI0.Il1lI() && (e = this.l1110.l1OI0.custom.finish) : null != (t = this.l1110.names.getCustom(this.shipid)) && null != t.finish && (e = t.finish), (i = this.type.model), (this.model = new lIl1O(WeaponModel[i], this.hue / 360, e)), (this.model.OOl01 = 0), this.l1110.lIlO0.lIlO0.add(this.model.Il1I1), (this.Il1I1 = this.model.Il1I1);
                    }),
                    (t.prototype.l0Ill = function () {
                        if ((null != this.I0l1l && this.IO11l.II1O0 >= this.I0l1l.getUint32(6, !0) && (this.read(this.I0l1l), (this.I0l1l = null)), this.l1110.lIlO0.IO11l.weapon_physics.mineStep(this), this.IO11l.II1O0 > this.last_update + 90)) return (this.killed = !0);
                    }),
                    (t.prototype.dispose = function () {
                        if (null != this.model) return this.l1110.lIlO0.lIlO0.remove(this.model.Il1I1), this.model.dispose();
                    }),
                    (t.prototype.updateModel = function () {
                        var t, e, i, s, l, n;
                        return (l = 2 * this.model.data.size), this.pop < 30 ? (this.pop++, (s = Math.sqrt(this.pop / 30) * l), this.Il1I1.scale.set(s, s, s)) : this.Il1I1.scale.set(l, l, l), this.IO11l.II1O0 % 30 < 15 ? this.model.material.emissive.set(O0l1l.hsvToRgbHex(this.model.hue, 0.5, 1)) : this.model.material.emissive.set(0), (n = (this.IO11l.II1O0 / 60) * 1e3), (t = 4 * (((137 * this.id) % 100) + 2e3)), (e = 4 * ((this.id % 100) + 2190)), (i = 4 * (((993 * this.id) % 100) + 2410)), (this.Il1I1.rotation.z = 0.25 * Math.sin(((n % t) / t) * (180 * THREE.Math.DEG2RAD) * 2)), (this.Il1I1.rotation.x = 0.25 * Math.sin(((n % e) / e) * (180 * THREE.Math.DEG2RAD) * 2)), (this.Il1I1.rotation.y = 0.25 * Math.sin(((n % i) / i) * (180 * THREE.Math.DEG2RAD) * 2)), (this.Il1I1.position.x = this.x), (this.Il1I1.position.y = this.y), (this.Il1I1.position.z = -this.type.radius), (this.Il1I1.visible = !0), this.IO11l.Ill0l(this.Il1I1);
                    }),
                    t
                );
            })(),
            this.Rocket = (function () {
                function t(t, e) {
                    (this.l1110 = t), (this.typeid = e.getUint8(1)), (this.id = e.getUint16(2, !0)), (this.shipid = e.getUint16(4, !0)), (this.IO11l = this.l1110.lIlO0.IO11l), (this.type = WEAPON_TYPES.types_by_code[this.typeid]), (this.speed = 0.004 * this.type.speed), null != this.l1110.mode.options.projectile_speed && (this.speed *= this.l1110.mode.options.projectile_speed), (this.IlII0 = Math.exp((Math.log(0.5) * this.type.IlII0) / 3e3)), this.read(e), this.l1O0l(e), this.createModel(), (this.pop = 0), (this.killed = !1);
                }
                return (
                    (t.prototype.l1O0l = function (t) {
                        var e, i, s;
                        if ((s = t.getUint32(6, !0)) > this.IO11l.II1O0) this.I0l1l = t;
                        else if (s < this.IO11l.II1O0) {
                            if ((this.read(t), this.IO11l.II1O0 - s < 30)) for (e = s + 1, i = this.IO11l.II1O0; e <= i; e += 1) this.l0Ill();
                        } else this.read(t);
                    }),
                    (t.prototype.read = function (t) {
                        return (this.x = t.getFloat32(10, !0)), (this.y = t.getFloat32(14, !0)), (this.lllOl = t.getFloat32(18, !0)), (this.II110 = t.getFloat32(22, !0)), (this.r = t.getFloat32(26, !0)), (this.target_r = t.getFloat32(30, !0)), (this.hue = Math.floor((360 * t.getUint8(34)) / 256)), this.l1110.mode.anonymous_ships && this.shipid !== this.l1110.lIlO0.Ill00.status.id && (this.hue = (this.l1110.hue + 180) % 360), (this.last_update = this.IO11l.II1O0);
                    }),
                    (t.prototype.createModel = function () {
                        var t, e, i;
                        return (e = 'zinc'), this.shipid === this.l1110.Ill00.status.id ? this.l1110.l1OI0.Il1lI() && (e = this.l1110.l1OI0.custom.finish) : null != (t = this.l1110.names.getCustom(this.shipid)) && null != t.finish && (e = t.finish), (i = this.type.model), (this.model = new lIl1O(WeaponModel[i], this.hue / 360, e)), (this.model.OOl01 = 0), this.l1110.lIlO0.lIlO0.add(this.model.Il1I1), (this.Il1I1 = this.model.Il1I1);
                    }),
                    (t.prototype.l0Ill = function () {
                        if ((null != this.I0l1l && this.IO11l.II1O0 >= this.I0l1l.getUint32(6, !0) && (this.read(this.I0l1l), (this.I0l1l = null)), this.l1110.lIlO0.IO11l.weapon_physics.rocketStep(this), this.IO11l.II1O0 > this.last_update + 90)) return (this.killed = !0);
                    }),
                    (t.prototype.dispose = function () {
                        if (null != this.model) return this.l1110.lIlO0.lIlO0.remove(this.model.Il1I1), this.model.dispose();
                    }),
                    (t.prototype.updateModel = function () {
                        var t, e;
                        return (e = 2 * this.model.data.size), this.pop < 30 ? (this.pop++, (t = Math.sqrt(this.pop / 30) * e), this.Il1I1.scale.set(t, t, t)) : this.Il1I1.scale.set(e, e, e), (this.Il1I1.rotation.z = this.r + 180 * THREE.Math.DEG2RAD), (this.Il1I1.rotation.x = ((this.IO11l.II1O0 / 180) % 1) * (180 * THREE.Math.DEG2RAD) * 2), (this.Il1I1.position.x = this.x), (this.Il1I1.position.y = this.y), (this.Il1I1.position.z = -1), (this.Il1I1.visible = !0), this.model.propstep(!0), this.IO11l.Ill0l(this.Il1I1);
                    }),
                    t
                );
            })(),
            hasProp = {}.hasOwnProperty,
            this.WeaponModel = (function () {
                function t(t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c;
                    if (((this.data = t), (this.hue = null != e ? e : 0), (this.finish = null != i ? i : 'zinc'), (this.hue = Math.max(0.01, Math.min(0.99, this.hue))), (this.geometry = new THREE.Geometry()), (this.geometry.faceVertexUvs[0] = []), (this.l1OI0 = !1), null != this.data.bodies)) {
                        r = this.data.bodies;
                        for (a in r) hasProp.call(r, a) && ((s = r[a]), this.I0100(s));
                    }
                    if (null != this.data.tori) {
                        h = this.data.tori;
                        for (a in h) hasProp.call(h, a) && ((s = h[a]), this.buildTorus(s));
                    }
                    if (this.data.wings) {
                        u = this.data.wings;
                        for (a in u) hasProp.call(u, a) && ((c = u[a]), this.llO11(c));
                    }
                    for (this.geometry.computeBoundingSphere(), this.geometry.computeBoundingBox(), this.geometry.computeFaceNormals(), d = this.geometry.faces, n = 0, o = d.length; n < o; n++) (l = d[n]), (l.vertexNormals[0] = l.normal), (l.vertexNormals[1] = l.normal), (l.vertexNormals[2] = l.normal);
                    (this.Il1I1 = new THREE.Group()), (this.Il1I1.rotation.order = 'ZYX'), (this.Illl0 = this.IIO0l()), (this.shield_mat = new THREE.MeshBasicMaterial({ map: l1IIl, color: 16756800, blending: THREE.AdditiveBlending, transparent: !0, side: THREE.DoubleSide }));
                }
                return (
                    (t.prototype.getInstance = function () {
                        return (this.l0OlI = new THREE.Mesh(this.geometry, this.Illl0)), this.l0OlI.scale.set(2 * this.data.size, 2 * this.data.size, 2 * this.data.size), this.l0OlI;
                    }),
                    (t.prototype.getCollectibleInstance = function () {
                        return (this.l0OlI = new THREE.Mesh(this.geometry, this.shield_mat)), this.l0OlI.scale.set(2 * this.data.size, 2 * this.data.size, 2 * this.data.size), this.l0OlI;
                    }),
                    (t.prototype.dispose = function () {
                        return this.geometry.dispose(), this.Illl0.dispose();
                    }),
                    (t.prototype.bump = function (t) {
                        return (this.bumpframe = t), (this.bumping = !0);
                    }),
                    (t.prototype.IIO0l = function (t) {
                        var e, i, s;
                        switch ((null == t && (t = 10), (this.built_material = this.finish), this.finish)) {
                            case 'alloy':
                                this.buildAlloyMaterial();
                                break;
                            case 'gold':
                                this.buildGoldMaterial();
                                break;
                            case 'titanium':
                                this.buildTitaniumMaterial();
                                break;
                            case 'carbon':
                                this.buildCarbonMaterial();
                                break;
                            case 'copper':
                                this.buildCopperMaterial();
                                break;
                            case 'diamond':
                                this.buildDiamondMaterial();
                                break;
                            default:
                                this.buildDefaultMaterial();
                        }
                        return (this.base_color = this.material.color.getHex()), (s = (this.base_color >> 16) & 255), (i = (this.base_color >> 8) & 255), (e = 255 & this.base_color), (this.dark_color = (Math.floor(s / 2) << 16) | (Math.floor(i / 2) << 8) | Math.floor(e / 2)), this.material;
                    }),
                    (t.prototype.buildDefaultMaterial = function (t) {
                        return null == t && (t = 10), (this.material = new THREE.MeshLambertMaterial({ map: I1II0, color: 16777215, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildAlloyMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 8413264, shininess: 30, bumpScale: 0.1, color: 10531008, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildTitaniumMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 6316128, shininess: 20, bumpScale: 0.1, color: 6316128, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildCarbonMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specular: 6316128, shininess: 5, bumpScale: 0.1, color: 1052688, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: OI01l }));
                    }),
                    (t.prototype.buildFullColorMaterial = function () {
                        var t;
                        return (t = O0l1l.hsvToRgbHex(this.hue, 1, 1)), (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 12632256, shininess: 50, bumpScale: 0.1, color: t, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildGoldMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 10506256, shininess: 50, bumpScale: 0.1, color: 8413232, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildCopperMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specularMap: I1II0, specular: 11554864, shininess: 15, bumpScale: 0.1, color: 10514512, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.buildDiamondMaterial = function () {
                        return (this.material = new THREE.MeshPhongMaterial({ map: I1II0, bumpMap: I1II0, specular: 16777215, opacity: 0.5, shininess: 50, side: THREE.DoubleSide, bumpScale: 0.1, transparent: !0, color: 8421504, emissive: O0l1l.hsvToRgbHex(this.hue, 0.5, 1), emissiveMap: O1llI }));
                    }),
                    (t.prototype.l1O0l = function (t) {
                        var e, i;
                        if ((this.built_material !== this.finish && (this.IIO0l(this.hue), (this.l0OlI.material = this.material)), (this.shield_mesh.visible = !1), this.material.color.setHex(this.base_color), this.invulnerable ? (Date.now() % 500 < 250 ? (this.material.emissive.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 0.5)), this.material.color.setHex(this.dark_color), this.shield_mat.color.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)), (this.shield_mesh.visible = !0)) : (this.material.emissive.set(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)), this.material.color.setHex(this.base_color), this.shield_mat.color.setHex(0))) : this.O0OIO > 0 && ((this.OI0O0 = Math.random() < this.O0OIO ? 1 : 0), (this.shield_mesh.visible = !0), 1 === this.OI0O0 ? (this.material.emissive.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 0.5)), this.material.color.setHex(this.dark_color), this.shield_mat.color.setHex(O0l1l.hsvToRgbHex(this.hue, 0.5, 1))) : (this.material.emissive.set(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)), this.material.color.setHex(this.base_color), this.shield_mat.color.setHex(0)), (this.O0OIO *= 0.95), this.O0OIO < 0.1 && ((this.O0OIO = 0), (this.shield_mesh.visible = !1), this.material.color.setHex(this.base_color), this.material.emissive.set(O0l1l.hsvToRgbHex(this.hue, 0.5, 1)))), this.bumping)) return t > this.bumpframe + 30 ? ((this.bumping = !1), this.Il1I1.scale.set(2 * this.data.size, 2 * this.data.size, 2 * this.data.size)) : ((i = Math.max(0, t - this.bumpframe) / 30), (e = 1.5 - Math.cos(Math.pow(i, 0.5) * (180 * THREE.Math.DEG2RAD) * 2)), this.Il1I1.scale.set(2 * this.data.size * e, 2 * this.data.size * e, 2 * this.data.size * e));
                    }),
                    (t.prototype.getTextureIndex = function (t, e) {
                        return null == t ? 0 : 'number' == typeof t ? t : t[e] || t[t.length - 1];
                    }),
                    (t.prototype.I0100 = function (t, e) {
                        var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G;
                        if ((null == e && (e = 0), 0 === e)) return this.I0100(t, 1), void (0 !== t.offset.x && this.I0100(t, -1));
                        for (i = t.angle || 0, o = Math.cos((i / 180) * (180 * THREE.Math.DEG2RAD) * e), z = Math.sin((i / 180) * (180 * THREE.Math.DEG2RAD) * e), A = this.geometry.vertices.length, c = Math.min(t.position.x.length, t.position.y.length, t.width.length, t.height.length) - 1, I = 8, p = O = 0, b = I - 1; 0 <= b ? O <= b : O >= b; p = 0 <= b ? ++O : --O) l = (p / I) * (180 * THREE.Math.DEG2RAD) * 2;
                        if (
                            (null != t.section_segments &&
                                ('number' == typeof t.section_segments
                                    ? ((I = t.section_segments),
                                      (l = (function () {
                                          var t, e, i;
                                          for (i = [], p = t = 0, e = I - 1; 0 <= e ? t <= e : t >= e; p = 0 <= e ? ++t : --t) i.push((p / I) * (180 * THREE.Math.DEG2RAD) * 2);
                                          return i;
                                      })()))
                                    : ((I = t.section_segments.length),
                                      (l = (function () {
                                          var e, i, s;
                                          for (s = [], p = e = 0, i = I - 1; 0 <= i ? e <= i : e >= i; p = 0 <= i ? ++e : --e) s.push((t.section_segments[p] / 180) * (180 * THREE.Math.DEG2RAD));
                                          return s;
                                      })()))),
                            null == t.position.z)
                        )
                            for (t.position.z = [], p = m = 1, w = t.position.y.length; 1 <= w ? m <= w : m >= w; p = 1 <= w ? ++m : --m) t.position.z.push(0);
                        for (d = f = 0, x = c; f <= x; d = f += 1) for (C = 0.01 * t.position.y[d], p = g = 0, k = I - 1; g <= k; p = g += 1) (s = l[p] + (180 * THREE.Math.DEG2RAD) / 2), (H = (0.01 * t.position.x[d] + Math.cos(s) * t.width[d] * 0.01) * e), (G = Math.sin(s) * t.height[d] * 0.01 * e + 0.01 * t.offset.z + 0.01 * t.position.z[d]), (D = o * H + z * C), (j = o * C - z * H), (j += 0.01 * t.offset.y), (D += 0.01 * t.offset.x * e), t.vertical ? this.geometry.vertices.push(new THREE.Vector3(-G, D, j)) : this.geometry.vertices.push(new THREE.Vector3(j, D, G));
                        for (d = y = 0, E = c - 1; y <= E; d = y += 1) for (a = 0.25 * (t.width[d] + t.width[d + 1] + t.height[d] + t.height[d + 1]) * 6.28, n = Math.abs(t.position.y[d] - t.position.y[d + 1]), T = 1, n > 0 && a / n > 4 && I % 8 == 0 ? (T = 4) : n > 0 && a / n > 2 && I % 4 == 0 && (T = 2), p = v = 0, _ = I - 1; v <= _; p = v += 1) p < I / 2 ? (this.geometry.faces.push(new THREE.Face3(A + (d + 1) * I + p, A + d * I + p, A + d * I + ((p + 1) % I))), this.geometry.faces.push(new THREE.Face3(A + (d + 1) * I + ((p + 1) % I), A + (d + 1) * I + p, A + d * I + ((p + 1) % I)))) : (this.geometry.faces.push(new THREE.Face3(A + (d + 1) * I + p, A + d * I + p, A + (d + 1) * I + ((p + 1) % I))), this.geometry.faces.push(new THREE.Face3(A + d * I + p, A + d * I + ((p + 1) % I), A + (d + 1) * I + ((p + 1) % I)))), (r = (((l[p] - l[0] + (180 * THREE.Math.DEG2RAD) / 2) / (180 * THREE.Math.DEG2RAD)) * T) % 1), (u = l[(p + 1) % l.length] - l[p]), u < 0 && (u += 180 * THREE.Math.DEG2RAD * 2), (h = r + (u / (180 * THREE.Math.DEG2RAD)) * T), (M = this.getTextureIndex(t.texture, d)), 15 === M && (M = 13), 63 === M && (M = 31), (S = (M % 8) * 0.125), (R = 0.25 * (3 - Math.floor(M / 8) + 0.1)), (r = S + 0.125 * (0.1 + 0.8 * r)), (h = S + 0.125 * (0.1 + 0.8 * h)), (P = R + 0.2), 31 === M && ((S += 0.125 * this.hue), (r = S), (h = S)), p < I / 2 ? (this.geometry.faceVertexUvs[0].push([new THREE.Vector2(r, R), new THREE.Vector2(r, P), new THREE.Vector2(h, P)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(h, R), new THREE.Vector2(r, R), new THREE.Vector2(h, P)])) : (this.geometry.faceVertexUvs[0].push([new THREE.Vector2(r, R), new THREE.Vector2(r, P), new THREE.Vector2(h, R)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(r, P), new THREE.Vector2(h, P), new THREE.Vector2(h, R)]));
                    }),
                    (t.prototype.buildTorus = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G;
                        if ('number' == typeof (k = t.segments))
                            (O = k),
                                (E = (function () {
                                    var t, e, i;
                                    for (i = [], h = t = 0, e = O; 0 <= e ? t <= e : t >= e; h = 0 <= e ? ++t : --t) i.push((h / O) * (180 * THREE.Math.DEG2RAD) * 2);
                                    return i;
                                })());
                        else for (E = [], h = d = 0, g = k.length - 1; 0 <= g ? d <= g : d >= g; h = 0 <= g ? ++d : --d) E[h] = (k[h] / 180) * (180 * THREE.Math.DEG2RAD);
                        for (S = this.geometry.vertices.length, r = E.length - 1, u = 8, h = c = 0, y = u - 1; 0 <= y ? c <= y : c >= y; h = 0 <= y ? ++c : --c) s = (h / u) * (180 * THREE.Math.DEG2RAD) * 2;
                        for (
                            null != t.section_segments &&
                            ('number' == typeof t.section_segments
                                ? ((u = t.section_segments),
                                  (s = (function () {
                                      var t, e, i;
                                      for (i = [], h = t = 0, e = u - 1; 0 <= e ? t <= e : t >= e; h = 0 <= e ? ++t : --t) i.push((h / u) * (180 * THREE.Math.DEG2RAD) * 2);
                                      return i;
                                  })()))
                                : ((u = t.section_segments.length),
                                  (s = (function () {
                                      var e, i, s;
                                      for (s = [], h = e = 0, i = u - 1; 0 <= i ? e <= i : e >= i; h = 0 <= i ? ++e : --e) s.push((t.section_segments[h] / 180) * (180 * THREE.Math.DEG2RAD));
                                      return s;
                                  })())));
                            t.position.x.length < r + 1;

                        )
                            t.position.x.push(t.position.x[t.position.x.length - 1]);
                        for (; t.position.y.length < r + 1; ) t.position.y.push(t.position.y[t.position.y.length - 1]);
                        for (; t.position.z.length < r + 1; ) t.position.z.push(t.position.z[t.position.z.length - 1]);
                        for (; t.width.length < r + 1; ) t.width.push(t.width[t.width.length - 1]);
                        for (; t.height.length < r + 1; ) t.height.push(t.height[t.height.length - 1]);
                        for (o = p = 0, v = r; p <= v; o = p += 1) for (e = E[o], R = Math.cos(e), P = Math.sin(e), h = I = 0, b = u - 1; I <= b; h = I += 1) (i = s[h]), (A = 0.01 * (t.offset.x + t.position.x[o] + Math.cos(i) * t.height[o] + t.radius)), (D = 0.01 * (t.offset.y + t.position.y[o] + Math.sin(i) * t.width[o])), (j = 0), (H = R * A + P * j), (G = R * j - P * A + 0.01 * t.offset.z), (C = D), this.geometry.vertices.push(new THREE.Vector3(C, H, G));
                        for (o = m = 0, w = r - 1; m <= w; o = m += 1) for (h = f = 0, x = u - 1; f <= x; h = f += 1) this.geometry.faces.push(new THREE.Face3(S + (o + 1) * u + h, S + o * u + h, S + o * u + ((h + 1) % u))), this.geometry.faces.push(new THREE.Face3(S + (o + 1) * u + ((h + 1) % u), S + (o + 1) * u + h, S + o * u + ((h + 1) % u))), (l = ((s[h] - s[0]) / (180 * THREE.Math.DEG2RAD)) % 1), (a = s[(h + 1) % s.length] - s[h]), a < 0 && (a += 180 * THREE.Math.DEG2RAD * 2), (n = l + a / (180 * THREE.Math.DEG2RAD)), (_ = this.getTextureIndex(t.texture, o)), 15 === _ && (_ = 13), 63 === _ && (_ = 31), (z = (_ % 8) * 0.125), (M = 0.25 * (3 - Math.floor(_ / 8) + 0.1)), (l = z + 0.125 * (l + 0.1) * 0.8), (n = z + 0.125 * (n + 0.1) * 0.8), (T = M + 0.2), 31 === _ && ((z += 0.125 * this.hue), (l = z), (n = z)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(l, M), new THREE.Vector2(l, T), new THREE.Vector2(n, T)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(n, M), new THREE.Vector2(l, M), new THREE.Vector2(n, T)]);
                    }),
                    (t.prototype.llO11 = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z;
                        for (E = this.geometry.vertices.length, u = Math.min(t.length.length, t.width.length - 1, t.angle.length, t.position.length - 1), null == t.offset && (t.offset = { x: 0, y: 0, z: 0 }), _ = 0, z = 0, l = n = 0, c = u; n <= c; l = n += 1) (d = 0.01 * t.position[l]), (f = 0.01 * t.width[l]), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d - f / 2, 0.01 * t.offset.x + _, 0.01 * t.offset.z + z)), l < u && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), 0 === l && ((e = 1), (m = 0)), (s = 0.01 * t.bump.size * f * e), (i = 0.01 * -t.bump.size * f * m), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * t.offset.x + _ + i, 0.01 * t.offset.z + z + s)), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * t.offset.x + _ - i, 0.01 * t.offset.z + z - s))), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f / 2, 0.01 * t.offset.x + _, 0.01 * t.offset.z + z)), null != t.length[l] && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (o = 0.01 * t.length[l]), (_ += o * e), (z += o * m));
                        for (l = a = 0, p = u - 1; a <= p; l = a += 1) (g = this.getTextureIndex(t.texture, l)), 15 === g && (g = 13), 63 === g && (g = 31), (y = (g % 8) * 0.125), (v = y + 0.0125), (b = v + 0.1), (w = 0.25 * (3 - Math.floor(g / 8) + 0.1)), (x = w + 0.2), (k = w + (x - w) * (0.5 + 0.01 * t.bump.position)), 31 === g && ((v = y + 0.125 * this.hue), (b = v)), l < u - 1 ? (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 1, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 3, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 5, E + 4 * l + 3, E + 4 * l + 7)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(v, k), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(v, k), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, x), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, k), new THREE.Vector2(v, x), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 4, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 6, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 6, E + 4 * l + 3)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 6, E + 4 * l + 7, E + 4 * l + 3)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(b, w), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(b, k), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, k), new THREE.Vector2(v, x)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, k), new THREE.Vector2(b, x), new THREE.Vector2(v, x)]))) : (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 1, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 3, E + 4 * l + 5)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(v, k), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(v, k), new THREE.Vector2(b, x)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, x), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l, E + 4 * l + 4, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 4, E + 4 * l + 5, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 5, E + 4 * l + 3)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, w), new THREE.Vector2(b, w), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(b, w), new THREE.Vector2(b, x), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, x), new THREE.Vector2(v, x)])));
                        for (E = this.geometry.vertices.length, _ = 0, z = 0, l = r = 0, I = u; r <= I; l = r += 1) (d = 0.01 * t.position[l]), (f = 0.01 * t.width[l]), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d - f / 2, 0.01 * -t.offset.x + _, 0.01 * t.offset.z + z)), l < u && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), 0 === l && ((e = 1), (m = 0)), (s = 0.01 * t.bump.size * f * e), (i = 0.01 * t.bump.size * f * m), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * -t.offset.x + _ + i, 0.01 * t.offset.z + z + s)), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f * t.bump.position * 0.01, 0.01 * -t.offset.x + _ - i, 0.01 * t.offset.z + z - s))), this.geometry.vertices.push(new THREE.Vector3(0.01 * t.offset.y + d + f / 2, 0.01 * -t.offset.x + _, 0.01 * t.offset.z + z)), null != t.length[l] && ((e = Math.cos((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (m = Math.sin((t.angle[l] * (180 * THREE.Math.DEG2RAD)) / 180)), (o = 0.01 * t.length[l]), (_ -= o * e), (z += o * m));
                        for (l = h = 0, O = u - 1; h <= O; l = h += 1) (g = this.getTextureIndex(t.texture, l)), 15 === g && (g = 13), 63 === g && (g = 31), (y = (g % 8) * 0.125), (v = y + 0.0125), (b = v + 0.1), (w = 0.25 * (3 - Math.floor(g / 8) + 0.1)), (x = w + 0.2), (k = w + (x - w) * (0.5 + 0.01 * t.bump.position)), 31 === g && ((v = y + 0.125 * this.hue), (b = v)), l < u - 1 ? (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 4, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 5, E + 4 * l + 7)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, w), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(v, k), new THREE.Vector2(b, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, k), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 4, E + 4 * l)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 6, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 6, E + 4 * l + 2)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 7, E + 4 * l + 6)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(v, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, k), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, k), new THREE.Vector2(v, k)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, x), new THREE.Vector2(b, k)]))) : (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 1, E + 4 * l + 4, E + 4 * l + 5)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 1, E + 4 * l + 5)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(v, w), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(b, x)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(v, k), new THREE.Vector2(b, x)]), t.doubleside && (this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 4, E + 4 * l)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 2, E + 4 * l + 5, E + 4 * l + 4)), this.geometry.faces.push(new THREE.Face3(E + 4 * l + 3, E + 4 * l + 5, E + 4 * l + 2)), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, w), new THREE.Vector2(v, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, k), new THREE.Vector2(b, x), new THREE.Vector2(b, w)]), this.geometry.faceVertexUvs[0].push([new THREE.Vector2(v, x), new THREE.Vector2(b, x), new THREE.Vector2(v, k)])));
                    }),
                    (t.prototype.shapePoint = function (t, e, i) {
                        var s, l, n;
                        return (n = i.length), (s = Math.atan2(e, -t)), (s = Math.round(((s + 180 * THREE.Math.DEG2RAD * 2) / (180 * THREE.Math.DEG2RAD * 2)) * n) % n), (l = Math.sqrt(t * t + e * e)), (i[s] = Math.max(i[s], l));
                    }),
                    (t.prototype.l0IO0 = function (t) {
                        var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                        for (null == t && (t = 50), p = [], s = n = 0, u = t - 1; 0 <= u ? n <= u : n >= u; s = 0 <= u ? ++n : --n) p[s] = 0;
                        for (d = this.geometry.faces, a = 0, o = d.length; a < o; a++) for (i = d[a], I = this.geometry.vertices[i.a], O = this.geometry.vertices[i.b], m = this.geometry.vertices[i.c], s = r = 0; r <= 99; s = r += 1) (e = s / 100), (f = I.x * e + O.x * (1 - e)), (g = I.y * e + O.y * (1 - e)), this.shapePoint(f, g, p), (f = m.x * e + O.x * (1 - e)), (g = m.y * e + O.y * (1 - e)), this.shapePoint(f, g, p), (f = m.x * e + I.x * (1 - e)), (g = m.y * e + I.y * (1 - e)), this.shapePoint(f, g, p);
                        for (s = h = 0, c = p.length - 1; h <= c; s = h += 1) p[s] *= 2 * this.data.size;
                        for (l in p) p[l] = parseFloat(p[l].toFixed(3));
                        return p;
                    }),
                    (t.prototype.I110l = function (t, e) {
                        var i, s, l, n, a;
                        return null == t && (t = 64), (a = new THREE.Scene()), (i = new THREE.OrthographicCamera(0, t, 0, t, 1, 3e3)), (l = new THREE.MeshLambertMaterial({ color: 0, emissive: 16777215, emissiveMap: l1IIl, side: THREE.DoubleSide })), (this.l0OlI.material = l), a.add(this.l0OlI), this.l0OlI.position.set(t / 2, t / 2, -1e3), (n = 0.35 * t * e), this.l0OlI.scale.set(n, n, n), (this.l0OlI.rotation.z = 180 * THREE.Math.DEG2RAD * 0.75), lIl1O.l1011 || (lIl1O.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), lIl1O.l1011.setSize(t, t), lIl1O.l1011.render(a, i), (s = document.createElement('canvas')), (s.width = t), (s.height = t), s.getContext('2d').drawImage(lIl1O.l1011.domElement, 0, 0), s;
                    }),
                    (t.prototype.getIcon = function (t, e) {
                        var i, s, l, n;
                        return null == t && (t = 64), (n = new THREE.Scene()), (i = new THREE.OrthographicCamera(0, t, 0, t, 1, 3e3)), (this.material = new THREE.MeshBasicMaterial({ color: 16777215, side: THREE.DoubleSide })), (this.l0OlI.material = this.material), n.add(this.l0OlI), this.l0OlI.position.set(t / 2, t / 2, -1e3), (l = 0.35 * t * e), this.l0OlI.scale.set(l, l, l), (this.l0OlI.rotation.z = 180 * THREE.Math.DEG2RAD * 0.75), lIl1O.l1011 || (lIl1O.l1011 = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })), lIl1O.l1011.setSize(t, t), lIl1O.l1011.render(n, i), (s = document.createElement('canvas')), (s.width = t), (s.height = t), s.getContext('2d').drawImage(lIl1O.l1011.domElement, 0, 0), s;
                    }),
                    (t.getWeaponIcon = function (e) {
                        var i, s;
                        return null == t.icons_buffer[e] && ((i = new t(t[WEAPON_TYPES.types_by_code[e].model], 0)), i.getInstance(), (s = 1), null != WEAPON_TYPES.types_by_code[e].icon_scale && (s = WEAPON_TYPES.types_by_code[e].icon_scale), (t.icons_buffer[e] = i.getIcon(128, s)), i.dispose()), t.icons_buffer[e];
                    }),
                    (t.getWeaponImage = function (e) {
                        var i, s;
                        return null == t.images_buffer[e] && ((i = new t(t[WEAPON_TYPES.types_by_code[e].model], 0)), i.getInstance(), (s = 1), null != WEAPON_TYPES.types_by_code[e].icon_scale && (s = WEAPON_TYPES.types_by_code[e].icon_scale), (t.images_buffer[e] = i.I110l(128, s)), i.dispose()), t.images_buffer[e];
                    }),
                    t
                );
            })(),
            WeaponModel.icons_buffer = [],
            WeaponModel.images_buffer = [],
            MINING_POD_MODEL = {
                name: 'Mining Pod',
                level: 1,
                model: 1,
                size: 1.05,
                specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } },
                bodies: {
                    main: {
                        section_segments: 8,
                        offset: { x: 0, y: 0, z: 0 },
                        position: {
                            x: (function () {
                                var t, e;
                                for (e = [], i = t = 0; t <= 6; i = ++t) e.push(0);
                                return e;
                            })(),
                            y: (function () {
                                var t, e;
                                for (e = [], i = t = 0; t <= 10; i = ++t) e.push(50 * -Math.cos((i / 6) * (180 * THREE.Math.DEG2RAD)));
                                return e;
                            })(),
                            z: [0, 0, 0, 0, 0, 0, 0, 0, 0],
                        },
                        width: (function () {
                            var t, e;
                            for (e = [], i = t = 0; t <= 10; i = ++t) e.push(50 * Math.sin((i / 6) * (180 * THREE.Math.DEG2RAD)));
                            return e;
                        })(),
                        height: (function () {
                            var t, e;
                            for (e = [], i = t = 0; t <= 10; i = ++t) e.push(50 * Math.sin((i / 6) * (180 * THREE.Math.DEG2RAD)));
                            return e;
                        })(),
                        propeller: !1,
                        texture: [1, 3, 1, 12, 4],
                    },
                    cannon: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -60, -30, 0, 30, 55, 60], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 10, 15, 10, 0], height: [0, 10, 15, 10, 15, 10, 0], propeller: !1, texture: [4, 63, 1, 1, 1, 4] },
                },
                wings: { main: { length: [50, 10], width: [20, 30, 20], angle: [45, 45], position: [0, 0, 0], doubleside: !0, offset: { x: 0, y: 30, z: 0 }, bump: { position: 30, size: 20 }, texture: [63] }, main2: { length: [50, 10], width: [20, 30, 15], angle: [-45, -45], position: [0, 0, 0], doubleside: !0, offset: { x: 0, y: 30, z: 0 }, bump: { position: 30, size: 20 }, texture: [63] }, wing3: { length: [20], width: [50, 30], angle: [0, 0], position: [0, 0], doubleside: !0, offset: { x: 35, y: 0, z: 0 }, bump: { position: 30, size: 40 }, texture: [3] } },
            },
            ATTACK_POD_MODEL = { name: 'Attack Pod', level: 1, model: 1, size: 1.05, specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } }, bodies: { main: { section_segments: [35, 55, 125, 145, 215, 235, 305, 325, 395], offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -50, 0, 25, 50, 40], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 50, 50, 20, 0], height: [0, 5, 20, 15, 15, 0], propeller: !1, texture: [1, 1, 4, 3, 17] }, cannon: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-60, -70, -30, 0, 30, 35, 40], z: [0, 0, 0, 5, 5, 0, 0, 0, 0] }, width: [0, 10, 15, 10, 15, 10, 0], height: [0, 10, 15, 18, 15, 10, 0], propeller: !1, texture: [4, 63, 1, 1, 1, 4] } }, wings: { IIlll: { length: [60], width: [80, 30], angle: [0, 0], position: [0, 20], doubleside: !0, offset: { x: 0, y: 0, z: -5 }, bump: { position: 30, size: 20 }, texture: [63] } } },
            DEFENCE_POD_MODEL = { name: 'Defence Pod', level: 1, model: 1, size: 1.05, specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } }, bodies: { main: { section_segments: [35, 55, 125, 145, 215, 235, 305, 325, 395], offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [0, 25, 50, 40], z: [0, 0, 0, 0, 0] }, width: [50, 50, 20, 0], height: [15, 10, 10, 0], propeller: !1, texture: [3, 3, 17] }, cannon: { section_segments: 6, offset: { x: 40, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-25, -20, 0, 0, 20, 30, 35], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 10, 7, 6, 0], height: [0, 10, 15, 18, 15, 10, 0], propeller: !1, texture: [4, 63, 1, 1, 1, 4] } }, wings: { IIlll: { length: [60, 20], width: [40, 35, 25], angle: [0, 0, 0], position: [0, 10, 20], doubleside: !0, offset: { x: 0, y: 0, z: 0 }, bump: { position: 0, size: 80 }, texture: [1, 63] } } },
            WeaponModel.MINING_POD_MODEL = MINING_POD_MODEL,
            WeaponModel.ATTACK_POD_MODEL = ATTACK_POD_MODEL,
            WeaponModel.DEFENCE_POD_MODEL = DEFENCE_POD_MODEL,
            ROCKET_MODEL = { name: 'Rocket', id: 1, size: 1, bodies: { main: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-60, -45, -30, -25, 0, 15, 60, 70, 60] }, width: [0, 15, 20, 20, 16, 20, 20, 15, 0], height: [0, 15, 20, 20, 16, 20, 20, 15, 0], propeller: !0, texture: [13, 63, 3, 10, 63, 4, 12, 17] } }, wings: { main1: { length: [35], width: [40, 20], angle: [45, 45], position: [0, 0, 0], doubleside: !0, offset: { x: 0, y: 40, z: 0 }, bump: { position: 30, size: 25 }, texture: [0] }, main2: { length: [35], width: [40, 20], angle: [-45, -45], position: [0, 0, 0], doubleside: !0, offset: { x: 0, y: 40, z: 0 }, bump: { position: 30, size: 25 }, texture: [0] } } },
            MISSILE_MODEL = { name: 'Missile', id: 1, size: 1, bodies: { main: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -85, -60, -45, -40, -5, 0, 25, 90, 100, 90] }, width: [0, 20, 30, 30, 24, 22, 26, 20, 20, 20, 0], height: [0, 20, 30, 30, 24, 22, 26, 20, 20, 20, 0], propeller: !0, texture: [13, 63, 3, 4, 10, 4, 63, 4, 3, 17] } }, wings: { main1: { length: [25, 25], width: [60, 40, 30], angle: [45, 45], position: [0, 0, 20], doubleside: !0, offset: { x: 0, y: 60, z: 0 }, bump: { position: 30, size: 15 }, texture: [0] }, main2: { length: [25, 25], width: [60, 40, 30], angle: [-45, -45], position: [0, 0, 20], doubleside: !0, offset: { x: 0, y: 60, z: 0 }, bump: { position: 30, size: 15 }, texture: [0] } } },
            TORPEDO_MODEL = { name: 'Torpedo', id: 1, size: 1.5, bodies: { main: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -90, -80, -25, 0, 60, 80, 110, 100] }, width: [0, 15, 20, 20, 20, 20, 10, 10, 0], height: [0, 15, 20, 20, 20, 20, 10, 10, 0], propeller: !0, texture: [13, 63, 3, 10, 63, 4, 12, 17] } }, wings: { main1: { length: [10, 25], width: [5, 30, 20], angle: [45, 45], position: [0, 0, 0], doubleside: !0, offset: { x: 0, y: 95, z: 0 }, bump: { position: 30, size: 25 }, texture: [0] }, main2: { length: [10, 25], width: [5, 30, 20], angle: [-45, -45], position: [0, 0, 0], doubleside: !0, offset: { x: 0, y: 95, z: 0 }, bump: { position: 30, size: 25 }, texture: [0] } } },
            WeaponModel.ROCKET_MODEL = ROCKET_MODEL,
            WeaponModel.MISSILE_MODEL = MISSILE_MODEL,
            WeaponModel.TORPEDO_MODEL = TORPEDO_MODEL,
            MINE_MODEL = {
                name: 'Space Mine',
                level: 1,
                model: 1,
                size: 0.7,
                specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } },
                bodies: {
                    main: {
                        section_segments: 6,
                        offset: { x: 0, y: 0, z: 0 },
                        position: {
                            x: (function () {
                                var t, e;
                                for (e = [], i = t = 0; t <= 6; i = ++t) e.push(0);
                                return e;
                            })(),
                            y: (function () {
                                var t, e;
                                for (e = [], i = t = 0; t <= 10; i = ++t) e.push(80 * -Math.cos((i / 6) * (180 * THREE.Math.DEG2RAD)));
                                return e;
                            })(),
                            z: [0, 0, 0, 0, 0, 0, 0, 0],
                        },
                        width: (function () {
                            var t, e;
                            for (e = [], i = t = 0; t <= 10; i = ++t) e.push(80 * Math.sin((i / 6) * (180 * THREE.Math.DEG2RAD)));
                            return e;
                        })(),
                        height: (function () {
                            var t, e;
                            for (e = [], i = t = 0; t <= 10; i = ++t) e.push(80 * Math.sin((i / 6) * (180 * THREE.Math.DEG2RAD)));
                            return e;
                        })(),
                        propeller: !1,
                        texture: [1, 1, 63, 63, 1],
                    },
                },
            },
            i = j = 0;
        j <= 2;
        i = ++j
    )
        MINE_MODEL.bodies['peak' + i] = { angle: 30 + 60 * i, section_segments: 6, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-115, -110, -100, -90, 90, 100, 110, 115], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 10, 20, 20, 10, 10, 0], height: [0, 10, 10, 20, 20, 10, 10, 0], propeller: !1, texture: [4, 1, 17, 4, 17, 1, 4] };
    for (i = k = 0; k <= 1; i = ++k) MINE_MODEL.bodies['vert' + i] = { vertical: !0, angle: 60 * i - 30, section_segments: 6, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-115, -110, -100, -90, 90, 100, 110, 115], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 10, 20, 20, 10, 10, 0], height: [0, 10, 10, 20, 20, 10, 10, 0], propeller: !1, texture: [4, 1, 17, 4, 17, 1, 4] };
    for (
        MINE2_MODEL = {
            name: 'Space Mine 2',
            level: 1,
            model: 1,
            size: 1.05,
            specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } },
            bodies: {
                main: {
                    section_segments: 8,
                    offset: { x: 0, y: 0, z: 0 },
                    position: {
                        x: (function () {
                            var t, e;
                            for (e = [], i = t = 0; t <= 8; i = ++t) e.push(0);
                            return e;
                        })(),
                        y: (function () {
                            var t, e;
                            for (e = [], i = t = 0; t <= 10; i = ++t) e.push(80 * -Math.cos((i / 8) * (180 * THREE.Math.DEG2RAD)));
                            return e;
                        })(),
                        z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    },
                    width: (function () {
                        var t, e;
                        for (e = [], i = t = 0; t <= 10; i = ++t) e.push(80 * Math.sin((i / 8) * (180 * THREE.Math.DEG2RAD)));
                        return e;
                    })(),
                    height: (function () {
                        var t, e;
                        for (e = [], i = t = 0; t <= 10; i = ++t) e.push(80 * Math.sin((i / 8) * (180 * THREE.Math.DEG2RAD)));
                        return e;
                    })(),
                    propeller: !1,
                    texture: [1, 1, 63, 3, 3, 63, 1],
                },
            },
        },
            i = l = 0;
        l <= 3;
        i = ++l
    )
        MINE2_MODEL.bodies['peak' + i] = { angle: 45 * i, section_segments: 6, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-115, -110, -100, -90, 90, 100, 110, 115], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 10, 20, 20, 10, 10, 0], height: [0, 10, 10, 20, 20, 10, 10, 0], propeller: !1, texture: [4, 1, 17, 4, 17, 1, 4] };
    for (i = m = -1; m <= 1; i = ++m) MINE2_MODEL.bodies['vert' + i] = { vertical: !0, angle: 45 * i, section_segments: 6, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-115, -110, -100, -90, 90, 100, 110, 115], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 10, 20, 20, 10, 10, 0], height: [0, 10, 10, 20, 20, 10, 10, 0], propeller: !1, texture: [4, 1, 17, 4, 17, 1, 4] };
    (WeaponModel.MINE_MODEL = MINE_MODEL),
        (WeaponModel.MINE2_MODEL = MINE2_MODEL),
        (this.IOO0I = (function () {
            function t(t, e, i, s) {
                var l, n, a;
                for (this.width = t, this.height = e, this.k = i, this.f = s, this.m = [], l = 0, n = this.width * this.height - 1; 0 <= n ? l <= n : l >= n; 0 <= n ? ++l : --l) this.m.push({ x: 0, s: 0, f: 0 });
                (a = Math.floor(this.width / 2)), (this.m[this.m.length - a].x = 1), (this.p = Math.floor(this.width / 2 + (this.height / 2) * this.width));
            }
            return (
                (t.prototype.next = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O;
                    for (d = this.m, s = 0, n = d.length; s < n; s++) (o = d[s]), (o.f = 0);
                    for (e = l = 0, c = this.width - 1; l <= c; e = l += 1) this.m[e].f += -this.k * this.m[e].x;
                    for (e = r = 0, p = this.width - 2; r <= p; e = r += 1) for (i = h = 0, I = this.height - 2; h <= I; i = h += 1) (t = this.k * (this.m[e + i * this.width].x - this.m[e + 1 + i * this.width].x)), (this.m[e + i * this.width].f -= t), (this.m[e + 1 + i * this.width].f += t), (t = this.k * (this.m[e + i * this.width].x - this.m[e + (i + 1) * this.width].x)), (this.m[e + i * this.width].f -= t), (this.m[e + (i + 1) * this.width].f += t);
                    for (O = this.m, u = 0, a = O.length; u < a; u++) (o = O[u]), (o.s += o.f), (o.s *= this.f), (o.x += o.s);
                    return this.m[this.p].x;
                }),
                t
            );
        })()),
        (this.Ol1l0 = (function () {
            function t(t) {
                (this.l1110 = t), (this.I101l = new Ol1l1()), (this.context = new (window.AudioContext || window.webkitAudioContext)()), this.init(), (this.OOl01 = 0), (this.explosion_damp = 0), (this.shoot_damp = 0), (this.foreign_shoot_damp = 0);
            }
            return (
                (t.prototype.load = function () {
                    return this.I101l.start();
                }),
                (t.prototype.init = function () {
                    this.I101l.l0I00('Creating sounds...'),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e;
                                    return (
                                        (e = new I0OOI(t, 'II11O')),
                                        (e.Ol01I = 880),
                                        (t.beep_sound = new Sound(t, 0.5, function (t) {
                                            var i;
                                            return (t *= 2), (i = 1 - Math.pow(t, 4)), (i *= Math.exp(6 * -t)), t > 0.25 && e.next(), e.next() * i * 0.25;
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return (t.pop_sound = new Sound(t, 0.5, function (t) {
                                        return Math.min(Math.exp(100 * -t), Math.exp(5 * t - 1)) * Math.sin(100 * t * (180 * THREE.Math.DEG2RAD) * 2) * 0.25;
                                    }));
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e;
                                    return (
                                        (e = new I0OOI(t, 'II11O')),
                                        (e.Ol01I = 880),
                                        (t.collect_sound = new Sound(t, 1, function (t) {
                                            var i;
                                            return (t *= 2), (i = 1 - Math.pow(t, 4)), (i *= Math.exp(6 * -t)), (e.Ol01I = Math.min(1760, 220 * Math.floor(2 + 10 * t))), e.next() * i * 0.25;
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i, s;
                                    return (
                                        (e = new I0OOI(t, 'I1O00')),
                                        (i = new I0OOI(t, 'I1O00')),
                                        (s = new I0OOI(t, 'OIOl1')),
                                        (t.l1lI1 = new Sound(t, 1, function (t) {
                                            var l, n;
                                            return (l = 1 - Math.pow(t, 4)), (l *= Math.exp(12 * -t)), (e.Ol01I = 3e3 * Math.exp(12 * -t) + 120), (i.Ol01I = 1485 * Math.exp(13 * -t) + 121), (n = (e.next() + i.next() + 25 * s.next() * Math.exp(24 * -t)) * l * 0.05), n < 0 ? 0.5 * -Math.pow(-n, 0.5) : 0.5 * Math.pow(n, 0.5);
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return (t.IOIO0 = t.l1lI1.copy()), t.IOIO0.lll0I(0.9);
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i, s, l;
                                    return (
                                        (i = new I0OOI(t, 'OIOl1')),
                                        (s = new I0OOI(t, 'lll10')),
                                        (s.Ol01I = 40),
                                        (l = new I0OOI(t, 'I1O00')),
                                        (l.Ol01I = 40),
                                        (i.lOOIl = 0.999),
                                        (e = new I010I(0)),
                                        (t.I1100 = new Sound(t, 1, function (t) {
                                            var i, s;
                                            return (i = 1 - Math.pow(t, 4)), (i *= Math.exp(8 * -t)), (i *= Math.pow(t, 0.1)), (s = 2 * (e.periodicBasic1d(500 * t, 500) - 0.5)), (s = Math.round(16 * s) / 16) * i * 0.35;
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return t.I1100.IIll0();
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i, s, l;
                                    return (
                                        (i = new I0OOI(t, 'lll10')),
                                        (s = new I0OOI(t, 'lll10')),
                                        (i.Ol01I = 198),
                                        (s.Ol01I = 199),
                                        (l = new I0OOI(t, 'lll10')),
                                        (l.Ol01I = 141),
                                        (e = new I0OOI(t, 'OIOl1')),
                                        (e.lOOIl = 0.99),
                                        (t.II0I0 = new Sound(t, 1, function (t) {
                                            return 0.005 * (0.2 * i.next() + 0.2 * s.next() + 0.2 * l.next() + 10 * e.next());
                                        })),
                                        t.II0I0.OOlO0()
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i, s;
                                    return (
                                        (e = new I0OOI(t, 'I1O00')),
                                        (i = new I0OOI(t, 'I1O00')),
                                        (s = new I0OOI(t, 'I1O00')),
                                        (e.Ol01I = 50),
                                        (i.Ol01I = 77),
                                        (s.Ol01I = 102),
                                        (t.alert_sound = new Sound(t, 1, function (t) {
                                            var s;
                                            return t < 0.5 ? ((s = 0.5 * e.next() + 0.5 * i.next()), (e.Ol01I *= 1.0001), (i.Ol01I *= 1.0001), s < 0 ? 0.1 * -Math.pow(-s, 0.1) : 0.1 * Math.pow(s, 0.1)) : 0;
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return t.alert_sound.IIll0(1);
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i;
                                    return (
                                        (e = new I0OOI(t, 'I1O00')),
                                        (i = new I0OOI(t, 'I1O00')),
                                        (e.Ol01I = 60),
                                        (i.Ol01I = 61),
                                        (t.shield_sound = new Sound(t, 0.25, function (t) {
                                            return 0.1 * (e.next() + i.next());
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i;
                                    return (
                                        (e = new I0OOI(t, 'I1O00')),
                                        (i = new I0OOI(t, 'I1O00')),
                                        (e.Ol01I = 50),
                                        (i.Ol01I = 51),
                                        (t.IllO0 = new Sound(t, 1, function (t) {
                                            return 0.1 * (e.next() + i.next());
                                        })),
                                        t.IllO0.OOlO0()
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e;
                                    return (
                                        (e = new I010I()),
                                        (t.rocket_woom = new Sound(t, 1, function (t) {
                                            var i;
                                            return (i = 2 * (e.periodicBasic1d(1e3 * t, 1e3) - 0.5)), 0.15 * (i = Math.round(8 * i) / 8);
                                        })),
                                        t.rocket_woom.OOlO0(),
                                        (t.rocket_woom_volume = 0)
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    var e, i;
                                    return (
                                        (i = new IOO0I(6, 12, 0.02, 0.9995)),
                                        (e = new I0OOI(t, 'OIOl1')),
                                        (e.lOOIl = 0.99),
                                        (t.l1O00 = new Sound(t, 1, function (t) {
                                            return (i.next() + e.next() * Math.exp(20 * -t)) * (1 - Math.pow(t, 4));
                                        }))
                                    );
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return t.l1O00.IIll0(1), t.l1O00.mix(t.I1100, 0.25);
                                };
                            })(this)
                        ),
                        this.I101l.add(
                            (function (t) {
                                return function () {
                                    return (t.initialized = !0);
                                };
                            })(this)
                        );
                }),
                (t.prototype.pause = function () {
                    return this.II0I0.IIO0I(0), this.IllO0.IIO0I(0), this.rocket_woom.IIO0I(0);
                }),
                (t.prototype.resume = function () {}),
                (t.prototype.l0Ill = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z;
                    if (this.initialized) {
                        if (((this.explosion_damp *= 0.95), (this.shoot_damp *= 0.95), (this.foreign_shoot_damp *= 0.95), this.l1110.Ill00.I00O0.up ? (this.OOl01 = 0.95 * this.OOl01 + 0.05) : (this.OOl01 = 0.95 * this.OOl01), !this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused)) return this.II0I0.IIO0I(0), this.IllO0.IIO0I(0), void this.rocket_woom.IIO0I(0);
                        for (this.II0I0.O0O0O(0.2 * this.OOl01 + 0.8), this.II0I0.IIO0I(this.OOl01 * this.l1110.settings.getVolume('sounds')), t = 1e3, _ = this.l1110.Ill00.status.x, z = this.l1110.Ill00.status.y, y = this.l1110.lIlO0.IO11l.II1O0, f = { x: 0, y: 0 }, O = this.l1110.lIlO0.IO11l.lasers, o = 0, d = O.length; o < d; o++) (h = O[o]), h.shipid !== this.l1110.Ill00.status.id && (h.Ol1II(y, f), (n = Math.abs(f.x - _)), (a = Math.abs(f.y - z)), (n = Math.min(n, this.l1110.size - n)), (a = Math.min(a, this.l1110.size - a)), (e = Math.sqrt(n * n + a * a)) < t && ((t = e), (u = h)));
                        for (null != u ? (u.Ol1II(y + 1, f), (v = f.x), (b = f.y), u.Ol1II(y, f), (v -= f.x), (b -= f.y), (s = v - this.l1110.Ill00.status.lllOl), (l = b - this.l1110.Ill00.status.II110), (k = this.l1110.Ill00.status.x - f.x), (E = this.l1110.Ill00.status.y - f.y), k < -this.l1110.l0I1I && (k += this.l1110.size), k > this.l1110.l0I1I && (k -= this.l1110.size), E < -this.l1110.l0I1I && (E += this.l1110.size), E > this.l1110.l0I1I && (E -= this.l1110.size), (w = Math.sqrt(k * k + E * E)), (k /= w), (E /= w), (i = s * k + l * E), (I = Math.max(0.1, 1 + 0.3 * i)), (x = Math.max(0, 1 - 0.06 * t) * Math.pow(u.damage / 10, 0.5)), this.IllO0.O0O0O(I), this.IllO0.IIO0I(x * this.l1110.settings.getVolume('sounds'))) : this.IllO0.IIO0I(0), t = 1e5, g = null, m = this.l1110.lIlO0.IO11l.projectiles, r = 0, c = m.length; r < c; r++) (p = m[r]), p.type.code < 10 || p.type.code > 12 || p.killed || ((n = Math.abs(p.x - _)), (a = Math.abs(p.y - z)), (n = Math.min(n, this.l1110.size - n)), (a = Math.min(a, this.l1110.size - a)), (e = Math.sqrt(n * n + a * a)) < t && ((t = e), (g = p)));
                        return null != g ? ((v = g.lllOl), (b = g.II110), (s = v - this.l1110.Ill00.status.lllOl), (l = b - this.l1110.Ill00.status.II110), (k = this.l1110.Ill00.status.x - g.x), (E = this.l1110.Ill00.status.y - g.y), k < -this.l1110.l0I1I && (k += this.l1110.size), k > this.l1110.l0I1I && (k -= this.l1110.size), E < -this.l1110.l0I1I && (E += this.l1110.size), E > this.l1110.l0I1I && (E -= this.l1110.size), (w = Math.sqrt(k * k + E * E)), (k /= w), (E /= w), (i = s * k + l * E), this.l1110.lIlO0.IO11l.II1O0, (I = 12 === g.type.code ? 0.5 : 11 === g.type.code ? 1 : 2), (I *= Math.max(0.1, 1 + 0.6 * i)), (x = Math.max(0, 1 - 0.03 * t)), this.rocket_woom.O0O0O(I)) : (x = 0), (this.rocket_woom_volume = 0.92 * this.rocket_woom_volume + 0.08 * x), this.rocket_woom.IIO0I(this.rocket_woom_volume * this.l1110.settings.getVolume('sounds'));
                    }
                }),
                (t.prototype.alert = function () {
                    return (
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.alert_sound.play(t.l1110.settings.getVolume('sounds'));
                                };
                            })(this),
                            1
                        ),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.alert_sound.play(t.l1110.settings.getVolume('sounds'));
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (t.prototype.beep = function (t, e) {
                    if ((null == t && (t = 1), null == e && (e = 1), this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused))) return this.beep_sound.play(e * this.l1110.settings.getVolume('sounds'), t);
                }),
                (t.prototype.pop = function (t, e) {
                    if ((null == t && (t = 1), null == e && (e = 1), this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused))) return this.pop_sound.play(e * this.l1110.settings.getVolume('sounds'), t);
                }),
                (t.prototype.collect = function (t, e, i) {
                    var s, l, n, a;
                    if (this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused || ((n = Math.abs(this.l1110.Ill00.status.x - t)), (a = Math.abs(this.l1110.Ill00.status.y - e)), (n = Math.min(n, this.l1110.size - n)), (a = Math.min(a, this.l1110.size - a)), (l = Math.sqrt(n * n + a * a)), (s = Math.pow(Math.max(0, 1 - 0.01 * l), 1.5)), l > 40))) return this.collect_sound.play(s * this.l1110.settings.getVolume('sounds'), 3 * Math.exp(-i / 5) + 0.25);
                }),
                (t.prototype.OI00O = function (t) {
                    var e, i;
                    if (this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused || ((i = 3 * Math.exp(-t / 10) + 0.5), (e = Math.pow(t / 20, 0.5)) < this.shoot_damp))) return (this.shoot_damp = e), (e *= 0.5 + 0.5 * Math.random()), this.l1lI1.play(e * this.l1110.settings.getVolume('sounds'), (0.04 * Math.random() + 0.98) * i);
                }),
                (t.prototype.lOOOO = function (t, e, i) {
                    var s, l, n, a, o;
                    if (this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused || ((n = Math.abs(this.l1110.Ill00.status.x - t)), (a = Math.abs(this.l1110.Ill00.status.y - e)), (n = Math.min(n, this.l1110.size - n)), (a = Math.min(a, this.l1110.size - a)), (l = Math.sqrt(n * n + a * a)), (o = 3 * Math.exp(-i / 10) + 0.5), (s = (0.5 + 0.5 * Math.random()) * Math.pow(i / 20, 0.5)), (s *= Math.pow(Math.max(0, 1 - 0.01 * l), 1.5)) < this.foreign_shoot_damp))) return (this.foreign_shoot_damp = 1.1 * s), this.IOIO0.play((0.5 + 0.5 * Math.random()) * s * this.l1110.settings.getVolume('sounds'), (0.04 * Math.random() + 0.98) * o);
                }),
                (t.prototype.I001O = function (t, e, i, s) {
                    var l, n, a, o;
                    if ((null == i && (i = 1), null == s && (s = 1), this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused || ((a = Math.abs(this.l1110.Ill00.status.x - t)), (o = Math.abs(this.l1110.Ill00.status.y - e)), (a = Math.min(a, this.l1110.size - a)), (o = Math.min(o, this.l1110.size - o)), (n = Math.sqrt(a * a + o * o)), (l = Math.max(0, 1 - 0.02 * n) * i) < this.explosion_damp)))) return (this.explosion_damp = 1.1 * l), this.I1100.play((0.5 + 0.5 * Math.random()) * l * this.l1110.settings.getVolume('sounds'), (0.5 + 0.5 * Math.random()) * s);
                }),
                (t.prototype.shield = function (t, e, i, s) {
                    var l, n, a, o;
                    if ((null == i && (i = 1), null == s && (s = 1), this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused || ((a = Math.abs(this.l1110.Ill00.status.x - t)), (o = Math.abs(this.l1110.Ill00.status.y - e)), (a = Math.min(a, this.l1110.size - a)), (o = Math.min(o, this.l1110.size - o)), (n = Math.sqrt(a * a + o * o)), (l = Math.pow(Math.max(0, 1 - 0.02 * n), 1) * i) < this.explosion_damp)))) return (this.explosion_damp = 1.1 * l), this.shield_sound.play((0.5 + 0.5 * Math.random()) * l * this.l1110.settings.getVolume('sounds'), (0.98 + 0.04 * Math.random()) * s);
                }),
                (t.prototype.I1OOO = function (t, e, i) {
                    var s, l, n, a;
                    if ((null == i && (i = 1), this.initialized && !(!this.l1110.settings.getVolume('sounds') > 0 || this.l1110.paused))) return (n = Math.abs(this.l1110.Ill00.status.x - t)), (a = Math.abs(this.l1110.Ill00.status.y - e)), (n = Math.min(n, this.l1110.size - n)), (a = Math.min(a, this.l1110.size - a)), (l = Math.sqrt(n * n + a * a)), (s = Math.pow(Math.max(0, 1 - 0.01 * l), 1.5) * i), this.l1O00.play(s * this.l1110.settings.getVolume('sounds'), 0.5 + 0.5 * Math.random());
                }),
                (t.l10I0 = Math.log(Math.pow(2, 1 / 12))),
                (t.Il1l1 = function (t) {
                    return 440 * Math.exp((t - 69) * Pigo.Audio.l10I0);
                }),
                (t.prototype.loadMusic = function (t) {
                    if (this.l1110.is_mobile_app) return (this.loaded_soundtrack = t), this.postMessage({ name: 'load_music', track: t });
                    if (null == this.music || t !== this.loaded_soundtrack) return null != this.music && (this.music.pause(), delete this.music), (this.loaded_soundtrack = t), (this.music = new Audio('https://starblast.data.neuronality.com/music/' + t)), (this.music.loop = !0);
                }),
                (t.prototype.pauseMusic = function () {
                    return this.l1110.is_mobile_app ? this.postMessage({ name: 'pause_music' }) : null != this.music ? this.music.pause() : void 0;
                }),
                (t.prototype.adjustMusicVolume = function () {
                    var t, e;
                    if (this.l1110.is_mobile_app) return (t = 1), 'crystals.mp3' === this.loaded_soundtrack && (t = 0.3), (e = Math.min(1, 0.5 * this.l1110.settings.getVolume('music'))), (e *= 0.5 * t), (this.music_volume = e), this.postMessage({ name: 'music_volume', volume: e });
                    if (null != this.music) return (t = 1), 'crystals.mp3' === this.loaded_soundtrack && (t = 0.3), (e = Math.min(1, 0.5 * this.l1110.settings.getVolume('music'))), (e *= 0.5 * t), (this.music_volume = e), e > 0 ? ((this.music.volume = e), this.music.play()) : this.music.pause();
                }),
                (t.prototype.playMusic = function (t) {
                    if ((null == t && (t = this.loaded_soundtrack), null != t)) return this.loadMusic(t), this.adjustMusicVolume();
                }),
                (t.prototype.fadeOutMusic = function () {
                    var t, e, i;
                    return this.l1110.is_mobile_app
                        ? this.postMessage({ name: 'fadeout_music' })
                        : null != this.music
                        ? ((e = this.music),
                          (this.music = null),
                          (i = Date.now() + 4e3),
                          (t = setInterval(
                              (function (s) {
                                  return function () {
                                      if (((e.volume = s.music_volume * Math.max(0, (i - Date.now()) / 4e3)), Date.now() > i)) return clearInterval(t), e.pause();
                                  };
                              })(this),
                              100
                          )))
                        : void 0;
                }),
                (t.prototype.postMessage = function (t) {
                    return (t = JSON.stringify(t)), window.parent.postMessage(t, '*');
                }),
                t
            );
        })()),
        (this.I0OOI = (function () {
            function t(t, e) {
                (this.l0I11 = t), (this.Il10l = null != e ? e : 'I1O00'), (this.phase = 0), (this.Ol01I = 440), (this.O1IlO = this.l0I11.context.sampleRate), (this.O0IOl = 0), (this.lOOIl = 0.99), this.l1O0l();
            }
            return (
                (t.prototype.l1O0l = function () {
                    switch (this.Il10l) {
                        case 'II11O':
                            return (this.next = this.II11O);
                        case 'lll10':
                            return (this.next = this.lll10);
                        case 'OIOl1':
                            return (this.next = this.OIOl1);
                        default:
                            return (this.next = this.I1O00);
                    }
                }),
                (t.prototype.Ol0II = function (t) {
                    return (this.Il10l = t), this.l1O0l();
                }),
                (t.prototype.lll10 = function () {
                    var t;
                    return (this.phase = (this.phase + this.Ol01I / this.O1IlO) % 1), (t = Math.sin(180 * THREE.Math.DEG2RAD * 2 * this.phase)) * (2 - t * t);
                }),
                (t.prototype.sawSmoothed = function () {
                    var t, e, i, s;
                    for (i = 2, t = this.Ol01I / this.O1IlO / i, e = 1, s = i; e <= s; e += 1) (this.phase = (this.phase + t) % 1), (this.O0IOl = 0.95 * this.O0IOl + 0.05 * (2 * this.phase - 1));
                    return this.O0IOl;
                }),
                (t.prototype.I1O00 = function () {
                    return (this.phase = (this.phase + this.Ol01I / this.O1IlO) % 1), (this.O0IOl = 0.9 * this.O0IOl + 0.1 * (2 * this.phase - 1));
                }),
                (t.prototype.squareSmoothed = function () {
                    var t, e, i, s, l;
                    for (i = 2, t = this.Ol01I / this.O1IlO / i, e = 1, s = i; e <= s; e += 1) (this.phase = (this.phase + t) % 1), (l = this.phase > 0.5 ? -1 : 1), (this.O0IOl = 0.9 * this.O0IOl + 0.1 * l);
                    return this.O0IOl;
                }),
                (t.prototype.II11O = function () {
                    var t;
                    return (this.phase = (this.phase + this.Ol01I / this.O1IlO) % 1), (t = this.phase > 0.5 ? -1 : 1), (this.O0IOl = 0.9 * this.O0IOl + 0.1 * t);
                }),
                (t.prototype.OIOl1 = function () {
                    var t;
                    return (t = 2 * Math.random() - 1), (this.O0IOl = this.O0IOl * this.lOOIl + t * (1 - this.lOOIl)), this.O0IOl;
                }),
                t
            );
        })()),
        (this.Sound = (function () {
            function t(e, i, s) {
                (this.l0I11 = e), (this.OI11O = i), (this.f = s), this.OI11O instanceof t ? this.lOlIO(this.OI11O) : null != this.f && this.create();
            }
            return (
                (t.prototype.create = function () {
                    var t, e, i, s, l;
                    for (this.buffer = this.l0I11.context.createBuffer(2, this.l0I11.context.sampleRate * this.OI11O, this.l0I11.context.sampleRate), t = this.buffer.getChannelData(0), e = this.buffer.getChannelData(1), i = s = 0, l = t.length - 1; 0 <= l ? s <= l : s >= l; i = 0 <= l ? ++s : --s) e[i] = t[i] = this.f(i / t.length);
                }),
                (t.prototype.lOlIO = function (t) {
                    var e, i, s, l, n, a, o;
                    for (this.OI11O = t.OI11O, this.buffer = this.l0I11.context.createBuffer(2, this.l0I11.context.sampleRate * this.OI11O, this.l0I11.context.sampleRate), e = this.buffer.getChannelData(0), i = this.buffer.getChannelData(1), a = t.buffer.getChannelData(0), o = t.buffer.getChannelData(1), s = l = 0, n = e.length - 1; 0 <= n ? l <= n : l >= n; s = 0 <= n ? ++l : --l) (e[s] = a[s]), (i[s] = o[s]);
                }),
                (t.prototype.copy = function () {
                    return new t(this.l0I11, this);
                }),
                (t.prototype.lll0I = function (t) {
                    var e, i, s, l, n, a, o;
                    for (l = this.buffer.getChannelData(0), n = this.buffer.getChannelData(1), a = 0, o = 0, e = i = 0, s = l.length - 1; i <= s; e = i += 1) (l[e] = a = a * t + l[e] * (1 - t)), (n[e] = o = o * t + n[e] * (1 - t));
                }),
                (t.prototype.IIll0 = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d;
                    for (null == t && (t = 0.5), l = this.l0I11.context.createBuffer(2, this.l0I11.context.sampleRate * this.OI11O, this.l0I11.context.sampleRate), i = l.getChannelData(0), s = l.getChannelData(1), u = this.buffer.getChannelData(0), d = this.buffer.getChannelData(1), n = a = 0, h = i.length - 1; a <= h; n = a += 1) (i[n] = u[n]), (s[n] = d[n]);
                    for (
                        e = function (t, e, l, a) {
                            var o, r, h, u, d;
                            for (n = h = t, u = i.length - 2; h <= u; n = h += 1) (o = i[n - t] + i[n + 1 - t]), (r = s[n - t] + s[n + 1 - t]), (d = o * (1 - l) + r * l), (i[n] += d * e * (1 - a) * Math.pow(1 - n / i.length, 0.1)), (s[n] += d * e * a * Math.pow(1 - n / i.length, 0.1));
                        },
                            r = [97, 109, 131, 149, 163, 179, 191, 231],
                            n = o = 0;
                        o <= 3;
                        n = o += 1
                    )
                        e(44 * r[2 * n + 1] + r[n + 10], (0.3 - n / 100) * t, (r[2 * n] % 10) / 10, (r[2 * n + 1] % 10) / 10);
                    return (this.buffer = l);
                }),
                (t.prototype.mix = function (t, e) {
                    var i, s, l, n, a, o, r, h;
                    for (null == e && (e = 1), r = this.buffer.getChannelData(0), h = this.buffer.getChannelData(1), n = t.buffer.getChannelData(0), a = t.buffer.getChannelData(1), l = Math.min(r.length, n.length), i = s = 0, o = l - 1; s <= o; i = s += 1) (r[i] += n[i] * e), (h[i] += a[i] * e);
                }),
                (t.prototype.play = function (t, e) {
                    var i;
                    null == t && (t = 1), null == e && (e = 1);
                    try {
                        'suspended' === this.l0I11.context.state && this.l0I11.context.resume();
                    } catch (t) {
                        t;
                    }
                    return (this.source = this.l0I11.context.createBufferSource()), (this.source.playbackRate.value = e), (this.source.buffer = this.buffer), (i = this.l0I11.context.createGain()), (i.gain.value = t), this.source.connect(i), i.connect(this.l0I11.context.destination), this.source.start(0, 0, this.source.buffer.length / this.source.buffer.sampleRate);
                }),
                (t.prototype.OOlO0 = function () {
                    return (this.source = this.l0I11.context.createBufferSource()), (this.source.loop = !0), (this.source.buffer = this.buffer), (this.gain = this.l0I11.context.createGain()), (this.gain.gain.value = 0), this.source.connect(this.gain), this.gain.connect(this.l0I11.context.destination), this.source.start();
                }),
                (t.prototype.O0O0O = function (t) {
                    if (null != this.source && t !== this.last_pitch) return (this.last_pitch = t), (this.source.playbackRate.value = t);
                }),
                (t.prototype.IIO0I = function (t) {
                    if (null != this.gain && t !== this.last_gain) return (this.last_gain = t), (this.gain.gain.value = t);
                }),
                (t.prototype.pause = function () {
                    if (!this.paused && null != this.source) return (this.paused = !0), this.source.stop(0);
                }),
                t
            );
        })()),
        (this.Music = (function () {
            function t(t) {
                var e, i, s, l, n;
                for (this.l0I11 = t, this.OOO10 = this.l0I11.context.createScriptProcessor(4096, 1, 1), this.II0lI = 0, this.I1lOO = [1, 2, 3, 5, 7, 9, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43], this.OllIl = [], i = 110, s = l = 0, n = this.I1lOO.length - 1; 0 <= n ? l <= n : l >= n; s = 0 <= n ? ++l : --l) {
                    for (e = (s + 1) * i; e > 3.9 * i; ) e /= 2;
                    this.OllIl.push(Math.round(this.l0I11.context.sampleRate / e));
                }
                (this.IOlOI = this.l0I11.context.sampleRate / 4),
                    (this.llO1I = (function (t) {
                        return function (e) {
                            var i, l, n, a, o, r, h, u, d, c, p;
                            for (o = e.outputBuffer, i = o.getChannelData(0), s = n = 0, r = o.length - 1; n <= r; s = n += 1) {
                                for (d = 0, c = Math.floor(t.II0lI / t.IOlOI), p = 0.1 * Math.pow(1 - (t.II0lI % t.IOlOI) / t.IOlOI, 1), l = a = 0, h = t.OllIl.length - 1; a <= h; l = a += 1) c % (l + 1) == 0 && ((u = t.II0lI % t.OllIl[l]), (u = 2 * (u / t.OllIl[l] - 0.5)), (d += u * p), (p *= 0.6));
                                (i[s] = d), t.II0lI++;
                            }
                        };
                    })(this)),
                    (this.OOO10.onaudioprocess = this.llO1I),
                    this.OOO10.connect(this.l0I11.context.destination);
            }
            return t;
        })()),
        (this.Mode = (function () {
            function e(t, e) {
                (this.id = t), (this.name = e), (this.custom_game_name = this.name), (this.custom_color = !0), (this.radar_shows_leader = !0), (this.max_enter_time = 2700), (this.max_enter_players = 30), (this.options = { friction_ratio: 1, speed_mod: 1 }), (this.rotate_mines = !1), (this.radar_zoom = 2), (this.soundtrack = 'procedurality.mp3'), (this.respawn_delay = 5e3), (this.IlllO = !0), (this.anonymous_ships = !1), (this.spectate = !1), (this.spectate_ship = 1), (this.custom_game_allowed = !0), (this.show_weaponsbar = !0), (this.restricted_weapons_store = !1), (this.show_highscore = !0), (this.infinite_base_lives = !0), (this.llIlI = !0), (this.sharing_enabled = !0), (this.OlII0 = OlII0), (this.OI1I1 = OI1I1);
            }
            return (
                (e.prototype.entered = function (e) {
                    if (this.options.strafe > 0)
                        return (
                            setTimeout(
                                (function (e) {
                                    return function () {
                                        return e.getInstructor().setHue(e.l1110.lIlO0.Ill00.status.hue), e.getInstructor().say(t('Welcome Commander.')), e.getInstructor().say(''), e.getInstructor().say(t('Your ship is fitted with a strafe module. Use [A] to strafe to the left, [D] to strafe to the right.'));
                                    };
                                })(this),
                                1e3
                            ),
                            setTimeout(
                                (function (e) {
                                    return function () {
                                        return e.getInstructor().say(''), e.getInstructor().say(t('Use [C] or [Enter] before using chat keys'));
                                    };
                                })(this),
                                9e3
                            ),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        return t.getInstructor().disappear();
                                    };
                                })(this),
                                15e3
                            )
                        );
                }),
                (e.prototype.getInstructor = function () {
                    return null == this.instructor && ((this.instructor = new Instructor(this.l1110)), this.l1110.display.screen.lO100.add(this.instructor, [0.25, 0.05, 0.5, 0.25])), this.instructor;
                }),
                (e.prototype.drawRadarInfo = function (t) {}),
                (e.prototype.showUI = function () {}),
                (e.prototype.hideUI = function () {}),
                (e.prototype.scorePanelShown = function () {
                    return !1;
                }),
                (e.prototype.userShowScorePanel = function () {}),
                (e.prototype.hideScorePanel = function () {}),
                (e.prototype.showScorePanel = function () {}),
                (e.prototype.userHideScorePanel = function () {}),
                (e.prototype.updateScore = function (t) {}),
                (e.prototype.updateRadarObjects = function (t) {
                    if (null != this.l1110.display.screen.lO100.OOI11) return this.l1110.display.screen.lO100.OOI11.llIO0.updateAsteroidsAliens(t);
                }),
                (e.prototype.getWeaponStoreName = function () {
                    return t('Weapon Store');
                }),
                (e.prototype.setOptions = function (t) {
                    if (((this.options = t), null == this.options.friction_ratio && (this.options.friction_ratio = 1), null == this.options.speed_mod && (this.options.speed_mod = 1), this.options.map_size > 120 && (this.radar_zoom = 4), null != this.options.ships && this.parseShips(this.options), 'team' === this.id && this.options.max_players >= 200 && (this.aow = !0), null != this.options.vocabulary)) return (this.vocabulary = this.options.vocabulary);
                }),
                (e.prototype.acceptChat = function (t, e) {
                    return !0;
                }),
                (e.prototype.fixPositions = function () {}),
                (e.prototype.asteroidsDensityModifier = function (t, e) {
                    return 1;
                }),
                (e.prototype.killed = function (t, e, i) {
                    var s, l;
                    return (this.l1110.killers[t] = !0), (s = this.l1110.names.get(t)), 0 === s.length && (s = null), (l = { score: this.l1110.Ill00.status.score, killer: s, kills: this.l1110.Ill00.status.kills, deaths: this.l1110.Ill00.status.deaths, highscore: this.l1110.Ill00.status.bestscore, gameover: e, rank: i, victory: e && 1 === i, mode: this.id }), this.l1110.killed(t, e, l);
                }),
                (e.prototype.shipCanUpgrade = function () {
                    return this.l1110.lIlO0.Ill00.type.level < this.options.max_level;
                }),
                (e.prototype.shipCanBuyLife = function () {
                    return this.l1110.lIlO0.Ill00.status.lives < 6 && this.l1110.lIlO0.Ill00.type.level > 1;
                }),
                (e.prototype.showUpgrades = function () {
                    return !0;
                }),
                (e.prototype.isTarget = function (t) {
                    return !1;
                }),
                (e.prototype.shipUpgradeLockedMessage = function () {
                    return null;
                }),
                (e.prototype.messageReceived = function (t) {}),
                (e.prototype.ignoreKills = function () {
                    return !1;
                }),
                (e.prototype.modeStep = function () {}),
                (e.prototype.undock = function () {}),
                (e.prototype.respawn = function () {
                    return this.l1110.I0O01.respawn(
                        (function (e) {
                            return function () {
                                if ((e.l1110.display.screen.lO100.IlO1I(), !e.l1110.is_app))
                                    return (window.onbeforeunload = function () {
                                        return t('Exit game?');
                                    });
                            };
                        })(this)
                    );
                }),
                (e.prototype.parseShips = function (t) {
                    var e, i, s, l, n;
                    if (t.ships) {
                        for (t.reset_tree && (OlII0.clear(), OI1I1.clear()), s = t.ships, l = [], e = 0, i = s.length; e < i; e++) {
                            n = s[e];
                            try {
                                (n = JSON.parse(n)), (n.typespec.level = n.level), (n.typespec.model = n.model), (n.typespec.code = 100 * n.level + n.model), (n.typespec.name = n.name), OlII0.add(n), l.push(OI1I1.add(n.typespec));
                            } catch (t) {
                                t;
                            }
                        }
                        return l;
                    }
                }),
                e
            );
        })()),
        (module.exports = this.Mode),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.SurvivalMode = (function (e) {
            function i(e) {
                (this.l1110 = e),
                    i.IO0OI.constructor.call(this, 'survival', 'Survival Mode'),
                    (this.max_enter_time = 1800),
                    (this.radar_zoom = 4),
                    (this.max_enter_players = 50),
                    (this.vocabulary = [
                        { text: 'Hello', icon: 'E', key: 'O' },
                        { text: 'Bye', icon: 'F', key: 'B' },
                        { text: 'Yes', icon: 'L', key: 'Y' },
                        { text: 'No', icon: 'M', key: 'N' },
                        { text: 'Thanks', icon: 'A', key: 'X' },
                        { text: 'Sorry', icon: '¡', key: 'S' },
                        { text: 'No Prob', icon: 'G', key: 'P' },
                        { text: 'Good Game', icon: 'GG', key: 'G' },
                        { text: 'Team', icon: '1', key: 'T' },
                        { text: 'Follow me', icon: 'P', key: 'F' },
                        { text: 'Mine', icon: 'D', key: 'M' },
                        { text: 'Attack', icon: 'I', key: 'A' },
                        { text: 'Help', icon: 'J', key: 'H' },
                        { text: 'Kill', icon: '[', key: 'K' },
                        { text: 'Leader', icon: '.', key: 'L' },
                        { text: 'Hmm', icon: 'K', key: 'Q' },
                    ]),
                    (this.tips_test = 'Destroy asteroids'),
                    (this.tips = [t('Destroy asteroids'), t('Collect gems to upgrade your ship'), t("Fight and don't die!")]);
            }
            return (
                extend(i, e),
                (i.prototype.lOl1l = function (t) {
                    return (
                        (this.game_info = t),
                        null != this.options.choose_ship
                            ? (this.l1110.startGame(t), this.l1110.display.screen.lO100.hide(), (this.l1110.lIlO0.IO11l.I1000.x = 0), (this.l1110.lIlO0.IO11l.I1000.y = -40), (this.next_round_page = new ChooseShipPage(this.l1110, this)), (this.next_round_page.visible = !1), this.l1110.display.screen.lO100.add(this.next_round_page, [0, 0, 1, 1]), this.l1110.I0O01.enter(), this.next_round_page.start(this.options.choose_ship))
                            : (this.l1110.I0O01.enter(),
                              this.l1110.I0O01.respawn(
                                  (function (e) {
                                      return function () {
                                          return e.l1110.startGame(t), (e.scoreboard = new ScorePanel(e.l1110, t.system_hue)), e.l1110.display.screen.lO100.add(e.scoreboard, [0.8, 0, 0.2, 0.52]);
                                      };
                                  })(this)
                              ))
                    );
                }),
                (i.prototype.shipSelected = function (t) {
                    return this.l1110.I0O01.sendModeMessage({ name: 'ship_selected', type: 100 * t.level + t.model }), this.spawn();
                }),
                (i.prototype.spawn = function () {
                    return (
                        (this.spawned_once = !0),
                        this.respawn(),
                        this.l1110.display.hideCursor(),
                        this.l1110.display.screen.lO100.IlO1I(),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.next_round_page.hideButtons();
                                };
                            })(this),
                            500
                        ),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.showTooltips(), null == t.scoreboard && ((t.scoreboard = new ScorePanel(t.l1110, t.game_info.system_hue)), t.l1110.display.screen.lO100.add(t.scoreboard, [0.8, 0, 0.2, 0.52])), t.l1110.display.screen.lO100.IlO1I();
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (i.prototype.entered = function () {
                    return i.IO0OI.entered.call(this);
                }),
                (i.prototype.showUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.updateScore = function (t) {
                    if (null != this.scoreboard) return this.scoreboard.updateScore(t);
                }),
                (i.prototype.showScorePanel = function () {
                    if (null != this.scoreboard && this.scoreboard.shown) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideScorePanel = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.scorePanelShown = function () {
                    return null != this.scoreboard && this.scoreboard.shown;
                }),
                (i.prototype.userShowScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.IlO1I();
                }),
                (i.prototype.userHideScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.hide();
                }),
                (i.prototype.shipCanBuyLife = function () {
                    return i.IO0OI.shipCanBuyLife.call(this) && !this.l1110.lIlO0.IO11l.survival;
                }),
                (i.prototype.modeStep = function () {
                    var t, e, i, s, l, n, a, o, r, h, u;
                    if (this.l1110.lIlO0.IO11l.survival) for (r = (this.l1110.lIlO0.IO11l.II1O0 - this.l1110.lIlO0.IO11l.survival_start) / Ol000.l1000, a = Math.sqrt(Math.min(1, r)), null != this.l1110.display.screen.lO100.OOI11.background && this.l1110.display.screen.lO100.OOI11.background.updateRepulsor(Math.max(1e-5, a)), this.l1110.lIlO0.background.updateRepulsor(Math.max(1e-5, a) * Ol000.OOlIl), s = a * this.l1110.l0I1I * Ol000.OOlIl, o = Ol000.O0lI0 * r, h = this.l1110.lIlO0.Ill00.status.x, u = this.l1110.lIlO0.Ill00.status.y, t = Math.sqrt(h * h + u * u), t < s && t > 0 && ((h /= t), (u /= t), (t = s - t), (this.l1110.lIlO0.Ill00.status.lllOl += h * t * o), (this.l1110.lIlO0.Ill00.status.II110 += u * t * o)), l = this.l1110.lIlO0.IO11l.ships, e = 0, i = l.length; e < i; e++) (n = l[e]), n.O1II0.status.alive && ((h = n.O1II0.status.x), (u = n.O1II0.status.y), (t = Math.sqrt(h * h + u * u)) < s && ((h /= t), (u /= t), (n.O1II0.status.lllOl += h * (1 - t / s) * o), (n.O1II0.status.II110 += u * (1 - t / s) * o)));
                }),
                i
            );
        })(Mode)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.TeamMode = (function (e) {
            function i(e) {
                (this.l1110 = e),
                    i.IO0OI.constructor.call(this, 'team', 'Team Mode'),
                    (this.custom_color = !1),
                    (this.radar_shows_leader = !1),
                    (this.rotate_mines = !0),
                    (this.restricted_weapons_store = !0),
                    (this.vocabulary = [
                        { text: 'You', icon: 'N', key: 'O' },
                        { text: 'Me', icon: 'O', key: 'E' },
                        { text: 'Yes', icon: 'L', key: 'Y' },
                        { text: 'No', icon: 'M', key: 'N' },
                        { text: 'Mine', icon: 'D', key: 'M' },
                        { text: 'Follow', icon: 'P', key: 'F' },
                        { text: 'Attack', icon: 'I', key: 'A' },
                        { text: 'Defend', icon: '%', key: 'D' },
                        { text: 'Wait', icon: 'H', key: 'T' },
                        { text: 'Kill', icon: '[', key: 'K' },
                        { text: 'Base', icon: '4', key: 'B' },
                        { text: 'Hmm', icon: 'K', key: 'Q' },
                        { text: 'Good Game', icon: 'GG', key: 'G' },
                        { text: 'No Prob', icon: 'G', key: 'P' },
                        { text: 'Thanks', icon: 'A', key: 'X' },
                        { text: 'Sorry', icon: '¡', key: 'S' },
                    ]),
                    (this.teams = []),
                    (this.teamboards = []),
                    (this.max_enter_time = 2700),
                    (this.max_enter_players = 60),
                    (this.infinite_base_lives = !1),
                    (this.tips_test = 'Win the game by destroying the enemy bases'),
                    (this.tips = [t('Collect gems to upgrade your ship'), t('Donate gems to your base to upgrade it and access higher tier ships'), t('Win the game by destroying the enemy bases')]);
            }
            return (
                extend(i, e),
                (i.prototype.getWeaponStoreName = function () {
                    return null != this.team ? this.team.base_name + ' - ' + t('Weapon Store') : t('Weapon Store');
                }),
                (i.prototype.lOl1l = function (t) {
                    var e, i, s, l, n;
                    for (this.game_info = t, this.l1110.startGame(t), this.l1110.display.screen.lO100.hide(), this.l1110.lIlO0.IO11l.I1000.x = 0, this.l1110.lIlO0.IO11l.I1000.y = this.aow ? -140 : -60, l = t.mode.teams, e = i = 0, s = l.length; i < s; e = ++i) (n = l[e]), this.teams.push(new Team(this, n, e));
                    return this.options.auto_assign_teams ? this.l1110.I0O01.enter({}) : null != t.mode.restore_ship ? ((this.restore_ship = t.mode.restore_ship), (this.team = this.teams[this.restore_ship.restore_ship_team]), (this.ship_recovery_page = new RecoverShipPage(this.l1110, this, this.team, this.restore_ship.restore_ship_type)), this.l1110.display.screen.lO100.add(this.ship_recovery_page, [0, 0, 1, 1]), this.l1110.display.showCursor(), (this.team_start_page = new TeamStartPage(this.l1110, this))) : 1 === this.teams.length ? ((this.team_start_page = new TeamStartPage(this.l1110, this)), this.teamSelected(this.teams[0])) : ((this.team_start_page = new TeamStartPage(this.l1110, this)), this.l1110.display.screen.lO100.add(this.team_start_page, [0, 0, 1, 1]), this.l1110.display.showCursor());
                }),
                (i.prototype.recoveryDeclined = function () {
                    if ((this.l1110.lIlO0.control.setNavigationListener(null), !this.recovery_answered)) return (this.recovery_answered = !0), (this.team = null), this.l1110.display.screen.lO100.remove(this.ship_recovery_page), this.l1110.display.screen.lO100.add(this.team_start_page, [0, 0, 1, 1]);
                }),
                (i.prototype.recoveryAccepted = function () {
                    var t;
                    if ((this.l1110.lIlO0.control.setNavigationListener(null), !this.recovery_answered)) return (this.recovery_answered = !0), (t = this.teams.indexOf(this.team)), this.l1110.I0O01.enter({ team: t, restore_ship: !0 }), this.l1110.display.screen.lO100.setHue(this.team.hue), this.l1110.lIlO0.setHue(this.team.hue);
                }),
                (i.prototype.messageReceived = function (t) {
                    var e, i, s, l;
                    if ('ship_docked' === t) this.l1110.display.screen.lO100.showWeaponStore(!0);
                    else if ('ship_undocked' === t) this.l1110.display.screen.lO100.hideWeaponStore();
                    else if (null != t && 'team_stats' === t.name) for (null != this.team_stats && null != this.team && (i = this.teams.indexOf(this.team)) >= 0 && (this.team_stats[i].killer.id !== t.data[i].killer.id && this.l1110.message(t.data[i].killer.name + ' best killer in your team'), this.team_stats[i].contributor.id !== t.data[i].contributor.id && this.l1110.message(t.data[i].contributor.name + ' best contributor in your team'), this.team_stats[i].healer.id !== t.data[i].healer.id && this.l1110.message(t.data[i].healer.name + ' best healer in your team')), this.team_stats = t.data, e = s = 0, l = this.teams.length - 1; s <= l; e = s += 1) this.teams[e].stats = this.team_stats[e];
                }),
                (i.prototype.entered = function (t) {
                    var e;
                    return (
                        i.IO0OI.entered.call(this),
                        this.options.auto_assign_teams &&
                            ((e = t.team),
                            (this.team = this.teams[e]),
                            this.l1110.display.screen.lO100.setHue(this.team.hue),
                            this.l1110.lIlO0.setHue(this.team.hue),
                            this.l1110.lIlO0.control.setNavigationListener(null),
                            null != t && t.returning
                                ? setTimeout(
                                      (function (t) {
                                          return function () {
                                              return (
                                                  t.getInstructor().setCharacter(t.team.hue),
                                                  t.getInstructor().say('Welcome OOll0 Commander.\nYour help is definitely needed.\nFight proudly.'),
                                                  setTimeout(function () {
                                                      return t.getInstructor().disappear();
                                                  }, 1e4)
                                              );
                                          };
                                      })(this),
                                      2e3
                                  )
                                : setTimeout(
                                      (function (t) {
                                          return function () {
                                              return (
                                                  t.getInstructor().setCharacter(t.team.hue),
                                                  t.getInstructor().say('Thanks for joining us Commander.\nYou will stand with us in this battle.\nGood luck and fight proudly.'),
                                                  setTimeout(function () {
                                                      return t.getInstructor().disappear();
                                                  }, 1e4)
                                              );
                                          };
                                      })(this),
                                      2e3
                                  )),
                        this.l1110.I0O01.respawn(),
                        this.l1110.display.hideCursor(),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    var e, i, s, l, n, a, o, r, h;
                                    if (null != t.team_start_page) for (o = t.team_start_page.children, s = 0, n = o.length; s < n; s++) (h = o[s]), h.O11IO.push(l01lO.IOO0l);
                                    for (t.l1110.display.screen.lO100.showTooltips(), t.teamboards = [], r = t.teams, i = l = 0, a = r.length; l < a; i = ++l) (h = r[i]), (e = new TeamBoard(h, t, t.l1110)), t.teamboards.push(e), t.l1110.display.screen.lO100.add(e, [0.8, 0, 0.2, 0.52]), (e.num_players = 8), (e.start = !1), (e.force_ratio = void 0), (e.enabled = !1), (e.lO011 = !0), (e.displayed = !1), h === t.team ? (null != t.team_start_page && t.team_start_page.animate(e, 1), (t.scoreboard_index = i), (e.displayed = !0)) : e.O11IO.init({ OOIl0: 1.1 });
                                    return (
                                        t.l1110.display.screen.lO100.IlO1I(),
                                        t.l1110.addKeyListener(9, {
                                            keyPressed: function () {
                                                return t.switchScoreboard();
                                            },
                                            keyReleased: function () {},
                                        }),
                                        setTimeout(function () {
                                            if ((null != t.team_start_page && t.l1110.display.screen.lO100.remove(t.team_start_page), null != t.ship_recovery_page)) return t.l1110.display.screen.lO100.remove(t.ship_recovery_page);
                                        }, 1e3)
                                    );
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (i.prototype.switchScoreboard = function () {
                    var t, e, i, s, l, n;
                    for (s = this.teams.length + 1, this.l1110.is_mobile_app && (s = this.teams.length), this.scoreboard_index = (this.scoreboard_index + 1) % s, l = this.teamboards, t = e = 0, i = l.length; e < i; t = ++e) (n = l[t]), n.displayed && t !== this.scoreboard_index ? ((n.displayed = !1), n.O11IO.set({ OOIl0: 1.1 })) : n.displayed || t !== this.scoreboard_index || ((n.displayed = !0), (n.lO011 = !0), n.O11IO.set({ OOIl0: 0 }));
                }),
                (i.prototype.showScorePanel = function () {
                    if (null != this.teamboards && this.scoreboard_index < this.teamboards.length) return (this.teamboards[this.scoreboard_index].displayed = !0), this.teamboards[this.scoreboard_index].O11IO.set({ OOIl0: 0 });
                }),
                (i.prototype.hideScorePanel = function () {
                    if (null != this.teamboards && this.scoreboard_index < this.teamboards.length) return (this.teamboards[this.scoreboard_index].displayed = !1), this.teamboards[this.scoreboard_index].O11IO.set({ OOIl0: 1.1 });
                }),
                (i.prototype.scorePanelShown = function () {
                    return null != this.teamboards && this.scoreboard_index < this.teamboards.length && this.teamboards[this.scoreboard_index].displayed;
                }),
                (i.prototype.userShowScorePanel = function () {
                    if (null != this.teamboards) return this.scoreboard_index >= this.teamboards.length && (this.scoreboard_index = 0), this.teamboards[this.scoreboard_index].IlO1I();
                }),
                (i.prototype.userHideScorePanel = function () {
                    if (null != this.teamboards && this.scoreboard_index < this.teamboards.length) return this.teamboards[this.scoreboard_index].hide();
                }),
                (i.prototype.asteroidsDensityModifier = function (t, e) {
                    var i, s;
                    return (i = Math.sqrt(t * t + e * e)), (s = 0.5 * Math.sqrt(2)), null != this.options.teams && 1 === this.options.teams.length && (s = 0), (i = Math.abs(i - s)), i < 0.15 ? 0 : 1;
                }),
                (i.prototype.teamSelected = function (t) {
                    var e, i, s, l, n;
                    if (null == this.team) {
                        if (((this.team = t), (e = this.teams.indexOf(this.team)), null != this.options.choose_ship)) {
                            for (l = this.team_start_page.children, i = 0, s = l.length; i < s; i++) (n = l[i]), n.O11IO.push(l01lO.IOO0l);
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        return null != t.team_start_page && t.l1110.display.screen.lO100.remove(t.team_start_page), (t.next_round_page = new ChooseShipPage(t.l1110, t)), (t.next_round_page.visible = !1), t.l1110.display.screen.lO100.add(t.next_round_page, [0, 0, 1, 1]), t.next_round_page.start(t.options.choose_ship);
                                    };
                                })(this),
                                2e3
                            );
                        } else this.l1110.I0O01.enter({ team: e });
                        return this.l1110.display.screen.lO100.setHue(this.team.hue), this.l1110.lIlO0.setHue(this.team.hue), this.l1110.lIlO0.control.setNavigationListener(null);
                    }
                }),
                (i.prototype.shipSelected = function (t) {
                    var e, i, s, l;
                    for (s = this.next_round_page.children, e = 0, i = s.length; e < i; e++) (l = s[e]), l.O11IO.push(l01lO.IOO0l);
                    return (
                        this.l1110.lIlO0.control.setNavigationListener(null),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    if (null != t.next_round_page) return t.l1110.display.screen.lO100.remove(t.next_round_page);
                                };
                            })(this),
                            2e3
                        ),
                        this.l1110.I0O01.sendModeMessage({ name: 'ship_selected', type: 100 * t.level + t.model }),
                        this.l1110.I0O01.enter({ team: this.teams.indexOf(this.team) })
                    );
                }),
                (i.prototype.updateScore = function (t) {
                    var e, i, s, l, n;
                    if (null != this.teamboards) {
                        for (s = this.teamboards, l = [], e = 0, i = s.length; e < i; e++) (n = s[e]), l.push(n.updateScore(t));
                        return l;
                    }
                }),
                (i.prototype.shipCanUpgrade = function () {
                    var t, e;
                    return null != this.team && ((e = this.team.station_model.level), (t = this.team.station_model.I0O1l >= this.team.station_model.crystals_max), 6 === this.l1110.lIlO0.Ill00.type.level ? e >= 3 && t && this.l1110.lIlO0.Ill00.type.level < this.options.max_level : (e >= 3 || this.l1110.lIlO0.Ill00.type.level <= e + 2) && this.l1110.lIlO0.Ill00.type.level < this.options.max_level);
                }),
                (i.prototype.shipCanBuyLife = function () {
                    return i.IO0OI.shipCanBuyLife.call(this) && this.l1110.lIlO0.Ill00.type.level < 7;
                }),
                (i.prototype.shipUpgradeLockedMessage = function () {
                    var e, i;
                    return this.shipCanUpgrade() ? null : this.l1110.lIlO0.Ill00.type.level >= this.options.max_level ? null : ((i = this.team.station_model.level), (e = this.team.station_model.I0O1l >= this.team.station_model.crystals_max), 6 === this.l1110.lIlO0.Ill00.type.level && i >= 3 && !e ? t('Fill station to unlock new ship tiers') : this.l1110.lIlO0.Ill00.type.level > i + 2 && this.l1110.lIlO0.Ill00.type.level < 7 ? t('Upgrade station to unlock new ship tiers') : null);
                }),
                (i.prototype.updateStations = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O;
                    for (i = 1, u = this.teams, s = 0, a = u.length; s < a; s++) for (I = u[s], p = I.station_model, I.open = t.getUint8(i) > 0, i += 1, p.setLevel(t.getUint8(i), this.l1110), i += 1, p.I0O1l = t.getUint32(i, !0), i += 4, p.crystals_max = this.options.crystal_capacity[p.level], i += 1, d = p.modules, l = 0, o = d.length; l < o; l++) (h = d[l]), (O = t.getUint8(i)), (i += 1), h.setAlive(O > 0, this.l1110), h.setShield(Math.max(0, O - 1) / 254, this.l1110);
                    if (null != this.team && this.teams.length > 1) {
                        for (e = 0, c = this.teams, n = 0, r = c.length; n < r; n++) (I = c[n]) !== this.team && I.station_model.alive && e++;
                        0 !== e || this.gameover || ((this.gameover = !0), this.killed(-1, !0, 1));
                    }
                }),
                (i.prototype.attackWarning = function () {
                    var t, e, i, s;
                    if (null != this.teamboards) for (i = this.teamboards, t = 0, e = i.length; t < e; t++) (s = i[t]), s.team === this.team && ((s.warning_count = 20), (s.warning_blink = !1));
                }),
                (i.prototype.acceptChat = function (t, e) {
                    var i;
                    return null == (i = this.l1110.names.getData(t.O1II0.status.id)) || i.friendly === this.team.id || e.indexOf('X') < 0;
                }),
                (i.prototype.killed = function (t, e, i) {
                    var s, l, n, a, o, r, h, u;
                    if (!this.team.station_model.alive) {
                        for (this.gameover = !0, s = 0, r = this.teams, n = 0, o = r.length; n < o; n++) (u = r[n]) !== this.team && (u.station_model.alive || u.station_model.alive_ships > 0) && s++;
                        i = s + 1;
                    }
                    return this.gameover && (1 === i ? this.l1110.lIlIl(3) : this.l1110.lIlIl(1)), 1 === this.l1110.Ill00.type.level && this.l1110.Ill00.status.lives <= 1 && ((this.gameover = !0), (i = void 0)), (this.l1110.killers[t] = !0), (a = this.l1110.names.get(t)), 0 === a.length && (a = null), (h = { score: this.l1110.Ill00.status.score, killer: a, kills: this.l1110.Ill00.status.kills, deaths: this.l1110.Ill00.status.deaths, highscore: this.l1110.Ill00.status.bestscore, gameover: this.gameover, rank: i, victory: this.gameover && 1 === i, mode: this.id }), this.gameover && null != this.team_stats && ((l = this.teams.indexOf(this.team)), this.team_stats[l].killer.id > 0 && (h['Best killer'] = this.l1110.names.f.lO0OI(this.team_stats[l].killer.name)), this.team_stats[l].healer.id > 0 && (h['Best healer'] = this.l1110.names.f.lO0OI(this.team_stats[l].healer.name)), this.team_stats[l].contributor.id > 0 && (h['Best contributor'] = this.l1110.names.f.lO0OI(this.team_stats[l].contributor.name))), this.l1110.killed(t, this.gameover, h);
                }),
                (i.prototype.undock = function () {
                    return this.l1110.I0O01.sendModeMessage('undock');
                }),
                (i.prototype.showUI = function () {
                    var t;
                    if (null != this.teamboards && null != this.teamboards[this.scoreboard_index] && ((t = this.teamboards[this.scoreboard_index]), !t.displayed)) return (t.displayed = !0), (t.lO011 = !0), t.O11IO.set({ OOIl0: 0 });
                }),
                (i.prototype.hideUI = function () {
                    var t;
                    if (null != this.teamboards && null != this.teamboards[this.scoreboard_index] && ((t = this.teamboards[this.scoreboard_index]), t.displayed)) return (t.displayed = !1), t.O11IO.set({ OOIl0: 1.1 });
                }),
                i
            );
        })(Mode)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.InvasionMode = (function (e) {
            function i(e) {
                (this.l1110 = e),
                    i.IO0OI.constructor.call(this, 'invasion', 'Invasion'),
                    (this.max_enter_time = 120),
                    (this.max_enter_players = 6),
                    (this.vocabulary = [
                        { text: 'Hello', icon: 'E', key: 'L' },
                        { text: 'Bye', icon: 'F', key: 'B' },
                        { text: 'Yes', icon: 'L', key: 'Y' },
                        { text: 'No', icon: 'M', key: 'N' },
                        { text: 'Thanks', icon: 'A', key: 'X' },
                        { text: 'Sorry', icon: '¡', key: 'S' },
                        { text: 'No Prob', icon: 'G', key: 'P' },
                        { text: 'Good Game', icon: 'GG', key: 'G' },
                        { text: 'You', icon: 'N', key: 'O' },
                        { text: 'Me', icon: 'O', key: 'E' },
                        { text: 'Mine', icon: 'D', key: 'M' },
                        { text: 'Attack', icon: 'I', key: 'A' },
                        { text: 'Help', icon: 'J', key: 'H' },
                        { text: 'Follow', icon: 'P', key: 'F' },
                        { text: 'Kill', icon: '[', key: 'K' },
                        { text: 'Hmm', icon: 'K', key: 'Q' },
                    ]),
                    (this.tips_test = "Fight and don't die!"),
                    (this.tips = [t("Fight and don't die!"), t('Collect gems to upgrade your ship')]),
                    (this.future_tips = [t('Destroy aliens and OlIO1'), t('Collect gems and weapons'), t("Fight the bosses and don't die!")]),
                    (this.restricted_weapons_store = !0),
                    (this.show_highscore = !1),
                    (this.infinite_base_lives = !1),
                    (this.radar_zoom = 1),
                    (this.soundtrack = 'crystals.mp3'),
                    (this.ecponly = !1),
                    (this.custom_game_allowed = !0),
                    (this.gameover = !1),
                    (this.count_alien_kills = !0);
            }
            return (
                extend(i, e),
                (i.prototype.lOl1l = function (t) {
                    return (
                        this.l1110.I0O01.enter(),
                        this.l1110.I0O01.respawn(
                            (function (e) {
                                return function () {
                                    return e.l1110.startGame(t), (e.scoreboard = new InvasionScoreboard(e.l1110, t.system_hue)), e.l1110.display.screen.lO100.add(e.scoreboard, [0.8, 0, 0.2, 0.52]);
                                };
                            })(this)
                        )
                    );
                }),
                (i.prototype.asteroidsDensityModifier = function (t, e) {
                    return 0;
                }),
                (i.prototype.showUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.updateScore = function (t) {
                    if (null != this.scoreboard) return this.scoreboard.updateScore(t);
                }),
                (i.prototype.showScorePanel = function () {
                    if (null != this.scoreboard && this.scoreboard.shown) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideScorePanel = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.scorePanelShown = function () {
                    return null != this.scoreboard && this.scoreboard.shown;
                }),
                (i.prototype.userShowScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.IlO1I();
                }),
                (i.prototype.userHideScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.hide();
                }),
                (i.prototype.shipCanBuyLife = function () {
                    return i.IO0OI.shipCanBuyLife.call(this);
                }),
                (i.prototype.updateWave = function (e) {
                    var i, s;
                    if (this.scoreboard)
                        return (
                            (s = e.getUint8(1)),
                            s > this.scoreboard.wave &&
                                ((i = 'hsl(' + this.l1110.display.screen.lO100.hue + ',70%,90%)'),
                                (this.scoreboard.wave = s),
                                s > 1
                                    ? (this.l1110.message(t('Wave cleared!').replace('%d', s), i, !1, !0),
                                      setTimeout(
                                          (function (e) {
                                              return function () {
                                                  return e.l1110.message(t('Wave %d').replace('%d', s), i, !1, !0);
                                              };
                                          })(this),
                                          2500
                                      ))
                                    : this.l1110.message(t('Wave %d').replace('%d', s), i, !1, !0)),
                            (this.scoreboard.OlIO1 = e.getUint16(6, !0)),
                            (this.scoreboard.aliens = e.getUint16(8, !0)),
                            (this.scoreboard.wave_start_time = e.getUint32(2, !0)),
                            this.l1110.display.screen.lO100.OOI11.llIO0.updateAsteroidsAliens(e)
                        );
                }),
                (i.prototype.killed = function (t, e, i) {
                    var s;
                    return (e = this.l1110.Ill00.status.lives <= 1 || this.victory), (s = { score: this.l1110.Ill00.status.score, kills: this.l1110.Ill00.status.kills, deaths: this.l1110.Ill00.status.deaths, wave: this.scoreboard.wave, gameover: e, victory: this.victory, mode: this.id }), this.l1110.killed(t, e, s);
                }),
                (i.prototype.modeStep = function () {}),
                (i.prototype.messageReceived = function (e) {
                    var i;
                    switch (e.im_status) {
                        case 'im_victory':
                            if (!this.gameover)
                                return (
                                    (this.gameover = !0),
                                    (this.victory = !0),
                                    (i = 'hsl(' + this.l1110.display.screen.lO100.hue + ',70%,90%)'),
                                    this.l1110.message(t('You win!'), i, !1, !0),
                                    setTimeout(
                                        (function (t) {
                                            return function () {
                                                return t.killed(0, !0, 1);
                                            };
                                        })(this),
                                        5e3
                                    )
                                );
                    }
                }),
                i
            );
        })(Mode)),
        (this.Team = (function () {
            function t(t, e, i) {
                (this.mode = t),
                    (this.id = i),
                    (this.base_name = e.base_name),
                    (this.faction = e.faction),
                    (this.hue = e.hue),
                    (this.open = !1),
                    (this.station_desc = e.station),
                    (this.station_desc.hue = this.hue),
                    (this.members = [
                        { id: 1, type: 101, score: 1e3 },
                        { id: 2, type: 201, score: 1e3 },
                    ]),
                    (this.station_model = new StationModel(this.station_desc, this)),
                    this.mode.l1110.lIlO0.IO11l.addStation(this.station_model);
            }
            return t;
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.TeamBoard = (function (e) {
            function i(t, e, s) {
                (this.team = t),
                    (this.mode = e),
                    (this.l1110 = s),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.teamSelected(), !0;
                            };
                        })(this),
                    }),
                    (this.start = !0),
                    (this.displayed = !0),
                    (this.enabled = this.start && this.team.open),
                    (this.force_ratio = this.start ? 0.5 : 0.6),
                    (this.blending = THREE.AdditiveBlending),
                    (this.num_players = 10),
                    (this.warning_count = 0),
                    (this.warning_blink = !1);
            }
            return (
                extend(i, e),
                (i.prototype.teamSelected = function () {
                    return this.mode.teamSelected(this.team);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.scoredata = t), this.displayed))
                        return this.l1110.display.addJob(
                            1,
                            (function (t) {
                                return function () {
                                    return (t.lO011 = !0);
                                };
                            })(this)
                        );
                }),
                (i.prototype.mouseMove = function (t, e, i) {
                    return !!this.start && (this.mode.team_start_page.mouseOver(this.team), !1);
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K, W, Y, J, Z;
                    if (((this.enabled = this.start && this.team.open), (this.background = 'hsla(' + this.team.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.team.hue + ',50%,50%,.4)'), (this.color = 'hsla(' + this.team.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (K = Math.round((20 * this.llO1l) / 512)), (e.font = K + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'left'), (e.fillStyle = this.color), e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), (e.fillStyle = this.medium), e.fillRect(0, 0.1 * this.llO1l, this.llO1l, 0.1 * this.llO1l), (e.fillStyle = this.background), e.fillRect(0, 0.2 * this.llO1l, this.llO1l, this.lO01I - 0.2 * this.llO1l), (e.fillStyle = this.color), (e.fillStyle = '#000'), e.fillText(this.team.faction, 0.05 * this.llO1l, 0.05 * this.llO1l), (e.fillStyle = this.color), e.fillText(this.team.base_name, 0.05 * this.llO1l, 0.15 * this.llO1l), this.start || this.l1110.is_mobile_app || ((e.textAlign = 'center'), (e.font = Math.round(0.8 * K) + 'pt Play'), e.fillText('TAB', 0.9 * this.llO1l, 0.15 * this.llO1l), (e.strokeStyle = this.color), e.strokeRect(0.85 * this.llO1l, 0.12 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), (e.font = K + 'pt Play'), (n = 0.0025 * this.llO1l), (E = 0.09 * this.llO1l), (p = this.lO01I - E * this.num_players), (U = lIl1O.getShipIcon(101)), (q = 0), null != U && null != this.scoredata)) {
                        for (D = this.scoredata.getUint8(1), g = 2, y = 0, j = D - 1; y <= j; y += 1) (I = this.scoredata.getUint8(g)), (r = this.l1110.names.getData(I)), (g += 8), null != r && r.friendly === this.team.id && q++;
                        (e.globalAlpha = 0.75), e.drawImage(U, this.llO1l - E + n, 0.25 * this.llO1l - E / 2 + n, E - 2 * n, E - 2 * n), (e.fillStyle = '#FFF'), (e.textAlign = 'right'), e.fillText(q, this.llO1l - E + n, 0.25 * this.llO1l), (e.globalAlpha = 1);
                    }
                    if ((this.start && ((p -= 2 * E), (e.font = 2 * K + 'pt FontAwesome'), (e.textAlign = 'center'), this.team.open ? ((e.fillStyle = this.color), e.fillRect(0, this.lO01I - 2 * E, this.llO1l, 2 * E), (e.fillStyle = '#000'), e.fillText('', this.llO1l / 2, this.lO01I - E)) : ((e.fillStyle = this.color), e.fillText('', this.llO1l / 2, this.lO01I - E))), (e.font = K + 'pt Play'), (z = 0.25 * E), (e.fillStyle = this.color), (e.textAlign = 'right'), (k = this.team.station_model.level), e.fillText('Lv' + (k + 1), this.llO1l - z, p - E / 2), (s = this.llO1l - 2 * z - 2 * E), (e.fillStyle = this.medium), e.fillRect(z + E, p - E + z, s, E - 2 * z), (e.fillStyle = '#000'), e.fillRect(z + E + 2, p - E + z + 2, s - 4, E - 2 * z - 4), (e.fillStyle = '#F88'), (o = this.team.station_model.I0O1l / this.team.station_model.crystals_max), e.fillRect(z + E + 4, p - E + z + 4, (s - 8) * o, E - 2 * z - 8), (e.font = K + 'pt FontAwesome'), (e.textAlign = 'left'), e.fillText('', z, p - E / 2), (e.font = Math.round(0.6 * K) + 'pt Play'), (e.textAlign = 'left'), e.fillText(this.team.station_model.I0O1l, z + E + 4, p - 1 * E), (e.textAlign = 'right'), e.fillText(this.team.station_model.crystals_max, z + E + 4 + s - 8, p - 1 * E), this.team.station_model.hasDestroyedModule() && ((e.textAlign = 'center'), e.fillText(t('REPAIR'), z + E + s * this.mode.options.repair_threshold, p - 1 * E), e.beginPath(), (e.strokeStyle = '#FFF'), e.moveTo(z + E + s * this.mode.options.repair_threshold, p - E + z), e.lineTo(z + E + s * this.mode.options.repair_threshold, p), e.stroke()), (e.font = K + 'pt Play'), (a = 0), (this.team.station_model.alive_ships = 0), (N = !1), null != this.scoredata))
                        for (D = this.scoredata.getUint8(1), g = 2, v = 0, G = D - 1; v <= G && !(a >= 10); v += 1) {
                            if (((I = this.scoredata.getUint8(g)), null != (r = this.l1110.names.getData(I)) && r.friendly === this.team.id)) {
                                if (this.mode.team === this.team && 7 === a && I !== this.l1110.lIlO0.Ill00.status.id && !this.start && !N) {
                                    g += 8;
                                    continue;
                                }
                                I === this.l1110.lIlO0.Ill00.status.id && (N = !0), (c = this.scoredata.getUint8(g + 3)), (i = !0 & c), (A = 1 + (this.scoredata.getUint32(g + 4, !0) >> 24)), (k = 1 + ((c >> 5) & 7)), (V = 16777215 & this.scoredata.getUint32(g + 4, !0)), i && this.team.station_model.alive_ships++, (e.globalAlpha = 0.75), I === this.l1110.lIlO0.Ill00.status.id ? (e.fillStyle = 'rgba(255,255,255,.1)') : (e.fillStyle = '#000'), e.fillRect(n, p + a * E + n, this.llO1l - 2 * n, E - 2 * n), (U = lIl1O.getShipIcon(100 * k + A)), null != U && e.drawImage(U, this.llO1l - E + n, p + a * E + n, E - 2 * n, E - 2 * n), (e.globalAlpha = 1), null == r.custom || this.start || ((O = Il01O.I110l(r.custom.badge, r.custom.laser, r.custom.finish, 48, r.custom.hue)), e.drawImage(O, n, p + a * E, 2 * E, E)), (e.fillStyle = this.color), (e.textAlign = 'left'), (C = 2.5 * E), null != this.team.stats && (this.team.stats.killer.id === I && ((e.font = K + 'pt SBGlyphs'), e.fillText('[', C, p + (a + 0.5) * E), (C += 0.8 * E)), this.team.stats.contributor.id === I && ((e.font = K + 'pt SBGlyphs'), e.fillText('D', C, p + (a + 0.5) * E), (C += 0.8 * E)), this.team.stats.healer.id === I && ((e.font = K + 'pt SBGlyphs'), e.fillText('', C, p + (a + 0.5) * E), (C += 0.8 * E))), (e.font = K + 'pt Play'), e.fillText(r.player_name.toUpperCase(), C, p + (a + 0.5) * E), (e.textAlign = 'right'), (Y = e.measureText(V).width), (e.fillStyle = '#000'), e.fillRect(this.llO1l - 1.5 * E - Y - 2, p + (a + 0.25) * E - 1, Y + 4, 0.5 * E + 2), (e.fillStyle = this.color), e.fillText(V, this.llO1l - 1.5 * E, p + (a + 0.5) * E), a++;
                            }
                            g += 8;
                        }
                    for (F = this.lO01I - 0.2 * this.llO1l - E * (this.num_players + 1) - (this.start ? 2 * E : 0), F = Math.min(F, this.llO1l), S = 10, M = -10, R = 10, T = -10, L = this.team.station_model.modules, b = 0, w = L.length; b < w; b++) (_ = L[b]), (S = Math.min(S, _.Il1I1.position.x / 20)), (R = Math.min(R, _.Il1I1.position.y / 20)), (M = Math.max(M, _.Il1I1.position.x / 20)), (T = Math.max(T, _.Il1I1.position.y / 20));
                    for ((M + S) / 2 + 0.5, (T + R) / 2 + 0.5, h = Math.max(4, M - S), u = Math.max(4, T - R), l = Math.min(this.llO1l / (u + 2), F / (h + 1)), B = this.team.station_model.modules, H = 0, x = B.length; H < x; H++) (_ = B[H]), (P = STATION_MODULES.types_by_id[_.type]), (m = StationModuleModel.getModuleImageColorized(P, 16728128)), (f = StationModuleModel.getModuleImageColorized(P, 4259839)), (Z = _.Il1I1.position.x / 20), (J = _.Il1I1.position.y / 20), (d = _.dir), Math.min(this.llO1l, F), (W = _.shield), e.save(), e.translate(this.llO1l / 2, F / 2 + 0.2 * this.llO1l), e.scale(l, l), e.translate(J, Z), e.rotate(180 * THREE.Math.DEG2RAD * d * 0.5), _.alive ? ((e.globalAlpha = Math.sqrt(W)), e.drawImage(f, -1.5, -1.5, 3, 3), (e.globalAlpha = Math.sqrt(1 - W)), e.drawImage(m, -1.5, -1.5, 3, 3)) : ((e.globalAlpha = 0.1), e.drawImage(f, -1.5, -1.5, 3, 3), e.drawImage(m, -1.5, -1.5, 3, 3)), e.restore();
                    return this.warning_count > 0 && ((this.warning_blink = !this.warning_blink), this.warning_blink && ((e.font = 1.5 * K + 'pt FontAwesome'), (e.textAlign = 'center'), (e.textBaseline = 'middle'), (e.fillStyle = '#F88'), (e.shadowBlur = 8), (e.shadowColor = '#F00'), (e.shadowOpacity = 1), e.fillText('', 0.1 * this.llO1l, 0.3 * this.llO1l)), this.warning_count--), e.restore();
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.displayed) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.displayed = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.displayed)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.displayed = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app && !this.start ? (this.mode.switchScoreboard(), !0) : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.TeamStartPage = (function (e) {
            function i(e, s) {
                var l, n, a, o, r, h, u, d, c;
                for (this.l1110 = e, this.mode = s, i.IO0OI.constructor.call(this), h = this.mode.teams.length, d = 0.2, u = this.mode.teams, a = o = 0, r = u.length; o < r; a = ++o) (c = u[a]), (l = new TeamBoard(c, this.mode, this.l1110)), this.mode.teamboards.push(l), this.add(l, [0.5 - (h / 2) * d + a * d + 0.01, 0.2, d - 0.02, 0.7]), this.animate(l, 3 + 0.5 * a);
                (this.choose = new ll110(t('Choose sides'))), (this.choose.font = 'Play'), (this.choose.color = '#FFF'), (this.choose.background = null), this.add(this.choose, [0.2, 0.05, 0.6, 0.05]), this.animate(this.choose, 5), (this.systemname = new ll110(this.mode.game_info.name + ' System')), (this.systemname.font = 'Play'), (this.systemname.color = '#FFF'), (this.systemname.background = null), (this.systemname.align = 'left'), this.add(this.systemname, [0.2, 0.9, 0.5, 0.05]), this.animate(this.systemname, 1), (n = new Date()), n.setYear(n.getFullYear() + 4337 - 2017), (n = n.toLocaleString(translations.getLang(), { month: 'long', day: 'numeric', year: 'numeric' })), (this.gamedate = new ll110(n)), (this.gamedate.font = 'Play'), (this.gamedate.color = '#FFF'), (this.gamedate.background = null), (this.gamedate.align = 'right'), this.add(this.gamedate, [0.3, 0.9, 0.5, 0.05]), this.animate(this.gamedate, 2);
            }
            return (
                extend(i, e),
                (i.prototype.OO0Il = function () {
                    var t, e;
                    if (this.l1110.is_app && null == this.caret) return (this.caret = new Caret('OOlO1')), (this.caret_index = 0), (t = this.mode.teamboards[0].lOlI0[0] + this.mode.teamboards[0].lOlI0[2] / 2), (e = this.mode.teamboards[0].lOlI0[1]), this.add(this.caret, [t - 0.025, e - 0.02, 0.05, 0.05]), (this.caret_spacing = (this.mode.teamboards[1].lOlI0[0] - this.mode.teamboards[0].lOlI0[0]) / 0.05), this.l1110.lIlO0.control.setNavigationListener(this), this.animate(this.caret, 3.5);
                }),
                (i.prototype.animate = function (t, e) {
                    return t.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }), t.O11IO.pause(e), t.O11IO.push({ OI11O: 10, k: 0.01, f: 0.17 });
                }),
                (i.prototype.gamepadNavigation = function (t) {
                    switch (t) {
                        case 'left':
                            return this.setIndex((this.caret_index + this.mode.teams.length - 1) % this.mode.teams.length);
                        case 'right':
                            return this.setIndex((this.caret_index + 1) % this.mode.teams.length);
                        case 'ok':
                            if (this.mode.teamboards[this.caret_index].enabled) return this.mode.teamboards[this.caret_index].teamSelected(), this.l1110.lIlO0.control.setNavigationListener(null);
                    }
                }),
                (i.prototype.setIndex = function (t) {
                    if (null != this.caret && t !== this.caret_index) return (this.caret_index = t), this.caret.setOffset(this.caret_index * this.caret_spacing, 0);
                }),
                (i.prototype.mouseOver = function (t) {
                    var e, i, s, l;
                    for (l = this.mode.teams, e = i = 0, s = l.length; i < s; e = ++i) l[e] === t && this.setIndex(e);
                }),
                i
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.DeclineRecoveryButton = (function (e) {
            function i(t, e, s) {
                (this.team = t),
                    (this.mode = e),
                    (this.l1110 = s),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.recoveryDeclined(), !0;
                            };
                        })(this),
                    }),
                    (this.force_ratio = 10),
                    (this.blending = THREE.AdditiveBlending);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i;
                    return (this.background = 'hsla(' + this.team.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.team.hue + ',50%,50%,.4)'), (this.color = 'hsla(' + this.team.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (e.fillStyle = this.color), e.fillRect(0, 0, this.llO1l, this.lO01I), (i = Math.round((this.lO01I / 16) * 5)), (e.font = i + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'center'), (e.fillStyle = '#000'), e.fillText(t('Abandon rescued ship'), this.llO1l / 2, this.lO01I / 2), (e.font = i + 'pt FontAwesome'), this.l1110.is_app ? Gamepad.drawButton('B', e, 0.5 * this.lO01I, this.lO01I / 2, i, this.team.hue) : e.fillText('', 0.5 * this.lO01I, this.lO01I / 2), e.restore();
                }),
                (i.prototype.recoveryDeclined = function () {
                    return this.mode.recoveryDeclined();
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.RecoverShipButton = (function (e) {
            function i(t, e, s, l) {
                (this.team = t),
                    (this.mode = e),
                    (this.l1110 = s),
                    (this.shipid = l),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.recoveryAccepted(), !0;
                            };
                        })(this),
                    }),
                    (this.force_ratio = 2),
                    (this.blending = THREE.AdditiveBlending);
            }
            return (
                extend(i, e),
                (i.prototype.recoveryAccepted = function () {
                    return this.mode.recoveryAccepted();
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s;
                    return (this.background = 'hsla(' + this.team.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.team.hue + ',50%,50%,.4)'), (this.color = 'hsla(' + this.team.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (e.fillStyle = this.background), e.fillRect(0, 0, this.llO1l, this.lO01I), (s = Math.round(this.lO01I / 16)), (e.font = s + 'pt Play'), (e.fillStyle = this.color), e.fillRect(0, 0, this.llO1l, 2 * s), (i = IlI1l.I110l(this.shipid, this.hue)), e.drawImage(i, this.llO1l / 2 - 0.25 * this.lO01I, 0.1 * this.lO01I, 0.5 * this.lO01I, 0.5 * this.lO01I), (e.textBaseline = 'middle'), (e.textAlign = 'center'), (e.fillStyle = '#000'), e.fillText(t('Message from %s').replace('%s', this.team.faction), this.llO1l / 2, s), (e.fillStyle = this.color), e.fillText(t('Your ship has been rescued at:'), this.llO1l / 2, 0.6 * this.lO01I), e.fillText(this.team.base_name, this.llO1l / 2, 0.7 * this.lO01I), (e.fillStyle = this.color), e.fillRect(0, 0.8 * this.lO01I, this.llO1l, 0.2 * this.lO01I), (e.fillStyle = '#000'), e.fillText(t('Accept rescued ship'), this.llO1l / 2, 0.9 * this.lO01I), this.l1110.is_app ? Gamepad.drawButton('A', e, 0.1 * this.lO01I, 0.9 * this.lO01I, s, this.team.hue) : ((e.font = s + 'pt FontAwesome'), e.fillText('', 0.1 * this.lO01I, 0.9 * this.lO01I)), e.restore();
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.RecoverShipPage = (function (t) {
            function e(t, i, s, l) {
                (this.l1110 = t), (this.mode = i), (this.team = s), (this.shipid = l), e.IO0OI.constructor.call(this), (this.recovery = new RecoverShipButton(this.team, this.mode, this.l1110, this.shipid)), this.add(this.recovery, [0.3, 0.3, 0.4, 0.3]), (this.decline = new DeclineRecoveryButton(this.team, this.mode, this.l1110)), this.add(this.decline, [0.3, 0.61, 0.4, 0.06]), this.animate(this.recovery, 1), this.animate(this.decline, 2), this.l1110.is_app && this.l1110.lIlO0.control.setNavigationListener(this);
            }
            return (
                extend(e, t),
                (e.prototype.animate = function (t, e) {
                    return t.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }), t.O11IO.pause(e), t.O11IO.push({ OI11O: 10, k: 0.01, f: 0.17 });
                }),
                (e.prototype.gamepadNavigation = function (t) {
                    switch (t) {
                        case 'ok':
                            return this.recovery.recoveryAccepted();
                        case 'cancel':
                            return this.decline.recoveryDeclined();
                    }
                }),
                e
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.DeathMatchMode = (function (e) {
            function i(e, s, l) {
                (this.l1110 = e), null == s && (s = 'deathmatch'), null == l && (l = 'Deathmatch'), i.IO0OI.constructor.call(this, s, l), (this.vocabulary = []), (this.radar_zoom = 1), (this.max_enter_time = 3600), (this.max_enter_players = 10), (this.soundtrack = 'argon.mp3'), (this.respawn_delay = 1e3), (this.IlllO = !1), (this.pro = !1), (this.anonymous_ships = !0), (this.radar_shows_leader = !1), (this.show_weaponsbar = !1), (this.tips_test = 'Kill any ship for %d point'), (this.tips = [t('Kill any ship for %d point').replace('%d', 1), t('Kill your target for %d points').replace('%d', 2), t('Score %d points to win the round').replace('%d', 12)]);
            }
            return (
                extend(i, e),
                (i.prototype.lOl1l = function (t) {
                    return (this.game_info = t), this.l1110.startGame(t), this.l1110.display.screen.lO100.hide(), (this.l1110.lIlO0.IO11l.I1000.x = 0), (this.l1110.lIlO0.IO11l.I1000.y = -40), (this.next_round_page = new NextRoundPage(this.l1110, this)), (this.next_round_page.visible = !1), this.l1110.display.screen.lO100.add(this.next_round_page, [0, 0, 1, 1]), this.l1110.I0O01.enter();
                }),
                (i.prototype.entered = function (t) {}),
                (i.prototype.shipSelected = function (t) {
                    return this.l1110.I0O01.sendModeMessage({ dm_status: 'dm_ship_selected', dm_value: 100 * t.level + t.model });
                }),
                (i.prototype.showUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.showScorePanel = function () {
                    if (null != this.scoreboard && this.scoreboard.shown) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideScorePanel = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.scorePanelShown = function () {
                    return null != this.scoreboard && this.scoreboard.shown;
                }),
                (i.prototype.userShowScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.IlO1I();
                }),
                (i.prototype.userHideScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.hide();
                }),
                (i.prototype.updateScore = function (t) {
                    if (null != this.scoreboard) return this.scoreboard.updateScore(t);
                }),
                (i.prototype.shipCanUpgrade = function () {
                    return !1;
                }),
                (i.prototype.showUpgrades = function () {
                    return !1;
                }),
                (i.prototype.roundStarted = function () {
                    return (
                        (this.status = 'round'),
                        this.respawn(),
                        this.l1110.display.hideCursor(),
                        this.l1110.display.screen.lO100.IlO1I(),
                        this.next_round_page.startRound(),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.showTooltips(), null == t.scoreboard && ((t.scoreboard = new DMScorePanel(t.l1110, t.game_info.system_hue)), t.l1110.display.screen.lO100.add(t.scoreboard, [0.8, 0, 0.2, 0.52])), t.l1110.display.screen.lO100.IlO1I(), (t.next_round_page.visible = !1);
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (i.prototype.roundEnded = function (t) {
                    return (
                        (this.status = 'roundend'),
                        setTimeout(
                            (function (e) {
                                return function () {
                                    return e.l1110.display.showCursor(), (e.next_round_page.visible = !0), e.next_round_page.removeButtons(), e.next_round_page.startScorePanel(t.dm_results), e.l1110.display.screen.lO100.hide(), (e.l1110.lIlO0.OlIO1.fadeout = !0);
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (i.prototype.showWaitingPage = function () {
                    return this.next_round_page.startWaiting(), this.l1110.display.showCursor(), this.l1110.display.screen.lO100.hide(), (this.next_round_page.visible = !0), (this.l1110.lIlO0.IO11l.I1000.x = 0), (this.l1110.lIlO0.IO11l.I1000.y = -40);
                }),
                (i.prototype.showCountDownPage = function (t) {
                    if ((this.l1110.display.showCursor(), this.l1110.display.screen.lO100.hide(), (this.next_round_page.visible = !0), this.next_round_page.startCountDown(this.ships_choice, t.dm_time + Date.now()), this.l1110.lIlO0.OlIO1.l1IO1(this.map_id), null != this.l1110.display.screen.lO100.OOI11.background)) return this.l1110.display.screen.lO100.OOI11.background.l1IO1(this.map_id);
                }),
                (i.prototype.messageReceived = function (e) {
                    switch (e.dm_status) {
                        case 'waiting':
                            (this.status = 'waiting'), this.showWaitingPage();
                            break;
                        case 'countdown':
                            (this.status = 'countdown'), (this.ships_choice = e.dm_ships), (this.map_id = e.dm_map_id), this.showCountDownPage(e);
                            break;
                        case 'round':
                            return this.roundStarted();
                        case 'roundend':
                            return this.roundEnded(e);
                        case 'gameover':
                            return this.l1110.display.screen.lO100.hide(), this.l1110.l00OO.killed({ rounds: e.dm_rounds, wins: e.dm_wins, gameover: !0 }), (this.l1110.gameover = !0), this.l1110.I0O01.socket.close();
                        case 'dm_target':
                            return (this.target_id = e.dm_target), this.l1110.message(t('New target assigned'), '#F88');
                    }
                }),
                (i.prototype.isTarget = function (t) {
                    return t === this.target_id;
                }),
                (i.prototype.ignoreKills = function () {
                    return 'round' !== this.status;
                }),
                (i.prototype.killed = function (t, e, i) {
                    return setTimeout(
                        (function (e) {
                            return function () {
                                var i, s;
                                if ('round' === e.status) return (e.l1110.killers[t] = !0), (i = e.l1110.names.get(t)), 0 === i.length && (i = null), (s = { score: e.l1110.Ill00.status.score, killer: i, kills: e.l1110.Ill00.status.kills, deaths: e.l1110.Ill00.status.deaths, highscore: e.l1110.Ill00.status.bestscore, gameover: !1, rank: 0, victory: !1, mode: e.id }), e.l1110.killed(t, !1, s);
                            };
                        })(this),
                        1e3
                    );
                }),
                (i.prototype.respawn = function () {
                    if ('round' === this.status) {
                        if (!this.spectate)
                            return this.l1110.I0O01.respawn(
                                (function (e) {
                                    return function () {
                                        if ((e.l1110.display.screen.lO100.IlO1I(), !e.l1110.is_app))
                                            return (window.onbeforeunload = function () {
                                                return t('Exit game?');
                                            });
                                    };
                                })(this)
                            );
                        if ((this.l1110.display.screen.lO100.IlO1I(), !this.l1110.is_app))
                            return (window.onbeforeunload = function () {
                                return t('Exit game?');
                            });
                    }
                }),
                (i.prototype.findBestServer = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                    for (f = [], c = 0, null, e = 0, a = t.length; e < a; e++) for (O = t[e], p = O.systems, s = 0, o = p.length; s < o; s++) (m = p[s]), m.open && m.players < this.max_enter_players && m.mode === this.id && (f.push(m), (m.II0Ol = O), (c += m.players));
                    for (
                        f.sort(function (t, e) {
                            return e.time - t.time;
                        }),
                            I = c + 1,
                            i = Math.ceil(I / (this.max_enter_players - 2));
                        f.length > i;

                    )
                        f.splice(0, 1);
                    for (d = 0, l = 0, r = f.length; l < r; l++) (m = f[l]), (d += (100 * (this.max_enter_players - m.players)) / this.max_enter_players);
                    if (d > 0) for (u = Math.floor(Math.random() * d), d = 0, n = 0, h = f.length; n < h; n++) if (((m = f[n]), (d += (100 * (this.max_enter_players - m.players)) / this.max_enter_players), u < d)) return m.II0Ol;
                    return null;
                }),
                i
            );
        })(Mode)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ProDeathMatchMode = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this, this.l1110, 'deathmatch', 'Pro Deathmatch'), (this.pro = !0), (this.spectate = !1), (this.custom_game_name = 'Deathmatch');
            }
            return (
                extend(e, t),
                (e.prototype.findBestServer = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y;
                    for (y = [], I = 0, null, e = 0, a = t.length; e < a; e++) for (f = t[e], O = f.systems, s = 0, o = O.length; s < o; s++) (g = O[s]), g.open && g.players < this.max_enter_players && g.mode === this.id && (y.push(g), (g.II0Ol = f), (I += g.players));
                    if (this.l1110.l1OI0.Il1lI())
                        for (
                            y.sort(function (t, e) {
                                return e.players_list.length - t.players_list.length;
                            }),
                                l = 0,
                                r = y.length;
                            l < r;
                            l++
                        )
                            if (((f = y[l]), f.players_list.length < this.max_enter_players)) return f.II0Ol;
                    for (
                        y.sort(function (t, e) {
                            return e.time - t.time;
                        }),
                            m = I + 1,
                            i = Math.ceil(m / (this.max_enter_players - 2));
                        y.length > i;

                    )
                        y.splice(0, 1);
                    for (p = 0, n = 0, h = y.length; n < h; n++) (g = y[n]), (p += (100 * Math.max(0, this.max_enter_players - 1 - g.players)) / this.max_enter_players);
                    if (p > 0) for (c = Math.floor(Math.random() * p), p = 0, d = 0, u = y.length; d < u; d++) if (((g = y[d]), (p += (100 * Math.max(0, this.max_enter_players - 1 - g.players)) / this.max_enter_players), c < p)) return g.II0Ol;
                    return null;
                }),
                e
            );
        })(DeathMatchMode)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.DMScorePanel = (function (e) {
            function i(t, e) {
                (this.l1110 = t), (this.hue = e), i.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 10 / 11), (this.align_top = !0), this.l1110.addKeyListener(9, this), (this.shown = !0);
            }
            return (
                extend(i, e),
                (i.prototype.updateHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.view = t), this.visible)) return (this.lO011 = !0);
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    if (null != this.view) {
                        for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',50%,50%,.4)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', e.save(), e.translate(this.px, this.l1O1l), v = Math.round((20 * this.llO1l) / 512), e.font = v + 'pt Play', e.textBaseline = 'middle', e.textAlign = 'left', e.fillStyle = this.color, e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), e.fillStyle = this.background, e.fillRect(0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l), e.fillStyle = this.color, e.fillStyle = '#000', e.fillText(t('Scoreboard'), 0.05 * this.llO1l, 0.05 * this.llO1l), e.textAlign = 'center', e.font = Math.round(0.8 * v) + 'pt Play', this.l1110.is_mobile_app || (e.fillText('TAB', 0.5 * this.llO1l, 0.05 * this.llO1l), (e.strokeStyle = '#000'), e.strokeRect(0.45 * this.llO1l, 0.02 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), v = Math.round((22 * this.llO1l) / 512), e.font = v + 'pt Play', e.textBaseline = 'middle', m = Math.min(10, this.view.getUint8(1)), u = 2, p = this.l1110.lIlO0.Ill00.status.rank, s = e.createLinearGradient(0, 0, this.llO1l, 0), s.addColorStop(0, 'hsla(' + this.hue + ',40%,20%,.5)'), s.addColorStop(0.05, 'hsla(' + this.hue + ',40%,20%,0)'), s.addColorStop(1, 'hsla(' + this.hue + ',40%,20%,.5)'), l = e.createLinearGradient(0, 0, this.llO1l, 0), l.addColorStop(0, 'hsla(' + this.hue + ',40%,60%,.5)'), l.addColorStop(0.05, 'hsla(' + this.hue + ',40%,60%,0)'), l.addColorStop(1, 'hsla(' + this.hue + ',40%,60%,.5)'), e.translate(0, this.lO01I / 11), p > 10 && ((a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && (a = this.l1110.lIlO0.Ill00.status.hue), (c = this.l1110.player_name), (I = this.l1110.lIlO0.Ill00.status.score), (o = 9), (e.fillStyle = l), e.fillRect(0, (o / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), this.l1110.lIlO0.Ill00.status.l1OI0 && ((n = Math.round(0.08 * this.lO01I)), null != (i = this.l1110.names.getCustom(this.l1110.lIlO0.Ill00.status.id)) && ((h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n))), e.fillText(p + '. ' + c, 5 + 0.16 * this.lO01I, ((o + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(I, this.llO1l - 10, ((o + 0.5) / 11) * this.lO01I), (m = Math.min(9, m))), o = d = 0, f = m - 1; d <= f; o = d += 1) (r = this.view.getUint8(u)), (g = 16777215 & this.view.getUint32(u + 4, !0)), (u += 8), (a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && null != (y = this.l1110.lIlO0.IO11l.ll0l1[r]) && (a = y.O1II0.status.hue), (O = this.l1110.names.get(r)), r === this.l1110.lIlO0.Ill00.status.id ? ((e.fillStyle = l), (i = this.l1110.names.getCustom(r))) : ((e.fillStyle = s), (i = this.l1110.names.getCustom(r))), e.fillRect(0, (o / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), null != i && ((n = Math.round(0.08 * this.lO01I)), (h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n)), e.fillText(o + 1 + '. ' + O, 5 + 0.16 * this.lO01I, ((o + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(g, this.llO1l - 10, ((o + 0.5) / 11) * this.lO01I);
                        return e.restore();
                    }
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.shown = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.shown)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.shown = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app ? this.hide() : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                (i.prototype.keyPressed = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (i.prototype.keyReleased = function () {}),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.DMScoreLine = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.ecpimg = null);
            }
            return (
                extend(e, t),
                (e.prototype.setInfo = function (t) {
                    return (this.info = t), (this.lO011 = !0), (this.ecpimg = null);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s, l, n, a;
                    if (null != this.info)
                        return (
                            t.save(),
                            t.translate(this.px, this.l1O1l),
                            (t.fillStyle = 'rgba(255,255,255,.1)'),
                            t.fillRect(0, 0.025 * this.lO01I, this.llO1l, 0.95 * this.lO01I),
                            (n = Math.round(0.5 * this.lO01I)),
                            this.l1110.mode.pro && (n = Math.round(0.4 * this.lO01I)),
                            (t.font = n + 'pt Play'),
                            (t.textBaseline = 'middle'),
                            (t.textAlign = 'left'),
                            (t.fillStyle = '#FFF'),
                            t.fillText(this.info.name, 4 * this.lO01I, 0.5 * this.lO01I),
                            t.fillText(this.info.rank + '.', 0.25 * this.lO01I, 0.5 * this.lO01I),
                            (t.textAlign = 'center'),
                            t.fillText(this.info.kills, 0.95 * this.llO1l, 0.5 * this.lO01I),
                            (t.fillStyle = 'rgba(255,255,255,.75)'),
                            t.fillText(this.info.rounds, 0.75 * this.llO1l, 0.5 * this.lO01I),
                            t.fillText(this.info.wins, 0.85 * this.llO1l, 0.5 * this.lO01I),
                            this.info.pro && (this.info.rated ? ((l = this.info.live_rank - this.info.previous_rank), (l = l > 0 ? '▼' + l : l < 0 ? '▲' + Math.abs(l) : ''), t.fillText(this.info.live_rank, 0.6 * this.llO1l, 0.5 * this.lO01I), (a = t.measureText(this.info.live_rank).width), (t.textAlign = 'left'), (t.font = Math.round(0.5 * n) + 'pt Play'), (t.fillStyle = 'rgba(255,255,255,.5)'), t.fillText(l, 0.6 * this.llO1l + a / 2 + n / 2, 0.5 * this.lO01I), (s = Math.round(this.info.rating)), (i = Math.round(this.info.previous_rating)), (l = s - i), (l = l > 0 ? '+' + l : l < 0 ? l : ''), (t.textAlign = 'center'), (t.font = n + 'pt Play'), t.fillText(s, 0.45 * this.llO1l, 0.5 * this.lO01I), (t.fillStyle = 'rgba(255,255,255,.75)'), (a = t.measureText(s).width), (t.textAlign = 'left'), (t.font = Math.round(0.5 * n) + 'pt Play'), (t.fillStyle = 'rgba(255,255,255,.5)'), t.fillText(l, 0.45 * this.llO1l + a / 2 + n / 2, 0.5 * this.lO01I)) : ((t.fillStyle = 'rgba(255,255,255,.5)'), t.fillText('--', 0.6 * this.llO1l, 0.5 * this.lO01I), t.fillText('--', 0.45 * this.llO1l, 0.5 * this.lO01I))),
                            (e = this.info.custom),
                            null != e &&
                                (null == this.ecpimg &&
                                    ((this.ecpimg = new Il01O(this.lO01I, e).toImage()),
                                    (this.ecpimg.onload = (function (t) {
                                        return function () {
                                            return (t.lO011 = !0);
                                        };
                                    })(this))),
                                this.ecpimg.complete && t.drawImage(this.ecpimg, 1.5 * this.lO01I, 0, 2 * this.lO01I, this.lO01I)),
                            t.restore()
                        );
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.DMScoreHeader = (function (e) {
            function i(t) {
                (this.l1110 = t), i.IO0OI.constructor.call(this);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i, s;
                    return e.save(), e.translate(this.px, this.l1O1l), (i = e.createLinearGradient(0, 0, 0, this.lO01I)), i.addColorStop(0, 'rgba(255,255,255,0)'), i.addColorStop(1, 'rgba(255,255,255,.1)'), (e.fillStyle = i), e.fillRect(0, 0.025 * this.lO01I, this.llO1l, 0.95 * this.lO01I), (s = Math.round(0.6 * this.lO01I)), this.l1110.mode.pro && (s = Math.round(0.5 * this.lO01I)), (e.font = s + 'pt FontAwesome'), (e.textBaseline = 'middle'), (e.textAlign = 'center'), (e.fillStyle = 'rgba(255,255,255,.75)'), e.fillText('', 0.75 * this.llO1l, 0.5 * this.lO01I), e.fillText('', 0.85 * this.llO1l, 0.5 * this.lO01I), (e.font = s + 'pt SBGlyphs'), e.fillText('[', 0.95 * this.llO1l, 0.5 * this.lO01I), this.l1110.mode.pro && ((e.font = Math.round(0.7 * s) + 'pt Play'), e.fillText(t('Points'), 0.45 * this.llO1l, 0.65 * this.lO01I), e.fillText(t('Rank'), 0.6 * this.llO1l, 0.65 * this.lO01I), (e.font = Math.round(0.4 * s) + 'pt Play'), e.fillText(t('LIVE'), 0.45 * this.llO1l, 0.2 * this.lO01I), e.fillText(t('LIVE'), 0.6 * this.llO1l, 0.2 * this.lO01I)), e.restore();
                }),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.NextRoundPage = (function (e) {
            function i(e, s) {
                var l;
                (this.l1110 = e),
                    (this.mode = s),
                    i.IO0OI.constructor.call(this),
                    this.mode.pro ? ((this.title = new ll110(t('PRO DEATHMATCH'))), (this.cup = new Cup('')), this.add(this.cup, [0.4, 0.06, 0.2, 0.2]), this.animate(this.cup, 1)) : (this.title = new ll110(t('Deathmatch').toUpperCase())),
                    (this.title.font = 'Play'),
                    (this.title.color = '#FFF'),
                    (this.title.background = null),
                    (this.title.text_shadow.opacity = 1),
                    (this.title.text_shadow.blur = 20),
                    (this.title.text_shadow.color = '#F80'),
                    (this.title.stroke_size = 8),
                    (this.title.levelmod = -1),
                    (this.title.stroke_color = '#000'),
                    (this.title.blending = THREE.NormalBlending),
                    this.add(this.title, [0.3, 0.18, 0.4, 0.04]),
                    this.animate(this.title, 0.75),
                    this.l1110.is_app &&
                        ((this.quit_button = new QuitDMButton(
                            this.l1110,
                            200,
                            (function (t) {
                                return function () {
                                    return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                                };
                            })()
                        )),
                        this.add(this.quit_button, [0, 0.94, 0.2, 0.06]),
                        this.animate(this.quit_button, 0.75)),
                    (this.nextround = new ll110(t('Choose your ship for this round'))),
                    (this.nextround.font = 'Play'),
                    (this.nextround.color = '#FFF'),
                    (this.nextround.background = null),
                    (this.nextround.text_shadow.opacity = 1),
                    (this.nextround.text_shadow.blur = 20),
                    (this.nextround.text_shadow.color = '#F80'),
                    (this.nextround.stroke_size = 4),
                    (this.nextround.stroke_color = '#000'),
                    (this.nextround.blending = THREE.NormalBlending),
                    this.add(this.nextround, [0.1, 0.3, 0.8, 0.05]),
                    this.animate(this.nextround, 1),
                    (this.countdown = new ll110('10')),
                    (this.countdown.font = 'Play'),
                    (this.countdown.color = '#FFF'),
                    (this.countdown.background = null),
                    this.add(this.countdown, [0.1, 0.85, 0.8, 0.1]),
                    this.animate(this.countdown, 1.5),
                    (this.buttons = []),
                    (this.scorelines = []),
                    (this.scoreheader = new DMScoreHeader(this.l1110)),
                    (this.scoreheader.visible = !1),
                    (l = this.mode.pro ? 0.1 : 0.2),
                    this.add(this.scoreheader, [l, 0.2, 1 - 2 * l, 0.7 / 11]);
            }
            return (
                extend(i, e),
                (i.prototype.animate = function (t, e) {
                    return t.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }), t.O11IO.pause(e), t.O11IO.push({ d: 1, k: 0.01, f: 0.17 });
                }),
                (i.prototype.disappear = function (t) {
                    return t.O11IO.set({ d: 1, k: 0.05, f: 0.2, opacity: 0, l0OOl: 0.5, Ol1I0: 0.5 });
                }),
                (i.prototype.bump = function (t) {
                    return t.O11IO.set({ d: 0.1, l0OOl: 1.5, Ol1I0: 1.5, k: 0.1, f: 0.3 }), t.O11IO.push({ d: 0.8, k: 0.05, f: 0.2 });
                }),
                (i.prototype.scoranim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.5, OOIl0: 2 * (Math.random() - 0.5) }), t.O11IO.pause(Math.random()), t.O11IO.push({ d: 4, k: 0.01, f: 0.2 });
                }),
                (i.prototype.superanim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.01, rotation: 180 * THREE.Math.DEG2RAD * 2 }), t.O11IO.push({ d: 4, k: 0.05, f: 0.2 });
                }),
                (i.prototype.topanim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.01 }), t.O11IO.push({ d: 4, k: 0.05, f: 0.2 });
                }),
                (i.prototype.removeButtons = function () {
                    var t, e, i, s;
                    for (s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.dispose(), this.remove(t);
                    return (this.buttons = []);
                }),
                (i.prototype.createButtons = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    for (this.removeButtons(), i = s = 0, n = t.length; s < n; i = ++s) (r = t[i]), (t[i] = this.l1110.mode.OlII0.ships_by_code[r]);
                    for (o = t.length, h = 0.25, i = l = 0, a = t.length; l < a; i = ++l) (r = t[i]), (e = new ShipSelectButton(this.l1110, this.mode, r, (-180 * THREE.Math.DEG2RAD) / 8 + ((i / Math.max(1, o - 1)) * (180 * THREE.Math.DEG2RAD)) / 4)), this.add(e, [0.5 - (o / 2) * h + i * h + 0.01, 0.35, h - 0.02, 0.45]), this.animate(e, 0.5 * i), this.buttons.push(e), 1 === t.length && e.setSelected(!0);
                }),
                (i.prototype.shipSelected = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), e.setSelected(e === t);
                    return this.mode.shipSelected(t.ship);
                }),
                (i.prototype.startWaiting = function () {
                    var e, i, s, l;
                    for (this.status = 'waiting', this.countdown.visible = !0, this.visible = !0, this.countdown.IIOI1 = this.countdown.lOlI0 = [0.1, 0.46, 0.8, 0.08], this.countdown.l0I00(t('Waiting for more players')), this.nextround.visible = !1, this.animate(this.nextround, 0), this.animate(this.title, 0), null != this.quit_button && (this.animate(this.quit_button, 0), (this.quit_button.enabled = !0)), null != this.cup && this.animate(this.cup, 0), this.animate(this.countdown, 0), s = this.scorelines, e = 0, i = s.length; e < i; e++) (l = s[e]), this.disappear(l);
                    this.disappear(this.scoreheader);
                }),
                (i.prototype.startCountDown = function (t, e) {
                    var i, s, l, n, a, o, r;
                    for (this.countdown_time = e, this.status = 'countdown', this.visible = !0, this.createButtons(t), a = Math.floor(Math.max(0, Math.min(10, (this.countdown_time - Date.now()) / 1e3))), this.countdown.visible = !0, this.countdown.l0I00(a), this.countdown.IIOI1 = this.countdown.lOlI0 = [0.3, 0.85, 0.4, 0.1], this.animate(this.countdown, 0.5), this.nextround.visible = !0, this.animate(this.nextround, 0), this.animate(this.nextround, 0), this.animate(this.title, 0), null != this.quit_button && (this.animate(this.quit_button, 0), (this.quit_button.enabled = !0)), null != this.cup && this.animate(this.cup, 0), l = this.scorelines, i = 0, s = l.length; i < s; i++) (n = l[i]), this.disappear(n);
                    this.disappear(this.scoreheader), this.l1110.is_app && (null == this.caret && ((this.caret = new Caret('OOlO1')), (this.caret_index = 0), this.add(this.caret)), (o = this.buttons[0].lOlI0[0] + this.buttons[0].lOlI0[2] / 2), (r = this.buttons[0].lOlI0[1]), (this.caret.visible = !0), (this.caret.lOlI0 = this.caret.IIOI1 = [o - 0.025, r - 0.02, 0.05, 0.05]), this.buttons.length > 1 && (this.caret_spacing = (this.buttons[1].lOlI0[0] - this.buttons[0].lOlI0[0]) / 0.05), this.l1110.lIlO0.control.setNavigationListener(this));
                }),
                (i.prototype.startRound = function () {
                    var t, e, i, s;
                    for (this.status = 'round', this.l1110.lIlO0.control.setNavigationListener(null), null != this.caret && (this.caret.visible = !1), this.disappear(this.countdown), s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), this.disappear(t), (t.enabled = !1);
                    if ((this.disappear(this.nextround), this.disappear(this.title), null != this.quit_button && (this.disappear(this.quit_button), (this.quit_button.enabled = !1)), null != this.cup)) return this.disappear(this.cup);
                }),
                (i.prototype.startScorePanel = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c;
                    for (s = l = 0; l <= 9; s = ++l) null == this.scorelines[s] && ((this.scorelines[s] = new DMScoreLine(this.l1110)), (r = this.mode.pro ? 0.1 : 0.2), this.add(this.scorelines[s], [r, 0.2 + (0.7 * (s + 1)) / 11, 1 - 2 * r, 0.7 / 11])), (this.scorelines[s].visible = !1);
                    if (e.length > 0) {
                        for (
                            this.scoreheader.visible = !0,
                                this.scoranim(this.scoreheader),
                                d = 1,
                                c = 1,
                                h = 0,
                                e.sort(function (t, e) {
                                    return e.dm_kills - t.dm_kills;
                                }),
                                a = e[0].dm_kills,
                                i = (function (t) {
                                    return function (e) {
                                        return t.scorelines[e].setInfo({ name: t.l1110.names.get(u.dm_id), pro: t.mode.pro, kills: u.dm_kills, deaths: u.dm_deaths, rounds: u.dm_rounds, wins: u.dm_wins, rank: c, rating: u.dm_live_rating, live_rank: u.dm_live_rank, previous_rating: u.dm_previous_rating, previous_rank: u.dm_previous_rank, rated: u.dm_rated, custom: t.l1110.names.getCustom(u.dm_id) }), u.dm_id === t.l1110.lIlO0.Ill00.status.id && (h = c), (d += 1), (t.scorelines[e].visible = !0), t.scoranim(t.scorelines[e]);
                                    };
                                })(this),
                                s = n = 0,
                                o = e.length;
                            n < o && ((u = e[s]), !(s >= 10));
                            s = ++n
                        )
                            u.dm_kills < a && ((c = d), (a = u.dm_kills)), i(s);
                        return 1 === h ? (this.countdown.l0I00(t('You win!')), (this.countdown.lOlI0 = this.countdown.IIOI1 = [0.1, 0.025, 0.8, 0.1]), this.superanim(this.countdown)) : ((this.countdown.lOlI0 = this.countdown.IIOI1 = [0.1, 0.025, 0.8, 0.1]), this.countdown.l0I00(t('Your rank:') + ' #' + h), this.topanim(this.countdown));
                    }
                }),
                (i.prototype.OO0Il = function () {
                    var t;
                    switch (this.status) {
                        case 'waiting':
                            return (this.countdown.visible = Date.now() % 1e3 < 700), this.removeButtons();
                        case 'countdown':
                            if ((t = Math.floor(Math.max(0, Math.min(10, (this.countdown_time - Date.now()) / 1e3)))) !== this.countdown.text) return this.countdown.l0I00(t), this.bump(this.countdown);
                    }
                }),
                (i.prototype.gamepadNavigation = function (t) {
                    switch (t) {
                        case 'left':
                            return this.setIndex((this.caret_index + this.buttons.length - 1) % this.buttons.length);
                        case 'right':
                            return this.setIndex((this.caret_index + 1) % this.buttons.length);
                        case 'ok':
                            return this.buttons[this.caret_index].lIl1I(0, 0, 0), this.buttons[this.caret_index].lI1O0(0, 0, 0);
                        case 'cancel':
                            return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                    }
                }),
                (i.prototype.setIndex = function (t) {
                    if (null != this.caret && t !== this.caret_index) return (this.caret_index = t), this.caret.setOffset(this.caret_index * this.caret_spacing, 0);
                }),
                (i.prototype.mouseOver = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, e = i = 0, s = l.length; i < s; e = ++i) l[e] === t && this.setIndex(e);
                }),
                i
            );
        })(OO00l)),
        (this.Cup = (function (t) {
            function e() {
                return e.IO0OI.constructor.apply(this, arguments);
            }
            return (
                extend(e, t),
                (e.prototype.lllO1 = function (t) {
                    var e, i;
                    return t.save(), (t.globalAlpha = 1), t.translate(this.px, this.l1O1l), (i = 0.8 * this.lO01I), (t.font = i + 'pt FontAwesome'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), (e = t.createLinearGradient(0, 0, this.llO1l, this.lO01I)), e.addColorStop(0, '#FCEABB'), e.addColorStop(0.5, '#FCCD4D'), e.addColorStop(0.51, '#F8B500'), e.addColorStop(1, '#FBDF93'), (t.fillStyle = e), (t.shadowColor = '#000'), (t.shadowOpacity = 1), (t.shadowBlur = this.lO01I / 20), t.fillText(this.text, this.llO1l / 2, this.lO01I / 2), t.restore();
                }),
                e
            );
        })(ll110)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.QuitDMButton = (function (e) {
            function i(t, e, s) {
                (this.l1110 = t),
                    (this.hue = e),
                    (this.llO1I = s),
                    i.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.llO1I(), !0;
                            };
                        })(this),
                    }),
                    (this.hue = 200);
            }
            return (
                extend(i, e),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o;
                    return (this.background1 = 'hsla(' + this.hue + ',50%,30%,.5)'), (this.background2 = 'hsla(' + this.hue + ',50%,10%,.8)'), (this.color = 'hsl(' + this.hue + ',50%,80%)'), e.save(), e.translate(this.px, this.l1O1l), (i = e.createLinearGradient(0, 0, 0.2 * this.lO01I, this.lO01I)), i.addColorStop(0, this.background1), i.addColorStop(1, this.background2), (e.fillStyle = i), (a = this.lO01I / 4), (o = this.llO1l), (s = this.lO01I), e.beginPath(), e.moveTo(0, 0), e.lineTo(o - a, 0), e.lineTo(o, a), e.lineTo(o, s), e.lineTo(0, s), e.closePath(), e.fill(), (l = o / 2), (n = Math.round(Math.min(s / 2.5, o / 16))), (e.textAlign = 'center'), (e.textBaseline = 'middle'), (e.fillStyle = this.color), (e.font = n + 'pt Play'), e.fillText(t('Quit to Menu'), l, s / 2), (e.font = n + 'pt FontAwesome'), e.fillText('', s / 2, s / 2), this.l1110.using_gamepad && Gamepad.drawButton('B', e, o - s / 2, s / 2, s / 4, this.hue, !0), e.restore();
                }),
                i
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.RoundEndPage = (function (e) {
            function i(e, s) {
                var l, n, a, o, r, h, u, d;
                for (this.l1110 = e, this.mode = s, i.IO0OI.constructor.call(this), r = this.mode.teams.length, u = 0.2, h = this.mode.teams, n = a = 0, o = h.length; a < o; n = ++a) (d = h[n]), (l = new TeamBoard(d, this.mode, this.l1110)), this.mode.teamboards.push(l), this.add(l, [0.5 - (r / 2) * u + n * u + 0.01, 0.2, u - 0.02, 0.7]), this.animate(l, 3 + 0.5 * n);
                (this.title = new ll110(t('NEXT ROUND'))), (this.title.font = 'Play'), (this.title.color = '#FFF'), (this.title.background = null), this.add(this.title, [0.1, 0.05, 0.8, 0.1]), this.animate(this.title, 5);
            }
            return (
                extend(i, e),
                (i.prototype.animate = function (t, e) {
                    return t.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }), t.O11IO.pause(e), t.O11IO.push({ OI11O: 10, k: 0.01, f: 0.17 });
                }),
                i
            );
        })(OO00l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ShipSelectButton = (function (t) {
            function e(t, i, s, l) {
                (this.l1110 = t),
                    (this.mode = i),
                    (this.ship = s),
                    (this.rotation = l),
                    e.IO0OI.constructor.call(this, {
                        pressed: (function (t) {
                            return function () {
                                return t.shipSelected(), !0;
                            };
                        })(this),
                        lOlOI: (function (t) {
                            return function () {
                                return (t.enabled = !t.selected), !0;
                            };
                        })(this),
                    }),
                    (this.start = !0),
                    (this.displayed = !0),
                    (this.shipimg = null);
            }
            return (
                extend(e, t),
                (e.prototype.shipSelected = function () {
                    return this.parent.shipSelected(this);
                }),
                (e.prototype.setSelected = function (t) {
                    if (t !== this.selected && ((this.selected = t), (this.lO011 = !0), !this.selected)) return (this.enabled = !0);
                }),
                (e.prototype.setShip = function (t) {
                    return (this.ship = t), (this.lO011 = !0);
                }),
                (e.prototype.updateScore = function (t) {
                    if (((this.scoredata = t), this.displayed)) return (this.lO011 = !0);
                }),
                (e.prototype.mouseMove = function (t, e, i) {
                    return this.mode.next_round_page.mouseOver(this), !0;
                }),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s, l, n, a, o;
                    for (this.background = 'hsla(' + this.l1110.hue + ',70%,15%,.3)', this.medium = 'hsla(' + this.l1110.hue + ',50%,50%,.4)', this.medium2 = 'hsla(' + this.l1110.hue + ',100%,70%,.6)', this.color = 'hsla(' + this.l1110.hue + ',100%,70%,1)', t.save(), t.translate(this.px, this.l1O1l), o = Math.round(this.lO01I / 20), t.font = o + 'pt Play', t.textBaseline = 'middle', t.textAlign = 'center', l = this.lO01I / 100, t.strokeStyle = this.medium, this.selected && (t.strokeStyle = this.color), e = t.createRadialGradient(this.llO1l / 2, this.lO01I / 2, 0, this.llO1l / 2, this.lO01I / 2, 0.71 * Math.max(this.llO1l, this.lO01I)), e.addColorStop(0, '#000'), e.addColorStop(1, this.background), t.fillStyle = e, t.beginPath(), t.moveTo(8 * l, l), t.lineTo(l, 8 * l), t.lineTo(l, this.lO01I - 4 * l), t.lineTo(4 * l, this.lO01I - l), t.lineTo(this.llO1l - 8 * l, this.lO01I - l), t.lineTo(this.llO1l - l, this.lO01I - 8 * l), t.lineTo(this.llO1l - l, 4 * l), t.lineTo(this.llO1l - 4 * l, l), t.closePath(), t.fill(), t.lineWidth = l, t.stroke(), this.selected && ((o = Math.round(this.lO01I / 10)), (t.fillStyle = this.color), (t.font = o + 'pt FontAwesome'), t.fillText('', this.llO1l / 2, 0.9 * this.lO01I)), t.globalCompositeOperation = 'destination-out', t.fillStyle = 'rgba(0,0,0,1)', i = s = 0, a = this.lO01I - 1; s <= a; i = s += 4) t.fillRect(0, i, this.llO1l, 1.2);
                    return (t.globalCompositeOperation = 'source-over'), (o = Math.round(this.lO01I / 20)), (t.font = o + 'pt Play'), (t.fillStyle = this.color), t.fillText(this.ship.name, this.llO1l / 2, 0.1 * this.lO01I), null != this.ship.designer && ((t.fillStyle = this.medium2), (t.font = Math.round(0.7 * o) + 'pt Play'), t.fillText('Designed by: ' + this.ship.designer, this.llO1l / 2, 0.8 * this.lO01I)), null != this.ship.inspired && ((t.fillStyle = this.medium2), (t.font = Math.round(0.7 * o) + 'pt Play'), t.fillText('Inspired by: ' + this.ship.inspired, this.llO1l / 2, 0.8 * this.lO01I)), (n = new lIl1O(this.ship, this.l1110.hue / 360)), (o = Math.min(this.llO1l, this.lO01I)), null == this.shipimg && (this.shipimg = n.get3DImage(o, this.rotation)), t.drawImage(this.shipimg, this.llO1l / 2 - o / 2, this.lO01I / 2 - o / 2, o, o), t.restore();
                }),
                e
            );
        })(l1I1l)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.InvasionScoreboard = (function (e) {
            function i(t, e) {
                (this.l1110 = t), (this.hue = e), i.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 10 / 11), (this.align_top = !0), this.l1110.addKeyListener(9, this), (this.shown = !0), (this.wave = 0), (this.OlIO1 = 0), (this.aliens = 0), (this.wave_start_time = 0);
            }
            return (
                extend(i, e),
                (i.prototype.updateHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.view = t), this.visible)) return (this.lO011 = !0);
                }),
                (i.prototype.setModeData = function (t) {}),
                (i.prototype.fillAsteroid = function (t, e, i, s) {
                    var l, n, a, o, r, h;
                    for (o = new OII10(1), t.beginPath(), l = n = 0; n <= 19; l = n += 1) (a = 0.8 + 0.4 * o.next()), (r = e + Math.cos((l / 20) * (180 * THREE.Math.DEG2RAD) * 2) * s * a), (h = i + Math.sin((l / 20) * (180 * THREE.Math.DEG2RAD) * 2) * s * a), 0 === l ? t.moveTo(r, h) : t.lineTo(r, h);
                    return t.closePath(), t.fill();
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x;
                    if (null != this.view) {
                        for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',50%,50%,.4)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', e.save(), e.translate(this.px, this.l1O1l), w = Math.round((20 * this.llO1l) / 512), e.font = w + 'pt Play', e.textBaseline = 'middle', e.textAlign = 'left', e.fillStyle = this.color, e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), e.fillStyle = this.background, e.fillRect(0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l), e.fillStyle = this.color, e.fillStyle = '#000', e.fillText(t('Scoreboard'), 0.05 * this.llO1l, 0.05 * this.llO1l), this.l1110.using_gamepad ? Gamepad.drawButton('RB', e, 0.5 * this.llO1l, 0.05 * this.llO1l, 0.8 * w, this.hue) : this.l1110.is_mobile_app || ((e.textAlign = 'center'), (e.font = Math.round(0.8 * w) + 'pt Play'), e.fillText('TAB', 0.5 * this.llO1l, 0.05 * this.llO1l), (e.strokeStyle = '#000'), e.strokeRect(0.45 * this.llO1l, 0.02 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), e.textAlign = 'left', e.textBaseline = 'bottom', this.wave > 0 ? ((e.font = Math.round(1.5 * w) + 'pt Play'), (e.fillStyle = this.color), e.fillText(t('Wave %d').replace('%d', this.wave), 0.05 * this.llO1l, 0.24 * this.lO01I), (x = Math.floor((this.l1110.lIlO0.IO11l.II1O0 - this.wave_start_time) / 60)), (e.textAlign = 'right'), (e.font = Math.round(w) + 'pt Play'), x >= 60 && ((y = x % 60), y < 10 && (y = '0' + y), (x = Math.floor(x / 60) + ':' + y)), e.fillText(x, 0.95 * this.llO1l, 0.24 * this.lO01I)) : ((m = Math.min(6, this.view.getUint8(1))), m < 6 && ((e.font = Math.round(0.9 * w) + 'pt Play'), (e.fillStyle = this.color), (e.textAlign = 'left'), e.fillText(t('Waiting for more players'), 0.05 * this.llO1l, 0.24 * this.lO01I)), (x = 120 - Math.floor((this.l1110.lIlO0.IO11l.II1O0 - this.wave_start_time) / 60)) > 0 && ((e.textAlign = 'right'), (e.fillStyle = this.color), (e.font = Math.round(w) + 'pt Play'), x >= 60 && ((y = x % 60), y < 10 && (y = '0' + y), (x = Math.floor(x / 60) + ':' + y)), e.fillText(x, 0.95 * this.llO1l, 0.24 * this.lO01I))), e.fillStyle = this.medium, e.fillRect(0.05 * this.llO1l, 0.25 * this.lO01I, 0.9 * this.llO1l, 0.01 * this.lO01I), e.fillStyle = this.color, e.font = Math.round(1.5 * w) + 'pt Play', e.textAlign = 'left', e.textBaseline = 'middle', e.fillText(this.OlIO1, 0.26 * this.llO1l, 0.35 * this.lO01I), e.fillText(this.aliens, 0.76 * this.llO1l, 0.35 * this.lO01I), e.font = Math.round(1.5 * w) + 'pt FontAwesome', e.textAlign = 'right', b = 1.5 * w, this.fillAsteroid(e, 0.24 * this.llO1l - b / 2, 0.35 * this.lO01I, b / 2), null == this.alien_img && ((this.alien_img = new Image()), (this.alien_img.crossOrigin = 'Anonymous'), (this.alien_img.src = 'https://starblast.data.neuronality.com/img/alien.png')), this.alien_img.complete && this.alien_img.width > 0 && e.drawImage(this.alien_img, 0.74 * this.llO1l - 0.1 * this.llO1l, 0.35 * this.lO01I - 0.05 * this.llO1l, 0.1 * this.llO1l, 0.1 * this.llO1l), w = Math.round((22 * this.llO1l) / 512), e.font = w + 'pt Play', e.textBaseline = 'middle', m = Math.min(6, this.view.getUint8(1)), u = 2, p = this.l1110.lIlO0.Ill00.status.rank, s = e.createLinearGradient(0, 0, this.llO1l, 0), s.addColorStop(0, 'hsla(' + this.hue + ',40%,20%,.5)'), s.addColorStop(0.05, 'hsla(' + this.hue + ',40%,20%,0)'), s.addColorStop(1, 'hsla(' + this.hue + ',40%,20%,.5)'), l = e.createLinearGradient(0, 0, this.llO1l, 0), l.addColorStop(0, 'hsla(' + this.hue + ',40%,60%,.5)'), l.addColorStop(0.05, 'hsla(' + this.hue + ',40%,60%,0)'), l.addColorStop(1, 'hsla(' + this.hue + ',40%,60%,.5)'), e.translate(0, this.lO01I / 11), p > 6 && ((a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && (a = this.l1110.lIlO0.Ill00.status.hue), (c = this.l1110.player_name), (I = this.l1110.lIlO0.Ill00.status.score), (o = 9), (e.fillStyle = l), e.fillRect(0, (o / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), this.l1110.lIlO0.Ill00.status.l1OI0 && ((n = Math.round(0.08 * this.lO01I)), null != (i = this.l1110.names.getCustom(this.l1110.lIlO0.Ill00.status.id)) && ((h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n))), e.fillText(p + '. ' + c, 5 + 0.16 * this.lO01I, ((o + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(I, this.llO1l - 10, ((o + 0.5) / 11) * this.lO01I), (m = Math.min(9, m))), o = d = 0, f = m - 1; d <= f; o = d += 1) (r = this.view.getUint8(u)), (g = 16777215 & this.view.getUint32(u + 4, !0)), (u += 8), (a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && null != (v = this.l1110.lIlO0.IO11l.ll0l1[r]) && (a = v.O1II0.status.hue), (O = this.l1110.names.get(r)), r === this.l1110.lIlO0.Ill00.status.id ? ((e.fillStyle = l), (i = this.l1110.names.getCustom(r))) : ((e.fillStyle = s), (i = this.l1110.names.getCustom(r))), e.fillRect(0, ((o + 4) / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), null != i && ((n = Math.round(0.08 * this.lO01I)), (h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 4 + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n)), e.fillText(o + 1 + '. ' + O, 5 + 0.16 * this.lO01I, ((o + 4 + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(g, this.llO1l - 10, ((o + 4 + 0.5) / 11) * this.lO01I);
                        return e.restore();
                    }
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.shown = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.shown)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.shown = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app ? this.hide() : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                (i.prototype.keyPressed = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (i.prototype.keyReleased = function () {}),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.BattleRoyaleMode = (function (e) {
            function i(e, s, l) {
                (this.l1110 = e), null == s && (s = 'battleroyale'), null == l && (l = 'Battle Royale'), i.IO0OI.constructor.call(this, s, l), (this.vocabulary = []), (this.radar_zoom = 2), (this.high_def_radar = !0), (this.max_enter_time = 120), (this.max_enter_players = 30), (this.soundtrack = 'crystals.mp3'), (this.respawn_delay = 1e3), (this.IlllO = !1), (this.anonymous_ships = !1), (this.radar_shows_leader = !1), (this.show_weaponsbar = !0), (this.restricted_weapons_store = !0), (this.OlII0 = BATTLE_SHIPS), (this.OI1I1 = BATTLE_SHIP_TYPES), this.OlII0.add(OlII0.ships_by_code[101]), this.OI1I1.add(OI1I1.types_by_code[101]), (this.l1000 = 36e3), (this.OOlIl = 1.3), (this.O0lI0 = 0.003), (this.RADIATION_START = 7200), (this.custom_game_allowed = !0), (this.llIlI = !1), (this.tips_test = 'Collect weapons and refills'), (this.tips = [t('Collect weapons and refills'), t('Kill other players'), t('Be the last player standing')]), (this.spawned = !1);
            }
            return (
                extend(i, e),
                (i.prototype.lOl1l = function (t) {
                    return (this.game_info = t), this.l1110.startGame(t), this.l1110.display.screen.lO100.hide(), (this.l1110.lIlO0.IO11l.I1000.x = 0), (this.l1110.lIlO0.IO11l.I1000.y = -40), (this.next_round_page = new BattleRoyalePage(this.l1110, this)), (this.next_round_page.visible = !1), this.l1110.display.screen.lO100.add(this.next_round_page, [0, 0, 1, 1]), this.l1110.I0O01.enter();
                }),
                (i.prototype.entered = function (t) {}),
                (i.prototype.shipSelected = function (t) {
                    return this.l1110.I0O01.sendModeMessage({ br_status: 'br_ship_selected', br_value: 100 * t.level + t.model }), this.spawn();
                }),
                (i.prototype.showUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.showScorePanel = function () {
                    if (null != this.scoreboard && this.scoreboard.shown) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideScorePanel = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.scorePanelShown = function () {
                    return null != this.scoreboard && this.scoreboard.shown;
                }),
                (i.prototype.userShowScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.IlO1I();
                }),
                (i.prototype.userHideScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.hide();
                }),
                (i.prototype.updateScore = function (t) {
                    if (null != this.scoreboard) return (this.scoreboard.survivors = this.l1110.I0O01.alive_ships), this.scoreboard.updateScore(t);
                }),
                (i.prototype.shipCanUpgrade = function () {
                    return !1;
                }),
                (i.prototype.showUpgrades = function () {
                    return !1;
                }),
                (i.prototype.updateRadar = function (t) {
                    if (null != this.l1110.display.screen.lO100.OOI11 && null != this.l1110.display.screen.lO100.OOI11.llIO0) return this.l1110.display.screen.lO100.OOI11.llIO0.updateShips(t);
                }),
                (i.prototype.roundStarted = function () {
                    return (this.anonymous_ships = !0), (this.OII1l = this.l1110.lIlO0.IO11l.II1O0), (this.status = 'playing'), this.spawned_once || this.spawn(), (this.next_round_page.visible = !1);
                }),
                (i.prototype.spawn = function () {
                    return (
                        (this.spawned_once = !0),
                        this.respawn(),
                        this.l1110.display.hideCursor(),
                        this.l1110.display.screen.lO100.IlO1I(),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.next_round_page.hideButtons();
                                };
                            })(this),
                            500
                        ),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.showTooltips(), null == t.scoreboard && ((t.scoreboard = new BattleScoreboard(t.l1110, t.game_info.system_hue)), t.l1110.display.screen.lO100.add(t.scoreboard, [0.8, 0, 0.2, 0.52])), t.l1110.display.screen.lO100.IlO1I();
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (i.prototype.showCountDownPage = function () {
                    return (this.l1110.lIlO0.IO11l.I1000.x = 0), (this.l1110.lIlO0.IO11l.I1000.y = -40), this.l1110.display.showCursor(), this.l1110.display.screen.lO100.hide(), (this.next_round_page.visible = !0), this.next_round_page.startCountDown(this.ships_choice, Date.now() + ((7800 - this.l1110.lIlO0.IO11l.II1O0) / 60) * 1e3);
                }),
                (i.prototype.messageReceived = function (t) {
                    switch (t.br_status) {
                        case 'br_waiting':
                            (this.status = 'waiting'), (this.ships_choice = t.br_ships), this.showCountDownPage(t);
                            break;
                        case 'br_info':
                            return (this.next_round_page.player_count = t.br_playercount);
                        case 'br_starting':
                            return (this.next_round_page.countdown_time = Date.now() + 1e4);
                        case 'br_start':
                            return this.roundStarted();
                    }
                }),
                (i.prototype.killed = function (t, e, i) {
                    return setTimeout(
                        (function (e) {
                            return function () {
                                var s, l;
                                return (s = e.l1110.names.get(t)), 0 === s.length && (s = null), (l = { killer: s, kills: e.l1110.Ill00.status.kills, gameover: !0, rank: i, victory: 1 === i, mode: e.id }), e.l1110.killed(t, !0, l);
                            };
                        })(this),
                        1 === i ? 5e3 : 3e3
                    );
                }),
                (i.prototype.respawn = function () {
                    return this.l1110.I0O01.respawn(
                        (function (e) {
                            return function () {
                                if ((e.l1110.display.screen.lO100.IlO1I(), !e.l1110.is_app))
                                    return (window.onbeforeunload = function () {
                                        return t('Exit game?');
                                    });
                            };
                        })(this)
                    );
                }),
                (i.prototype.drawRadarInfo = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M;
                    if (((y = new OII10(this.options.map_id || 0)), (O = new I010I(this.options.map_id || 0)), (M = []), M.push({ x: 1, y: 1, size: 0.05 }), (o = Math.floor(this.options.map_size / 30)) > 0)) for (r = d = 0, v = o - 1; d <= v; r = d += 1) for (h = p = 0, b = o - 1; p <= b; h = p += 1) M.push({ x: ((r + y.next()) / o) * 2 - 1, y: ((h + y.next()) / o) * 2 - 1, size: ((y.next() + 0.5) / 40) * 2 });
                    for (r = I = 0, c = M.length; I < c; r = ++I)
                        for (z = M[r], x = z.x, E = z.y, w = z.size, s = m = -1; m <= 1; s = m += 1)
                            for (l = f = -1; f <= 1; l = f += 1) {
                                for (t.fillStyle = 'hsla(60,50%,50%,.3)', t.beginPath(), u = g = 0; g <= 39; u = g += 1) (k = Math.cos((u / 40) * (180 * THREE.Math.DEG2RAD) * 2)), (_ = Math.sin((u / 40) * (180 * THREE.Math.DEG2RAD) * 2)), (e = O.IlOI1(k + 100 * r, _, 3)), (i = O.IlOI1(k + 100 * r, _ + 50, 3)), (k *= 0.2 + 1.6 * e), (_ *= 0.2 + 1.6 * i), t.lineTo(x + k * w + 2 * s, _ * w - E + 2 * l);
                                t.closePath(), t.fill(), (t.fillStyle = 'hsla(60,50%,50%,1)'), t.beginPath(), (n = x + 2 * s), (a = 2 * l - E), t.moveTo(n + 0.005, a - 0.03), t.lineTo(n - 0.015, a), t.lineTo(n, a + 0.01), t.lineTo(n - 0.005, a + 0.03), t.lineTo(n + 0.015, a), t.lineTo(n, a - 0.01), t.closePath(), t.fill();
                            }
                }),
                (i.prototype.createWeaponZones = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d;
                    if (((o = new OII10(this.options.map_id || 0)), new I010I(this.options.map_id || 0), (d = []), d.push({ x: 1, y: 1, size: 0.05 }), (t = Math.floor(this.options.map_size / 30)) > 0)) for (e = s = 0, r = t - 1; s <= r; e = s += 1) for (i = n = 0, h = t - 1; n <= h; i = n += 1) d.push({ x: (e + o.next()) / t, y: (i + o.next()) / t, size: ((o.next() + 0.5) / 40) * 2 });
                    for (this.weapon_zones = [], e = a = 0, l = d.length; a < l; e = ++a) (u = d[e]), this.weapon_zones.push({ x: (u.x - 0.5) * this.options.map_size * 10, y: (u.y - 0.5) * this.options.map_size * 10 });
                    return this.weapon_zones;
                }),
                (i.prototype.fixPositions = function () {
                    var t, e, i, s, l;
                    if (null != this.l1110.lIlO0.background.weapon_zones) {
                        for (s = this.l1110.lIlO0.background.weapon_zones.children, l = [], e = 0, i = s.length; e < i; e++) (t = s[e]), l.push(this.l1110.lIlO0.IO11l.Ill0l(t));
                        return l;
                    }
                }),
                (i.prototype.modeStep = function () {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g;
                    if (null == this.l1110.lIlO0.background.weapon_zones) {
                        for (this.createWeaponZones(), i = this.l1110.lIlO0.background.weapon_zones = new THREE.Group(), i.position.z = -2, u = this.weapon_zones, s = l = 0, n = u.length; l < n; s = ++l) (g = u[s]), (r = new WeaponZoneMarker().l0OlI), (r.position.x = g.x), (r.position.y = g.y), (r.position.z = s / 100), (r.scale.x = 40), (r.scale.y = 40), i.add(r);
                        this.l1110.lIlO0.background.lIlO0.add(i);
                    }
                    if (('playing' === this.status && 1 === this.l1110.I0O01.alive_ships && this.l1110.lIlO0.IO11l.II1O0 > this.OII1l + 600 && !this.gameover && ((this.gameover = !0), this.killed(0, !0, 1)), this.l1110.lIlO0.IO11l.II1O0 >= this.RADIATION_START)) for (this.repulsive_warning || ((this.repulsive_warning = !0), this.l1110.message(t('Warning: Repulsive gravity field detected'), '#F62'), this.l1110.l0I11.alert()), O = (this.l1110.lIlO0.IO11l.II1O0 - this.RADIATION_START) / this.l1000, p = Math.sqrt(Math.min(1, O)), null != this.l1110.display.screen.lO100.OOI11.background && this.l1110.display.screen.lO100.OOI11.background.updateRepulsor(Math.max(1e-5, p)), this.l1110.lIlO0.background.updateRepulsor(Math.max(1e-5, p) * this.OOlIl), h = p * this.l1110.l0I1I * this.OOlIl, I = this.O0lI0 * O, m = this.l1110.lIlO0.Ill00.status.x, f = this.l1110.lIlO0.Ill00.status.y, e = Math.sqrt(m * m + f * f), e < h && e > 0 && ((m /= e), (f /= e), (e = h - e), (this.l1110.lIlO0.Ill00.status.lllOl += m * e * I), (this.l1110.lIlO0.Ill00.status.II110 += f * e * I)), d = this.l1110.lIlO0.IO11l.ships, o = 0, a = d.length; o < a; o++) (c = d[o]), c.O1II0.status.alive && ((m = c.O1II0.status.x), (f = c.O1II0.status.y), (e = Math.sqrt(m * m + f * f)) < h && ((m /= e), (f /= e), (e = h - e), (c.O1II0.status.lllOl += m * e * I), (c.O1II0.status.II110 += f * e * I)));
                }),
                i
            );
        })(Mode)),
        (this.WeaponZoneMarker = (function () {
            function t() {
                var t, e;
                (e = this.getMaterial()), (t = new THREE.PlaneGeometry(1, 1)), (this.l0OlI = new THREE.Mesh(t, e));
            }
            return (
                (t.prototype.getMaterial = function () {
                    var e, i, s, l, n;
                    return null != t.material ? t.material : ((e = document.createElement('canvas')), (l = 512), (e.width = l), (e.height = l), (i = e.getContext('2d')), (s = i.createRadialGradient(l / 2, l / 2, 0, l / 2, l / 2, l / 2)), s.addColorStop(0, 'hsla(60,50%,80%,.4)'), s.addColorStop(0.95, 'hsla(60,50%,80%,.05)'), s.addColorStop(0.96, 'hsla(60,50%,80%,.2)'), i.beginPath(), (i.fillStyle = s), i.arc(l / 2, l / 2, l / 2, 0, 180 * THREE.Math.DEG2RAD * 2, !0), i.fill(), (i.fillStyle = 'hsl(60,50%,80%)'), (i.shadowColor = 'hsl(60,50%,80%)'), (i.shadowBlur = l / 20), (i.shadowOpacity = 1), (i.font = l / 4 + 'pt SBGlyphs'), (i.textAlign = 'center'), (i.textBaseline = 'middle'), i.fillText('(', l / 2, l / 2), (n = new THREE.Texture(e)), (n.needsUpdate = !0), (t.material = new THREE.MeshBasicMaterial({ color: 16777215, map: n, opacity: 0.5, transparent: !0, depthWrite: !1 })));
                }),
                t
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.BattleRoyalePage = (function (e) {
            function i(e, s) {
                (this.l1110 = e),
                    (this.mode = s),
                    i.IO0OI.constructor.call(this),
                    (this.title = new ll110(t('Battle Royale').toUpperCase())),
                    (this.title.font = 'Play'),
                    (this.title.color = '#FFF'),
                    (this.title.background = null),
                    (this.title.text_shadow.opacity = 1),
                    (this.title.text_shadow.blur = 20),
                    (this.title.text_shadow.color = '#F80'),
                    (this.title.stroke_size = 8),
                    (this.title.levelmod = -1),
                    (this.title.stroke_color = '#000'),
                    (this.title.blending = THREE.NormalBlending),
                    this.add(this.title, [0.3, 0.14, 0.4, 0.08]),
                    this.animate(this.title, 0.75),
                    this.l1110.is_app &&
                        ((this.quit_button = new QuitDMButton(
                            this.l1110,
                            200,
                            (function (t) {
                                return function () {
                                    return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                                };
                            })()
                        )),
                        this.add(this.quit_button, [0, 0.94, 0.2, 0.06]),
                        this.animate(this.quit_button, 0.75)),
                    (this.nextround = new ll110(t('Choose your ship'))),
                    (this.nextround.font = 'Play'),
                    (this.nextround.color = '#FFF'),
                    (this.nextround.background = null),
                    (this.nextround.text_shadow.opacity = 1),
                    (this.nextround.text_shadow.blur = 20),
                    (this.nextround.text_shadow.color = '#F80'),
                    (this.nextround.stroke_size = 4),
                    (this.nextround.stroke_color = '#000'),
                    (this.nextround.blending = THREE.NormalBlending),
                    this.add(this.nextround, [0.1, 0.3, 0.8, 0.05]),
                    this.animate(this.nextround, 1),
                    (this.countdown = new ll110('')),
                    (this.countdown.font = 'Play'),
                    (this.countdown.color = '#FFF'),
                    (this.countdown.background = null),
                    this.add(this.countdown, [0.3, 0.875, 0.4, 0.05]),
                    this.animate(this.countdown, 1.5),
                    (this.player_num = new PlayerCountLabel('')),
                    this.add(this.player_num, [0.05, 0.875, 0.2, 0.05]),
                    (this.player_count = 0),
                    (this.buttons = []),
                    this.mode.pro;
            }
            return (
                extend(i, e),
                (i.prototype.animate = function (t, e) {
                    return t.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }), t.O11IO.pause(e), t.O11IO.push({ d: 1, k: 0.01, f: 0.17 });
                }),
                (i.prototype.disappear = function (t) {
                    return t.O11IO.set({ d: 1, k: 0.05, f: 0.2, opacity: 0, l0OOl: 0.5, Ol1I0: 0.5 });
                }),
                (i.prototype.bump = function (t) {
                    return t.O11IO.set({ d: 0.1, l0OOl: 1.1, Ol1I0: 1.1, k: 0.1, f: 0.3 }), t.O11IO.push({ d: 0.8, k: 0.05, f: 0.2 });
                }),
                (i.prototype.scoranim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.5, OOIl0: 2 * (Math.random() - 0.5) }), t.O11IO.pause(Math.random()), t.O11IO.push({ d: 4, k: 0.01, f: 0.2 });
                }),
                (i.prototype.superanim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.01, rotation: 180 * THREE.Math.DEG2RAD * 2 }), t.O11IO.push({ d: 4, k: 0.05, f: 0.2 });
                }),
                (i.prototype.topanim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.01 }), t.O11IO.push({ d: 4, k: 0.05, f: 0.2 });
                }),
                (i.prototype.removeButtons = function () {
                    var t, e, i, s;
                    for (s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.dispose(), this.remove(t);
                    return (this.buttons = []);
                }),
                (i.prototype.createButtons = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    for (this.removeButtons(), i = s = 0, n = t.length; s < n; i = ++s) (r = t[i]), (t[i] = BATTLE_SHIPS.ships_by_code[r]);
                    for (o = t.length, h = Math.min(0.25, 1 / o), i = l = 0, a = t.length; l < a; i = ++l) (r = t[i]), (e = new ShipSelectButton(this.l1110, this.mode, r, (-180 * THREE.Math.DEG2RAD) / 8 + ((i / Math.max(1, o - 1)) * (180 * THREE.Math.DEG2RAD)) / 4)), this.add(e, [0.5 - (o / 2) * h + i * h + 0.01, 0.36, h - 0.02, 0.45]), this.animate(e, 0.5 * i), this.buttons.push(e), 1 === t.length && e.setSelected(!0);
                }),
                (i.prototype.shipSelected = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), e.setSelected(e === t);
                    return this.mode.shipSelected(t.ship);
                }),
                (i.prototype.startWaiting = function () {
                    (this.status = 'waiting'), (this.countdown.visible = !0), (this.visible = !0), (this.countdown.IIOI1 = this.countdown.lOlI0 = [0.1, 0.46, 0.8, 0.08]), this.countdown.l0I00(t('Waiting for more players')), (this.nextround.visible = !1), this.animate(this.nextround, 0), this.animate(this.title, 0), null != this.quit_button && (this.animate(this.quit_button, 0), (this.quit_button.enabled = !0)), null != this.cup && this.animate(this.cup, 0), this.animate(this.countdown, 0);
                }),
                (i.prototype.startCountDown = function (t, e) {
                    var i, s;
                    (this.countdown_time = e), (this.status = 'countdown'), (this.visible = !0), this.createButtons(t), (this.countdown.visible = !0), (this.countdown.IIOI1 = this.countdown.lOlI0 = [0.3, 0.875, 0.4, 0.05]), (this.nextround.visible = !0), this.animate(this.nextround, 0), this.animate(this.nextround, 0), this.animate(this.title, 0), null != this.quit_button && (this.animate(this.quit_button, 0), (this.quit_button.enabled = !0)), null != this.cup && this.animate(this.cup, 0), this.l1110.is_app && (null == this.caret && ((this.caret = new Caret('OOlO1')), (this.caret_index = 0), this.add(this.caret)), (i = this.buttons[0].lOlI0[0] + this.buttons[0].lOlI0[2] / 2), (s = this.buttons[0].lOlI0[1]), (this.caret.visible = !0), (this.caret.lOlI0 = this.caret.IIOI1 = [i - 0.025, s - 0.02, 0.05, 0.05]), this.buttons.length > 1 && (this.caret_spacing = (this.buttons[1].lOlI0[0] - this.buttons[0].lOlI0[0]) / 0.05), this.l1110.lIlO0.control.setNavigationListener(this));
                }),
                (i.prototype.hideButtons = function () {
                    var t, e, i, s;
                    for (s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), this.disappear(t), (t.enabled = !1);
                    this.disappear(this.title),
                        this.disappear(this.nextround),
                        null != this.caret && (this.caret.visible = !1),
                        setTimeout(
                            (function (e) {
                                return function () {
                                    var i, s, l;
                                    for (l = e.buttons, i = 0, s = l.length; i < s; i++) (t = l[i]), e.remove(t);
                                    return e.remove(e.title), e.remove(e.nextround);
                                };
                            })(this),
                            1e3
                        );
                }),
                (i.prototype.startRound = function () {
                    var t, e, i, s;
                    for (this.status = 'round', this.l1110.lIlO0.control.setNavigationListener(null), null != this.caret && (this.caret.visible = !1), this.disappear(this.countdown), s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), this.disappear(t), (t.enabled = !1);
                    if ((this.disappear(this.nextround), this.disappear(this.title), null != this.quit_button && (this.disappear(this.quit_button), (this.quit_button.enabled = !1)), null != this.cup)) return this.disappear(this.cup);
                }),
                (i.prototype.OO0Il = function () {
                    var t;
                    switch (this.status) {
                        case 'waiting':
                            return (this.countdown.visible = Date.now() % 1e3 < 700), this.removeButtons();
                        case 'countdown':
                            if (((t = Math.floor((this.countdown_time - Date.now()) / 1e3)), t >= 60 ? (t = Math.floor(t / 60) + ':' + (t % 60 < 10 ? '0' : '') + (t % 60)) : t < 0 && (t = t < -5 ? 'Waiting for more players' : ''), t !== this.countdown.text && (this.countdown.l0I00(t), this.bump(this.countdown), 'Waiting for more players' !== t && this.mode.spawned_once ? (this.countdown.IIOI1 = this.countdown.lOlI0 = [0.3, 0.1, 0.4, 0.1]) : (this.countdown.IIOI1 = this.countdown.lOlI0 = [0.3, 0.875, 0.4, 0.05])), this.player_count !== this.player_num.text)) return this.player_num.l0I00(this.player_count), this.bump(this.player_num);
                    }
                }),
                (i.prototype.gamepadNavigation = function (t) {
                    switch (t) {
                        case 'left':
                            return this.setIndex((this.caret_index + this.buttons.length - 1) % this.buttons.length);
                        case 'right':
                            return this.setIndex((this.caret_index + 1) % this.buttons.length);
                        case 'ok':
                            return this.buttons[this.caret_index].lIl1I(0, 0, 0), this.buttons[this.caret_index].lI1O0(0, 0, 0);
                        case 'cancel':
                            return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                    }
                }),
                (i.prototype.setIndex = function (t) {
                    if (null != this.caret && t !== this.caret_index) return (this.caret_index = t), this.caret.setOffset(this.caret_index * this.caret_spacing, 0);
                }),
                (i.prototype.mouseOver = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, e = i = 0, s = l.length; i < s; e = ++i) l[e] === t && this.setIndex(e);
                }),
                i
            );
        })(OO00l)),
        (this.PlayerCountLabel = (function (t) {
            function e(t) {
                (this.text = t), e.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending);
            }
            return (
                extend(e, t),
                (e.prototype.l0I00 = function (t) {
                    return (this.lO011 = t !== this.text), (this.text = t);
                }),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    return t.save(), t.translate(this.px, this.l1O1l), (e = (5 * this.lO01I) / 10), (t.font = e + 'pt Play'), (t.textBaseline = 'middle'), (t.textAlign = 'left'), (t.fillStyle = '#FFF'), t.fillText(this.text, this.llO1l / 2 + 0.1 * this.lO01I, this.lO01I / 2), (t.font = e + 'pt SBGlyphs'), (t.textAlign = 'right'), (t.fillStyle = '#FFF'), t.fillText('y', this.llO1l / 2 - 0.1 * this.lO01I, this.lO01I / 2), t.restore();
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.BattleScoreboard = (function (e) {
            function i(t, e) {
                (this.l1110 = t), (this.hue = e), i.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 10 / 11), (this.align_top = !0), this.l1110.addKeyListener(9, this), (this.shown = !0), (this.survivors = 0);
            }
            return (
                extend(i, e),
                (i.prototype.updateHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.view = t), this.visible)) return (this.lO011 = !0);
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    if (null != this.view) {
                        for (this.background = 'hsla(' + this.hue + ',70%,30%,.15)', this.medium = 'hsla(' + this.hue + ',50%,50%,.4)', this.color = 'hsla(' + this.hue + ',50%,80%,1)', e.save(), e.translate(this.px, this.l1O1l), v = Math.round((20 * this.llO1l) / 512), e.font = v + 'pt Play', e.textBaseline = 'middle', e.textAlign = 'left', e.fillStyle = this.color, e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), e.fillStyle = this.background, e.fillRect(0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l), e.fillStyle = this.color, e.fillStyle = '#000', e.fillText(t('Scoreboard'), 0.05 * this.llO1l, 0.05 * this.llO1l), this.l1110.using_gamepad ? Gamepad.drawButton('RB', e, 0.5 * this.llO1l, 0.05 * this.llO1l, 0.8 * v, this.hue) : this.l1110.is_mobile_app || ((e.textAlign = 'center'), (e.font = Math.round(0.8 * v) + 'pt Play'), e.fillText('TAB', 0.5 * this.llO1l, 0.05 * this.llO1l), (e.strokeStyle = '#000'), e.strokeRect(0.45 * this.llO1l, 0.02 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), e.textAlign = 'left', e.textBaseline = 'bottom', this.survivors > 0 && ((e.font = Math.round(1.5 * v) + 'pt Play'), (e.fillStyle = this.color), (e.textAlign = 'center'), e.fillText(t('Survivors:') + ' ' + this.survivors, 0.5 * this.llO1l, 0.24 * this.lO01I)), e.fillStyle = this.medium, e.fillRect(0.05 * this.llO1l, 0.25 * this.lO01I, 0.9 * this.llO1l, 0.01 * this.lO01I), e.fillStyle = this.color, v = Math.round((22 * this.llO1l) / 512), e.font = v + 'pt Play', e.textBaseline = 'middle', m = Math.min(8, this.view.getUint8(1)), u = 2, p = this.l1110.lIlO0.Ill00.status.rank, s = e.createLinearGradient(0, 0, this.llO1l, 0), s.addColorStop(0, 'hsla(' + this.hue + ',40%,20%,.5)'), s.addColorStop(0.05, 'hsla(' + this.hue + ',40%,20%,0)'), s.addColorStop(1, 'hsla(' + this.hue + ',40%,20%,.5)'), l = e.createLinearGradient(0, 0, this.llO1l, 0), l.addColorStop(0, 'hsla(' + this.hue + ',40%,60%,.5)'), l.addColorStop(0.05, 'hsla(' + this.hue + ',40%,60%,0)'), l.addColorStop(1, 'hsla(' + this.hue + ',40%,60%,.5)'), e.translate(0, this.lO01I / 11), p > 8 && ((a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && (a = this.l1110.lIlO0.Ill00.status.hue), (c = this.l1110.player_name), (I = this.l1110.lIlO0.Ill00.status.score), (o = 9), (e.fillStyle = l), e.fillRect(0, (o / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), this.l1110.lIlO0.Ill00.status.l1OI0 && ((n = Math.round(0.08 * this.lO01I)), null != (i = this.l1110.names.getCustom(this.l1110.lIlO0.Ill00.status.id)) && ((h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n))), e.fillText(p + '. ' + c, 5 + 0.16 * this.lO01I, ((o + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(I, this.llO1l - 10, ((o + 0.5) / 11) * this.lO01I), (m = Math.min(9, m))), o = d = 0, f = m - 1; d <= f && !(7 === o && p > 8); o = d += 1) (r = this.view.getUint8(u)), (g = 16777215 & this.view.getUint32(u + 4, !0)), (u += 8), (a = this.hue), null != this.l1110.mode.options && null != this.l1110.mode.options.friendly_colors && this.l1110.mode.options.friendly_colors > 1 && null != (y = this.l1110.lIlO0.IO11l.ll0l1[r]) && (a = y.O1II0.status.hue), (O = this.l1110.names.get(r)), r === this.l1110.lIlO0.Ill00.status.id ? ((e.fillStyle = l), (i = this.l1110.names.getCustom(r))) : ((e.fillStyle = s), (i = this.l1110.names.getCustom(r))), e.fillRect(0, ((o + 2) / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), (e.fillStyle = 'hsla(' + a + ',80%,90%,1)'), (e.textAlign = 'left'), null != i && ((n = Math.round(0.08 * this.lO01I)), (h = Il01O.I110l(i.badge, i.laser, i.finish, 48, i.hue)), h.complete && e.drawImage(h, 0, ((o + 2 + 0.5) / 11) * this.lO01I - n / 2, 2 * n, n)), e.fillText(o + 1 + '. ' + O, 5 + 0.16 * this.lO01I, ((o + 2 + 0.5) / 11) * this.lO01I), (e.textAlign = 'right'), e.fillText(g, this.llO1l - 10, ((o + 2 + 0.5) / 11) * this.lO01I);
                        return e.restore();
                    }
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.shown = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.shown)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.shown = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app ? this.hide() : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                (i.prototype.keyPressed = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (i.prototype.keyReleased = function () {}),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.TutorialMode = (function (e) {
            function i(e) {
                (this.l1110 = e),
                    i.IO0OI.constructor.call(this, 'tutorial', 'Training'),
                    (this.max_enter_time = 1),
                    (this.max_enter_players = 1),
                    (this.custom_game_allowed = !1),
                    (this.llIlI = !1),
                    (this.vocabulary = [
                        { text: 'Hello', icon: 'E', key: 'L' },
                        { text: 'Bye', icon: 'F', key: 'B' },
                        { text: 'Yes', icon: 'L', key: 'Y' },
                        { text: 'No', icon: 'M', key: 'N' },
                        { text: 'Thanks', icon: 'A', key: 'X' },
                        { text: 'Sorry', icon: '¡', key: 'S' },
                        { text: 'No Prob', icon: 'G', key: 'P' },
                        { text: 'Good Game', icon: 'GG', key: 'G' },
                        { text: 'You', icon: 'N', key: 'O' },
                        { text: 'Me', icon: 'O', key: 'E' },
                        { text: 'Mine', icon: 'D', key: 'M' },
                        { text: 'Attack', icon: 'I', key: 'A' },
                        { text: 'Help', icon: 'J', key: 'H' },
                        { text: 'Follow', icon: 'P', key: 'F' },
                        { text: 'Kill', icon: '[', key: 'K' },
                        { text: 'Hmm', icon: 'K', key: 'Q' },
                    ]),
                    (this.radar_zoom = 1),
                    (this.soundtrack = 'argon.mp3'),
                    (this.gameover = !1),
                    (this.ship_can_upgrade = !1),
                    (this.ship_can_buy_life = !1),
                    (this.show_upgrades = !1),
                    (this.disable_ship_upgrade_collapsing = !0),
                    (this.respawn_delay = 1e3),
                    (this.sharing_enabled = !1),
                    (this.IlllO = !1),
                    (this.tips_test = 'You will learn everything about controlling your ship, upgrading, using secondary weapons, comms.'),
                    (this.tips = [t('You will learn everything about controlling your ship, upgrading, using secondary weapons, comms.'), t('If you skip this training, you can still start it later from the profile page.')]);
            }
            return (
                extend(i, e),
                (i.prototype.lOl1l = function (t) {
                    return (
                        this.l1110.I0O01.enter(),
                        this.l1110.I0O01.respawn(
                            (function (e) {
                                return function () {
                                    return e.l1110.startGame(t), (e.scoreboard = new TutorialScoreboard(e.l1110, t.system_hue)), e.l1110.display.screen.lO100.add(e.scoreboard, [0.8, 0, 0.2, 0.52]);
                                };
                            })(this)
                        )
                    );
                }),
                (i.prototype.asteroidsDensityModifier = function (t, e) {
                    return 0;
                }),
                (i.prototype.showUI = function () {
                    if ((null != this.scoreboard && (this.scoreboard.visible = !0), null == this.end_sequence_start && this.killed_once)) return this.instructor.clear(), this.tutorial_steps.replayStep();
                }),
                (i.prototype.hideUI = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.updateScore = function (t) {
                    if (null != this.scoreboard) return this.scoreboard.updateScore(t);
                }),
                (i.prototype.showScorePanel = function () {
                    if (null != this.scoreboard && this.scoreboard.shown) return (this.scoreboard.visible = !0);
                }),
                (i.prototype.hideScorePanel = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (i.prototype.scorePanelShown = function () {
                    return null != this.scoreboard && this.scoreboard.shown;
                }),
                (i.prototype.userShowScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.IlO1I();
                }),
                (i.prototype.userHideScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.hide();
                }),
                (i.prototype.shipCanUpgrade = function () {
                    return this.ship_can_upgrade;
                }),
                (i.prototype.shipCanBuyLife = function () {
                    return this.ship_can_buy_life;
                }),
                (i.prototype.showUpgrades = function () {
                    return this.show_upgrades;
                }),
                (i.prototype.updateWave = function (e) {
                    var i, s;
                    if (this.scoreboard)
                        return (
                            (s = e.getUint8(1)),
                            s > this.scoreboard.wave &&
                                ((i = 'hsl(' + this.l1110.display.screen.lO100.hue + ',70%,90%)'),
                                (this.scoreboard.wave = s),
                                s > 1
                                    ? (this.l1110.message(t('Wave cleared!').replace('%d', s), i, !1, !0),
                                      setTimeout(
                                          (function (e) {
                                              return function () {
                                                  return e.l1110.message(t('Wave %d').replace('%d', s), i, !1, !0);
                                              };
                                          })(this),
                                          2500
                                      ))
                                    : this.l1110.message(t('Wave %d').replace('%d', s), i, !1, !0)),
                            (this.scoreboard.OlIO1 = e.getUint16(6, !0)),
                            (this.scoreboard.aliens = e.getUint16(8, !0)),
                            (this.scoreboard.wave_start_time = e.getUint32(2, !0)),
                            this.l1110.display.screen.lO100.OOI11.llIO0.updateAsteroidsAliens(e)
                        );
                }),
                (i.prototype.killed = function (e, i, s) {
                    var l;
                    return this.victory
                        ? ((l = { gameover: i, victory: this.victory, mode: this.id }), this.l1110.killed(e, i, l))
                        : ((this.killed_once = !0),
                          this.instructor.clear(),
                          setTimeout(
                              (function (e) {
                                  return function () {
                                      return e.instructor.say(t("Come on! Losing your ship isn't a big deal, you will be able to respawn and continue playing."));
                                  };
                              })(this),
                              1e3
                          ),
                          setTimeout(
                              (function (t) {
                                  return function () {
                                      return t.instructor.disappear(), (l = { gameover: !1, mode: t.id }), t.l1110.killed(e, i, l);
                                  };
                              })(this),
                              9e3
                          ));
                }),
                (i.prototype.modeStep = function () {
                    null == this.instructor && ((this.instructor = new Instructor(this.l1110)), this.l1110.display.screen.lO100.add(this.instructor, [0.25, 0.05, 0.5, 0.25]), this.l1110.display.screen.lO100.add(this.instructor.arrow, [0, 0, 0.1, 0.1])),
                        null == this.tutorial_steps && ((this.tutorial_steps = new TutorialSteps(this.l1110, this)), (this.tutorial_start = Date.now() + 2e3)),
                        Date.now() > this.tutorial_start && this.tutorial_steps.process(this),
                        null != this.end_sequence_start &&
                            Date.now() > this.end_sequence_start + 6e4 &&
                            this.scoreboard.aliens <= 0 &&
                            !this.gameover &&
                            ((this.gameover = !0),
                            this.instructor.clear(),
                            setTimeout(
                                (function (e) {
                                    return function () {
                                        return e.instructor.say(t('Wow you did well! I wish you good luck, it has been a pleasure training you.'));
                                    };
                                })(this),
                                1e3
                            ),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        return t.instructor.disappear(), (t.victory = !0), t.killed(0, !0, 1);
                                    };
                                })(this),
                                1e4
                            ));
                }),
                (i.prototype.messageReceived = function (e) {
                    var i;
                    switch (e.im_status) {
                        case 'im_victory':
                            if (!this.gameover)
                                return (
                                    (this.gameover = !0),
                                    (this.victory = !0),
                                    (i = 'hsl(' + this.l1110.display.screen.lO100.hue + ',70%,90%)'),
                                    this.l1110.message(t('You win!'), i, !1, !0),
                                    setTimeout(
                                        (function (t) {
                                            return function () {
                                                return t.killed(0, !0, 1);
                                            };
                                        })(this),
                                        5e3
                                    )
                                );
                    }
                }),
                (i.prototype.findBestServer = function (t) {
                    return null;
                }),
                i
            );
        })(Mode)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.Instructor = (function (t) {
            function e(t) {
                (this.l1110 = t),
                    e.IO0OI.constructor.call(this),
                    (this.lines = ['']),
                    (this.index = 0),
                    (this.feed = []),
                    (this.current_feed = ''),
                    (this.hue = 200),
                    (this.character = 'Lucina'),
                    (this.characters = { Lucina: { hue: 200, image: 'https://starblast.data.neuronality.com/img/tutorial-survival.png' }, Klaus: { hue: 120, image: 'https://starblast.data.neuronality.com/img/tutorial-battleroyale.png' }, Maria: { hue: 60, image: 'https://starblast.data.neuronality.com/img/tutorial-team.png' }, Kan: { hue: 300, image: 'https://starblast.data.neuronality.com/img/tutorial-invasion.png' }, Zoltar: { hue: 0, image: 'https://starblast.data.neuronality.com/img/tutorial-deathmatch.png' } }),
                    this.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }),
                    (this.instructor_image = new Image()),
                    (this.instructor_image.crossOrigin = 'Anonymous'),
                    (this.instructor_image.src = 'https://starblast.data.neuronality.com/img/tutorial-survival.png'),
                    (this.instructor_image.onload = (function (t) {
                        return function () {
                            return (t.lO011 = !0);
                        };
                    })(this)),
                    (this.next_type = 0),
                    (this.l0OOl = 1),
                    (this.Ol1I0 = 1),
                    (this.OOIl0 = 0),
                    (this.OO1lI = 0),
                    (this.arrow = new TutorialArrow(this.l1110)),
                    this.arrow.hide();
            }
            return (
                extend(e, t),
                (e.prototype.setCharacter = function (t) {
                    var e, i, s, l, n, a, o;
                    if (null != t && 'number' == typeof t) {
                        (s = 1e3), (l = ((t + 30) % 360) - 30), (a = this.characters);
                        for (n in a) (o = a[n]), (i = Math.abs(o.hue - l)) < s && ((s = i), (e = n));
                        t = e;
                    }
                    if (null != t && null != this.characters[t] && t !== this.character) return (this.instructor_image = new Image()), (this.instructor_image.crossOrigin = 'Anonymous'), (this.instructor_image.src = this.characters[t].image), (this.hue = this.characters[t].hue), (this.character = t);
                }),
                (e.prototype.setHue = function (t) {
                    var e, i, s, l, n;
                    (e = null), (l = 1e3), (s = this.characters);
                    for (i in s) (n = s[i]), Math.abs(t - n.hue) < l && ((l = Math.abs(t - n.hue)), (e = i));
                    return this.setCharacter(e);
                }),
                (e.prototype.disappear = function () {
                    if (!this.IOO0l)
                        return (
                            (this.IOO0l = !0),
                            this.O11IO.set({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }),
                            this.arrow.hide(),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        if (t.IOO0l) return (t.visible = !1);
                                    };
                                })(this),
                                1e3
                            )
                        );
                }),
                (e.prototype.clear = function () {
                    return (this.lines = ['']), (this.feed = []), (this.current_feed = ''), (this.lO011 = !0);
                }),
                (e.prototype.say = function (t) {
                    var e, i, s, l, n;
                    if (((this.IOO0l = !1), (this.visible = !0), this.O11IO.set({ l0OOl: 1.025 * this.l0OOl, Ol1I0: 1.025 * this.Ol1I0, OOIl0: this.OOIl0, OO1lI: this.OO1lI, k: 0.1, d: 0.1 }), this.O11IO.push({ l0OOl: this.l0OOl, Ol1I0: this.Ol1I0, OOIl0: this.OOIl0, OO1lI: this.OO1lI, opacity: 1, k: 0.1, f: 0.3 }), null != t)) {
                        if (((s = t.split('\n')), s.length > 1)) {
                            for (l = [], e = 0, i = s.length; e < i; e++) (n = s[e]), l.push(this.say(n));
                            return l;
                        }
                        return this.feed.push(t.toUpperCase());
                    }
                }),
                (e.prototype.lllO1 = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                    for (t.save(), t.translate(this.px, this.l1O1l), i = t.createLinearGradient(0, 0, 0, this.lO01I), i.addColorStop(0, 'hsla(' + this.hue + ',80%,20%,.9)'), i.addColorStop(1, 'hsla(' + this.hue + ',80%,10%,.8)'), t.fillStyle = i, t.fillRect(0, 0, this.llO1l, this.lO01I), null != this.instructor_image && this.instructor_image.complete && this.instructor_image.width > 0 && ((m = 0.3 * this.llO1l), (s = this.lO01I), (u = Math.min(m / this.instructor_image.width, s / this.instructor_image.height)), (m = this.instructor_image.width * u), (s = this.instructor_image.height * u), t.drawImage(this.instructor_image, 0.175 * this.llO1l - m / 2, this.lO01I - s - 2, m, s)), t.strokeStyle = 'rgba(255,255,255,.5)', t.lineWidth = 2, t.strokeRect(1, 1, this.llO1l - 2, this.lO01I - 2), this.line_height = this.lO01I / 7, this.font_size = Math.round(this.lO01I / 12), this.line_width = 0.64 * this.llO1l, t.font = this.font_size + 'pt Play', t.fillStyle = 'rgba(255,255,255,.9)', t.textAlign = 'left', t.textBaseline = 'middle', p = Math.max(0, this.lines.length - 6), h = [], l = n = p, d = this.lines.length - 1; n <= d; l = n += 1) {
                        for (O = this.lines[l].split(' '), e = '', a = 0, r = O.length; a < r; a++) (I = O[a]), (m = t.measureText(e + I).width), m < this.line_width || 0 === e.length ? (e += I + ' ') : (h.push(e), (e = I + ' '));
                        h.push(e);
                    }
                    for (f = 1 * this.line_height, p = Math.max(0, h.length - 6), l = o = p, c = h.length - 1; o <= c; l = o += 1) (I = h[l].trim()), t.fillText(I, 0.35 * this.llO1l, f), (f += this.line_height);
                    return t.restore();
                }),
                (e.prototype.OO0Il = function () {
                    var t, e;
                    return this.next_type <= 0 ? ((this.next_type = Math.floor(3 + 3 * Math.random())), 'string' == typeof this.current_feed && (this.current_feed = this.current_feed.split(' ')), this.current_feed.length > 0 ? ((t = this.current_feed.indexOf(' ')), t <= 0 && (t = this.current_feed.length), (e = this.current_feed.splice(0, 1)[0] + ' '), (this.lines[this.lines.length - 1] += e), (this.lO011 = !0), this.l1110.l0I11.beep(4, 0.1)) : this.feed.length > 0 ? ((this.current_feed = this.feed.splice(0, 1)[0]), this.lines.push('')) : void 0) : this.next_type--;
                }),
                e
            );
        })(OllI0)),
        (this.TutorialArrow = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this), (this.force_ratio = 1), (this.size = 0.15), (this.visible = !1), (this.levelmod = -10), (this.rotation = 0);
            }
            return (
                extend(e, t),
                (e.prototype.pointComponent = function (t, e, i) {
                    var s, l, n, a, o;
                    return null == e && (e = 0), null == i && (i = 0), t instanceof OllI0 ? ((l = t.getAbsolutePosition()), (a = l.x + l.width / 2), (o = l.y + l.height / 2), (l.x += e * l.width), (l.y += i * l.height), (n = (10 * this.size) / 16), (s = this.size), Math.abs(a - 0.5) > Math.abs(o - 0.5) ? (a < 0.5 ? ((this.rotation = 180 * THREE.Math.DEG2RAD), (this.lOlI0 = this.IIOI1 = [l.x + l.width, l.y + l.height / 2 - s / 2, n, s])) : ((this.rotation = 0), (this.lOlI0 = this.IIOI1 = [l.x - n, l.y + l.height / 2 - s / 2, n, s]))) : o < 0.5 ? ((this.rotation = (-180 * THREE.Math.DEG2RAD) / 2), (this.lOlI0 = this.IIOI1 = [l.x + l.width / 2 - n / 2, l.y + l.height, n, s])) : ((this.rotation = (180 * THREE.Math.DEG2RAD) / 2), (this.lOlI0 = this.IIOI1 = [l.x + l.width / 2 - n / 2, l.y - this.size, n, s])), this.IlO1I()) : this.pointObject(t, e, i);
                }),
                (e.prototype.pointObject = function (t, e, i) {
                    var s, l, n, a, o;
                    return null == e && (e = 0), null == i && (i = 0), (l = { x: t.position.x / this.l1110.display.width, y: t.position.y / this.l1110.display.height, width: t.scale.x / this.l1110.display.width, height: t.scale.y / this.l1110.display.height }), (l.x -= l.width / 2), (l.y -= l.height / 2), (a = l.x + l.width / 2), (o = l.y + l.height / 2), (l.x += e * l.width), (l.y += i * l.height), (n = (10 * this.size) / 16), (s = this.size), Math.abs(a - 0.5) > Math.abs(o - 0.5) ? (a < 0.5 ? ((this.rotation = 180 * THREE.Math.DEG2RAD), (this.lOlI0 = this.IIOI1 = [l.x + l.width, l.y + l.height / 2 - this.size / 2, n, s])) : ((this.rotation = 0), (this.lOlI0 = this.IIOI1 = [l.x - n, l.y + l.height / 2 - this.size / 2, n, s]))) : o < 0.5 ? ((this.rotation = (-180 * THREE.Math.DEG2RAD) / 2), (this.lOlI0 = this.IIOI1 = [l.x + l.width / 2 - n / 2, l.y + l.height, n, s])) : ((this.rotation = (180 * THREE.Math.DEG2RAD) / 2), (this.lOlI0 = this.IIOI1 = [l.x + l.width / 2 - n / 2, l.y - s, n, s])), this.IlO1I();
                }),
                (e.prototype.OO0Il = function () {
                    if (this.shown && !this.O11IO.isRunning()) return this.O11IO.push({ l0OOl: 1.2, Ol1I0: 1.2, d: 0.25, rotation: this.rotation }), this.O11IO.push({ d: 0.25, rotation: this.rotation });
                }),
                (e.prototype.IlO1I = function () {
                    if (!this.shown) return (this.shown = !0), (this.visible = !0), this.O11IO.init({ opacity: 0, l0OOl: 0.5, Ol1I0: 0.5, rotation: this.rotation }), this.O11IO.push({ d: 1, rotation: this.rotation });
                }),
                (e.prototype.hide = function () {
                    if (this.shown)
                        return (
                            (this.shown = !1),
                            this.O11IO.set({ opacity: 0, l0OOl: 0.5, Ol1I0: 0.5, rotation: this.rotation }),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        if (!t.shown) return (t.visible = !1);
                                    };
                                })(this),
                                1e3
                            )
                        );
                }),
                (e.prototype.lllO1 = function (t) {
                    var e;
                    return t.save(), t.translate(this.px, this.l1O1l), (e = 0.1 * this.lO01I), (t.fillStyle = '#FFF'), (t.shadowBlur = e), (t.shadowOpacity = 1), (t.shadowColor = '#F80'), t.beginPath(), t.moveTo(this.llO1l - e, 0.5 * this.lO01I), t.lineTo(0.5 * this.llO1l, this.lO01I - e), t.lineTo(0.5 * this.llO1l, 0.7 * this.lO01I), t.lineTo(e, 0.7 * this.lO01I), t.lineTo(e, 0.3 * this.lO01I), t.lineTo(0.5 * this.llO1l, 0.3 * this.lO01I), t.lineTo(0.5 * this.llO1l, e), t.closePath(), t.fill(), t.restore();
                }),
                e
            );
        })(OllI0)),
        (this.TutorialSteps = (function () {
            function e(t, e) {
                var i, s, l, n;
                for (this.l1110 = t, this.mode = e, this.I1l0O = [], this.lO1I1(), this.achievements = [], l = this.I1l0O, i = 0, s = l.length; i < s; i++) (n = l[i]), null != n.achievement && this.achievements.push(n.achievement);
                (this.current_index = 0), (this.congrat_index = 0), (this.waiting_index = 0), (this.achieved = 0);
            }
            return (
                (e.prototype.add = function (t) {
                    return this.l1110.using_gamepad && null != t.gamepad ? this.I1l0O.push(t.gamepad) : this.l1110.is_mobile_app && null != t.touch ? this.I1l0O.push(t.touch) : this.l1110.is_mobile_app || null == t.mouse ? this.I1l0O.push(t) : this.I1l0O.push(t.mouse);
                }),
                (e.prototype.process = function (t) {
                    if (!this.finished) return null == this.current_step && this.nextStep(), this.processCurrentStep();
                }),
                (e.prototype.replayStep = function () {
                    return (this.current_index -= 1), this.nextStep();
                }),
                (e.prototype.setStep = function (t) {
                    return (this.current_step = t), null != this.current_step.transform ? ((this.mode.instructor.l0OOl = this.current_step.transform.l0OOl || 1), (this.mode.instructor.Ol1I0 = this.current_step.transform.Ol1I0 || 1), (this.mode.instructor.OOIl0 = this.current_step.transform.OOIl0 || 0), (this.mode.instructor.OO1lI = this.current_step.transform.OO1lI || 0)) : ((this.mode.instructor.l0OOl = 1), (this.mode.instructor.Ol1I0 = 1), (this.mode.instructor.OOIl0 = 0), (this.mode.instructor.OO1lI = 0)), this.current_step.clear && this.mode.instructor.clear(), null != this.current_step.text && this.mode.instructor.say('\n' + this.current_step.text), null != this.current_step.pointer && this.current_step.pointer(this.mode.instructor.arrow), null != this.current_step.opacity ? (this.mode.instructor.opacity = this.current_step.opacity) : (this.mode.instructor.opacity = 1), null != this.current_step.init && this.current_step.init(), null != this.current_step.checkValue ? ((this.step_value = this.current_step.checkValue()), (this.step_expiration = 0)) : (this.step_expiration = Date.now() + 1e3 * this.current_step.time), (this.idle_delay = this.current_step.idle_delay || 15e3), (this.idle_time = Date.now() + this.idle_delay);
                }),
                (e.prototype.nextStep = function () {
                    return null != this.current_step && this.current_step.achievement && (this.achieved = this.achievements.indexOf(this.current_step.achievement) + 1), this.mode.instructor.arrow.hide(), this.current_index < this.I1l0O.length ? this.setStep(this.I1l0O[this.current_index++]) : (this.mode.instructor.disappear(), (this.finished = !0));
                }),
                (e.prototype.processCurrentStep = function () {
                    var t;
                    if (this.step_expiration > 0) {
                        if (Date.now() > this.step_expiration) return this.nextStep();
                    } else if (null != this.current_step.checkValue)
                        if (this.current_step.checkValue() !== this.step_value) {
                            if ((this.mode.instructor.arrow.hide(), (this.step_expiration = Date.now() + 1e3 * this.current_step.time), !this.current_step.skip_congrat))
                                return setTimeout(
                                    (function (t) {
                                        return function () {
                                            return t.mode.instructor.say('\n' + t.congratulations[t.congrat_index]), (t.congrat_index = (t.congrat_index + 1) % t.congratulations.length);
                                        };
                                    })(this),
                                    (1e3 * this.current_step.time) / 2
                                );
                        } else if (Date.now() > this.idle_time) return (t = 2 * this.idle_delay), this.mode.instructor.say('\n' + this.waiting[this.waiting_index]), (this.waiting_index = (this.waiting_index + 1) % this.waiting.length), this.setStep(this.current_step), (this.idle_delay = t), (this.idle_time = Date.now() + this.idle_delay);
                }),
                (e.prototype.lO1I1 = function () {
                    var e, i, s;
                    for (e = [t('OK good.'), t('Well done.'), t('Fine, but nothing to brag about.'), t("OK I was told you'd do that."), t("Okay, let's take this as learnt."), t('Is that it? Okay'), t('Alright')], this.congratulations = []; e.length > 0; ) this.congratulations.push(e.splice(Math.floor(Math.random() * e.length), 1)[0]);
                    for (s = [t('Did you fall asleep?'), t('???'), t('Do you copy?'), t('I think we lost comms. Commander??'), t('Are you ok?')], this.waiting = []; s.length > 0; ) this.waiting.push(s.splice(Math.floor(Math.random() * s.length), 1)[0]);
                    return (
                        this.add({ text: t('Welcome to your new unit, Commander. Here is your briefing.'), time: 5 }),
                        this.add({
                            touch: this.l1110.settings.check('joystick_thrust')
                                ? {
                                      text: t('Use the joystick to steer the ship and move.'),
                                      checkValue: (function (t) {
                                          return function () {
                                              return t.l1110.lIlO0.Ill00.I00O0.up;
                                          };
                                      })(this),
                                      time: 3,
                                      pointer: (function (t) {
                                          return function (e) {
                                              return e.pointComponent(t.l1110.display.screen.lO100.joystick.object);
                                          };
                                      })(this),
                                  }
                                : {
                                      text: t('Use the joystick to steer the ship and aim.'),
                                      checkValue: (function (t) {
                                          return function () {
                                              return Math.floor(t.l1110.lIlO0.Ill00.I00O0.angle / 180);
                                          };
                                      })(this),
                                      time: 3,
                                      pointer: (function (t) {
                                          return function (e) {
                                              return e.pointComponent(t.l1110.display.screen.lO100.joystick.object);
                                          };
                                      })(this),
                                  },
                            mouse: {
                                text: t('Move the mouse cursor to steer the ship and aim.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return Math.floor(t.l1110.lIlO0.Ill00.I00O0.angle / 180);
                                    };
                                })(this),
                                time: 3,
                            },
                            gamepad: {
                                text: t('Use Left Stick to steer the ship and aim.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return Math.floor(t.l1110.lIlO0.Ill00.I00O0.angle / 180);
                                    };
                                })(this),
                                time: 3,
                            },
                        }),
                        this.add({
                            touch: this.l1110.settings.check('joystick_thrust')
                                ? {
                                      text: t('Guess what, this spaceship can shoot lasers.') + ' ' + t('Touch this button to fire.'),
                                      checkValue: (function (t) {
                                          return function () {
                                              return t.l1110.lIlO0.Ill00.I00O0.OI00O;
                                          };
                                      })(this),
                                      time: 4,
                                      pointer: (function (t) {
                                          return function (e) {
                                              return e.pointComponent(t.l1110.display.screen.lO100.fire_buttons);
                                          };
                                      })(this),
                                      achievement: t('Basic Controls'),
                                  }
                                : {
                                      text: t('Guess what, this spaceship can shoot lasers.') + ' ' + t('Touch this button to fire.'),
                                      checkValue: (function (t) {
                                          return function () {
                                              return t.l1110.lIlO0.Ill00.I00O0.OI00O;
                                          };
                                      })(this),
                                      time: 4,
                                      pointer: (function (t) {
                                          return function (e) {
                                              return e.pointComponent(t.l1110.display.screen.lO100.fire_buttons, 0, -0.333);
                                          };
                                      })(this),
                                  },
                            mouse: {
                                text: t('Guess what, this spaceship can shoot lasers.') + ' ' + t('Click left mouse button to fire.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.Ill00.I00O0.OI00O;
                                    };
                                })(this),
                                time: 4,
                            },
                            gamepad: {
                                text: t('Guess what, this spaceship can shoot lasers.') + ' ' + t('Press Ⓐ to fire.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.Ill00.I00O0.OI00O;
                                    };
                                })(this),
                                time: 4,
                            },
                        }),
                        (i = {
                            touch: {
                                text: t('OK let’s move this wreck now.') + ' ' + t('Touch this button to accelerate.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.Ill00.I00O0.up;
                                    };
                                })(this),
                                time: 4,
                                achievement: t('Basic Controls'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.fire_buttons, 0, 0.333);
                                    };
                                })(this),
                            },
                            mouse: {
                                text: t('OK let’s move this wreck now.') + ' ' + t('Click right mouse button to accelerate.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.Ill00.I00O0.up;
                                    };
                                })(this),
                                time: 4,
                                achievement: t('Basic Controls'),
                            },
                            gamepad: {
                                text: t('OK let’s move this wreck now.') + ' ' + t('Press Right Trigger to accelerate.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.Ill00.I00O0.up;
                                    };
                                })(this),
                                time: 4,
                                achievement: t('Basic Controls'),
                            },
                        }),
                        (this.l1110.is_mobile_app && this.l1110.settings.check('joystick_thrust')) || this.add(i),
                        this.l1110.is_mobile_app &&
                            !this.l1110.settings.check('joystick_thrust') &&
                            this.add({
                                text: t('You can also touch the central button to both fire and accelerate.'),
                                time: 5,
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.fire_buttons);
                                    };
                                })(this),
                            }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return setTimeout(function () {
                                        return t.l1110.I0O01.sendModeMessage('spawn_asteroid');
                                    }, 1e3);
                                };
                            })(this),
                            text: t('Surprise! Here is an asteroid. Destroy it!'),
                            checkValue: (function (t) {
                                return function () {
                                    return t.l1110.lIlO0.I0O1l.I0O1l.length;
                                };
                            })(this),
                            time: 2,
                            skip_congrat: !0,
                        }),
                        this.add({
                            text: t('Oh oh! gems. Collect them all!'),
                            checkValue: (function (t) {
                                return function () {
                                    return 20 === t.l1110.Ill00.status.I0O1l ? Math.random() : t.l1110.Ill00.status.I0O1l;
                                };
                            })(this),
                            time: 6,
                        }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return (t.mode.show_upgrades = !0);
                                };
                            })(this),
                            text: t('This ship could really be improved, you know. You can use your gems for that.'),
                            time: 3,
                        }),
                        this.add({
                            text: t('Upgrade any of your shield, firepower, damage or ship speed and agility...') + (this.l1110.using_gamepad ? ' ' + t('Use the D-Pad.') : ''),
                            time: 5,
                            checkValue: (function (t) {
                                return function () {
                                    return 286331153 === t.l1110.Ill00.status.levels ? Math.random() : t.l1110.Ill00.status.levels;
                                };
                            })(this),
                            pointer: (function (t) {
                                return function (e) {
                                    return e.pointComponent(t.l1110.display.screen.lO100.specupgrades);
                                };
                            })(this),
                        }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return (
                                        t.l1110.I0O01.sendModeMessage('max_ship'),
                                        t.l1110.I0O01.sendModeMessage('empty_crystals'),
                                        (t.l1110.Ill00.status.I0O1l = 0),
                                        setTimeout(function () {
                                            return t.l1110.I0O01.sendModeMessage('spawn_alien'), t.mode.instructor.O11IO.set({ opacity: 0.25 });
                                        }, 4e3)
                                    );
                                };
                            })(this),
                            text: t('Now fill your gems bar to access higher tier ships. Here is some fodder.'),
                            time: 4,
                            idle_delay: 3e4,
                            checkValue: (function (t) {
                                return function () {
                                    return 20 === t.l1110.Ill00.status.I0O1l ? Math.random() : 0;
                                };
                            })(this),
                        }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return (t.mode.ship_can_upgrade = !0);
                                };
                            })(this),
                            text: t('Pick your favorite ship of these two.') + (this.l1110.using_gamepad ? ' ' + t('Use the D-Pad.') : ''),
                            clear: !0,
                            transform: { OO1lI: 0.5, l0OOl: 0.8, Ol1I0: 0.8 },
                            time: 3,
                            checkValue: (function (t) {
                                return function () {
                                    return t.l1110.Ill00.status.I0O1l < 20 && t.l1110.I0O01.sendModeMessage('fill_crystals'), t.l1110.Ill00.type.level > 1 ? ((t.mode.ship_can_upgrade = !1), Math.random()) : 0;
                                };
                            })(this),
                            pointer: (function (t) {
                                return function (e) {
                                    return e.pointComponent(t.l1110.display.screen.lO100.shipupgrades);
                                };
                            })(this),
                            achievement: t('Upgrades'),
                        }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return t.l1110.I0O01.sendModeMessage('max_ship'), (t.mode.ship_can_upgrade = !1);
                                };
                            })(this),
                            text: t('We will now have some fun with secondary weapons'),
                            time: 3,
                        }),
                        this.add({ text: t('The Weapon Store opens when your are docked at your station (team mode) or manually (survival mode).'), time: 6 }),
                        this.add({
                            touch: {
                                text: t('Touch this button to open the Weapon Store.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return null != t.l1110.display.screen.lO100.weapon_store && t.l1110.display.screen.lO100.weapon_store.shown ? Math.random() : 0;
                                    };
                                })(this),
                                time: 3,
                                skip_congrat: !0,
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.buttons_panel.store_button);
                                    };
                                })(this),
                            },
                            mouse: {
                                text: t('Press [W] or click this button to open the Weapon Store.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return null != t.l1110.display.screen.lO100.weapon_store && t.l1110.display.screen.lO100.weapon_store.shown ? Math.random() : 0;
                                    };
                                })(this),
                                time: 3,
                                skip_congrat: !0,
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.weapons_bar, 0, -1 / 16);
                                    };
                                })(this),
                            },
                            gamepad: {
                                text: t('Press Ⓧ to open the Weapon Store.'),
                                checkValue: (function (t) {
                                    return function () {
                                        return null != t.l1110.display.screen.lO100.weapon_store && t.l1110.display.screen.lO100.weapon_store.shown ? Math.random() : 0;
                                    };
                                })(this),
                                time: 3,
                                skip_congrat: !0,
                            },
                        }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return (t.mode.show_upgrades = !1), t.l1110.I0O01.sendModeMessage('fill_crystals');
                                };
                            })(this),
                            text: t('Press this button to convert all your gems into credits.'),
                            clear: !0,
                            checkValue: (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.weapon_store.shown || t.l1110.display.screen.lO100.showWeaponStore(), 0 === t.l1110.Ill00.status.I0O1l && t.l1110.weapons.credits > 0 ? Math.random() : 0;
                                };
                            })(this),
                            pointer: (function (t) {
                                return function (e) {
                                    return e.pointComponent(t.l1110.display.screen.lO100.weapon_store.transfer_button);
                                };
                            })(this),
                            idle_delay: 4e4,
                            transform: { OOIl0: -0.3, OO1lI: 2.3 },
                            time: 3,
                        }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return t.l1110.I0O01.sendModeMessage('fill_credits');
                                };
                            })(this),
                            text: t('Use your credits to buy weapons. I have added a little.'),
                            checkValue: (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.weapon_store.shown || t.l1110.display.screen.lO100.showWeaponStore(), t.l1110.weapons.weapons.length >= t.l1110.Ill00.type.level ? Math.random() : 0;
                                };
                            })(this),
                            pointer: (function (t) {
                                return function (e) {
                                    return e.pointComponent(t.l1110.display.screen.lO100.weapon_store.buy_buttons[5]);
                                };
                            })(this),
                            transform: { OOIl0: -0.3, OO1lI: 2.3 },
                            time: 3,
                        }),
                        this.add({
                            text: t('You can now close the Weapon Store'),
                            pointer: (function (t) {
                                return function (e) {
                                    return e.pointComponent(t.l1110.display.screen.lO100.weapon_store.exit_button);
                                };
                            })(this),
                            checkValue: (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.weapon_store.shown ? 0 : Math.random();
                                };
                            })(this),
                            time: 3,
                        }),
                        this.add({
                            touch: {
                                init: (function (t) {
                                    return function () {
                                        return t.l1110.I0O01.sendModeMessage('fix_secondaries');
                                    };
                                })(this),
                                text: t('Press these buttons to fire your secondaries.'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.weapons_bar, 0, 0.25);
                                    };
                                })(this),
                                checkValue: (function (t) {
                                    return function () {
                                        var e, i, s, l;
                                        for (s = t.l1110.weapons.weapons, e = 0, i = s.length; e < i; e++) {
                                            if (((l = s[e]), 10 === l.code && 4 !== l.ammo)) return Math.random();
                                            if (11 === l.code && 2 !== l.ammo) return Math.random();
                                        }
                                        return 0;
                                    };
                                })(this),
                                time: 3,
                                achievement: t('Secondary Weapons'),
                            },
                            mouse: {
                                init: (function (t) {
                                    return function () {
                                        return t.l1110.I0O01.sendModeMessage('fix_secondaries');
                                    };
                                })(this),
                                text: t('Press this button or keyboard [Alt] to fire your secondaries. Press [⇧] to switch from one secondary to another.'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.weapons_bar, 0, -0.45);
                                    };
                                })(this),
                                checkValue: (function (t) {
                                    return function () {
                                        var e, i, s, l;
                                        for (s = t.l1110.weapons.weapons, e = 0, i = s.length; e < i; e++) {
                                            if (((l = s[e]), 10 === l.code && 4 !== l.ammo)) return Math.random();
                                            if (11 === l.code && 2 !== l.ammo) return Math.random();
                                        }
                                        return 0;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Secondary Weapons'),
                            },
                            gamepad: {
                                init: (function (t) {
                                    return function () {
                                        return t.l1110.I0O01.sendModeMessage('fix_secondaries');
                                    };
                                })(this),
                                text: t('Press Ⓑ to fire your secondaries. Press Ⓨ to switch from one secondary to another.'),
                                checkValue: (function (t) {
                                    return function () {
                                        var e, i, s, l;
                                        for (s = t.l1110.weapons.weapons, e = 0, i = s.length; e < i; e++) {
                                            if (((l = s[e]), 10 === l.code && 4 !== l.ammo)) return Math.random();
                                            if (11 === l.code && 2 !== l.ammo) return Math.random();
                                        }
                                        return 0;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Secondary Weapons'),
                            },
                        }),
                        this.add({ text: t("Let's talk about advanced controls."), time: 3 }),
                        this.add({ text: t('When you move in the void of space, there is nothing to stop you.'), time: 5 }),
                        this.add({ text: t('Fortunately, your ship has an RCS module that simulates friction to brake you.'), time: 5 }),
                        this.add({ text: t('You can switch off this system to slide endlessly. You can then switch it on again.'), time: 5 }),
                        this.add({
                            touch: {
                                text: t('Press this button to switch RCS ON/OFF'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.rcs);
                                    };
                                })(this),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.Ill00.status.glide;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Advanced Controls'),
                            },
                            mouse: {
                                text: t('Use [Ctrl] to switch RCS ON/OFF'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.rcs);
                                    };
                                })(this),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.Ill00.status.glide;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Advanced Controls'),
                            },
                            gamepad: {
                                text: t('Press Left Trigger to switch RCS ON/OFF'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.Ill00.status.glide;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Advanced Controls'),
                            },
                        }),
                        this.add({
                            touch: {
                                text: t('You can communicate with other players using universal galactic language.') + ' ' + t('Touch your ship and talk.'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent({ position: { x: t.l1110.display.width / 2, y: 0.48 * t.l1110.display.height }, scale: { x: 0, y: 0.1 * t.l1110.display.height } }, 0, 0.25);
                                    };
                                })(this),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.chat_bubble.text.length;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Communications'),
                            },
                            mouse: {
                                text: t('You can communicate with other players using universal galactic language.') + ' ' + t('Press [ENTER] or click this button and talk.'),
                                pointer: (function (t) {
                                    return function (e) {
                                        return e.pointComponent(t.l1110.display.screen.lO100.chatpanel.open_button);
                                    };
                                })(this),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.display.screen.lO100.chatpanel.shown && t.mode.instructor.arrow.hide(), t.l1110.lIlO0.chat_bubble.text.length;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Communications'),
                            },
                            gamepad: {
                                text: t('You can communicate with other players using universal galactic language.') + ' ' + t('Move and press Right Stick to talk'),
                                checkValue: (function (t) {
                                    return function () {
                                        return t.l1110.lIlO0.chat_bubble.text.length;
                                    };
                                })(this),
                                time: 10,
                                achievement: t('Communications'),
                            },
                        }),
                        this.add({ text: t('You look all ready!'), time: 3 }),
                        this.add({ text: t('Before I go, let me tell you this: space is a hazardous place.'), time: 4 }),
                        this.add({ text: t('Always watch your radar.'), time: 3 }),
                        this.add({ text: t("Lower tier ships are usually faster. Use this advantage to run. Come back to battle when you've gained strength."), time: 10, achievement: t('Combat Briefing') }),
                        this.add({
                            init: (function (t) {
                                return function () {
                                    return setTimeout(function () {
                                        return (t.mode.show_upgrades = !0), t.l1110.I0O01.sendModeMessage('end_sequence'), (t.mode.end_sequence_start = Date.now());
                                    }, 5e3);
                                };
                            })(this),
                            text: t('Damn it. Command Center is reporting an alien attack. Let me upgrade your ship and fill it with secondaries. Good luck Commander.'),
                            time: 8,
                        })
                    );
                }),
                e
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.TutorialScoreboard = (function (e) {
            function i(t, e) {
                (this.l1110 = t), (this.hue = e), i.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 10 / 11), (this.align_top = !0), this.l1110.addKeyListener(9, this), (this.shown = !0), (this.wave = 0), (this.OlIO1 = 0), (this.aliens = 0), (this.wave_start_time = 0);
            }
            return (
                extend(i, e),
                (i.prototype.updateHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.view = t), this.visible)) return (this.lO011 = !0);
                }),
                (i.prototype.setModeData = function (t) {}),
                (i.prototype.fillAsteroid = function (t, e, i, s) {
                    var l, n, a, o, r, h;
                    for (o = new OII10(1), t.beginPath(), l = n = 0; n <= 19; l = n += 1) (a = 0.8 + 0.4 * o.next()), (r = e + Math.cos((l / 20) * (180 * THREE.Math.DEG2RAD) * 2) * s * a), (h = i + Math.sin((l / 20) * (180 * THREE.Math.DEG2RAD) * 2) * s * a), 0 === l ? t.moveTo(r, h) : t.lineTo(r, h);
                    return t.closePath(), t.fill();
                }),
                (i.prototype.lllO1 = function (e) {
                    var i, s, l, n, a, o, r, h, u, d;
                    if (null != this.view && ((this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',50%,50%,.4)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (d = Math.round((20 * this.llO1l) / 512)), (e.font = d + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'left'), (e.fillStyle = this.color), e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), (e.fillStyle = this.background), e.fillRect(0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l), (e.fillStyle = this.color), (e.fillStyle = '#000'), e.fillText(t('Scoreboard'), 0.05 * this.llO1l, 0.05 * this.llO1l), this.l1110.using_gamepad ? Gamepad.drawButton('RB', e, 0.5 * this.llO1l, 0.05 * this.llO1l, 0.8 * d, this.hue) : this.l1110.is_mobile_app || ((e.textAlign = 'center'), (e.font = Math.round(0.8 * d) + 'pt Play'), e.fillText('TAB', 0.5 * this.llO1l, 0.05 * this.llO1l), (e.strokeStyle = '#000'), e.strokeRect(0.45 * this.llO1l, 0.02 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), (e.textAlign = 'left'), (e.textBaseline = 'bottom'), (e.font = Math.round(d) + 'pt Play'), (e.fillStyle = this.color), (e.textAlign = 'center'), e.fillText(t('Training'), 0.5 * this.llO1l, 0.24 * this.lO01I), (e.fillStyle = this.medium), e.fillRect(0.05 * this.llO1l, 0.25 * this.lO01I, 0.9 * this.llO1l, 0.01 * this.lO01I), (e.fillStyle = this.color), (e.font = Math.round(1.5 * d) + 'pt Play'), (e.textAlign = 'left'), (e.textBaseline = 'middle'), this.OlIO1 > 0 && e.fillText(this.OlIO1, 0.26 * this.llO1l, 0.35 * this.lO01I), this.aliens > 0 && e.fillText(this.aliens, 0.76 * this.llO1l, 0.35 * this.lO01I), (e.font = Math.round(1.5 * d) + 'pt FontAwesome'), (e.textAlign = 'right'), (u = 1.5 * d), this.OlIO1 > 0 && this.fillAsteroid(e, 0.24 * this.llO1l - u / 2, 0.35 * this.lO01I, u / 2), null == this.alien_img && ((this.alien_img = new Image()), (this.alien_img.crossOrigin = 'Anonymous'), (this.alien_img.src = 'https://starblast.data.neuronality.com/img/alien.png')), this.alien_img.complete && this.alien_img.width > 0 && this.aliens > 0 && e.drawImage(this.alien_img, 0.74 * this.llO1l - 0.1 * this.llO1l, 0.35 * this.lO01I - 0.05 * this.llO1l, 0.1 * this.llO1l, 0.1 * this.llO1l), (d = Math.round((22 * this.llO1l) / 512)), (e.font = d + 'pt Play'), (e.textBaseline = 'middle'), (n = e.createLinearGradient(0, 0, this.llO1l, 0)), n.addColorStop(0, 'hsla(' + this.hue + ',40%,20%,.5)'), n.addColorStop(0.05, 'hsla(' + this.hue + ',40%,20%,0)'), n.addColorStop(1, 'hsla(' + this.hue + ',40%,20%,.5)'), (a = e.createLinearGradient(0, 0, this.llO1l, 0)), a.addColorStop(0, 'hsla(' + this.hue + ',40%,60%,.5)'), a.addColorStop(0.05, 'hsla(' + this.hue + ',40%,60%,0)'), a.addColorStop(1, 'hsla(' + this.hue + ',40%,60%,.5)'), e.translate(0, this.lO01I / 11), null != this.l1110.mode.tutorial_steps)) {
                        for (l = this.l1110.mode.tutorial_steps.achievements, s = this.l1110.mode.tutorial_steps.achieved, o = r = 0, h = l.length; r < h; o = ++r) (i = l[o]), (e.fillStyle = n), e.fillRect(0, ((o + 3.5) / 11) * this.lO01I + 2, this.llO1l, this.lO01I / 11 - 4), o < s ? ((e.fillStyle = 'hsla(' + this.hue + ',80%,90%,1)'), (e.textAlign = 'left'), (e.font = Math.round(0.8 * d) + 'pt SBGlyphs'), e.fillText('#', 5, ((o + 3.5 + 0.5) / 11) * this.lO01I)) : (e.fillStyle = 'hsla(' + this.hue + ',80%,90%,.5)'), (e.font = d + 'pt Play'), (e.textAlign = 'left'), e.fillText(o + 1 + '. ' + i, 5 + 0.16 * this.lO01I, ((o + 3.5 + 0.5) / 11) * this.lO01I);
                        return e.restore();
                    }
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.shown = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.shown)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.shown = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app ? this.hide() : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                (i.prototype.keyPressed = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (i.prototype.keyReleased = function () {}),
                i
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ModdingMode = (function (t) {
            function e(t) {
                (this.l1110 = t), e.IO0OI.constructor.call(this, 'modding', 'Modding'), (this.vocabulary = []), (this.radar_shows_leader = !1);
            }
            return (
                extend(e, t),
                (e.prototype.setOptions = function (t) {
                    if ((e.IO0OI.setOptions.call(this, t), t.radar_zoom && (this.radar_zoom = t.radar_zoom), null != t.weapons_store && (this.restricted_weapons_store = !t.weapons_store), null != t.vocabulary)) return (this.vocabulary = t.vocabulary);
                }),
                (e.prototype.messageReceived = function (t) {
                    return e.IO0OI.messageReceived.call(this, t), this.messageReceivedModding(t);
                }),
                (e.prototype.lOl1l = function (t) {
                    return (
                        (this.game_info = t),
                        null != this.options.choose_ship
                            ? (this.l1110.startGame(t), this.l1110.display.screen.lO100.hide(), (this.l1110.lIlO0.IO11l.I1000.x = 0), (this.l1110.lIlO0.IO11l.I1000.y = -40), (this.next_round_page = new ChooseShipPage(this.l1110, this)), (this.next_round_page.visible = !1), this.l1110.display.screen.lO100.add(this.next_round_page, [0, 0, 1, 1]), this.l1110.I0O01.enter(), this.next_round_page.start(this.options.choose_ship))
                            : (this.l1110.I0O01.enter(),
                              this.l1110.I0O01.respawn(
                                  (function (e) {
                                      return function () {
                                          if ((e.l1110.startGame(t), null == e.scoreboard)) return (e.scoreboard = new ScorePanel(e.l1110, t.system_hue)), e.l1110.display.screen.lO100.add(e.scoreboard, [0.8, 0, 0.2, 0.52]);
                                      };
                                  })(this)
                              ))
                    );
                }),
                (e.prototype.shipSelected = function (t) {
                    return this.l1110.I0O01.sendModeMessage({ name: 'ship_selected', type: 100 * t.level + t.model }), this.spawn();
                }),
                (e.prototype.spawn = function () {
                    return (
                        (this.spawned_once = !0),
                        this.respawn(),
                        this.l1110.display.hideCursor(),
                        this.l1110.display.screen.lO100.IlO1I(),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.next_round_page.hideButtons();
                                };
                            })(this),
                            500
                        ),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.l1110.display.screen.lO100.showTooltips(), null == t.scoreboard && ((t.scoreboard = new ScorePanel(t.l1110, t.game_info.system_hue)), t.l1110.display.screen.lO100.add(t.scoreboard, [0.8, 0, 0.2, 0.52])), t.l1110.display.screen.lO100.IlO1I();
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (e.prototype.showUI = function () {
                    var t, e;
                    if ((null != this.scoreboard && (this.scoreboard.visible = !0), null != this.ui_components)) for (e in this.ui_components) (t = this.ui_components[e]), t.interfaceShown();
                }),
                (e.prototype.hideUI = function () {
                    var t, e;
                    if ((null != this.scoreboard && (this.scoreboard.visible = !1), null != this.ui_components)) for (e in this.ui_components) (t = this.ui_components[e]), t.interfaceHidden();
                }),
                (e.prototype.intermission = function (t) {
                    var e, i, s;
                    i = {};
                    for (e in t) (s = t[e]), (e = e.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')), 'string' == typeof s && (s = s.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')), (i[e] = s);
                    return (this.respawn_delay = 1), this.l1110.killed(0, t.gameover, i), (this.respawn_delay = 5e3);
                }),
                (e.prototype.updateScore = function (t) {
                    if (null != this.scoreboard) return this.scoreboard.updateScore(t);
                }),
                (e.prototype.showScorePanel = function () {
                    if (null != this.scoreboard && this.scoreboard.shown) return (this.scoreboard.visible = !0);
                }),
                (e.prototype.hideScorePanel = function () {
                    if (null != this.scoreboard) return (this.scoreboard.visible = !1);
                }),
                (e.prototype.scorePanelShown = function () {
                    return null != this.scoreboard && this.scoreboard.shown;
                }),
                (e.prototype.userShowScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.IlO1I();
                }),
                (e.prototype.userHideScorePanel = function () {
                    if (null != this.scoreboard) return this.scoreboard.hide();
                }),
                (e.createMode = function (t, i) {
                    if (null != i.root_mode)
                        switch (i.root_mode) {
                            case 'survival':
                                return new ModdedSurvivalMode(t);
                            case 'team':
                                return new ModdedTeamMode(t);
                            case 'deathmatch':
                                return new ModdedDeathMatchMode(t);
                            case 'invasion':
                                return new ModdedInvasionMode(t);
                            case 'battleroyale':
                                return new ModdedBattleRoyaleMode(t);
                        }
                    return new e(t);
                }),
                e
            );
        })(Mode)),
        (this.GenericMode = (function () {
            function t() {}
            return (
                (t.prototype.messageReceivedModding = function (t) {
                    var e;
                    switch (t.name) {
                        case 'instructor_says':
                            return this.showInstructor(), null != t.character && this.instructor.setCharacter(t.character), this.instructor.say(t.text);
                        case 'show_instructor':
                            return this.showInstructor();
                        case 'hide_instructor':
                            return this.hideInstructor();
                        case 'set_ui_component':
                            return this.setUIComponent(t.component);
                        case 'intermission':
                            return this.intermission(t.data);
                        case 'set_object':
                            return this.setObject(t.object);
                        case 'remove_object':
                            return this.removeObject(t.id);
                        case 'set_custom_map':
                            if (((e = t.data), (this.options.custom_map = e), this.l1110.lIlO0.OlIO1.l1IO1(Math.random()), null != this.l1110.display.screen.lO100.OOI11.background)) return this.l1110.display.screen.lO100.OOI11.background.l1IO1(Math.random());
                    }
                }),
                (t.prototype.showInstructor = function () {
                    return null == this.instructor ? ((this.instructor = new Instructor(this.l1110)), this.l1110.display.screen.lO100.add(this.instructor, [0.25, 0.05, 0.5, 0.25])) : this.instructor.say();
                }),
                (t.prototype.hideInstructor = function () {
                    if (null != this.instructor) return this.instructor.disappear();
                }),
                (t.prototype.setUIComponent = function (t) {
                    try {
                        if ((null == this.ui_components && (this.ui_components = {}), null == t.id)) return;
                        if ('scoreboard' === t.id) (null != this.scoreboard && this.scoreboard instanceof ModdingScoreboard) || (null != this.scoreboard && this.l1110.display.screen.lO100.remove(this.scoreboard), (this.scoreboard = new ModdingScoreboard(this.l1110, this.game_info.system_hue)), this.l1110.display.screen.lO100.add(this.scoreboard, [0.8, 0, 0.2, 0.52]), (this.ui_components.scoreboard = this.scoreboard));
                        else if ('radar_background' === t.id)
                            return (
                                (this.radar_background = t),
                                null != this.drawRadarInfo &&
                                    null == this.drawRadarInfo0 &&
                                    ((this.drawRadarInfo0 = this.drawRadarInfo),
                                    (this.drawRadarInfo = (function (t) {
                                        return function (e) {
                                            if ((null != t.drawRadarInfo0 && t.drawRadarInfo0(e), null != t.radar_background)) return e.save(), e.translate(-1, -1), e.scale(2 / 256, 2 / 256), ModdingUIComponent.drawContent(e, 0, 0, 256, 256, t.radar_background.components, t.l1110), e.restore();
                                        };
                                    })(this))),
                                void (null != this.l1110.display.screen.lO100.OOI11.background && this.l1110.display.screen.lO100.OOI11.background.l1IO1(this.game_info.seed))
                            );
                        return null != this.ui_components[t.id] ? this.ui_components[t.id].set(t) : (this.ui_components[t.id] = new ModdingUIComponent(this.l1110, t));
                    } catch (t) {
                        t;
                    }
                }),
                (t.prototype.setObject = function (t) {
                    return null == this.mod_objects && (this.mod_objects = new ModObjectGroup(this.l1110)), this.mod_objects.setObject(t);
                }),
                (t.prototype.removeObject = function (t) {
                    if (null != this.mod_objects) return this.mod_objects.removeObject(t);
                }),
                (t.prototype.fixPositions = function () {
                    if (null != this.mod_objects) return this.mod_objects.fixPositions();
                }),
                t
            );
        })()),
        (this.ModdedSurvivalMode = (function (t) {
            function e(t) {
                e.IO0OI.constructor.call(this, t);
            }
            return (
                extend(e, t),
                (e.prototype.setOptions = function (t) {
                    if ((e.IO0OI.setOptions.call(this, t), t.radar_zoom && (this.radar_zoom = t.radar_zoom), null != t.weapons_store && (this.restricted_weapons_store = !t.weapons_store), null != t.vocabulary)) return (this.vocabulary = t.vocabulary);
                }),
                (e.prototype.messageReceived = function (t) {
                    return e.IO0OI.messageReceived.call(this, t), this.messageReceivedModding(t);
                }),
                e
            );
        })(SurvivalMode)),
        (this.ModdedTeamMode = (function (t) {
            function e(t) {
                e.IO0OI.constructor.call(this, t);
            }
            return (
                extend(e, t),
                (e.prototype.setOptions = function (t) {
                    if ((e.IO0OI.setOptions.call(this, t), t.radar_zoom && (this.radar_zoom = t.radar_zoom), null != t.weapons_store && (this.restricted_weapons_store = !t.weapons_store), null != t.vocabulary)) return (this.vocabulary = t.vocabulary);
                }),
                (e.prototype.messageReceived = function (t) {
                    return e.IO0OI.messageReceived.call(this, t), this.messageReceivedModding(t);
                }),
                e
            );
        })(TeamMode)),
        (this.ModdedDeathMatchMode = (function (t) {
            function e(t) {
                e.IO0OI.constructor.call(this, t);
            }
            return (
                extend(e, t),
                (e.prototype.setOptions = function (t) {
                    if ((e.IO0OI.setOptions.call(this, t), t.radar_zoom && (this.radar_zoom = t.radar_zoom), null != t.weapons_store && (this.restricted_weapons_store = !t.weapons_store), null != t.vocabulary)) return (this.vocabulary = t.vocabulary);
                }),
                (e.prototype.messageReceived = function (t) {
                    return e.IO0OI.messageReceived.call(this, t), this.messageReceivedModding(t);
                }),
                e
            );
        })(DeathMatchMode)),
        (this.ModdedInvasionMode = (function (t) {
            function e(t) {
                e.IO0OI.constructor.call(this, t);
            }
            return (
                extend(e, t),
                (e.prototype.setOptions = function (t) {
                    if ((e.IO0OI.setOptions.call(this, t), t.radar_zoom && (this.radar_zoom = t.radar_zoom), null != t.weapons_store && (this.restricted_weapons_store = !t.weapons_store), null != t.vocabulary)) return (this.vocabulary = t.vocabulary);
                }),
                (e.prototype.messageReceived = function (t) {
                    return e.IO0OI.messageReceived.call(this, t), this.messageReceivedModding(t);
                }),
                e
            );
        })(InvasionMode)),
        (this.ModdedBattleRoyaleMode = (function (t) {
            function e(t) {
                e.IO0OI.constructor.call(this, t);
            }
            return (
                extend(e, t),
                (e.prototype.setOptions = function (t) {
                    if ((e.IO0OI.setOptions.call(this, t), t.radar_zoom && (this.radar_zoom = t.radar_zoom), null != t.weapons_store && (this.restricted_weapons_store = !t.weapons_store), null != t.vocabulary)) return (this.vocabulary = t.vocabulary);
                }),
                (e.prototype.messageReceived = function (t) {
                    return e.IO0OI.messageReceived.call(this, t), this.messageReceivedModding(t);
                }),
                e
            );
        })(BattleRoyaleMode)),
        (expand = function (t, e) {
            var i, s;
            s = [];
            for (i in e.prototype) t.prototype[i] = e.prototype[i];
            return s;
        }),
        expand(this.ModdedSurvivalMode, this.GenericMode),
        expand(this.ModdedTeamMode, this.GenericMode),
        expand(this.ModdedInvasionMode, this.GenericMode),
        expand(this.ModdedDeathMatchMode, this.GenericMode),
        expand(this.ModdedBattleRoyaleMode, this.GenericMode),
        expand(this.ModdingMode, this.GenericMode),
        (this.ModdedTeamMode.prototype.setOptions = this.ModdedSurvivalMode.prototype.setOptions),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ModdingUIComponent = (function (t) {
            function e(t, i) {
                (this.l1110 = t), (this.component = i), e.IO0OI.constructor.call(this), (this.shown = !1), this.O11IO.init({ opacity: 0, l0OOl: 0.5, Ol1I0: 0.5 }), (this.interface_hidden = !1), this.l1110.display.screen.lO100.add(this), this.set(this.component);
            }
            return (
                extend(e, t),
                (e.prototype.set = function (t) {
                    return (this.component = t), null != this.component.position && ((this.component.position[0] /= 100), (this.component.position[1] /= 100), (this.component.position[2] /= 100), (this.component.position[3] /= 100), (this.lOlI0 = this.IIOI1 = this.component.position)), this.component.clickable && null != this.component.shortcut && this.l1110.addKeyListener(this.component.shortcut.charCodeAt(0), this), (this.lO011 = !0), this.interface_hidden || (null != this.component.visible && !this.component.visible) ? this.hide() : this.IlO1I();
                }),
                (e.prototype.interfaceHidden = function () {
                    return (this.interface_hidden = !0), this.hide();
                }),
                (e.prototype.interfaceShown = function () {
                    if (((this.interface_hidden = !1), this.component.visible || null == this.component.visible)) return this.IlO1I();
                }),
                (e.prototype.hide = function () {
                    if (this.shown)
                        return (
                            (this.shown = !1),
                            this.O11IO.set({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        if (!t.shown) return (t.visible = !1);
                                    };
                                })(this),
                                1e3
                            )
                        );
                }),
                (e.prototype.IlO1I = function () {
                    if (!this.shown) return (this.shown = !0), (this.visible = !0), this.O11IO.set({ opacity: 1 });
                }),
                (e.prototype.lIl1I = function (t, e, i) {
                    return !(!this.component.clickable || this.l1110.settings.check('buttons_disabled')) && (this.O11IO.set({ l0OOl: 0.9, Ol1I0: 0.9, d: 0.5 }), this.O11IO.push({ d: 0.5 }), this.l1110.I0O01.sendModeMessage({ name: 'ui_component_clicked', id: this.component.id }), !0);
                }),
                (e.prototype.keyPressed = function () {
                    if (this.component.clickable) return this.O11IO.set({ l0OOl: 0.9, Ol1I0: 0.9, d: 0.5 }), this.O11IO.push({ d: 0.5 }), this.l1110.I0O01.sendModeMessage({ name: 'ui_component_clicked', id: this.component.id });
                }),
                (e.prototype.keyReleased = function () {}),
                (e.prototype.lllO1 = function (t) {
                    return e.drawContent(t, this.px, this.l1O1l, this.llO1l, this.lO01I, this.component.components, this.l1110);
                }),
                (e.drawContent = function (t, e, i, s, l, n, a) {
                    var o, r, h, u, d, c, p, I, O, m, f, g, y;
                    t.save(), t.translate(e, i);
                    try {
                        if (n)
                            for (u = 0, p = n.length; u < p; u++)
                                switch (((o = n[u]), o.type)) {
                                    case 'round':
                                        (m = (o.position[2] * s) / 100), (h = (o.position[3] * l) / 100), (g = (o.position[0] * s) / 100), (y = (o.position[1] * l) / 100), t.beginPath(), (f = o.width || 1), t.ellipse(g + m / 2, y + h / 2, m / 2 - f / 2, h / 2 - f / 2, 0, 0, 180 * THREE.Math.DEG2RAD * 2, !0), null != o.fill && ((t.fillStyle = o.fill), t.fill()), null != o.stroke && ((t.strokeStyle = o.stroke), null != o.width && (t.lineWidth = o.width), t.stroke());
                                        break;
                                    case 'box':
                                        (m = (o.position[2] * s) / 100), (h = (o.position[3] * l) / 100), (g = (o.position[0] * s) / 100), (y = (o.position[1] * l) / 100), t.beginPath(), (f = o.width || 1), t.rect(g, y, m, h), null != o.fill && ((t.fillStyle = o.fill), t.fill()), null != o.stroke && ((t.strokeStyle = o.stroke), null != o.width && (t.lineWidth = o.width), t.stroke());
                                        break;
                                    case 'text':
                                        for (m = (o.position[2] * s) / 100, h = (o.position[3] * l) / 100, g = (o.position[0] * s) / 100, y = (o.position[1] * l) / 100, O = Math.round(h / 1.5), t.font = O + 'pt Play'; ; ) {
                                            if (O < 5 || t.measureText(o.value).width < m) break;
                                            (O -= 1), (t.font = O + 'pt Play');
                                        }
                                        (t.textBaseline = 'middle'), (t.fillStyle = o.color), null == o.align || 'center' === o.align ? ((t.textAlign = 'center'), t.fillText(o.value, g + m / 2, y + h / 2)) : 'left' === o.align ? ((t.textAlign = 'left'), t.fillText(o.value, g, y + h / 2)) : 'right' === o.align && ((t.textAlign = 'right'), t.fillText(o.value, g + m, y + h / 2));
                                        break;
                                    case 'player':
                                        (m = (o.position[2] * s) / 100), (h = (o.position[3] * l) / 100), (g = (o.position[0] * s) / 100), (y = (o.position[1] * l) / 100), (d = o.id), null != d && null != a && (t.save(), t.rect(g, y, m, h), t.clip(), (r = a.names.getCustom(d)), (I = a.names.get(d)), null != r && ((c = Il01O.I110l(r.badge, r.laser, r.finish, 48, r.hue)), c.complete && t.drawImage(c, g, y, 2 * h, h)), null != I && (null != o.color && (t.fillStyle = o.color), (t.textAlign = 'left'), (t.textBaseline = 'middle'), t.fillText(I, g + 2.25 * h, y + h / 2), t.restore()));
                                }
                    } catch (t) {}
                    return t.restore();
                }),
                e
            );
        })(OllI0)),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ChooseShipPage = (function (e) {
            function i(e, s) {
                (this.l1110 = e),
                    (this.mode = s),
                    i.IO0OI.constructor.call(this),
                    this.l1110.is_app &&
                        ((this.quit_button = new QuitDMButton(
                            this.l1110,
                            200,
                            (function (t) {
                                return function () {
                                    return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                                };
                            })()
                        )),
                        this.add(this.quit_button, [0, 0.94, 0.2, 0.06]),
                        this.animate(this.quit_button, 0.75)),
                    (this.nextround = new ll110(t('Choose your ship'))),
                    (this.nextround.font = 'Play'),
                    (this.nextround.color = '#FFF'),
                    (this.nextround.background = null),
                    (this.nextround.text_shadow.opacity = 1),
                    (this.nextround.text_shadow.blur = 20),
                    (this.nextround.text_shadow.color = '#F80'),
                    (this.nextround.stroke_size = 4),
                    (this.nextround.stroke_color = '#000'),
                    (this.nextround.blending = THREE.NormalBlending),
                    this.add(this.nextround, [0.1, 0.3, 0.8, 0.05]),
                    this.animate(this.nextround, 1),
                    (this.buttons = []);
            }
            return (
                extend(i, e),
                (i.prototype.start = function (t) {
                    var e, i;
                    (this.visible = !0), this.l1110.display.showCursor(), this.createButtons(t), (this.nextround.visible = !0), this.animate(this.nextround, 0), null != this.quit_button && (this.animate(this.quit_button, 0), (this.quit_button.enabled = !0)), this.l1110.is_app && (null == this.caret && ((this.caret = new Caret('OOlO1')), (this.caret_index = 0), this.add(this.caret)), (e = this.buttons[0].lOlI0[0] + this.buttons[0].lOlI0[2] / 2), (i = this.buttons[0].lOlI0[1]), (this.caret.visible = !0), (this.caret.lOlI0 = this.caret.IIOI1 = [e - 0.025, i - 0.02, 0.05, 0.05]), this.buttons.length > 1 && (this.caret_spacing = (this.buttons[1].lOlI0[0] - this.buttons[0].lOlI0[0]) / 0.05), this.l1110.lIlO0.control.setNavigationListener(this));
                }),
                (i.prototype.animate = function (t, e) {
                    return t.O11IO.init({ l0OOl: 0.5, Ol1I0: 0.5, opacity: 0 }), t.O11IO.pause(e), t.O11IO.push({ d: 1, k: 0.01, f: 0.17 });
                }),
                (i.prototype.disappear = function (t) {
                    return t.O11IO.set({ d: 1, k: 0.05, f: 0.2, opacity: 0, l0OOl: 0.5, Ol1I0: 0.5 });
                }),
                (i.prototype.bump = function (t) {
                    return t.O11IO.set({ d: 0.1, l0OOl: 1.1, Ol1I0: 1.1, k: 0.1, f: 0.3 }), t.O11IO.push({ d: 0.8, k: 0.05, f: 0.2 });
                }),
                (i.prototype.scoranim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.5, OOIl0: 2 * (Math.random() - 0.5) }), t.O11IO.pause(Math.random()), t.O11IO.push({ d: 4, k: 0.01, f: 0.2 });
                }),
                (i.prototype.superanim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.01, rotation: 180 * THREE.Math.DEG2RAD * 2 }), t.O11IO.push({ d: 4, k: 0.05, f: 0.2 });
                }),
                (i.prototype.topanim = function (t) {
                    return t.O11IO.init({ l0OOl: 0.01, Ol1I0: 0.01 }), t.O11IO.push({ d: 4, k: 0.05, f: 0.2 });
                }),
                (i.prototype.removeButtons = function () {
                    var t, e, i, s;
                    for (s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), t.dispose(), this.remove(t);
                    return (this.buttons = []);
                }),
                (i.prototype.createButtons = function (t) {
                    var e, i, s, l, n, a, o, r, h;
                    for (this.removeButtons(), i = s = 0, n = t.length; s < n; i = ++s) (r = t[i]), (t[i] = this.mode.OlII0.ships_by_code[r]);
                    for (o = t.length, h = Math.min(0.25, 1 / o), i = l = 0, a = t.length; l < a; i = ++l) (r = t[i]), (e = new ShipSelectButton(this.l1110, this.mode, r, (-180 * THREE.Math.DEG2RAD) / 8 + ((i / Math.max(1, o - 1)) * (180 * THREE.Math.DEG2RAD)) / 4)), this.add(e, [0.5 - (o / 2) * h + i * h + 0.01, 0.36, h - 0.02, 0.45]), this.animate(e, 0.5 * i), this.buttons.push(e), 1 === t.length && e.setSelected(!0);
                }),
                (i.prototype.shipSelected = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, i = 0, s = l.length; i < s; i++) (e = l[i]), e.setSelected(e === t);
                    return this.mode.shipSelected(t.ship);
                }),
                (i.prototype.hideButtons = function () {
                    var t, e, i, s;
                    for (s = this.buttons, e = 0, i = s.length; e < i; e++) (t = s[e]), this.disappear(t), (t.enabled = !1);
                    this.disappear(this.nextround),
                        null != this.caret && (this.caret.visible = !1),
                        setTimeout(
                            (function (e) {
                                return function () {
                                    var i, s, l;
                                    for (l = e.buttons, i = 0, s = l.length; i < s; i++) (t = l[i]), e.remove(t);
                                    return e.remove(e.nextround);
                                };
                            })(this),
                            1e3
                        );
                }),
                (i.prototype.gamepadNavigation = function (t) {
                    switch (t) {
                        case 'left':
                            return this.setIndex((this.caret_index + this.buttons.length - 1) % this.buttons.length);
                        case 'right':
                            return this.setIndex((this.caret_index + 1) % this.buttons.length);
                        case 'ok':
                            return this.buttons[this.caret_index].lIl1I(0, 0, 0), this.buttons[this.caret_index].lI1O0(0, 0, 0);
                        case 'cancel':
                            return (window.onbeforeunload = null), (document.location.hash = ''), document.location.reload();
                    }
                }),
                (i.prototype.setIndex = function (t) {
                    if (null != this.caret && t !== this.caret_index) return (this.caret_index = t), this.caret.setOffset(this.caret_index * this.caret_spacing, 0);
                }),
                (i.prototype.mouseOver = function (t) {
                    var e, i, s, l;
                    for (l = this.buttons, e = i = 0, s = l.length; i < s; e = ++i) l[e] === t && this.setIndex(e);
                }),
                i
            );
        })(OO00l)),
        (this.ModObject = (function () {
            function t(t, e, i) {
                (this.Il1I1 = t),
                    (this.object = e),
                    (this.type = i),
                    this.type.getInstance(
                        (function (t) {
                            return function (e) {
                                return (t.l0OlI = e), t.l0OlI.position.set(t.object.position.x, t.object.position.y, t.object.position.z), t.l0OlI.scale.set(t.object.scale.x, t.object.scale.y, t.object.scale.z), t.l0OlI.rotation.set(t.object.rotation.x, t.object.rotation.y, t.object.rotation.z), t.Il1I1.Il1I1.add(t.l0OlI);
                            };
                        })(this)
                    );
            }
            return (
                (t.prototype.set = function (t) {
                    if ((null != t.position && ((this.object.position = t.position), null != this.l0OlI && this.l0OlI.position.set(this.object.position.x, this.object.position.y, this.object.position.z)), null != t.scale && ((this.object.scale = t.scale), null != this.l0OlI && this.l0OlI.scale.set(this.object.scale.x, this.object.scale.y, this.object.scale.z)), null != t.rotation && ((this.object.rotation = t.rotation), null != this.l0OlI))) return this.l0OlI.rotation.set(this.object.rotation.x, this.object.rotation.y, this.object.rotation.z);
                }),
                (t.prototype.remove = function () {
                    if (null != this.l0OlI) return this.Il1I1.Il1I1.remove(this.l0OlI);
                }),
                t
            );
        })()),
        (this.ModObjectType = (function () {
            function t(t) {
                var e, i, s;
                (this.spec = t),
                    (this.id = this.spec.id),
                    (s = new THREE.LoadingManager()),
                    (i = new THREE.OBJLoader(s)),
                    (e = this.spec.obj),
                    i.load(
                        e,
                        (function (t) {
                            return function (e) {
                                return (t.object = e), t.checkLoaded();
                            };
                        })(this)
                    ),
                    this.spec.emissive &&
                        ((this.emissive_img = new Image()),
                        (this.emissive_img.crossOrigin = 'Anonymous'),
                        (this.emissive_img.src = this.spec.emissive),
                        (this.emissive_img.onload = (function (t) {
                            return function () {
                                return (t.emissive = new THREE.Texture(t.emissive_img)), (t.emissive.needsUpdate = !0), t.checkLoaded();
                            };
                        })(this))),
                    this.spec.diffuse &&
                        ((this.diffuse_img = new Image()),
                        (this.diffuse_img.crossOrigin = 'Anonymous'),
                        (this.diffuse_img.src = this.spec.diffuse),
                        (this.diffuse_img.onload = (function (t) {
                            return function () {
                                return (t.diffuse = new THREE.Texture(t.diffuse_img)), (t.diffuse.needsUpdate = !0), t.checkLoaded();
                            };
                        })(this))),
                    this.spec.specular &&
                        ((this.specular_img = new Image()),
                        (this.specular_img.crossOrigin = 'Anonymous'),
                        (this.specular_img.src = this.spec.specular),
                        (this.specular_img.onload = (function (t) {
                            return function () {
                                return (t.specular = new THREE.Texture(t.specular_img)), (t.specular.needsUpdate = !0), t.checkLoaded();
                            };
                        })(this))),
                    this.spec.bump &&
                        ((this.bump_img = new Image()),
                        (this.bump_img.crossOrigin = 'Anonymous'),
                        (this.bump_img.src = this.spec.bump),
                        (this.bump_img.onload = (function (t) {
                            return function () {
                                return (t.bump = new THREE.Texture(t.bump_img)), (t.bump.needsUpdate = !0), t.checkLoaded();
                            };
                        })(this))),
                    (this.queue = []);
            }
            return (
                (t.prototype.checkLoaded = function () {
                    if (null != this.object && !((null != this.spec.emissive && null == this.emissive) || (null != this.spec.diffuse && null == this.diffuse) || (null != this.spec.specular && null == this.specular) || (null != this.spec.bump && null == this.bump))) for (this.updateMaterial(), this.l0OlI = this.object.children[0]; this.queue.length > 0; ) this.getInstance(this.queue.splice(0, 1)[0]);
                }),
                (t.prototype.getInstance = function (t) {
                    return null == this.l0OlI ? this.queue.push(t) : t(new THREE.Mesh(this.l0OlI.geometry, this.material));
                }),
                (t.l0IO0 = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b;
                    for (
                        null == e && (e = 50),
                            m = function (t, i, s) {
                                var l, n;
                                return (e = s.length), (l = Math.atan2(i, -t)), (l = Math.round(((l + 180 * THREE.Math.DEG2RAD * 2) / (180 * THREE.Math.DEG2RAD * 2)) * e) % e), (n = Math.sqrt(t * t + i * i)), (s[l] = Math.max(s[l], n));
                            },
                            s = new THREE.Geometry(),
                            s.fromBufferGeometry(t),
                            t = s,
                            O = [],
                            n = o = 0,
                            c = e - 1;
                        0 <= c ? o <= c : o >= c;
                        n = 0 <= c ? ++o : --o
                    )
                        O[n] = 0;
                    for (p = t.faces, r = 0, u = p.length; r < u; r++) for (l = p[r], f = t.vertices[l.a], g = t.vertices[l.b], y = t.vertices[l.c], n = h = 0; h <= 99; n = h += 1) (i = n / 100), (v = f.x * i + g.x * (1 - i)), (b = f.y * i + g.y * (1 - i)), m(v, b, O), (v = y.x * i + g.x * (1 - i)), (b = y.y * i + g.y * (1 - i)), m(v, b, O), (v = y.x * i + f.x * (1 - i)), (b = y.y * i + f.y * (1 - i)), m(v, b, O);
                    for (a = d = 0, I = O.length - 1; 0 <= I ? d <= I : d >= I; a = 0 <= I ? ++d : --d) O[a] = parseFloat(O[a].toFixed(3));
                    return O;
                }),
                (t.prototype.updateMaterial = function () {
                    return null != this.emissive && null == this.diffuse && null == this.specular && null == this.bump ? ((this.emissiveColor = null != this.emissive || null != this.spec.emissiveColor ? (null != this.spec.emissiveColor ? this.spec.emissiveColor : 16777215) : 0), (this.material = new THREE.MeshBasicMaterial({ color: this.emissiveColor, map: this.emissive, side: THREE.DoubleSide, transparent: null == this.spec.transparent || this.spec.transparent }))) : null == this.specular && null == this.bump && null == this.spec.specularColor ? ((this.diffuseColor = null != this.diffuse || null != this.spec.diffuseColor ? (null != this.spec.diffuseColor ? this.spec.diffuseColor : 16777215) : 0), (this.emissiveColor = null != this.emissive || null != this.spec.emissiveColor ? (null != this.spec.emissiveColor ? this.spec.emissiveColor : 16777215) : 0), (this.material = new THREE.MeshLambertMaterial({ color: this.diffuseColor, map: this.diffuse, emissive: this.emissiveColor, emissiveMap: this.emissive, side: THREE.DoubleSide, transparent: null == this.spec.transparent || this.spec.transparent }))) : ((this.diffuseColor = null != this.diffuse || null != this.spec.diffuseColor ? (null != this.spec.diffuseColor ? this.spec.diffuseColor : 16777215) : 0), (this.emissiveColor = null != this.emissive || null != this.spec.emissiveColor ? (null != this.spec.emissiveColor ? this.spec.emissiveColor : 16777215) : 0), (this.specularColor = null != this.specular || null != this.spec.specularColor ? (null != this.spec.specularColor ? this.spec.specularColor : 16777215) : 0), (this.material = new THREE.MeshPhongMaterial({ color: this.diffuseColor, map: this.diffuse, emissiveMap: this.emissive || null, specularMap: this.specular || null, bumpMap: this.bump, bumpScale: this.spec.bumpScale ? this.spec.bumpScale : 0.1, shininess: null != this.spec.shininess ? this.spec.shininess : 30, specular: this.specularColor, emissive: this.emissiveColor, side: THREE.DoubleSide, transparent: null == this.spec.transparent || this.spec.transparent })));
                }),
                t
            );
        })()),
        (indexOf =
            [].indexOf ||
            function (t) {
                for (var e = 0, i = this.length; e < i; e++) if (e in this && this[e] === t) return e;
                return -1;
            }),
        (this.ModObjectGroup = (function () {
            function t(t) {
                (this.l1110 = t), (this.Il1I1 = new THREE.Group()), this.l1110.lIlO0.lIlO0.add(this.Il1I1), (this.objects = {}), (this.object_types = {});
            }
            return (
                (t.prototype.getObjectType = function (t) {}),
                (t.prototype.setObject = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p;
                    if (t.id) {
                        if (((i = ['id', 'diffuseColor', 'emissiveColor', 'specularColor', 'bumpScale', 'shininess', 'transparent', 'physics']), (c = ['obj', 'diffuse', 'emissive', 'specular', 'bump']), (e = ['data:', 'https://starblast.data.neuronality.com/', 'https://starblast.io/', 'https://raw.githubusercontent.com/', 'https://github.com/', 'https://gitlab.com/']), null != t.type)) {
                            (a = {}), (r = t.type);
                            for (l in r)
                                if (((p = r[l]), indexOf.call(c, l) >= 0)) {
                                    if ('string' != typeof p) return;
                                    for (s = 0, n = e.length; s < n; s++)
                                        if (((d = e[s]), p.startsWith(d))) {
                                            (a[l] = p), (p = null);
                                            break;
                                        }
                                    if (null != p) return;
                                } else indexOf.call(i, l) >= 0 && (a[l] = p);
                            t.type = a;
                        }
                        return (o = this.objects[t.id]), null != o ? o.set(t) : ((u = t.type.id), (h = this.object_types[u]), null == h && ((h = new ModObjectType(t.type)), (this.object_types[u] = h)), (o = new ModObject(this, t, h)), (this.objects[t.id] = o));
                    }
                }),
                (t.prototype.removeObject = function (t) {
                    var e, i;
                    if (null == t) {
                        for (e in this.objects) (i = this.objects[e]), i.remove();
                        return (this.objects = {});
                    }
                    if (null != (i = this.objects[t])) return i.remove(), delete this.objects[t];
                }),
                (t.prototype.fixPositions = function () {
                    var t, e;
                    for (t in this.objects) (e = this.objects[t]), null != e.l0OlI && this.l1110.lIlO0.IO11l.Ill0l(e.l0OlI);
                }),
                t
            );
        })()),
        (extend = function (t, e) {
            function i() {
                this.constructor = t;
            }
            for (var s in e) hasProp.call(e, s) && (t[s] = e[s]);
            return (i.prototype = e.prototype), (t.prototype = new i()), (t.IO0OI = e.prototype), t;
        }),
        (hasProp = {}.hasOwnProperty),
        (this.ModdingScoreboard = (function (e) {
            function i(t, e) {
                (this.l1110 = t), (this.hue = e), i.IO0OI.constructor.call(this), (this.blending = THREE.AdditiveBlending), (this.force_ratio = 10 / 11), (this.align_top = !0), this.l1110.addKeyListener(9, this), (this.shown = !0), (this.components = []);
            }
            return (
                extend(i, e),
                (i.prototype.updateHue = function (t) {
                    return (this.hue = t), (this.lO011 = !0);
                }),
                (i.prototype.updateScore = function (t) {
                    if (((this.view = t), this.visible)) return (this.lO011 = !0);
                }),
                (i.prototype.set = function (t) {
                    return (this.components = t.components);
                }),
                (i.prototype.interfaceHidden = function () {}),
                (i.prototype.interfaceShown = function () {}),
                (i.prototype.lllO1 = function (e) {
                    var i;
                    if (null != this.view) return (this.background = 'hsla(' + this.hue + ',70%,30%,.15)'), (this.medium = 'hsla(' + this.hue + ',50%,50%,.4)'), (this.color = 'hsla(' + this.hue + ',50%,80%,1)'), e.save(), e.translate(this.px, this.l1O1l), (i = Math.round((20 * this.llO1l) / 512)), (e.font = i + 'pt Play'), (e.textBaseline = 'middle'), (e.textAlign = 'left'), (e.fillStyle = this.color), e.beginPath(), e.moveTo(0, 0.025 * this.llO1l), e.lineTo(0, 0.1 * this.llO1l), e.lineTo(this.llO1l, 0.1 * this.llO1l), this.l1110.is_mobile_app ? e.lineTo(this.llO1l, 0) : (e.lineTo(this.llO1l, 0.09 * this.llO1l), e.lineTo(0.75 * this.llO1l, 0.09 * this.llO1l), e.lineTo(0.72 * this.llO1l, 0)), e.lineTo(0.025 * this.llO1l, 0), e.closePath(), e.fill(), (e.fillStyle = this.background), e.fillRect(0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l), (e.fillStyle = this.color), (e.fillStyle = '#000'), e.fillText(t('Scoreboard'), 0.05 * this.llO1l, 0.05 * this.llO1l), this.l1110.using_gamepad ? Gamepad.drawButton('RB', e, 0.5 * this.llO1l, 0.05 * this.llO1l, 0.8 * i, this.hue) : this.l1110.is_mobile_app || ((e.textAlign = 'center'), (e.font = Math.round(0.8 * i) + 'pt Play'), e.fillText('TAB', 0.5 * this.llO1l, 0.05 * this.llO1l), (e.strokeStyle = '#000'), e.strokeRect(0.45 * this.llO1l, 0.02 * this.llO1l, 0.1 * this.llO1l, 0.06 * this.llO1l)), ModdingUIComponent.drawContent(e, 0, 0.1 * this.llO1l, this.llO1l, this.lO01I - 0.1 * this.llO1l, this.components, this.l1110), e.restore();
                }),
                (i.prototype.IlO1I = function () {
                    if (!this.shown) return null != this.close_timer && clearTimeout(this.close_timer), (this.visible = !0), (this.lO011 = !0), this.O11IO.set(), (this.shown = !0);
                }),
                (i.prototype.hide = function () {
                    if (this.shown)
                        return (
                            this.O11IO.set({ OOIl0: 1.1 }),
                            (this.shown = !1),
                            (this.close_timer = setTimeout(
                                (function (t) {
                                    return function () {
                                        return (t.visible = !1), (t.close_timer = null);
                                    };
                                })(this),
                                1e3
                            ))
                        );
                }),
                (i.prototype.lIl1I = function (t, e, s) {
                    return this.l1110.is_mobile_app ? this.hide() : i.IO0OI.lIl1I.call(this, t, e, s);
                }),
                (i.prototype.keyPressed = function () {
                    return this.shown ? this.hide() : this.IlO1I();
                }),
                (i.prototype.keyReleased = function () {}),
                i
            );
        })(OllI0)),
        (this.Names = (function () {
            function t(t) {
                (this.l1110 = t), (this.names = []), (this.custom = []), (this.requests = []), (this.data = []), (this.f = new l0IOO());
            }
            return (
                (t.prototype.get = function (t) {
                    var e;
                    return (e = this.names[t]), null == e ? ((null == this.requests[t] || Date.now() > this.requests[t] + 2e3) && (this.l1110.I0O01.Ol0I1(t), (this.requests[t] = Date.now())), '') : e;
                }),
                (t.prototype.getCustom = function (t) {
                    return null == this.l1110.I0O01 ? null : (this.get(t), this.custom[t]);
                }),
                (t.prototype.getData = function (t) {
                    return null == this.l1110.I0O01 ? null : (this.get(t), this.data[t]);
                }),
                (t.prototype.set = function (t, e, i) {
                    return t === this.l1110.Ill00.status.id && null != this.l1110.player_name && this.l1110.player_name.length > 0 ? ((e = this.l1110.player_name), (i.player_name = e)) : (e = this.f.lO0OI(e)), (this.names[t] = e), (this.custom[t] = i.custom), (this.data[t] = i);
                }),
                t
            );
        })()),
        (this.O00IO = (function () {
            function t() {
                (this.x = 0), (this.y = 0), (this.lllOl = 0), (this.II110 = 0), (this.r = 0), (this.lIl10 = 0), (this.angle = 0), (this.I0lOO = 0), (this.guided = !1), (this.glide = !1), (this.dash = !1), (this.score = 0), (this.shield = 0), (this.generator = 0), (this.I0O1l = 0), (this.invulnerable = !1), (this.healing = !1), (this.contribution = 0), (this.left = !1), (this.right = !1), (this.up = !1), (this.strafe_left = !1), (this.strafe_right = !1), (this.OOlO1 = !1), (this.OI00O = !1), (this.O01O1 = 0), (this.hue = 0), (this.rank = 100), (this.kills = 0), (this.bestscore = 0), (this.levels = 0), (this.alive = !1), (this.lives = 1), (this.deaths = 0), (this.l1OI0 = !1);
            }
            return (
                (t.prototype.Il1Ol = function (t) {
                    if (null != this.I0l1l && t >= this.I0l1l.getUint32(8, !0)) return this.read(this.I0l1l), (this.I0l1l = null);
                }),
                (t.prototype.read = function (t) {
                    var e, i;
                    return (this.x = t.getFloat32(16, !0)), (this.y = t.getFloat32(20, !0)), (this.lllOl = t.getFloat32(24, !0)), (this.II110 = t.getFloat32(28, !0)), (this.r = t.getFloat32(32, !0)), (this.lIl10 = t.getFloat32(36, !0)), (e = t.getUint8(2)), (this.alive = (1 & e) > 0), (this.up = (2 & e) > 0), (this.lives = 7 & Math.floor(e / 4)), (this.strafe_left = (32 & e) > 0), (this.strafe_right = (64 & e) > 0), (this.hue = Math.floor((360 * t.getUint8(3)) / 256)), (this.angle = t.getUint16(12, !0)), (this.I0lOO = t.getUint8(40)), (this.rank = t.getUint8(41)), (i = t.getUint16(14, !0)), (this.type = 1023 & i), (this.healing = 0 != (1024 & i)), (this.dash = 0 != (2048 & i)), (this.l1OI0 = 0 != (4096 & i)), (this.guided = 0 != (8192 & i)), (this.glide = 0 != (16384 & i)), (this.invulnerable = 0 != (32768 & i)), (this.shield = t.getUint16(42, !0)), (this.generator = t.getUint16(44, !0)), (this.I0O1l = t.getUint16(46, !0)), (this.score = t.getUint32(48, !0)), (this.levels = t.getUint32(52, !0)), (this.O01O1 = t.getUint32(8, !0));
                }),
                t
            );
        })()),
        (this.Il010 = (function () {
            function t(t, e, i, s, l, n) {
                (this.OOI0l = e), (this.shipid = s), (this.laserticles = n), (this.x = t.getFloat32(i, !0)), (this.y = t.getFloat32(i + 4, !0)), (this.z = t.getFloat32(i + 8, !0)), (this.lllOl = t.getFloat32(i + 12, !0)), (this.II110 = t.getFloat32(i + 16, !0)), (this.speed = t.getFloat32(i + 20, !0)), (this.id = t.getUint16(i + 24, !0)), (this.angle = t.getFloat32(i + 26, !0)), (this.type = t.getUint8(i + 30)), (this.damage = t.getUint8(i + 31)), (this.type = Math.max(0, Math.min(6, 0 | this.type))), (this.OI11O = this.speed < 100 ? 120 : Math.round(-2 * Math.log(1 - 63 / this.speed) * 60)), (this.soundplayed = !1), (this.hue = 0), null != l && (null != l.OIl0O ? (this.hue = l.OIl0O.hue) : 'number' == typeof l && (this.hue = l)), this.laserticles.lIlO0.l1110.mode.anonymous_ships && this.shipid !== this.laserticles.lIlO0.Ill00.status.id && ((this.hue = (this.laserticles.lIlO0.l1110.hue + 180) % 360), (this.type = 0)), (this.IOllI = O0l1l.hsvToRgbHex(this.hue / 360, 0.5, 1)), this.laserticles.OI00O(this);
            }
            return (
                (t.prototype.kill = function (t, e, i) {
                    return this.laserticles.kill(this, t, e, i);
                }),
                (t.prototype.Ol1II = function (t, e) {
                    var i, s, l, n;
                    return (i = Math.cos(this.angle)), (s = Math.sin(this.angle)), (l = (t - this.OOI0l) / 60), (n = 1 - Math.exp(0.5 * -l)), (e.x = this.x + i * n * 100 + 60 * this.lllOl * l), (e.y = this.y + s * n * 100 + 60 * this.II110 * l);
                }),
                t
            );
        })()),
        (this.ll1OI = (function () {
            function t(t) {
                (this.l1110 = t), (this.ships = []), (this.lasers = []), (this.ll0l1 = []), (this.stations = []), (this.projectiles = []), (this.aliens = []), (this.OlIO1 = []), (this.Il1I1 = new THREE.Group()), (this.OII1l = Date.now()), (this.II1O0 = 0), (this.IOOI1 = 0), (this.offtime_count = 0), (this.time_initialized = !1), (this.I1O01 = 16), (this.last_read_time = 0), (this.I1000 = { x: 0, y: 0, lllOl: 0, II110: 0, zoom: 1 }), (this.rip_plates = []), (this.weapon_physics = new WeaponPhysics(this.l1110)), (this.alien_physics = new AlienPhysics(this.l1110));
            }
            return (
                (t.prototype.O1011 = function (t) {
                    var e, i;
                    if (!(t < this.last_read_time)) {
                        if (((this.last_read_time = t), (i = Date.now() - t), (e = Math.round(i - this.OII1l)), Math.abs(e) > 30 && this.time_initialized, this.time_initialized))
                            if (Math.abs(i - this.OII1l) > 150) {
                                if (++this.offtime_count > 3) return (this.OII1l = i), (this.offtime_count = 0), !1;
                            } else this.offtime_count = 0;
                        else (this.OII1l = i), (this.time_initialized = !0);
                        return this.OII1l > i && (this.OII1l = 0.95 * this.OII1l + 0.05 * i), !0;
                    }
                }),
                (t.prototype.addDemoShip = function (t) {
                    var e, i, s, l, n;
                    return (n = this.l1110.mode.OI1I1.types_by_code[t.type]), (l = new lIl1O(this.l1110.mode.OlII0.ships_by_code[n.code], t.hue / 360)), (i = l.Il1I1), this.Il1I1.add(i), (e = new l0I0I(this.l1110, n, !0)), (e.status = t), (s = { O1II0: e, model: i, shipmodel: l }), this.ships.push(s), (this.ll0l1[t.id] = s), this.Ol0Il(s);
                }),
                (t.prototype.lOOlI = function (t) {
                    var e, i, s, l, n, a, o;
                    return (a = new O00IO()), a.read(t), (a.id = t.getUint8(1)), (o = this.l1110.mode.OI1I1.types_by_code[a.type]), (i = a.hue), this.l1110.mode.anonymous_ships && (i = (this.l1110.hue + 180) % 360), (n = new lIl1O(this.l1110.mode.OlII0.ships_by_code[o.code], i / 360)), (s = n.Il1I1), this.Il1I1.add(s), this.Il1I1.add(n.OIl0O.l0OlI), (e = new l0I0I(this.l1110, o, !0)), (e.status = a), (l = { O1II0: e, model: s, shipmodel: n, OIl0O: n.OIl0O }), this.ships.push(l), (this.ll0l1[a.id] = l), this.Ol0Il(l), this.l1110.I0O01.Ol0I1(a.id);
                }),
                (t.prototype.addStation = function (t) {
                    return this.stations.push(t), this.Il1I1.add(t.Il1I1);
                }),
                (t.prototype.updateStations = function () {
                    var t, e, i, s, l, n;
                    for (t = ((this.II1O0 / 60 / 3600) % 1) * (180 * THREE.Math.DEG2RAD) * 2, s = this.l1110.l0I1I * Math.sqrt(2) * 0.5, 1 === this.stations.length && (s = 0), l = this.stations, e = 0, i = l.length; e < i; e++) (n = l[e]), (n.Il1I1.position.x = s * Math.cos(t + n.phase)), (n.Il1I1.position.y = s * Math.sin(t + n.phase)), this.Ill0l(n.Il1I1), n.l1O0l(this.II1O0);
                }),
                (t.prototype.isShipVisible = function (t) {
                    var e;
                    return null != (e = this.ll0l1[t]) && e.model.visible;
                }),
                (t.prototype.shipSays = function (t, e) {
                    var i, s;
                    if (null != (s = this.ll0l1[t]) && this.l1110.mode.acceptChat(s, e)) return null == s.chatbubble ? ((i = s.O1II0.status.hue), this.l1110.mode.anonymous_ships && (i = (this.l1110.hue + 180) % 360), (s.chatbubble = new ChatBubble(this.l1110, i, e)), s.chatbubble.l0I00(e), this.Il1I1.add(s.chatbubble.l0OlI)) : s.chatbubble.l0I00(e), this.Ol0Il(s);
                }),
                (t.prototype.OIl0l = function (t, e) {
                    var i;
                    if (null != (i = this.ll0l1[t])) return i.OIl0O.Ol11I(e);
                }),
                (t.prototype.IIIO1 = function (t, e) {
                    var i, s, l;
                    if (!((i = e.getUint32(8, !0)) < t.status.O01O1)) {
                        if (i > this.II1O0) return (t.status.I0l1l = e);
                        if (!(i < this.II1O0)) return t.status.read(e);
                        if ((t.status.read(e), this.II1O0 - i < 30)) {
                            for (s = i + 1, l = this.II1O0; s <= l; s += 1) t.l0Ill();
                            return (t.status.O0IIl = this.II1O0);
                        }
                    }
                }),
                (t.prototype.lO11O = function (t) {
                    var e;
                    return (e = this.ll0l1[t.getUint8(1)]), null != e ? this.IIIO1(e.O1II0, t) : this.lOOlI(t);
                }),
                (t.prototype.O1lIl = function (t) {
                    var e, i, s, l;
                    for (s = this.ships, e = 0, i = s.length; e < i; e++) (l = s[e]), this.Ol0Il(l, t);
                    this.updateStations(), this.updateRipPlates(), this.updateProjectiles(), this.updateAliens(), this.updateAsteroids(), this.l1110.mode.fixPositions();
                }),
                (t.prototype.Ill0l = function (t) {
                    var e, i;
                    return (e = t.position.x - this.I1000.x), (i = t.position.y - this.I1000.y), e > this.l1110.l0I1I ? (t.position.x -= this.l1110.size) : e < -this.l1110.l0I1I && (t.position.x += this.l1110.size), i > this.l1110.l0I1I ? (t.position.y -= this.l1110.size) : i < -this.l1110.l0I1I ? (t.position.y += this.l1110.size) : void 0;
                }),
                (t.prototype.fixPositionXY = function (t) {
                    var e, i;
                    return (e = t.x - this.I1000.x), (i = t.y - this.I1000.y), e > this.l1110.l0I1I ? (t.x -= this.l1110.size) : e < -this.l1110.l0I1I && (t.x += this.l1110.size), i > this.l1110.l0I1I ? (t.y -= this.l1110.size) : i < -this.l1110.l0I1I ? (t.y += this.l1110.size) : void 0;
                }),
                (t.prototype.Ol0Il = function (t, e) {
                    var i, s, l, n, a;
                    return null == e && (e = 1), this.l1110.mode.anonymous_ships || (null != (i = this.l1110.names.getCustom(t.O1II0.status.id)) && (t.shipmodel.finish = i.finish)), (t.model.position.x = t.O1II0.status.x), (t.model.position.y = t.O1II0.status.y), (t.shipmodel.l1OI0 = t.O1II0.status.l1OI0), null != t.OIl0O && ((t.OIl0O.l0OlI.position.x = t.O1II0.status.x), (t.OIl0O.l0OlI.position.y = t.O1II0.status.y - 2 - t.O1II0.type.radius), (t.OIl0O.l0OlI.position.z = 1), t.OIl0O.l1O0l(this.l1110, this.l1110.names.get(t.O1II0.status.id), t.O1II0.status, t.O1II0.instance), this.Ill0l(t.OIl0O.l0OlI)), null != t.chatbubble && ((t.chatbubble.l0OlI.position.x = t.O1II0.status.x), (t.chatbubble.l0OlI.position.y = t.O1II0.status.y + 4), (t.chatbubble.l0OlI.position.z = 1), t.chatbubble.OO0Il(), this.Ill0l(t.chatbubble.l0OlI)), (s = this.l1110.mode.anonymous_ships ? ((this.l1110.hue + 180) % 360) / 360 : t.O1II0.status.hue / 360), (t.O1II0.type.code !== t.O1II0.status.type || Math.abs(t.shipmodel.hue - s) > 0.01) && (t.O1II0.setType(this.l1110.mode.OI1I1.types_by_code[t.O1II0.status.type]), this.Il1I1.remove(t.model), this.Il1I1.remove(t.OIl0O.l0OlI), t.shipmodel.dispose(), (l = t.O1II0.status.hue), this.l1110.mode.anonymous_ships && (l = (this.l1110.hue + 180) % 360), (a = new lIl1O(this.l1110.mode.OlII0.ships_by_code[t.O1II0.status.type], l / 360)), a.bump(this.II1O0), (n = a.Il1I1), this.Il1I1.add(n), this.Il1I1.add(a.OIl0O.l0OlI), (t.shipmodel = a), (t.model = n), (t.OIl0O = a.OIl0O)), this.Ill0l(t.model), (t.model.rotation.x = t.O1II0.ll010 + 180 * THREE.Math.DEG2RAD * 2), (t.model.rotation.y = 0.4 * t.O1II0.OOIlI + 180 * THREE.Math.DEG2RAD * 2), (t.model.rotation.z = t.O1II0.status.r + 180 * THREE.Math.DEG2RAD), (t.model.visible = this.II1O0 - t.O1II0.status.O01O1 < 90 && t.O1II0.status.alive), null != t.OIl0O && (t.OIl0O.l0OlI.visible = this.II1O0 - t.O1II0.status.O01O1 < 90 && t.O1II0.status.alive && !t.O1II0.status.guided), t.shipmodel.propstep(t.O1II0.status.up || t.O1II0.status.dash), (t.shipmodel.invulnerable = t.O1II0.status.invulnerable), t.shipmodel.l1O0l(this.II1O0), t.O1II0.pods.updateModels(t.model.visible), t.O1II0.pods.fixPositions();
                }),
                (t.prototype.removeShip = function (t) {
                    var e, i, s, l;
                    for (this.Il1I1.remove(t.model), t.shipmodel.dispose(), null != t.OIl0O && this.Il1I1.remove(t.OIl0O.l0OlI), l = this.ships, e = i = 0, s = l.length; i < s; e = ++i)
                        if (l[e] === t) {
                            this.ships.splice(e, 1);
                            break;
                        }
                }),
                (t.prototype.I1l0O = function () {
                    var t, e, i, s, l;
                    for (l = Date.now(), Math.abs(l - this.IOOI1) > 1e3 && ((this.IOOI1 = l), (this.lO0O1 = l - this.I1O01)), this.I1O01 = 0.05 * (l - this.lO0O1) + 0.95 * this.I1O01, this.lO0O1 = l, this.IOOI1 = 0.99 * (this.IOOI1 + this.I1O01) + 0.01 * l, l = this.IOOI1, s = Math.round(((l - this.OII1l) / 1e3) * 60), t = Math.max(0, Math.min(30, s - this.II1O0)), e = 1, i = t; e <= i; e += 1) this.l0Ill();
                    return (this.II1O0 = s), t;
                }),
                (t.prototype.l0Ill = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    for (g = null != this.l1110.mode.options.shield_regen_factor ? this.l1110.mode.options.shield_regen_factor : 1, d = null != this.l1110.mode.options.power_regen_factor ? this.l1110.mode.options.power_regen_factor : 1, this.Ill00.status.alive && (this.Ill00.status.generator = Math.max(this.Ill00.status.generator, Math.min(this.Ill00.instance.generator_capacity, this.Ill00.status.generator + (this.Ill00.instance.generator_reload / 60) * d))), this.Ill00.status.alive && (this.Ill00.status.shield = Math.min(this.Ill00.instance.shield_capacity, this.Ill00.status.shield + (this.Ill00.instance.shield_reload / 60) * g)), this.Ill00.status.Il1Ol(this.II1O0), this.Ill00.l0Ill(), this.Ill00.status.O0IIl = this.II1O0 + 1, I = this.ships, i = 0, l = I.length; i < l; i++) (y = I[i]), y.O1II0.status.Il1Ol(this.II1O0), y.O1II0.l0Ill(), (y.O1II0.status.O0IIl = this.II1O0 + 1);
                    for (O = this.projectiles, s = 0, n = O.length; s < n; s++) (u = O[s]), u.l0Ill();
                    for (m = this.aliens, r = 0, a = m.length; r < a; r++) (t = m[r]), t.l0Ill();
                    for (f = this.OlIO1, h = 0, o = f.length; h < o; h++) (t = f[h]), t.l0Ill();
                    for (this.l1110.mode.modeStep(), this.O10l1(), this.OI00I(), e = c = this.projectiles.length - 1; c >= 0; e = c += -1) this.projectiles[e].killed && (this.projectiles[e].dispose(), this.projectiles.splice(e, 1));
                    for (e = p = this.aliens.length - 1; p >= 0; e = p += -1) this.aliens[e].killed && (this.aliens[e].dispose(), this.aliens.splice(e, 1));
                    for (e = v = this.OlIO1.length - 1; v >= 0; e = v += -1) this.OlIO1[e].killed && (this.OlIO1[e].dispose(), this.OlIO1.splice(e, 1));
                    this.II1O0++;
                }),
                (t.prototype.initCamera = function (t) {
                    return null == t && (t = 1), (this.I1000.x = this.Ill00.status.x), (this.I1000.y = this.Ill00.status.y), (this.I1000.lllOl = 0), (this.I1000.II110 = 0), (this.I1000.zoom = t);
                }),
                (t.prototype.OI00I = function () {
                    var t, e, i, s, l, n, a;
                    this.I1000.x < this.Ill00.status.x - this.l1110.l0I1I ? (this.I1000.x += this.l1110.size) : this.I1000.x > this.Ill00.status.x + this.l1110.l0I1I && (this.I1000.x -= this.l1110.size), this.I1000.y < this.Ill00.status.y - this.l1110.l0I1I ? (this.I1000.y += this.l1110.size) : this.I1000.y > this.Ill00.status.y + this.l1110.l0I1I && (this.I1000.y -= this.l1110.size), (l = this.Ill00.status.x + 30 * this.Ill00.status.lllOl), (n = this.Ill00.status.y + 30 * this.Ill00.status.II110), (e = l - this.I1000.x), (i = n - this.I1000.y), (t = Math.sqrt(e * e + i * i)), (s = 100), t > s && ((e *= s / t), (i *= s / t)), (this.I1000.lllOl += 0.02 * e), (this.I1000.II110 += 0.02 * i), (this.I1000.lllOl *= 0.7), (this.I1000.II110 *= 0.7), this.Ill00.status.alive && ((this.I1000.x += this.I1000.lllOl), (this.I1000.y += this.I1000.II110)), (a = Math.pow(this.Ill00.type.radius / 3, 0.3)), null != this.l1110.mode.OlII0.ships_by_code[this.Ill00.type.code].zoom && (a /= this.l1110.mode.OlII0.ships_by_code[this.Ill00.type.code].zoom), (this.I1000.zoom = 0.995 * this.I1000.zoom + 0.005 * a), isNaN(this.I1000.x) || isNaN(this.I1000.y) || isNaN(this.I1000.lllOl) || isNaN(this.I1000.II110);
                }),
                (t.prototype.laser = function (t) {
                    var e, i, s, l, n, a, o, r;
                    for (l = (t.byteLength - 8) / 32, o = t.getUint8(1), r = t.getUint32(4, !0), a = this.ll0l1[o], null == a && o === this.l1110.lIlO0.Ill00.status.id && ((a = this.l1110.lIlO0.ship), (this.l1110.lIlO0.Ill00.status.generator = t.getUint16(2, !0))), 0 === o && (a = t.getUint16(2, !0)), e = 8, i = 1, n = l; i <= n; i += 1) (s = new Il010(t, r, e, o, a, this.l1110.lIlO0.laserticles)), this.lasers.push(s), (e += 32), o === this.l1110.lIlO0.Ill00.status.id && s.damage === this.Ill00.pulsePower() && (this.Ill00.last_pulse_shot = r);
                }),
                (t.prototype.O10l1 = function () {
                    var t, e, i, s, l, n;
                    for (this.l1110.lIlO0.laserticles.l1O0l(this.II1O0), n = this.lasers, e = 0, l = n.length; e < l; e++) (s = n[e]), s.OOI0l <= this.II1O0 && (s.soundplayed || ((s.soundplayed = !0), s.shipid === this.Ill00.status.id ? this.l1110.l0I11.OI00O(s.damage) : this.l1110.l0I11.lOOOO(s.x, s.y, s.damage)));
                    for (t = i = this.lasers.length - 1; i >= 0; t = i += -1) (s = this.lasers[t]), this.II1O0 > s.OOI0l + 120 && (s.kill(), this.lasers.splice(t, 1));
                }),
                (t.prototype.OI1O1 = function (t, e, i, s) {
                    var l, n, a;
                    for (l = n = this.lasers.length - 1; n >= 0; l = n += -1) if (((a = this.lasers[l]), a.id === t)) return a.kill(e, i, s), this.lasers.splice(l, 1), a;
                    return null;
                }),
                (t.prototype.showRipPlate = function (t) {
                    var e, i, s;
                    return (i = this.l1110.names.get(t.status.id)), (e = this.l1110.names.getCustom(t.status.id)), t === this.l1110.lIlO0.Ill00 && (i = this.l1110.player_name), (s = new RIPPlate(i, e)), (s.l0OlI.position.x = t.status.x), (s.l0OlI.position.y = t.status.y), this.fixPositionXY(s.l0OlI), this.rip_plates.push(s), this.l1110.lIlO0.lIlO0.add(s.l0OlI);
                }),
                (t.prototype.updateRipPlates = function () {
                    var t, e, i;
                    for (t = e = this.rip_plates.length - 1; e >= 0; t = e += -1) (i = this.rip_plates[t]), this.fixPositionXY(i.l0OlI), i.l1O0l(), i.remove && (this.rip_plates.splice(t, 1), this.l1110.lIlO0.lIlO0.remove(i.l0OlI), i.dispose());
                }),
                (t.prototype.updateProjectiles = function () {
                    var t, e, i, s;
                    for (s = this.projectiles, t = 0, e = s.length; t < e; t++) (i = s[t]), i.updateModel();
                }),
                (t.prototype.updateAliens = function () {
                    var t, e, i, s;
                    for (s = this.aliens, e = 0, i = s.length; e < i; e++) (t = s[e]), t.updateModel();
                }),
                (t.prototype.updateAsteroids = function () {
                    var t, e, i, s;
                    for (s = this.OlIO1, e = 0, i = s.length; e < i; e++) (t = s[e]), t.updateModel();
                }),
                (t.prototype.projectileStatus = function (t) {
                    var e, i, s, l, n, a;
                    for (a = t.getUint8(1), e = t.getUint16(2, !0), n = this.projectiles, i = 0, s = n.length; i < s; i++) if (((l = n[i]), l.typeid === a && l.id === e)) return l.l1O0l(t);
                    switch (a) {
                        case 10:
                        case 11:
                        case 12:
                            return (l = new Rocket(this.l1110, t)), this.projectiles.push(l);
                        case 20:
                        case 21:
                            return (l = new Mine(this.l1110, t)), this.projectiles.push(l);
                    }
                }),
                (t.prototype.projectileExplosion = function (t, e) {
                    var i, s, l, n;
                    for (n = this.projectiles, i = 0, s = n.length; i < s; i++) if (((l = n[i]), l.typeid === t && l.id === e)) return this.l1110.lIlO0.O101l.blast(l.x, l.y, (3 * l.type.damage_area) / 15), this.l1110.l0I11.I001O(l.x, l.y, 1, 0.25), this.l1110.lIlO0.shakeCamera(l.x, l.y, l.type.damage / 20), void (l.killed = !0);
                }),
                (t.prototype.alienStatus = function (t) {
                    var e, i, s, l, n;
                    for (t.getUint8(1), i = t.getUint16(2, !0), n = this.aliens, s = 0, l = n.length; s < l; s++) if (((e = n[s]), e.id === i)) return e.l1O0l(t);
                    return (e = new Alien(this.l1110, t)), this.aliens.push(e);
                }),
                (t.prototype.findAlien = function (t) {
                    var e, i, s, l;
                    for (l = this.aliens, i = 0, s = l.length; i < s; i++) if (((e = l[i]), e.id === t)) return e;
                    return null;
                }),
                (t.prototype.alienExplosion = function (t, e) {
                    var i, s, l, n;
                    for (n = this.aliens, s = 0, l = n.length; s < l; s++) if (((i = n[s]), i.id === t)) return this.l1110.lIlO0.O101l.explode(i.x, i.y, null, i.getSpec('I001O')), this.l1110.l0I11.I001O(i.x, i.y, 1, 0.25), this.l1110.lIlO0.shakeCamera(i.x, i.y, i.getSpec('I001O')), (i.killed = !0), void (null != e && e > 0 && (this.l1110.display.screen.lO100.figures.bonus(e, i.x, i.y), (null == this.last_alien_shot || i.max_shield > this.last_alien_shot) && ((this.last_alien_shot = i.max_shield), this.l1110.takeScreenshot('frag', Date.now() + 200, this.l1110.Ill00.type.level + i.max_shield / 50))));
                }),
                (t.prototype.asteroidStatus = function (t) {
                    var e, i, s, l, n;
                    for (i = t.getUint16(2, !0), n = this.OlIO1, s = 0, l = n.length; s < l; s++) if (((e = n[s]), e.id === i)) return e.l1O0l(t);
                    return (e = new MobileAsteroid(this.l1110, t)), this.OlIO1.push(e);
                }),
                (t.prototype.asteroidExplosion = function (t) {
                    var e, i, s, l;
                    for (l = this.OlIO1, i = 0, s = l.length; i < s; i++) if (((e = l[i]), e.id === t)) return this.l1110.lIlO0.O101l.explode(e.x, e.y, null, e.size / 10), this.l1110.l0I11.I001O(e.x, e.y, 1, 0.25), this.l1110.lIlO0.shakeCamera(e.x, e.y, e.size / 10), void (e.killed = !0);
                }),
                t
            );
        })()),
        (this.III1I = (function () {
            function t(t, e) {
                (this.address = t),
                    (this.llO1I = e),
                    (this.socket = WSS.create(this.address)),
                    (this.socket.onopen = (function (t) {
                        return function () {
                            return (t.start = Date.now()), t.socket.send('ping');
                        };
                    })(this)),
                    (this.socket.onmessage = (function (t) {
                        return function (e) {
                            if ('pong' === e.data && ((t.time = Date.now() - t.start), null != t.llO1I)) return t.llO1I(t.time);
                        };
                    })(this));
            }
            return t;
        })()),
        (bind = function (t, e) {
            return function () {
                return t.apply(e, arguments);
            };
        }),
        (this.IlOII = (function () {
            function t(t, e, i) {
                var s;
                if (((this.l1110 = t), (this.llO1I = e), (this.IllO1 = null != i ? i : {}), (this.pong = bind(this.pong, this)), null != localStorage.getItem('force_server'))) return this.llO1I(localStorage.getItem('force_server'), 'Forced', !0);
                (s = new XMLHttpRequest()),
                    s.open('GET', 'https://starblast.io/simstatus.json', !0),
                    (s.onreadystatechange = (function (t) {
                        return function () {
                            var e, i, l, n, a;
                            if (4 === s.readyState && 200 === s.status) {
                                for (a = JSON.parse(s.responseText), t.regions = {}, e = 0, i = a.length; e < i; e++) (n = a[e]), null == t.IllO1[n.address] && ((l = t.regions[n.location]), null == l && ((l = new ServerRegion(t.l1110, n.location)), (t.regions[n.location] = l)), l.add(n));
                                t.sendPingRequests();
                            }
                        };
                    })(this)),
                    s.send(null);
            }
            return (
                (t.prototype.sendPingRequests = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c;
                    if (((c = 'Auto'), null != this.l1110.preferred)) {
                        for (s in this.regions) for (a = this.regions[s], o = a.servers, e = 0, l = o.length; e < l; e++) for (u = o[e], r = u.systems, i = 0, n = r.length; i < n; i++) if (((d = r[i]), !d.survival && d.id === this.l1110.preferred)) return void this.llO1I(u.address, u.location, !1);
                        return this.l1110.cannotJoin();
                    }
                    if (null != (t = localStorage.getItem('region')) && null != this.regions[t] && this.regions[t].servers.length > 0) return localStorage.removeItem('region'), this.pong(this.regions[t]);
                    if (c && null != this.regions[c] && this.regions[c].servers.length > 0)
                        return this.regions[c].ping(
                            (function (t) {
                                return function (e) {
                                    return t.pong(e);
                                };
                            })(this)
                        );
                    h = [];
                    for (s in this.regions)
                        this.regions[s].servers.length > 0
                            ? h.push(
                                  this.regions[s].ping(
                                      (function (t) {
                                          return function (e) {
                                              return t.pong(e);
                                          };
                                      })(this)
                                  )
                              )
                            : h.push(void 0);
                    return h;
                }),
                (t.prototype.refusedBy = function (t) {
                    var e, i, s, l, n, a, o;
                    this.found = !1;
                    for (s in this.regions) for (n = this.regions[s], a = n.servers, e = i = 0, l = a.length; i < l; e = ++i) (o = a[e]), o.address === t && n.servers.splice(e, 1);
                    this.sendPingRequests();
                }),
                (t.prototype.pong = function (t) {
                    if (!this.found) return (this.found = !0), localStorage.setItem('last_best_region', t.name), t.findBestServer(this.llO1I, this.l1110.preferred);
                }),
                t
            );
        })()),
        (this.ServerRegion = (function () {
            function t(t, e) {
                (this.l1110 = t), (this.name = e), (this.servers = []);
            }
            return (
                (t.prototype.add = function (t) {
                    return this.servers.push(t);
                }),
                (t.prototype.ping = function (t) {
                    var e, i, s;
                    if (((this.llO1I = t), 0 !== this.servers.length))
                        for (
                            this.servers.sort(function (t, e) {
                                return t.current_players - e.current_players;
                            }),
                                e = i = 0,
                                s = Math.min(1, this.servers.length - 1);
                            i <= s;
                            e = i += 1
                        )
                            this.II00l(this.servers[e]);
                }),
                (t.prototype.II00l = function (t) {
                    return new III1I(
                        t.address,
                        (function (t) {
                            return function (e) {
                                return t.llO1I(t);
                            };
                        })(this)
                    );
                }),
                (t.prototype.findBestServer = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H;
                    if (((i = null), (w = 0), null != this.l1110.mode))
                        if (null != this.l1110.mode.findBestServer) i = this.l1110.mode.findBestServer(this.servers);
                        else {
                            for (k = this.servers, o = 0, u = k.length; o < u; o++) for (S = k[o], E = S.systems, r = 0, d = E.length; r < d; r++) (A = E[r]), A.open && A.players < this.l1110.mode.max_enter_players && A.mode === this.l1110.mode.id && A.mod_id === this.l1110.mode.mod_id && A.time < this.l1110.mode.max_enter_time && ((w += (100 * (this.l1110.mode.max_enter_players - A.players)) / this.l1110.mode.max_enter_players), (w += (100 * (this.l1110.mode.max_enter_time - A.time)) / this.l1110.mode.max_enter_time));
                            if (w > 0)
                                for (b = Math.floor(Math.random() * w), w = 0, _ = this.servers, h = 0, c = _.length; h < c; h++) {
                                    for (S = _[h], z = S.systems, m = 0, p = z.length; m < p && ((A = z[m]), A.open && A.players < this.l1110.mode.max_enter_players && A.mode === this.l1110.mode.id && A.mod_id === this.l1110.mode.mod_id && A.time < this.l1110.mode.max_enter_time && ((w += (100 * (this.l1110.mode.max_enter_players - A.players)) / this.l1110.mode.max_enter_players), (w += (100 * (this.l1110.mode.max_enter_time - A.time)) / this.l1110.mode.max_enter_time), b < w && (i = S)), null == i); m++);
                                    if (null != i) break;
                                }
                        }
                    if (null != i) return t(i.address, i.location, !1);
                    if (null == this.l1110.mode || 'modding' !== this.l1110.mode.id || ('prototypes' !== this.l1110.mode.mod_id && 'src' !== this.l1110.mode.mod_id)) for (a = v = this.servers.length - 1; v >= 0; a = v += -1) this.servers[a].modding && this.servers.splice(a, 1);
                    else {
                        for (f = !1, a = g = this.servers.length - 1; g >= 0; a = g += -1) this.servers[a].modding && (f = !0);
                        if (f) for (a = y = this.servers.length - 1; y >= 0; a = y += -1) this.servers[a].modding || this.servers.splice(a, 1);
                    }
                    for (l = [], M = this.servers, x = 0, I = M.length; x < I; x++) (S = M[x]), 0 === S.systems.length && l.push(S);
                    if (
                        ((R = null != this.l1110.mode ? this.l1110.mode.id : ''),
                        (n = function (t) {
                            var e, i, s, l;
                            for (t += R, e = 331, i = 197, s = 0, a = l = t.length - 1; l >= 0; a = l += -1) s = ((s + t.charCodeAt(a)) * e + i) % 1e9;
                            return s;
                        }),
                        l.length > 0)
                    )
                        return (
                            l.sort(function (t, e) {
                                return n(t.address) - n(e.address);
                            }),
                            t(l[0].address, l[0].location, !0)
                        );
                    if (this.servers.length > 0) {
                        for (
                            this.servers.sort(function (t, e) {
                                return t.usage.cpu - e.usage.cpu;
                            }),
                                s = this.servers[0].usage.cpu,
                                P = [],
                                T = this.servers,
                                H = 0,
                                O = T.length;
                            H < O;
                            H++
                        )
                            (S = T[H]), S.usage.cpu < s + 5 && P.push(S);
                        return (
                            P.sort(function (t, e) {
                                return n(t.address) - n(e.address);
                            }),
                            t(P[0].address, P[0].location, !0)
                        );
                    }
                }),
                t
            );
        })()),
        (this.PrivateServerFinder = (function () {
            function t(t, e, i, s) {
                var l;
                if (((this.l1110 = t), (this.region = e), (this.llO1I = i), (this.modding = null != s && s), null != localStorage.getItem('force_server'))) return this.llO1I(localStorage.getItem('force_server'), 'Forced', !0);
                (l = new XMLHttpRequest()),
                    l.open('GET', 'https://starblast.io/simstatus.json', !0),
                    (l.onreadystatechange = (function (t) {
                        return function () {
                            var e, i, s, n, a, o, r;
                            if (4 === l.readyState && 200 === l.status) {
                                for (r = JSON.parse(l.responseText), t.regions = {}, i = 0, s = r.length; i < s; i++) (a = r[i]), (a.modding && !t.modding) || (t.modding && !a.modding) || ((n = t.regions[a.location]), null == n && ((n = new PrivateServerRegion(a.location)), (t.regions[a.location] = n)), n.add(a));
                                t.regions[t.region] &&
                                    ((o = t.regions[t.region].servers),
                                    o.sort(function (t, e) {
                                        return t.usage.cpu - e.usage.cpu;
                                    }),
                                    (e = o[0]),
                                    t.llO1I(e.address));
                            }
                        };
                    })(this)),
                    l.send(null);
            }
            return t;
        })()),
        (this.PrivateServerRegion = (function () {
            function t(t) {
                (this.name = t), (this.servers = []);
            }
            return (
                (t.prototype.add = function (t) {
                    return this.servers.push(t);
                }),
                t
            );
        })()),
        (this.lI00l = (function () {
            function e(t, e, i, s, l) {
                var n, a, o;
                (this.l1110 = t),
                    (this.address = e),
                    (this.hue = s),
                    null == l && (l = !1),
                    (this.status_sent_count = 0),
                    (this.accepted = !1),
                    (this.socket = WSS.create(this.address)),
                    (this.socket.onmessage = (function (t) {
                        return function (e) {
                            var i;
                            if ('string' != typeof (e = e.data))
                                return null != e.arrayBuffer
                                    ? e.arrayBuffer().then(function (e) {
                                          return t.O111O(e);
                                      })
                                    : ((i = new FileReader()),
                                      (i.onload = function (e) {
                                          return t.O111O(e.target.result);
                                      }),
                                      i.readAsArrayBuffer(e));
                            if ('pong' === e) return t.pong();
                            if (((e = JSON.parse(e)), e.name))
                                switch (e.name) {
                                    case 'welcome':
                                        return t.lOl1l(e.data);
                                    case 'cannot_join':
                                        return t.cannotJoin();
                                    case 'entered':
                                        return t.entered(e.data);
                                    case 'player_name':
                                        return t.OIl0l(e);
                                    case 'ecp_verified':
                                        return t.ECPVerified(e);
                                    case 'modemsg':
                                        return t.modeMsg(e);
                                    case 'error':
                                        return t.error(e);
                                }
                        };
                    })(this)),
                    (a = this.socket),
                    (this.socket.onclose = (function (t) {
                        return function () {
                            return t.O1Il0();
                        };
                    })(this)),
                    this.l1110.l00OO.I1111 ? ((n = null), (o = this.l1110.l00OO.steam_client_id)) : ((o = null), (n = this.l1110.l1OI0.key)),
                    (this.socket.lOIOO = function () {
                        return this.close();
                    }),
                    (this.socket.onopen = (function (t) {
                        return function () {
                            var e;
                            if ((t.socket.send(JSON.stringify({ name: Ol000.lO0I1, data: { mode: t.l1110.mode_id, mod_id: t.l1110.mode.mod_id, spectate: t.l1110.mode.spectate, spectate_ship: t.l1110.mode.spectate_ship, player_name: new l0IOO().lO0OI(t.l1110.player_name), hue: t.hue, preferred: null != t.l1110.preferred && t.l1110.preferred, bonus: i, ecp_key: n, steamid: o, ecp_custom: t.l1110.l1OI0.custom, create: l, client_ship_id: t.l1110.getClientShipID(), client_tr: t.l1110.ll1lI() } })), t.l1110.l1OI0.Il1lI() && null != t.l1110.l1OI0.key && t.l1110.l1OI0.key.length > 5))
                                try {
                                    if (((e = localStorage.getItem('l1OI0 l1110')), null == e && (e = '0'), (e = parseInt(e)), Date.now() > e + 72e5)) return t.l1110.sendGAEvent('ecp', t.l1110.l1OI0.key.substring(0, 5)), localStorage.setItem('l1OI0 l1110', Date.now());
                                } catch (t) {
                                    t;
                                }
                        };
                    })(this)),
                    (window.IOOl1 = (function (t) {
                        return function () {
                            return a.lOIOO();
                        };
                    })()),
                    (this.alive_ships = 0),
                    (this.ping_count = 0),
                    (this.ping_total = 0),
                    (this.ping_value = 0);
            }
            return (
                (e.prototype.ECPVerified = function (t) {
                    var e, i, s;
                    if (((i = t.data.key), (s = t.data.valid), (e = t.data.custom), this.l1110.l1OI0.O00Ol(i, s, e), s)) return (this.l1110.lIlO0.ship.finish = this.l1110.l1OI0.custom.finish);
                }),
                (e.prototype.cannotJoin = function () {
                    return this.l1110.cannotJoin();
                }),
                (e.prototype.lOl1l = function (t) {
                    var e;
                    return t.version > Ol000.OIOlO ? void this.l1110.l00OO.reloadGame() : (null != t.mode && (this.l1110.setMode(t.mode.id, t.mode), this.l1110.mode.setOptions(t.mode)), (e = new OII10(t.seed)), (t.system_hue = 120 + e.lI10l(240)), (this.accepted = !0), null != t.size && this.l1110.setSize(t.size), this.l1110.lOl1l(t), (this.join_time = Date.now()));
                }),
                (e.prototype.enter = function (t) {
                    return null == t && (t = {}), (t.spectate = this.l1110.mode.spectate), this.socket.send(JSON.stringify({ name: 'enter', data: t }));
                }),
                (e.prototype.entered = function (t) {
                    return (this.l1110.Ill00.status.id = t.shipid), this.l1110.entered(t);
                }),
                (e.prototype.ping = function () {
                    return this.cancel_ping || ((this.ping_time = Date.now()), this.socket.send('ping')), (this.cancel_ping = !1);
                }),
                (e.prototype.pong = function () {
                    var t;
                    return (t = Date.now() - this.ping_time), this.measuredPing(t);
                }),
                (e.prototype.measuredPing = function (t) {
                    if (!(t >= 1e3)) return (t = Math.max(0, t - 8)), Math.abs(t - this.ping_value) > 20 ? (this.ping_value = t) : (this.ping_value = 0.9 * this.ping_value + 0.1 * t), (this.l1110.ping = Math.round(this.ping_value)), this.ping_count++, (this.ping_total += t), 60 === this.ping_count ? (this.ping_total / 60 < 80 && null != this.l1110.region && localStorage.setItem('region', this.l1110.region), this.l1110.sendGAEvent('ping_evt', 50 * Math.ceil(this.ping_total / 600 / 5) + 'ms')) : void 0;
                }),
                (e.prototype.respawn = function (t) {
                    return (this.respawn_callback = t), this.socket.send(JSON.stringify({ name: 'respawn' }));
                }),
                (e.prototype.say = function (t) {
                    return this.socket.send(JSON.stringify({ name: 'say', data: t }));
                }),
                (e.prototype.I01O0 = function (t) {
                    var e, i, s, l, n;
                    return (
                        (n = new DataView(t)),
                        (l = n.getUint32(4, !0)),
                        this.l1110.lIlO0.IO11l.O1011(l),
                        n.getUint8(1) !== this.l1110.Ill00.status.id
                            ? this.l1110.lIlO0.IO11l.lO11O(n)
                            : (this.statusPingCheck(n),
                              (i = n.getUint8(2)),
                              (e = (1 & i) > 0),
                              e && (this.l1110.Ill00.status.killed = !1),
                              this.l1110.Ill00.status.alive &&
                                  !e &&
                                  setTimeout(
                                      (function (t) {
                                          return function () {
                                              if (!t.l1110.Ill00.status.killed && !t.l1110.mode.ignoreKills()) return t.killed(0, 0);
                                          };
                                      })(this),
                                      1e3
                                  ),
                              this.l1110.lIlO0.IO11l.IIIO1(this.l1110.Ill00, n),
                              null != this.respawn_callback && e ? (this.l1110.Ill00.O1O0O(), (s = this.respawn_callback), (this.respawn_callback = null), s()) : void 0)
                    );
                }),
                (e.prototype.laser = function (t) {
                    return this.l1110.lIlO0.IO11l.laser(t);
                }),
                (e.prototype.O1Il0 = function () {
                    return this.accepted ? this.l1110.O1Il0() : this.l1110.refused();
                }),
                (e.prototype.killed = function (e, i) {
                    var s, l;
                    if (!this.l1110.Ill00.status.killed && ((this.l1110.Ill00.status.killed = !0), this.l1110.Ill00.status.deaths++, (this.l1110.Ill00.status.alive = !1), this.l1110.lIlO0.O101l.explode(this.l1110.Ill00.status.x, this.l1110.Ill00.status.y, null, Math.max(5, this.l1110.Ill00.type.radius)), this.l1110.l0I11.I001O(this.l1110.Ill00.status.x, this.l1110.Ill00.status.y, 4, 0.25), this.l1110.lIlO0.shakeCamera(this.l1110.Ill00.status.x, this.l1110.Ill00.status.y, 20), (l = this.l1110.names.get(e)), l.length > 0 && this.l1110.message(t('%s killed you!').replace('%s', l), '#FF8'), this.l1110.mode.killed(e, 0 !== i, i), e > 0 && null != (s = this.l1110.lIlO0.IO11l.ll0l1[e]))) return this.l1110.sendGAEvent('kill', s.O1II0.type.name + ' kills ' + this.l1110.Ill00.type.name), this.l1110.takeScreenshot('killed', Date.now() + 200, 2 * this.l1110.Ill00.type.level + 2 * s.O1II0.type.level);
                }),
                (e.prototype.O111O = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K, W, Y, J, Z, X, Q, $, tt, et, it, st, lt, nt, at, ot, rt, ht, ut, dt, ct, pt;
                    switch (((ut = new DataView(e)), (r = ut.getUint8(0)))) {
                        case 0:
                            this.I01O0(e);
                            break;
                        case 71:
                            (X = ut.getUint32(1, !0)), (this.l1110.lIlO0.IO11l.survival_start = X), (this.l1110.lIlO0.IO11l.survival = !0);
                            break;
                        case 100:
                            this.laser(ut);
                            break;
                        case 101:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (U = ut.getUint8(12)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct)), (l = null != k ? k.angle : null), (c = null != k ? k.damage : 1), (q = this.l1110.lIlO0.IO11l.ll0l1[U]), null != q ? (null != k && 6 === k.type ? (q.shipmodel.bumpShield(), this.l1110.l0I11.shield(dt, ct)) : q.O1II0.status.shield > c ? ((q.shipmodel.O0OIO = 1), this.l1110.l0I11.shield(dt, ct)) : (this.l1110.lIlO0.O101l.explode(dt, ct, l, c / 10), this.l1110.l0I11.I001O(dt, ct))) : U === this.l1110.Ill00.status.id && (null != k && 6 === k.type ? (this.l1110.lIlO0.ship.bumpShield(), this.l1110.l0I11.shield(dt, ct)) : this.l1110.lIlO0.Ill00.status.shield > c ? ((this.l1110.lIlO0.ship.O0OIO = 1), this.l1110.l0I11.shield(dt, ct)) : (this.l1110.lIlO0.O101l.explode(dt, ct, l, c / 10), this.l1110.l0I11.I001O(dt, ct), this.l1110.lIlO0.shakeCamera(dt, ct, c / 20)));
                            break;
                        case 103:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct)), (l = null != k ? k.angle : 0), (Q = null != k ? k.damage : 10), (Q = Math.pow(Q / 10, 0.5)), this.l1110.lIlO0.O101l.explode(dt, ct, l, Q), this.l1110.l0I11.I001O(dt, ct, Q);
                            break;
                        case 102:
                            (dt = ut.getFloat32(2, !0)), (ct = ut.getFloat32(6, !0)), (Q = ut.getUint8(1) / 60), this.l1110.lIlO0.O101l.explode(dt, ct, null, 3 * Q), this.l1110.l0I11.I1OOO(dt, ct, Math.pow(Math.min(1, 3 * Q), 1.5));
                            break;
                        case 110:
                            if (((dt = ut.getInt8(2)), (ct = ut.getInt8(3)), (B = ut.getUint32(4, !0)), (U = ut.getUint8(8)), (H = ut.getUint8(9)), (F = ut.getUint32(10, !0)), null == (n = this.l1110.lIlO0.OlIO1.lOl1I.IlIIl(dt, ct)) || !n.on)) return;
                            U === this.l1110.Ill00.status.id && ((this.l1110.Ill00.status.score = F), this.l1110.display.screen.lO100.figures.bonus(H, 10 * n.x, 10 * n.y)), this.l1110.lIlO0.O101l.explode(10 * n.x, 10 * n.y, null, 10 * n.size), this.l1110.l0I11.I001O(10 * n.x, 10 * n.y, 4, 0.25), this.l1110.lIlO0.shakeCamera(10 * n.x, 10 * n.y, 5 * n.size), (n.respawn = B);
                            break;
                        case 111:
                            this.l1110.lIlO0.IO11l.asteroidStatus(ut);
                            break;
                        case 112:
                            (g = ut.getUint16(2, !0)), this.l1110.lIlO0.IO11l.asteroidExplosion(g);
                            break;
                        case 120:
                            for (W = ut.getUint8(1), Y = ut.getUint32(1, !0), y = 5; ; ) {
                                if (y >= ut.byteLength) break;
                                (H = ut.getUint8(y)), (g = ut.getUint16(y + 1, !0)), (dt = ut.getFloat32(y + 3, !0)), (ct = ut.getFloat32(y + 7, !0)), ($ = ut.getFloat32(y + 11, !0)), (tt = ut.getFloat32(y + 15, !0)), this.l1110.lIlO0.I0O1l.add(dt, ct, $, tt, H, Y, g), (y += 19);
                            }
                            break;
                        case 121:
                            (U = ut.getUint8(1)), (d = ut.getUint16(2, !0)), this.l1110.lIlO0.I0O1l.eat(d, U);
                            break;
                        case 130:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (Z = ut.getUint8(12)), (M = ut.getUint8(13)), (m = 0 !== ut.getUint8(14)), (V = ut.getUint16(15, !0)), (N = ut.getUint16(17, !0)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct, m)), (l = null != k ? k.angle : null), (c = null != k ? k.damage : 1), (J = this.l1110.lIlO0.IO11l.stations[Z]), null != J && null != k && ((null != (z = J.modules[M]) && 6 === k.type) || !m) && (J.setModuleShield(z, V, N), 6 === k.type ? (z.bumpShield(), this.l1110.l0I11.shield(dt, ct)) : z.shield > 0.1 ? ((z.O0OIO = 1), this.l1110.l0I11.shield(dt, ct)) : (this.l1110.lIlO0.O101l.explode(dt, ct, l, c / 10), this.l1110.l0I11.I001O(dt, ct)));
                            break;
                        case 141:
                            (s = ut.getUint8(1)), (dt = ut.getFloat32(2, !0)), (ct = ut.getFloat32(6, !0)), null != this.l1110.display.screen.lO100.figures && this.l1110.display.screen.lO100.figures.bonus(s, dt, ct, 16744576, 11), this.l1110.l0I11.collect(dt, ct, s);
                            break;
                        case 147:
                            (g = ut.getUint8(1)), (s = ut.getUint32(2, !0)), g === this.l1110.lIlO0.Ill00.status.id ? (this.l1110.message(t('You contributed %d gems to your team!').replace('%d', s)), (this.l1110.Ill00.status.contribution += s)) : null != (S = this.l1110.names.get(g)) && S.length > 0 && this.l1110.message(t('%s contributed %d gems to your team!').replace('%d', s).replace('%s', S));
                            break;
                        case 155:
                            (lt = ut.getUint8(1)), (T = ut.getUint8(2)), (dt = ut.getFloat32(3, !0)), (ct = ut.getFloat32(7, !0)), (J = this.l1110.lIlO0.IO11l.stations[lt]), (z = J.modules[T]), (z.alive = !1), this.l1110.l0I11.I001O(dt, ct, 4, 0.25), this.l1110.lIlO0.shakeCamera(dt, ct, 20), this.l1110.lIlO0.O101l.explode(dt, ct, null, 7);
                            break;
                        case 150:
                            (U = ut.getUint8(1)),
                                U === this.l1110.Ill00.status.id && this.l1110.Ill00.status.alive
                                    ? ((w = ut.getUint8(2)), (D = ut.getUint8(12)), this.killed(w, D), this.l1110.lIlO0.IO11l.showRipPlate(this.l1110.Ill00))
                                    : ((q = this.l1110.lIlO0.IO11l.ll0l1[U]),
                                      (this.l1110.killers[U] = !1),
                                      null != q &&
                                          ((q.O1II0.status.alive = !1),
                                          (w = ut.getUint8(2)),
                                          (H = ut.getUint32(4, !0)),
                                          w === this.l1110.Ill00.status.id &&
                                              (this.l1110.Ill00.status.kills++,
                                              (S = this.l1110.names.get(U)),
                                              S.length > 0 &&
                                                  (this.l1110.message(t('You killed %s!').replace('%s', S), '#F88'),
                                                  0 != (2147483648 & ut.getUint32(8, !0)) &&
                                                      setTimeout(
                                                          (function (e) {
                                                              return function () {
                                                                  return e.l1110.message(t('Revenge kill bonus +%s points').replace('%s', Math.round(H / 2)));
                                                              };
                                                          })(this),
                                                          500
                                                      )),
                                              (this.l1110.Ill00.status.score = 2147483647 & ut.getUint32(8, !0)),
                                              setTimeout(
                                                  (function (t) {
                                                      return function () {
                                                          return t.l1110.display.screen.lO100.figures.bonus(H, q.O1II0.status.x, q.O1II0.status.y, 16777215, 10, 2);
                                                      };
                                                  })(this),
                                                  1e3
                                              ),
                                              this.l1110.takeScreenshot('frag', Date.now() + 200, this.l1110.Ill00.type.level + q.O1II0.type.level)),
                                          this.l1110.lIlO0.IO11l.isShipVisible(U) && (this.l1110.lIlO0.IO11l.showRipPlate(q.O1II0), this.l1110.lIlO0.O101l.explode(q.O1II0.status.x, q.O1II0.status.y, null, Math.max(5, q.O1II0.type.radius)), this.l1110.l0I11.I001O(q.O1II0.status.x, q.O1II0.status.y, 4, 0.25), this.l1110.lIlO0.shakeCamera(q.O1II0.status.x, q.O1II0.status.y, 10))));
                            break;
                        case 175:
                            this.l1110.weapons.read(ut);
                            break;
                        case 180:
                            (U = ut.getUint16(1, !0)), (_ = ut.getUint8(3)), (a = ut.getUint8(4)), (p = ut.getUint8(5)), (it = ut.getUint16(6, !0)), (st = ut.getUint8(8)), (et = null), 0 === st ? (null != this.l1110.lIlO0.IO11l.ll0l1[it] ? (et = this.l1110.lIlO0.IO11l.ll0l1[it].O1II0.status) : it === this.l1110.Ill00.status.id && (et = this.l1110.Ill00.status)) : 1 === st && (et = this.l1110.lIlO0.IO11l.findAlien(it)), U === this.l1110.Ill00.status.id ? (this.l1110.Ill00.pods.setMiningNum(_), this.l1110.Ill00.pods.setAttackNum(a), this.l1110.Ill00.pods.setDefenceNum(p), (this.l1110.Ill00.pods.target = et)) : null != (q = this.l1110.lIlO0.IO11l.ll0l1[U]) && (q.O1II0.pods.setMiningNum(_), q.O1II0.pods.setAttackNum(a), q.O1II0.pods.setDefenceNum(p), (q.O1II0.pods.target = et));
                            break;
                        case 181:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (pt = ut.getFloat32(12, !0)), (A = ut.getUint8(16)), (P = ut.getUint8(17)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct, 42 === A)), (l = null != k ? k.angle : null), (c = null != k ? k.damage : 1), 42 === A ? this.l1110.l0I11.shield(dt, ct) : (this.l1110.lIlO0.O101l.explode(dt, ct, l, 1, pt), this.l1110.l0I11.I001O(dt, ct));
                            break;
                        case 182:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (U = ut.getUint16(12, !0)), (A = ut.getUint8(14)), (P = ut.getUint8(15)), (pt = ut.getFloat32(16, !0)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct)), (l = null != k ? k.angle : null), (c = null != k ? k.damage : 1), U === this.l1110.Ill00.status.id ? (O = this.l1110.Ill00) : null != this.l1110.lIlO0.IO11l.ll0l1[U] && (O = this.l1110.lIlO0.IO11l.ll0l1[U].O1II0), null != O && (this.l1110.lIlO0.O101l.explode(dt, ct, l, 2, pt), this.l1110.l0I11.I001O(dt, ct, 2, 0.5), O.pods.remove(A, P), this.l1110.lIlO0.shakeCamera(dt, ct, 0.5));
                            break;
                        case 184:
                            (rt = ut.getUint8(1)), (Y = ut.getUint32(2, !0)), (g = ut.getUint16(6, !0)), (dt = ut.getFloat32(8, !0)), (ct = ut.getFloat32(12, !0)), ($ = ut.getFloat32(16, !0)), (tt = ut.getFloat32(20, !0)), this.l1110.lIlO0.collectibles.add(dt, ct, $, tt, Y, g, rt);
                            break;
                        case 183:
                            (U = ut.getUint8(1)), (h = ut.getUint16(2, !0)), this.l1110.lIlO0.collectibles.eat(h, U);
                            break;
                        case 185:
                            this.l1110.lIlO0.IO11l.projectileStatus(ut);
                            break;
                        case 186:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct)), (l = null != k ? k.angle : null), (c = null != k ? k.damage : 1), this.l1110.lIlO0.O101l.explode(dt, ct, l, 1, 0), this.l1110.l0I11.I001O(dt, ct);
                            break;
                        case 187:
                            (ht = ut.getUint8(1)), (g = ut.getUint16(2, !0)), this.l1110.lIlO0.IO11l.projectileExplosion(ht, g);
                            break;
                        case 190:
                            (c = ut.getUint16(1, !0)), (dt = ut.getFloat32(3, !0)), (ct = ut.getFloat32(7, !0)), (l = ut.getFloat32(11, !0)), this.l1110.lIlO0.O101l.explode(dt, ct, l, c / 10), this.l1110.l0I11.I001O(dt, ct), this.l1110.lIlO0.shakeCamera(dt, ct, c / 20);
                            break;
                        case 200:
                        case 201:
                            for (this.alive_ships = 0, u = ut.getUint8(1), f = v = 0, C = u - 1; v <= C; f = v += 1) this.alive_ships += 1 & ut.getUint8(2 + 8 * f + 3);
                            null != this.l1110.display && null != this.l1110.display.screen.lO100.OOI11 && this.l1110.display.screen.lO100.OOI11.OlI01(ut, this.l1110.Ill00.status.id),
                                this.l1110.mode.updateScore(ut),
                                (this.l1110.lIlO0.IO11l.survival = 201 === r),
                                this.l1110.lIlO0.IO11l.survival && null == this.l1110.lIlO0.IO11l.survival_start && (this.l1110.lIlO0.IO11l.survival_start = this.l1110.lIlO0.IO11l.II1O0),
                                this.l1110.lIlO0.IO11l.survival &&
                                    1 === this.alive_ships &&
                                    !this.l1110.gameover &&
                                    ((this.l1110.gameover = !0),
                                    setTimeout(
                                        (function (t) {
                                            return function () {
                                                return t.l1110.mode.killed(0, !0, 1);
                                            };
                                        })(this),
                                        5e3
                                    ));
                            break;
                        case 205:
                            this.l1110.mode.updateStations(ut);
                            break;
                        case 206:
                            null != this.l1110.mode.updateWave ? this.l1110.mode.updateWave(ut) : this.l1110.mode.updateRadarObjects(ut);
                            break;
                        case 207:
                            null != this.l1110.mode.updateRadar && this.l1110.mode.updateRadar(ut);
                            break;
                        case 210:
                            for (ot = ut.getUint32(1, !0), R = (ut.byteLength - 5) / 3, f = b = 0, j = R - 1; b <= j; f = b += 1) (dt = ut.getInt8(5 + 3 * f)), (ct = ut.getInt8(6 + 3 * f)), (at = ut.getUint8(7 + 3 * f) + ot), null != (n = this.l1110.lIlO0.OlIO1.lOl1I.IlIIl(dt, ct)) && (n.respawn = at);
                            break;
                        case 220:
                            this.l1110.lIlO0.IO11l.alienStatus(ut);
                            break;
                        case 221:
                            (g = ut.getUint16(2, !0)), (dt = ut.getFloat32(4, !0)), (ct = ut.getFloat32(8, !0)), (k = this.l1110.lIlO0.IO11l.OI1O1(g, dt, ct)), (l = null != k ? k.angle : null), (c = null != k ? k.damage : 1), this.l1110.lIlO0.O101l.explode(dt, ct, l, 1, 0), this.l1110.l0I11.I001O(dt, ct);
                            break;
                        case 222:
                            (g = ut.getUint16(2, !0)), (K = ut.getUint16(4, !0)), (o = ut.getUint16(6, !0)), K !== this.l1110.lIlO0.Ill00.status.id ? (o = 0) : this.l1110.mode.count_alien_kills && this.l1110.lIlO0.Ill00.status.kills++, this.l1110.lIlO0.IO11l.alienExplosion(g, o);
                            break;
                        case 240:
                            for (U = ut.getUint8(1), nt = '', f = x = 2, G = ut.byteLength - 1; x <= G; f = x += 1) nt += String.fromCharCode(ut.getUint8(f));
                            U === this.l1110.Ill00.status.id ? this.l1110.lIlO0.say(nt) : this.l1110.lIlO0.IO11l.shipSays(U, nt);
                            break;
                        case 250:
                            (this.l1110.system_players = ut.getUint8(1)), (this.l1110.total_players = ut.getUint32(2, !0));
                            break;
                        case 255:
                            for (y = 1; y < ut.byteLength; ) {
                                for (W = ut.getUint8(y++), i = new ArrayBuffer(W), I = new DataView(i), f = E = 0, L = W - 1; 0 <= L ? E <= L : E >= L; f = 0 <= L ? ++E : --E) I.setUint8(f, ut.getUint8(y++));
                                this.O111O(i);
                            }
                    }
                }),
                (e.prototype.O1O0O = function (t) {
                    if ((this.socket.send(t), this.status_sent_count++, (t &= 20991) !== this.last_status_sent && ((this.last_status_sent = t), !this.use_status_ping))) return (this.use_status_ping = !0), (this.ping_status = t), (this.status_ping_time = Date.now());
                }),
                (e.prototype.statusPingCheck = function (t) {
                    var e, i, s, l, n;
                    if (this.use_status_ping) {
                        if (((e = t.getUint16(12, !0)), (i = 0 != (16384 & t.getUint16(14, !0))), (n = 0 != (2 & t.getUint8(2))), (s = e), i && (s += 16384), n && (s += 4096), (l = Date.now() - this.status_ping_time), s === this.ping_status)) return this.measuredPing(l), (this.use_status_ping = !1);
                        if (l > 1e3) return (this.use_status_ping = !1);
                    }
                }),
                (e.prototype.Ol0I1 = function (t) {
                    return this.socket.send(JSON.stringify({ name: 'get_name', data: { id: t } }));
                }),
                (e.prototype.OIl0l = function (t) {
                    return this.l1110.names.set(t.data.id, t.data.player_name, t.data);
                }),
                (e.prototype.pushType = function (t) {
                    return this.socket.send(JSON.stringify({ name: 'ship_type', data: t }));
                }),
                (e.prototype.upgradeSpec = function (t) {
                    return this.socket.send(JSON.stringify({ name: 'upgrade_spec', data: t }));
                }),
                (e.prototype.OIOO1 = function (t) {
                    return this.socket.send(JSON.stringify({ name: Ol000.ll0lO, data: t }));
                }),
                (e.prototype.buyLife = function () {
                    return this.socket.send(JSON.stringify({ name: 'buy_life' }));
                }),
                (e.prototype.modeMsg = function (t) {
                    return this.l1110.mode.messageReceived(t.data);
                }),
                (e.prototype.sendModeMessage = function (t) {
                    return this.socket.send(JSON.stringify({ name: 'modemsg', data: t }));
                }),
                (e.prototype.startTransfer = function (t, e) {
                    return this.socket.send(JSON.stringify({ name: 'start_transfer' }));
                }),
                (e.prototype.endTransfer = function (t, e) {
                    return this.socket.send(JSON.stringify({ name: 'end_transfer' }));
                }),
                (e.prototype.Il1OO = function (t) {
                    return this.socket.send(JSON.stringify({ name: Ol000.l111I, data: { type: t } }));
                }),
                (e.prototype.removeWeapon = function (t) {
                    return this.socket.send(JSON.stringify({ name: 'remove_weapon', data: { index: t } }));
                }),
                (e.prototype.O0lO1 = function (t, e) {
                    return this.socket.send(JSON.stringify({ name: Ol000.O0I01, data: { index: t, type: e } }));
                }),
                (e.prototype.toggleHealing = function (t, e) {
                    return this.socket.send(JSON.stringify({ name: 'toggle_healing' }));
                }),
                (e.prototype.error = function (e) {
                    return null != e.id && 'SteamAppOwnerShip' === e.id ? ((this.l1110.gameover = !0), void this.l1110.l00OO.showError(t('Server returned that you do not own this Steam application'))) : this.l1110.l00OO.showError(t(e.data));
                }),
                e
            );
        })()),
        (this.Ol1l1 = (function () {
            function t(t) {
                (this.llO1I = t), (this.lI000 = []), (this.text = ''), (this.IIOOl = 0), (this.paused = !1);
            }
            return (
                (t.prototype.start = function () {
                    return setInterval(
                        (function (t) {
                            return function () {
                                return t.llI1I();
                            };
                        })(this),
                        30
                    );
                }),
                (t.prototype.l0I00 = function (t) {
                    this.text = t;
                }),
                (t.prototype.add = function (t) {
                    return this.lI000.push({ name: this.text, IIO1O: t }), (this.IIOOl = Math.max(this.IIOOl, this.lI000.length));
                }),
                (t.prototype.insert = function (t) {
                    return this.lI000.splice(0, 0, { name: this.text, IIO1O: t }), (this.IIOOl = Math.max(this.IIOOl, this.lI000.length));
                }),
                (t.prototype.exec = function (t) {
                    return t();
                }),
                (t.prototype.I100I = function () {
                    return 100 - (this.lI000.length / this.IIOOl) * 100;
                }),
                (t.prototype.pause = function () {
                    return (this.paused = !0);
                }),
                (t.prototype.resume = function () {
                    return (this.paused = !1);
                }),
                (t.prototype.llI1I = function () {
                    if (0 !== this.lI000.length && !this.paused) {
                        this.lI111 = this.lI000[0];
                        try {
                            this.lI111.IIO1O();
                        } catch (t) {
                            t;
                        }
                        return this.lI000.splice(0, 1), null != this.llO1I ? this.llO1I() : void 0;
                    }
                }),
                t
            );
        })()),
        (IFrameDetection = (function () {
            function t(t) {
                this.l1110 = t;
                try {
                    this.inIframe = window.self !== window.top;
                } catch (t) {
                    t, (this.inIframe = !0);
                }
                try {
                    this.domain = document.referrer;
                } catch (t) {
                    t, (this.domain = !1);
                }
            }
            return t;
        })()),
        (this.UserClient = (function () {
            function t(t) {
                (this.l1110 = t), (this.request_id = 0), (this.requests = {});
            }
            return (
                (t.prototype.sendRequest = function (t, e) {
                    return this.findServer(
                        (function (i) {
                            return function () {
                                return i.startSocket(function () {
                                    return (i.requests[i.request_id] = e), (t.request_id = i.request_id++), i.socket.send(JSON.stringify({ name: 'user_msg', data: t }));
                                });
                            };
                        })(this)
                    );
                }),
                (t.prototype.findServer = function (t) {
                    return this.address
                        ? t()
                        : new IlOII(
                              this,
                              (function (e) {
                                  return function (i, s) {
                                      return (e.address = i), (e.region = s), t();
                                  };
                              })(this)
                          );
                }),
                (t.prototype.startSocket = function (t) {
                    return null != this.socket
                        ? t()
                        : ((this.socket = WSS.create(this.address)),
                          (this.socket.onmessage = (function (t) {
                              return function (e) {
                                  return t.received(e);
                              };
                          })(this)),
                          (this.socket.onopen = (function (e) {
                              return function () {
                                  return t();
                              };
                          })()),
                          (this.socket.onclose = (function (t) {
                              return function () {
                                  return (t.socket = null);
                              };
                          })(this)));
                }),
                (t.prototype.received = function (t) {
                    if (((t = JSON.parse(t.data)), (t = t.data), null != t.request_id && null != this.requests[t.request_id])) return this.requests[t.request_id](t);
                }),
                t
            );
        })()),
        (bind = function (t, e) {
            return function () {
                return t.apply(e, arguments);
            };
        }),
        (this.AccountInterface = (function () {
            function t(t) {
                (this.l1110 = t), (this.buildShips = bind(this.buildShips, this)), (this.buildStats = bind(this.buildStats, this)), (this.buildMyaccount = bind(this.buildMyaccount, this)), (this.buildTab = bind(this.buildTab, this));
            }
            return (
                (t.prototype.buildTab = function (t, e) {
                    var i, s, l, n, a;
                    for (
                        a = document.querySelectorAll('.gmodes span'),
                            i = (function (t) {
                                return function (t) {
                                    return t.classList.remove('selected');
                                };
                            })(),
                            s = 0,
                            l = a.length;
                        s < l;
                        s++
                    )
                        (n = a[s]), i(n);
                    switch (((document.querySelector('#tabcontent').innerHTML = "<div class='textcentered spinner'><i class='fa fa-3x fa-cog fa-spin'></i></div>"), t)) {
                        case 'myaccount':
                            return this.buildMyaccount();
                        case 'stats':
                            return this.buildStats();
                        case 'ships':
                            return this.buildShips();
                    }
                }),
                (t.prototype.buildMyaccount = function () {
                    return document.querySelector('.gmodes span[data-mode=myaccount]').classList.add('selected'), (document.querySelector('#tabcontent').innerText = '');
                }),
                (t.prototype.buildStats = function () {
                    return (
                        document.querySelector('.gmodes span[data-mode=stats]').classList.add('selected'),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return (document.querySelector('#tabcontent').innerText = '');
                                };
                            })(),
                            1e3
                        )
                    );
                }),
                (t.prototype.buildShips = function () {
                    return document.querySelector('.gmodes span[data-mode=ships]').classList.add('selected');
                }),
                t
            );
        })()),
        (bind = function (t, e) {
            return function () {
                return t.apply(e, arguments);
            };
        }),
        (IlOIl = 'Date'),
        (this.IO1l0 = (function () {
            function e(e) {
                var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K, W, Y, J, Z, X, Q, $, tt, et, it, st, lt, nt, at, ot, rt, ht, ut, dt, ct, pt, It, Ot, mt, ft, gt, yt, vt, bt, wt, xt, kt, Et, _t, zt, Mt;
                if (((this.l1110 = e), (this.adBlockedPage = bind(this.adBlockedPage, this)), (this.sharePart = bind(this.sharePart, this)), (this.killed = bind(this.killed, this)), (this.toggleFullScreen = bind(this.toggleFullScreen, this)), (this.exitFullScreen = bind(this.exitFullScreen, this)), (this.showPDMRankings = bind(this.showPDMRankings, this)), (this.showGameCreated = bind(this.showGameCreated, this)), (this.OlI11 = bind(this.OlI11, this)), (this.showSettings = bind(this.showSettings, this)), (this.showMyAccount = bind(this.showMyAccount, this)), (this.showDonate = bind(this.showDonate, this)), (this.showModdingSpace = bind(this.showModdingSpace, this)), (this.getModdingNextDates = bind(this.getModdingNextDates, this)), (this.getModdingRealTime = bind(this.getModdingRealTime, this)), (this.showChangeLog = bind(this.showChangeLog, this)), (this.showStore = bind(this.showStore, this)), (this.showError = bind(this.showError, this)), (this.showInfos = bind(this.showInfos, this)), (this.l0lIl = bind(this.l0lIl, this)), (this.adBlocked = bind(this.adBlocked, this)), '?itch' === document.location.search && (window.history.pushState('STARBLAST.io', 'STARBLAST.io', '/'), !this.l1110.l1OI0.Il1lI()))) return this.welcomeItch();
                if ((16808e8, (this.webp_capable = 0 === document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp')), (this.optim_ext = this.webp_capable ? 'webp' : 'png'), (this.ismobile = window.innerWidth < 800), (this.rankingsfile = 'https://starblast.io/rankings.json'), (this.invasionfile = 'https://starblast.io/invasion.json'), (this.modsfile = 'https://starblast.io/modsinfo.json'), (this.O11lI = !1), !document.querySelector('#overlay'))) return this.appConstructor(this.l1110);
                if ((setTimeout, (this.overlay = document.querySelector('#overlay')), (this.overlay.style.display = 'block'), (this.isAdBlocked = !0), (this.lastModal = null), (this.lastAccountTab = 'myaccount'), (this.l1IO0 = 6e4), (gdactive || cgactive) && (this.l1IO0 = 0), 'now', localStorage.getItem('l0101') || localStorage.setItem('l0101', Date.now()), (this.l0101 = parseInt(localStorage.getItem('l0101'))), (this.currency = '$'), (this.iframe = new IFrameDetection(this.l1110)), (this.accountInterface = new AccountInterface(this.l1110)), this.l1110.l1OI0.Il1lI())) for (A = document.querySelectorAll('.hide-ecp'), F = 0, N = A.length; F < N; F++) (P = A[F]), P.remove();
                for (
                    this.gameModesLoader(!1),
                        bt = document.querySelector('#training'),
                        bt.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.preventDefault(), (t.installed_modes = [new TutorialMode(t.l1110)]), (t.game_modes = t.installed_modes), (t.selectedMode = 0), t.startGame();
                                };
                            })(this)
                        ),
                        this.selectedMode = 0,
                        S = document.querySelector('#game_modes'),
                        ut = this.game_modes,
                        lt = 0,
                        q = ut.length;
                    lt < q;
                    lt++
                )
                    (R = ut[lt]), (S.innerHTML += "<span data-translate='" + R.name + "'>" + t(R.name) + '</span>');
                for (
                    this.I01l0(
                        'https://pafvertizing.crazygames.com/rafvertizing-v7.js',
                        (function (t) {
                            return function () {
                                return (t.isAdBlocked = !1);
                            };
                        })(this)
                    ),
                        this.l1110.l1OI0.Il1lI() ||
                            this.l1110.is_app ||
                            (cgactive
                                ? this.I01l0(
                                      'https://sdk.crazygames.com/crazygames-sdk-v1.js',
                                      (function (t) {
                                          return function () {
                                              var e;
                                              return (
                                                  t.OllO0,
                                                  (window.crazysdk = window.CrazyGames.CrazySDK.getInstance()),
                                                  window.crazysdk.init(),
                                                  (e = document.getElementById('cgbottom')),
                                                  (e.style.height = t.ismobile ? '50px' : '250px'),
                                                  (e.style.width = t.ismobile ? '320px' : '300px'),
                                                  (e.style.margin = 'auto'),
                                                  window.crazysdk.requestBanner([{ containerId: 'cgbottom', size: t.ismobile ? '320x50' : '300x250' }]),
                                                  window.crazysdk.addEventListener('adStarted', function () {
                                                      return t.l1110.sendGAEvent('cg_ad_started');
                                                  }),
                                                  window.crazysdk.addEventListener('adFinished', function () {
                                                      return t.l1110.sendGAEvent('cg_ad_finished'), t.l1110.resume(), t.l1110.respawn(), window.crazysdk.gameplayStart(), t.clear();
                                                  }),
                                                  window.crazysdk.addEventListener('adError', function () {
                                                      return t.l1110.sendGAEvent('cg_ad_error'), t.l1110.resume(), t.l1110.respawn(), window.crazysdk.gameplayStart(), t.clear();
                                                  })
                                              );
                                          };
                                      })(this)
                                  )
                                : (this.I01l0('//api.adinplay.com/libs/aiptag/pub/NRN/starblast.io/tag.min.js', this.l0lIl),
                                  this.I01l0(
                                      'https://solve.crazygames.com/solve-v1.js',
                                      (function (t) {
                                          return function () {
                                              var e;
                                              return (
                                                  (e = document.getElementById('cgbottom')),
                                                  (e.style.height = t.ismobile ? '50px' : '250px'),
                                                  (e.style.width = t.ismobile ? '320px' : '300px'),
                                                  (e.style.margin = 'auto'),
                                                  (window.csdk = CrazyGames.CrazySDK.getInstance()),
                                                  window.csdk.init({ gameName: 'starblast.io', testing: !1, element: 'cgpreroll', dontLoadCmp: !0 }),
                                                  setTimeout(function () {
                                                      return window.csdk.requestBanner([{ containerId: 'cgbottom', size: this.ismobile ? '320x50' : '300x250' }]), this.OllO0;
                                                  }, 2e3)
                                              );
                                          };
                                      })(this)
                                  ))),
                        this.logofont = 'Days One',
                        WebFont.load({
                            google: { families: ['Play::latin,latin-ext'] },
                            custom: { families: ['FontAwesome', 'SBGlyphs'] },
                            fontactive: (function (t) {
                                return function (e, i) {
                                    if (('Play' === e && t.changeGameMode(0), 'FontAwesome' === e)) return t.IOl00();
                                };
                            })(this),
                        }),
                        this.logo = this.I1IIO(),
                        T = document.querySelectorAll('.sbg-gears'),
                        j = document.querySelectorAll('.sbg-info, .info'),
                        l = document.querySelectorAll('.cbtn'),
                        b = document.querySelectorAll('.sbg-facebook'),
                        xt = document.querySelectorAll('.sbg-twitter'),
                        u = document.querySelector('.close-modal'),
                        d = document.querySelector('#colors'),
                        c = document.querySelector('.colorwrapper'),
                        a = document.querySelectorAll('.full-changelog'),
                        ht = document.querySelector('#rankings'),
                        I = document.querySelector('#donate'),
                        st = document.querySelector('#myaccount'),
                        O = document.querySelector('#donate_mobile'),
                        at = document.querySelector('#prevMode'),
                        nt = document.querySelector('#nextMode'),
                        et = document.querySelector('.modal'),
                        document.querySelector('#alsotry a'),
                        it = document.querySelector('#moddingspace'),
                        yt = document.querySelector('#startmodding'),
                        null != yt &&
                            yt.addEventListener(
                                'click',
                                (function (t) {
                                    return function (e) {
                                        return e.preventDefault(), e.stopPropagation(), t.showModdingSpace();
                                    };
                                })(this)
                            ),
                        mt = new XMLHttpRequest(),
                        mt.open('GET', this.modsfile, !0),
                        mt.onreadystatechange = (function (t) {
                            return function () {
                                var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                                if (4 === mt.readyState && 200 === mt.status) {
                                    for (e = JSON.parse(mt.responseText), O = 0, u = e[0], r = 0, s = u.length; r < s; r++) (a = u[r]), a.active && (O += 3600 * a.active_duration * 1e3);
                                    for (t = Date.now() % O, m = 0, I = 0, d = e[0], h = 0, l = d.length; h < l; h++) if (((a = d[h]), a.featured)) return (o = new Image()), (o.src = 'https://starblast.data.neuronality.com/modding/img/' + a.mod_id + '.jpg'), (o.style.maxWidth = '100%'), (o.style.marginTop = '5px'), void it.appendChild(o);
                                    for (c = e[0], p = [], i = f = 0, n = c.length; f < n; i = ++f)
                                        (a = c[i]),
                                            a.active &&
                                                p.push(
                                                    (function (e, i) {
                                                        var s;
                                                        if (((I += 3600 * e.active_duration * 1e3), (s = t > m && t < I), (m = I), s)) return (o = new Image()), (o.src = 'https://starblast.data.neuronality.com/modding/img/' + e.mod_id + '.jpg'), (o.style.maxWidth = '100%'), (o.style.marginTop = '5px'), it.appendChild(o);
                                                    })(a)
                                                );
                                    return p;
                                }
                            };
                        })(),
                        L = document.querySelector('#joinsrc'),
                        null != L &&
                            L.addEventListener(
                                'click',
                                (function (t) {
                                    return function (e) {
                                        return e.preventDefault(), e.stopPropagation(), t.startModdingMode({ mod_id: 'src2' });
                                    };
                                })(this)
                            ),
                        this.asia_ts = 17341632e5,
                        this.europe_ts = 17341848e5,
                        this.america_ts = 17342928e5,
                        p = 6e4 * -Math.random(),
                        o = 'Europe',
                        localStorage.getItem('region') && (o = localStorage.getItem('region')),
                        localStorage.getItem('last_best_region') && (o = localStorage.getItem('last_best_region')),
                        'Brazil' === o && (o = 'America'),
                        'Australia' === o && (o = 'Asia'),
                        r = this.europe_ts,
                        'America' === o && (r = this.america_ts),
                        'Asia' === o && (r = this.asia_ts),
                        w = function () {
                            var t, e, i, s, l, n, a;
                            try {
                                if ((a = window.innerHeight - Math.max(316, document.querySelector('.followtools').clientHeight)) < 470) {
                                    for (s = Math.max(0.5, a / 470), l = document.querySelectorAll('.top-right'), n = [], i = 0, e = l.length; i < e; i++) (t = l[i]), (t.style.transform = 'scale(' + s + ')'), n.push((t.style['transform-origin'] = 'top right'));
                                    return n;
                                }
                            } catch (t) {
                                t;
                            }
                        },
                        w(),
                        window.addEventListener('resize', w),
                        dt = document.querySelectorAll('.countdown'),
                        x = (function (e) {
                            return function (i) {
                                var s, l;
                                return (
                                    (l = r),
                                    (s = function () {
                                        var n, a, h, u, d, c, I;
                                        return l + p < Date.now()
                                            ? ((mt = new XMLHttpRequest()),
                                              mt.open('GET', 'https://starblast.io/battle-' + o + '.json', !0),
                                              (mt.onreadystatechange = function () {
                                                  var s, l, n, a, o, h;
                                                  if (4 === mt.readyState && 200 === mt.status) {
                                                      if (((i.style.display = 'none'), (h = JSON.parse(mt.responseText)), h.players < 5 && Date.now() > r + 36e5)) return (i.style.display = 'block'), (i.innerHTML = 'Event finished!<br>Thank you, commanders! :)');
                                                      if (h.players < 230) {
                                                          for (l = document.querySelectorAll('.join-alpha-centauri'), o = [], a = 0, n = l.length; a < n; a++)
                                                              (s = l[a]),
                                                                  o.push(
                                                                      (function (i) {
                                                                          return (
                                                                              (i.style.display = 'block'),
                                                                              i.addEventListener('click', function (i) {
                                                                                  return i.preventDefault(), (e.game_modes = [{ name: t('Private game'), id: 'private', custom_color: !0, address: { ip: h.initiator, port: h.port, gameid: h.system_id } }]), e.startGame();
                                                                              })
                                                                          );
                                                                      })(s)
                                                                  );
                                                          return o;
                                                      }
                                                  }
                                              }),
                                              void mt.send(null))
                                            : ((d = (l - Date.now()) / 1e3), (u = Math.max(0, d)), (h = (u / 3600) | 0), (n = ((u / 600) | 0) % 6), (c = ((u / 60) | 0) % 10), (a = Math.abs(((u / 10) | 0) % 6)), (I = Math.abs((0 | u) % 10)), (i.innerText = o + ' event - ' + h + ':' + n + c + ':' + a + I), setTimeout(s, 100));
                                    })()
                                );
                            };
                        })(this),
                        ot = 0,
                        W = dt.length;
                    ot < W;
                    ot++
                )
                    (m = dt[ot]), x(m);
                for (
                    ct = document.querySelectorAll('.event-time'),
                        k = (function (t) {
                            return function (t) {
                                return (t.innerText = new Date(r).toLocaleString(translations.getLang(), { weekday: 'long', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }));
                            };
                        })(),
                        rt = 0,
                        Y = ct.length;
                    rt < Y;
                    rt++
                )
                    (g = ct[rt]), k(g);
                switch (((gt = new Date(r).toISOString().slice(0, 16).split('T')), (ft = new Date(r + 144e5).toISOString().slice(0, 16).split('T')), o)) {
                    case 'Asia':
                        vt = 'Asia/Macau';
                        break;
                    case 'Europe':
                        vt = 'Europe/Paris';
                        break;
                    case 'America':
                        vt = 'America/Detroit';
                        break;
                    default:
                        vt = 'Europe/Paris';
                }
                if (
                    (r > Date.now() &&
                        null != document.getElementById('calendar_event') &&
                        ((document.getElementById('calendar_event').innerHTML = '<button id="customEventable"><i class=\'fa fa-calendar-check-o\'></i> Add to Calendar</button>'),
                        (y = { name: 'Alpha Orionis Wars on Starblast.io', description: 'No not miss this monthly AOW event<br>→ [url]https://starblast.io/[/url]', startDate: gt[0], endDate: ft[0], startTime: gt[1], endTime: ft[1], options: ['Google', 'Apple', 'MicrosoftTeams', 'Microsoft365', 'Outlook.com', 'Yahoo', 'iCal'], timeZone: vt, trigger: 'click', iCalFileName: 'Starblast-AOW' }),
                        (i = document.querySelector('#customEventable')),
                        i.addEventListener(
                            'click',
                            (function (t) {
                                return function () {
                                    return atcb_action(y, i);
                                };
                            })()
                        )),
                    Date.now() > this.america_ts + 216e5)
                )
                    for (document.querySelector('#calendar_event').remove(), pt = document.querySelectorAll('.acw-new'), kt = 0, J = pt.length; kt < J; kt++) (f = pt[kt]), f.remove();
                if (this.iframe.inIframe && this.iframe.domain && this.iframe.domain.indexOf('crazygames') >= 0) {
                    if (/android/gi.test(navigator.userAgent)) return (document.location.href = 'https://starblast.io/m-cg.html');
                    if (/(ipad|iphone|ipod)/gi.test(navigator.userAgent)) return (document.location.href = 'https://starblast.io/m-cg.html');
                }
                if (!this.iframe.inIframe) {
                    if (/android/gi.test(navigator.userAgent)) return (document.location.href = 'https://www.crazygames.com/game/starblastio');
                    if (/(ipad|iphone|ipod)/gi.test(navigator.userAgent)) return (document.location.href = 'https://www.crazygames.com/game/starblastio');
                }
                for (
                    E = (function (t) {
                        return function (e) {
                            var i;
                            if (
                                ((i = document.createElement('span')),
                                (i.style.background = 'linear-gradient(135deg,hsl(' + e + ',70%,60%) 0%,hsl(' + e + ',70%,40%) 100%)'),
                                i.setAttribute('data-hue', e),
                                i.addEventListener('click', function (i) {
                                    return t.setColor(e);
                                }),
                                d.appendChild(i),
                                108 === e || 228 === e)
                            )
                                return d.appendChild(document.createElement('br'));
                        };
                    })(this),
                        H = Et = 0,
                        It = 12;
                    Et <= 348;
                    H = Et += It
                )
                    E(H);
                for (
                    c.addEventListener(
                        'click',
                        (function (t) {
                            return function (e) {
                                return (d.style.display = 'block' === d.style.display ? 'none' : 'block'), t.OllO0();
                            };
                        })(this)
                    ),
                        null === localStorage.getItem('shipColor') ? this.setColor(null) : this.setColor(localStorage.getItem('shipColor')),
                        Ot = document.querySelectorAll('.cookieconsent'),
                        _t = 0,
                        Z = Ot.length;
                    _t < Z;
                    _t++
                )
                    (s = Ot[_t]), 'yes' === localStorage.getItem('consent') || null !== localStorage.getItem('last_best_region') ? s.remove() : (s.style.opacity = '1');
                for (
                    et.addEventListener(
                        'click',
                        (function (t) {
                            return function (t) {
                                return t.stopPropagation();
                            };
                        })()
                    ),
                        document.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return t.closeModal();
                                };
                            })(this)
                        ),
                        u.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return t.closeModal();
                                };
                            })(this)
                        ),
                        document.addEventListener(
                            'keydown',
                            (function (t) {
                                return function (e) {
                                    if (((e = e || window.event), 27 === e.keyCode && ('block' === d.style.display && ((d.style.display = 'none'), t.OllO0()), 'block' === et.style.display && t.closeModal()), document.querySelector('#player input') !== document.activeElement)) {
                                        if (!t.O11lI && 39 === e.keyCode) {
                                            if ('block' === et.style.display) return;
                                            document.getElementById('play').focus(), t.changeGameMode(1);
                                        }
                                        if (!t.O11lI && 37 === e.keyCode) {
                                            if ('block' === et.style.display) return;
                                            return document.getElementById('play').focus(), t.changeGameMode(-1);
                                        }
                                    }
                                };
                            })(this)
                        ),
                        _ = (function (t) {
                            return function (e) {
                                if (e)
                                    return e.addEventListener('click', function (e) {
                                        return e.preventDefault(), e.stopPropagation(), t.showChangeLog();
                                    });
                            };
                        })(this),
                        zt = 0,
                        X = a.length;
                    zt < X;
                    zt++
                )
                    (n = a[zt]), _(n);
                for (
                    ht &&
                        ht.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.preventDefault(), e.stopPropagation(), t.showPDMRankings();
                                };
                            })(this)
                        ),
                        I.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.preventDefault(), e.stopPropagation(), t.showDonate();
                                };
                            })(this)
                        ),
                        st &&
                            st.addEventListener(
                                'click',
                                (function (t) {
                                    return function (e) {
                                        return e.preventDefault(), e.stopPropagation(), t.showMyAccount();
                                    };
                                })(this)
                            ),
                        it.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.preventDefault(), e.stopPropagation(), t.showModdingSpace();
                                };
                            })(this)
                        ),
                        O.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.preventDefault(), e.stopPropagation(), t.showDonate();
                                };
                            })(this)
                        ),
                        at.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return t.changeGameMode(-1);
                                };
                            })(this)
                        ),
                        nt.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return t.changeGameMode(1);
                                };
                            })(this)
                        ),
                        Mt = 0,
                        Q = j.length;
                    Mt < Q;
                    Mt++
                )
                    (C = j[Mt]),
                        C.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.stopPropagation(), t.showInfos();
                                };
                            })(this)
                        );
                for (
                    z = (function (t) {
                        return function (t) {
                            return t.addEventListener('click', function (t) {
                                var e, i, l, n;
                                for (t.preventDefault(), localStorage.setItem('consent', 'yes'), l = document.querySelectorAll('.cookieconsent'), n = [], e = 0, i = l.length; e < i; e++) (s = l[e]), n.push(s.remove());
                                return n;
                            });
                        };
                    })(),
                        D = 0,
                        $ = l.length;
                    D < $;
                    D++
                )
                    (h = l[D]), z(h);
                for (G = 0, tt = T.length; G < tt; G++)
                    (M = T[G]),
                        M.addEventListener(
                            'click',
                            (function (t) {
                                return function (e) {
                                    return e.stopPropagation(), t.showSettings();
                                };
                            })(this)
                        );
                for (B = 0, U = b.length; B < U; B++)
                    (v = b[B]),
                        v.addEventListener(
                            'click',
                            (function (t) {
                                return function (t) {
                                    return localStorage.setItem('Ol011', !0), window.open('https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent(document.location.href));
                                };
                            })()
                        );
                for (V = 0, K = xt.length; V < K; V++)
                    (wt = xt[V]),
                        wt.addEventListener(
                            'click',
                            (function (e) {
                                return function (e) {
                                    var i;
                                    return localStorage.setItem('Ol011', !0), (i = t('Come and play') + ' #starblastio'), window.open('https://twitter.com/intent/tweet?text=' + encodeURIComponent(i) + '&url=' + encodeURIComponent(document.location.href));
                                };
                            })()
                        );
                window.addEventListener(
                    'resize',
                    (function (t) {
                        return function () {
                            return t.OllO0();
                        };
                    })(this)
                ),
                    this.IOl00();
            }
            return (
                (e.prototype.appConstructor = function (t) {
                    return (
                        (this.l1110 = t),
                        WebFont.load({
                            google: { families: ['Play::latin,latin-ext'] },
                            custom: { families: ['FontAwesome', 'SBGlyphs'] },
                            fontactive: (function (t) {
                                return function (t, e) {};
                            })(),
                        }),
                        this.gameModesLoader()
                    );
                }),
                (e.prototype.gameModesLoader = function (e) {
                    var i, s, l, n, a;
                    if ((null == e && (e = !1), (this.installed_modes = [new TeamMode(this.l1110), new SurvivalMode(this.l1110), new InvasionMode(this.l1110), new ProDeathMatchMode(this.l1110), new BattleRoyaleMode(this.l1110)]), e && (this.installed_modes.splice(0, 0, new TutorialMode(this.l1110)), (this.installed_modes[0].llIlI = !0)), /#(\d+)@(\w.+):(\d+)/.test(document.location.hash))) return (i = document.location.hash.match(/#(\d+)@(\w.+):(\d+)/)), (this.game_modes = [{ name: 'Private game', id: 'private', custom_color: !0, address: { ip: i[2], port: 0 | i[3], gameid: 0 | i[1] } }]);
                    if (/#(\d+)$/.test(document.location.hash)) return (this.game_modes = [{ name: t('Join game') + ' ' + document.location.hash, id: 'join', custom_color: !0 }]);
                    for (this.game_modes = [], a = this.installed_modes, l = 0, n = a.length; l < n; l++) (s = a[l]), s.llIlI && this.game_modes.push(s);
                    return this.l1110.l1OI0.Il1lI() ? (this.game_modes = this.game_modes.concat({ name: 'Create custom game', id: 'sandbox', ecponly: !0, custom_color: !1 })) : void 0;
                }),
                (e.prototype.checkModdingMode = function () {
                    var t, e, i, s, l;
                    for (s = document.getElementsByClassName('join-modding-friday'), l = [], e = 0, i = s.length; e < i; e++)
                        (t = s[e]),
                            l.push(
                                t.addEventListener(
                                    'click',
                                    (function (t) {
                                        return function (e) {
                                            return e.preventDefault(), t.startModdingMode({ mod_id: 'src2', max_enter_players: 15, max_enter_time: 72e3 });
                                        };
                                    })(this)
                                )
                            );
                    return l;
                }),
                (e.prototype.startModdingMode = function (t) {
                    return (this.game_modes[this.selectedMode].id = 'modding'), (this.game_modes[this.selectedMode].mod_id = t.mod_id), (this.game_modes[this.selectedMode].max_enter_players = null != t.max_enter_players ? t.max_enter_players : 30), (this.game_modes[this.selectedMode].max_enter_time = null != t.max_enter_time ? t.max_enter_time : 72e3), this.startGame();
                }),
                (e.prototype.checkBattleRoyale = function () {
                    var t, e, i, s, l, n, a, o, r, h;
                    if (!this.l1110.is_app && battle_started && !battle_finished) {
                        for (this.game_modes.splice(0, 0, new BattleRoyaleMode(this.l1110)), n = document.getElementsByClassName('join-alpha-centauri'), e = 0, i = n.length; e < i; e++)
                            (t = n[e]),
                                (t.style.display = 'block'),
                                t.addEventListener(
                                    'click',
                                    (function (t) {
                                        return function (e) {
                                            return e.preventDefault(), t.installed_modes.splice(0, 0, new BattleRoyaleMode(t.l1110)), (t.game_modes = t.installed_modes), t.startGame();
                                        };
                                    })(this)
                                );
                        for (n = document.getElementsByClassName('event-time'), r = [], a = 0, s = n.length; a < s; a++) (t = n[a]), r.push((t.style.display = 'none'));
                        return r;
                    }
                    if (!this.l1110.is_app && battle_finished) {
                        for (n = document.getElementsByClassName('alphacentauri'), h = [], o = 0, l = n.length; o < l; o++) (t = n[o]), h.push((t.style.display = 'none'));
                        return h;
                    }
                }),
                (e.prototype.welcomeItch = function () {
                    var e;
                    return (
                        (this.logofont = 'Days One'),
                        (e = document.createElement('style')),
                        (e.innerText = '#canvaswrapper canvas { cursor:auto !important; }'),
                        (document.head || document.getElementsByTagName('head')[0]).appendChild(e),
                        WebFont.load({
                            google: { families: [this.logofont.replace(' ', '+'), 'Play::latin,latin-ext'] },
                            custom: { families: ['FontAwesome'] },
                            fontactive: (function (e) {
                                return function (i, s) {
                                    if (i === e.logofont)
                                        return setTimeout(function () {
                                            var i, s, l, n, a, o, r;
                                            return (
                                                (e.logo = e.I1IIO()),
                                                document.querySelector('.modal'),
                                                (o = document.querySelector('.modal .header')),
                                                (a = document.querySelector('.modal .modalbody')),
                                                (o.innerHTML = ''),
                                                (o.style.textAlign = 'center'),
                                                (n = new Image()),
                                                (n.style.width = '50%'),
                                                (n.src = e.logo.toDataURL()),
                                                o.appendChild(n),
                                                (i = document.createElement('div')),
                                                i.classList.add('infos'),
                                                (i.style.fontSize = '0.9em'),
                                                (i.innerHTML = t('Thank you very much for your purchase. One last thing before you can start to play: just insert the ECP key you received by email in the box below.')),
                                                a.appendChild(i),
                                                (s = document.createElement('form')),
                                                (s.style.marginTop = '20px'),
                                                (s.style.textAlign = 'center'),
                                                (l = document.createElement('input')),
                                                l.classList.add('ecpinput'),
                                                (l.style.fontSize = '20px'),
                                                l.setAttribute('placeholder', t('Insert your key here')),
                                                s.appendChild(l),
                                                s.appendChild(document.createElement('br')),
                                                (r = document.createElement('button')),
                                                r.classList.add('donate-btn'),
                                                (r.innerText = t('Start to play')),
                                                (r.style.fontSize = '15px'),
                                                s.appendChild(r),
                                                a.appendChild(s),
                                                s.addEventListener('submit', function (i) {
                                                    var s;
                                                    if ((i.preventDefault(), !e.ECPverifing))
                                                        return (
                                                            (s = l.value.replace(/[o|O]/g, '0').toLowerCase()),
                                                            e.l1110.l1OI0.lO010(s)
                                                                ? (e.l1110.l1OI0.l0111(s),
                                                                  (e.ECPverifing = !0),
                                                                  (r.innerHTML = "<i class='fa fa-cog fa-spin'></i>"),
                                                                  e.l1110.l1OI0.verify(function (i) {
                                                                      return (e.ECPverifing = !1), i ? ((document.location.hash = ''), document.location.reload()) : (alert(t('This l011O is invalid')), (r.innerHTML = t('Start to play')));
                                                                  }))
                                                                : alert(t('This l011O is invalid'))
                                                        );
                                                }),
                                                e.showModal('itch')
                                            );
                                        }, 1);
                                };
                            })(this),
                        })
                    );
                }),
                (e.prototype.I01O1 = function () {
                    var t, e, i, s, l;
                    if (document.querySelector('#overlay')) {
                        for (i = document.querySelector('#player'), l = document.querySelector('#respawn'), l.nextElementSibling, document.querySelector('.mobile'), document.querySelector('.desktop'), document.querySelector('.mobile-social'), document.querySelector('.mobile-tools'), document.querySelector('.social'), document.querySelector('.gameloader'), document.querySelector('#content'), document.querySelector('#home'), document.querySelector('.followtools'), document.querySelector('.mobile-view'), document.querySelectorAll('.changelog-new'), t = e = 1; e <= 3; t = ++e) document.querySelector('#cdm-zone-0' + t) && ((document.querySelector('#cdm-zone-0' + t).style.display = 'inline-block'), (document.querySelector('#cdm-zone-0' + t).style.border = '2px solid hsl(200,50%,70%)'), (document.querySelector('#cdm-zone-0' + t).style.boxShadow = '0 0 15px hsl(200,50%,70%)'));
                        return (
                            i.classList.remove('hide'),
                            (s = i.querySelector('input')),
                            (s.value = localStorage.getItem('lastNickname')),
                            !1 in window && s.focus(),
                            i.addEventListener(
                                'submit',
                                (function (t) {
                                    return function (e) {
                                        return t.startGame(e);
                                    };
                                })(this)
                            ),
                            document.querySelector('#respawn_btn').addEventListener(
                                'click',
                                (function (t) {
                                    return function () {
                                        if (t.O11lI) {
                                            if ((t.l1110.sendGAEvent('respawn_evt'), clearTimeout(t.OO0Il), t.clearAds(), t.l1110.l1OI0.Il1lI())) return t.l1110.respawn(), t.clear();
                                            if (t.isAdBlocked) return t.l1110.pause(), localStorage.setItem('l0101', Date.now()), (t.l0101 = Date.now()), t.adBlockedPage();
                                            if (!t.l1110.mode.IlllO) return t.l1110.respawn(), t.clear();
                                            if (Date.now() - t.l0101 > t.l1IO0) {
                                                if (window.adplayer)
                                                    return (
                                                        localStorage.setItem('l0101', Date.now()),
                                                        (t.l0101 = Date.now()),
                                                        document.querySelector('.top-left') && (document.querySelector('.top-left').innerHTML = ''),
                                                        t.l1110.pause(),
                                                        void window.aiptag.cmd.player.push(function () {
                                                            return window.adplayer.startPreRoll();
                                                        })
                                                    );
                                                if (cgactive && 'undefined' != typeof crazysdk && null !== crazysdk) return (t.l0101 = Date.now()), t.l1110.pause(), void window.crazysdk.requestAd();
                                            }
                                            return document.querySelector('.top-left') && (document.querySelector('.top-left').innerHTML = ''), t.l1110.resume(), t.l1110.respawn(), t.clear();
                                        }
                                    };
                                })(this)
                            ),
                            document.querySelector('#refresh_btn').addEventListener(
                                'click',
                                (function (t) {
                                    return function () {
                                        if (t.O11lI) return t.l1110.sendGAEvent('reload_evt'), t.reloadGame();
                                    };
                                })(this)
                            ),
                            document.querySelector('#continue_btn').addEventListener(
                                'click',
                                (function (t) {
                                    return function () {
                                        if (t.O11lI) return t.sharePart();
                                    };
                                })(this)
                            ),
                            this.displayOptions(),
                            this.OllO0()
                        );
                    }
                }),
                (e.prototype.abTesting = function () {
                    var t, e, i, s, l, n;
                    try {
                        if (((t = localStorage.getItem('adabt')), null == t && ((t = Math.random() < 0.2 ? 'A' : 'B'), localStorage.setItem('adabt', t)), ga('set', 'dimension1', t), 'A' === t)) {
                            for (l = this.game_modes, n = [], i = 0, s = l.length; i < s; i++) (e = l[i]), n.push((e.IlllO = !1));
                            return n;
                        }
                    } catch (t) {
                        t;
                    }
                }),
                (e.prototype.startGame = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T;
                    if ((document.querySelector('[data-ad-slot=vi_462315137]') && document.querySelector('[data-ad-slot=vi_462315137]').remove(), document.querySelector('.top-right') && document.querySelector('.top-right').remove(), document.querySelector('.adblock') && document.querySelector('.adblock').remove(), !this.O11lI)) {
                        if (null != this.game_modes[this.selectedMode] && 'sandbox' === this.game_modes[this.selectedMode].id && this.l1110.l1OI0.Il1lI()) return null != t && t.preventDefault(), this.OlI11();
                        for (cgactive && null != window.crazysdk && window.crazysdk.gameplayStart(), this.clearAds(), g = document.querySelector('#player'), y = document.querySelector('#rcstuto'), v = document.querySelector('#respawn'), i = v.nextElementSibling, E = document.querySelector('.mobile'), k = document.querySelector('.desktop'), m = document.querySelector('.mobile-social'), f = document.querySelector('.mobile-tools'), w = document.querySelector('.social'), u = document.querySelector('.gameloader'), a = document.querySelector('#content'), document.querySelector('#home'), h = document.querySelector('.followtools'), O = document.querySelector('.mobile-view'), n = document.querySelectorAll('.changelog-new'), x = document.querySelector('.training'), d = document.querySelector('#player input'), this.l1110.sendGAEvent('play_evt'), e = setTimeout, null != t && t.preventDefault(), this.l1110.is_mobile && this.setFullScreen(), y.appendChild(RCS.staticRCSImage(this.l1110)), h && (h.style.display = 'none'), null != O && (O.style.display = 'none'), g.style.display = 'none', i.style.display = 'none', m.style.display = 'none', f.style.display = 'none', w.style.display = 'none', u.style.display = 'block', null != x && (x.style.display = 'none'), this.ismobile || this.l1110.l1OI0.Il1lI() || this.isAdBlocked || ((s = document.createElement('div')), s.setAttribute('id', 'cdm-zone-01'), a.insertBefore(s, a.firstChild)), c = 0, p = n.length; c < p; c++) (l = n[c]), (l.style.display = 'none');
                        return (
                            'ontouchstart' in window ? (E.style.display = 'block') : (k.style.display = 'block'),
                            (_ = d.value.toUpperCase().substr(0, 16)),
                            localStorage.setItem('lastNickname', _),
                            _ || (_ = IOOIO.shuffle()[0].toUpperCase()),
                            (z = window.innerHeight),
                            (M = window.innerWidth),
                            (I = M < 1e3 && 'ontouchstart' in window ? z : z - w.offsetHeight),
                            (T = window),
                            (r = function (t) {
                                var e, i, s;
                                for (s = '', d = e = 0, i = t.length - 1; 0 <= i ? e <= i : e >= i; d = 0 <= i ? ++e : --e) s += String.fromCharCode(t.charCodeAt(d) - 1);
                                return s;
                            }),
                            T[r('pqfoFDQBeefs')] &&
                                e(function () {
                                    if (null != window.IOOl1) return window.IOOl1();
                                }, 6e4 + 6e5 * Math.random()),
                            (o = a.offsetHeight),
                            (b = o < I ? 1 : I / o),
                            (a.style.marginTop = (I - o) / 2 + 'px'),
                            (a.style.transform = 'scale(' + b + ')'),
                            (this.O11lI = !0),
                            'private' === this.game_modes[0].id ? this.l1110.startPrivateGame(_, localStorage.getItem('Ol011') || this.l1110.l1OI0.Il1lI(), localStorage.getItem('shipColor') || '0', this.game_modes[0].address) : this.l1110.start(this.game_modes[this.selectedMode].id, _, localStorage.getItem('Ol011') || this.l1110.l1OI0.Il1lI(), localStorage.getItem('shipColor') || '0')
                        );
                    }
                }),
                (e.prototype.reloadGame = function () {
                    return (document.location.href = document.location.href.split('#')[0] + '#'), document.location.reload();
                }),
                (e.prototype.IOl00 = function () {
                    var t, e;
                    if (((t = new Il01O(48, this.l1110.l1OI0.custom).toImage()), (t.style.marginBottom = '-5px'), (document.querySelector('.ecplogo').innerHTML = ''), document.querySelector('.ecplogo').appendChild(t), this.l1110.l1OI0.Il1lI()))
                        return (
                            document.querySelector('.inputwrapper img') && document.querySelector('.inputwrapper img').remove(),
                            (e = document.querySelector('.inputwrapper')),
                            (t = new Il01O(32, this.l1110.l1OI0.custom).toImage()),
                            (t.style.position = 'absolute'),
                            (t.style.left = '0'),
                            (t.style.top = '5px'),
                            (t.style.cursor = 'pointer'),
                            t.addEventListener(
                                'click',
                                (function (t) {
                                    return function (e) {
                                        return e.stopPropagation(), t.showDonate();
                                    };
                                })(this)
                            ),
                            e.insertBefore(t, e.firstChild)
                        );
                }),
                (e.prototype.adBlocked = function () {
                    var t, e, i;
                    if ((document.querySelector('.adblock') && ((document.querySelector('.adblock').style.display = 'block'), document.querySelector('.top-right') && (document.querySelector('.top-right').style.top = '5vh'), document.querySelector('.top-left') && (document.querySelector('.top-left').style.top = '5vh')), !this.l1110.l1OI0.Il1lI())) {
                        for (this.isAdBlocked = !0, e = i = 1; i <= 3; e = ++i) document.querySelector('#cdm-zone-0' + e) && document.querySelector('#cdm-zone-0' + e).remove();
                        return document.querySelector('[data-ad-slot=vi_462315138]') && document.querySelector('[data-ad-slot=vi_462315138]').remove(), (t = document.querySelector('#home')), (t.innerHTML = "<a target='_blank' href='http://www.neuronball.com/'><img src='//starblast.data.neuronality.com/neuronball.jpg'></a>");
                    }
                }),
                (e.prototype.I01l0 = function (t, e, i, s) {
                    var l, n, a, o, r;
                    if (((l = document.head || document.getElementsByTagName('head')[0]), (o = document.createElement('script')), (a = !0), i && (o.id = i), s)) for (n in s) (r = s[n]), o.setAttribute(n, r);
                    return (
                        (o.async = 'async'),
                        (o.charset = 'UTF-8'),
                        (o.src = t),
                        (o.onload = o.onreadystatechange =
                            function () {
                                if (a && (!o.readyState || /loaded|complete/.test(o.readyState))) return (a = !1), e(), (o.onload = o.onreadystatechange = null);
                            }),
                        l.appendChild(o)
                    );
                }),
                (e.prototype.l0lIl = function () {
                    if ('undefined' != typeof aipPlayer && null !== aipPlayer)
                        return (
                            (window.aiptag = window.aiptag || {}),
                            (window.aiptag.consented = !0),
                            (window.aiptag.cmd = window.aiptag.cmd || []),
                            (window.aiptag.cmd.display = window.aiptag.cmd.display || []),
                            (window.aiptag.cmd.player = window.aiptag.cmd.player || []),
                            (window.aiptag.gdprShowConsentTool = !0),
                            window.aiptag.cmd.player.push(
                                (function (t) {
                                    return function () {
                                        return (window.adplayer = new aipPlayer({
                                            AD_WIDTH: 960,
                                            AD_HEIGHT: 540,
                                            AD_FULLSCREEN: !0,
                                            AD_CENTERPLAYER: !1,
                                            LOADING_TEXT: 'loading advertisement',
                                            PREROLL_ELEM: document.getElementById('preroll'),
                                            AIP_COMPLETE: function (e) {
                                                return t.l1110.sendGAEvent('adinplay_complete'), t.l1110.resume(), t.l1110.respawn(), t.clear();
                                            },
                                            AIP_REMOVE: function () {
                                                return t.l1110.sendGAEvent('adinplay_remove'), t.l1110.resume(), t.l1110.respawn(), t.clear();
                                            },
                                        }));
                                    };
                                })(this)
                            )
                        );
                }),
                (e.prototype.setColor = function (t) {
                    var e, i, s, l;
                    for (null === t && (t = (360 * Math.floor(30 * Math.random())) / 30), t = parseInt(t), i = document.querySelectorAll('#colors span'), s = 0, l = i.length; s < l; s++)
                        if (((e = i[s]), t === parseInt(e.getAttribute('data-hue')))) {
                            if (e.classList.contains('selected')) return (document.querySelector('#colors').style.display = 'none'), this.OllO0();
                            localStorage.setItem('shipColor', t), e.classList.add('selected'), (document.querySelector('.colorchosen').style.background = 'linear-gradient(135deg,hsl(' + t + ',70%,60%) 0%,hsl(' + t + ',70%,40%) 100%)'), (document.querySelector('#player input').style.color = 'hsla(' + t + ',100%,90%,.9)'), (document.querySelector('#player input').style['text-shadow'] = '0 0 7px hsla(' + t + ',80%,80%,1)');
                        } else e.classList.remove('selected');
                }),
                (e.prototype.copyRoomLink = function () {
                    var t;
                    (t = document.createElement('input')), (t.style.position = 'absolute'), (t.style.top = '-1000px'), (t.value = 'https://starblast.io/#' + document.location.href.split('#')[1]), document.body.appendChild(t), t.focus(), t.select();
                    try {
                        document.execCommand('SelectAll'), document.execCommand('copy', !1, null);
                    } catch (t) {
                        t;
                    }
                    t.style.display = 'none';
                    try {
                        return t.remove();
                    } catch (e) {
                        return e, (t.outerHTML = '');
                    }
                }),
                (e.prototype.displayOptions = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d;
                    if ('function' != typeof GiveAway && 'function' != typeof PromoContest) {
                        if (((h = document.querySelector('.social')), (a = document.querySelector('.mobile-social')), (o = document.querySelector('.mobile-tools')), (t = document.querySelector('.followtools')), (r = document.querySelector('.mobile-view')), (i = document.querySelector('#home')), (s = document.querySelector('#home_mobile')), (e = document.querySelector('.steam-greenlight')), (u = window.innerHeight), (d = window.innerWidth), null != t && (t.style.display = 'none'), null != r && (r.style.display = 'none'), (h.style.display = 'none'), (a.style.display = 'none'), (o.style.display = 'none'), (i.style.display = 'none'), (s.style.display = 'none'), e && (e.style.display = 'none'), this.l1110.l1OI0.Il1lI())) for (document.querySelector('#alsotry') && document.querySelector('#alsotry').remove(), l = n = 1; n <= 3; l = ++n) document.querySelector('#cdm-zone-0' + l) && document.querySelector('#cdm-zone-0' + l).remove();
                        if (((i.style.height = this.l1110.l1OI0.Il1lI() ? 'auto' : this.isAdBlocked ? '250px' : '0px'), (s.style.height = this.l1110.l1OI0.Il1lI() ? 'auto' : '50px'), this.ismobile && u > d)) {
                            if (!this.l1110.l1OI0.Il1lI()) return (s.style.display = 'block');
                        } else {
                            if (this.ismobile) return this.l1110.l1OI0.Il1lI() || (s.style.display = 'block'), (a.style.display = 'block'), (o.style.display = 'block');
                            if ((null != r && (r.style.display = 'block'), this.O11lI || null == t || (t.style.display = 'block'), this.l1110.l1OI0.Il1lI() || (i.style.display = 'block'), (h.style.display = 'block'), e)) return (e.style.display = 'block');
                        }
                    }
                }),
                (e.prototype.OllO0 = function () {
                    var t, e, i, s, l, n, a, o, r;
                    return (this.ismobile = window.innerWidth < 800), (t = document.querySelector('#content')), (n = document.querySelector('.social')), (o = document.querySelector('.top-right')), (a = document.querySelector('.top-left')), (i = document.querySelector('.gameloader')), 'block' === i.style.display && (i.style.marginTop = (window.innerHeight - i.offsetHeight) / 2 + 'px'), (r = window.innerHeight), window.innerWidth, o && ((o.style.display = this.ismobile ? 'none' : 'block'), (a.style.display = this.ismobile ? 'none' : 'block')), (s = this.ismobile ? r : r - n.offsetHeight), (e = t.offsetHeight), (l = e < s ? 1 : s / e), (t.style.marginTop = (s - e) / 2 + 'px'), (t.style.transform = 'scale(' + l + ')');
                }),
                (e.prototype.O01I0 = function (t, e) {
                    return (
                        null == e && (e = !1),
                        t && t.classList.add('hide'),
                        setTimeout(function () {
                            return e ? void t.remove() : (t.style.display = 'none');
                        }, 500)
                    );
                }),
                (e.prototype.changeGameMode = function (t) {
                    var e, i, s, l;
                    if (!((1 === t && this.game_modes.length - 1 === this.selectedMode) || (-1 === t && 0 === this.selectedMode))) return (l = document.querySelector('#prevMode')), (s = document.querySelector('#nextMode')), (l.style.visibility = 'visible'), (s.style.visibility = 'visible'), (this.selectedMode += t), (this.selectedMode %= this.game_modes.length), 0 === this.selectedMode && (l.style.visibility = 'hidden'), this.game_modes.length - 1 === this.selectedMode && (s.style.visibility = 'hidden'), this.selectedMode < 0 && (this.selectedMode = this.game_modes.length - 1), document.querySelector('#play').classList.remove('orange'), this.game_modes[this.selectedMode].ecponly && document.querySelector('#play').classList.add('orange'), (e = document.querySelector('#game_modes span:first-child')), (i = document.querySelector('#game_modes')), (e.style.marginLeft = -1 * this.selectedMode * i.offsetWidth + 'px'), (document.querySelector('.colorwrapper').style.display = this.game_modes[this.selectedMode].custom_color ? 'block' : 'none'), (document.querySelector('#colors').style.display = 'none'), this.OllO0(), this.game_modes[this.selectedMode];
                }),
                (e.prototype.closeModal = function (t) {
                    var e;
                    if ((this.getrealtimer && clearTimeout(this.getrealtimer), (e = document.querySelector('.modal')), 'none' !== e.style.display))
                        return (
                            (e.style.top = -1 * window.innerHeight + 'px'),
                            (this.modalHideTimer = setTimeout(function () {
                                if (((e.style.display = 'none'), 'function' == typeof t)) return t();
                            }, 600))
                        );
                }),
                (e.prototype.showModal = function (t) {
                    var e, i;
                    return (this.lastModal = t), (e = document.querySelector('.modal')), (e.style.width = 'pdmrankings' === t || 'moddingspace' === t || 'myaccount' === t ? '1200px' : '800px'), (e.style.maxHeight = '100%'), (e.style.height = 'pdmrankings' === t || 'moddingspace' === t || 'myaccount' === t ? '100%' : 'auto'), (e.style.display = 'block'), (i = (window.innerHeight - e.offsetHeight) / 2), (e.style.top = i + 'px');
                }),
                (e.prototype.showInfos = function () {
                    var e, i, s, l, n;
                    return (s = document.querySelector('.modal')), 'block' === s.style.display ? ('infos' === this.lastModal ? this.closeModal() : this.closeModal(this.showInfos)) : ((document.querySelector('.modal .modaltitle').innerHTML = t('INFO')), (l = document.querySelector('.modal .modalbody')), (n = document.getElementById('gameinfos').innerHTML.replace('\n', '').replace(/\n/g, '<br>')), (l.innerHTML = "<div class='infos'>" + n + '</div>'), (i = document.querySelector('.modal .modalbody #infologo')), (e = new Image()), (e.src = 'https://starblast.data.neuronality.com/img/starblast_io_logo.svg'), i.appendChild(e), this.showModal('infos'));
                }),
                (e.prototype.showError = function (e) {
                    var i, s, l;
                    return (
                        (i = document.querySelector('.modal')),
                        'block' === i.style.display
                            ? 'error' === this.lastModal
                                ? this.closeModal()
                                : this.closeModal(this.showError)
                            : ((this.O11lI = !1),
                              (this.errored = !0),
                              document.querySelector('.modal .close-modal').remove(),
                              (document.querySelector('.modal .modaltitle').innerHTML = t('Error')),
                              (s = document.querySelector('.modal .modalbody')),
                              (s.innerHTML = "<div class='textcentered infos'><i class='fa fa-warning fa-4x'></i><p>" + e + '</p></div>'),
                              (l = document.createElement('button')),
                              l.setAttribute('class', 'donate-btn'),
                              l.addEventListener(
                                  'click',
                                  (function (t) {
                                      return function () {
                                          return t.reloadGame();
                                      };
                                  })(this)
                              ),
                              (l.innerHTML = t('Reload game')),
                              s.querySelector('.textcentered').appendChild(l),
                              document.querySelector('.gameloader') && ((i.style.margin = 'auto'), document.querySelector('.gameloader').remove()),
                              this.showModal('error'))
                    );
                }),
                (e.prototype.showStore = function (t) {
                    var e, i, s;
                    return (
                        (s = document.createElement('div')),
                        s.classList.add('gplay'),
                        (e = new Image()),
                        'android' === t && ((e.src = 'https://starblast.data.neuronality.com/img/gplay.' + (this.webp_capable ? 'webp' : 'jpg')), (i = document.createElement('a')), i.setAttribute('href', 'https://play.google.com/store/apps/details?id=io.starblast&pcampaignid=MKT-Other-global-all-co-prtnr-l1O1l-PartBadge-Mar2515-1'), i.setAttribute('alt', 'Get it on Google Play'), i.setAttribute('target', '_blank')),
                        'appstore' === t && ((e.src = 'https://starblast.data.neuronality.com/img/appstore.' + (this.webp_capable ? 'webp' : 'jpg')), (i = document.createElement('a')), i.setAttribute('href', 'https://itunes.apple.com/us/app/starblast-io/id1377198552'), i.setAttribute('target', '_blank')),
                        i.appendChild(e),
                        (e.onload = function () {
                            return (
                                s.appendChild(i),
                                document.body.appendChild(s),
                                (e.style.marginTop = (window.innerHeight - e.offsetHeight) / 2 + 'px'),
                                s.addEventListener('click', function () {
                                    return s.remove();
                                }),
                                window.addEventListener('resize', function () {
                                    if (e) return (e.style.marginTop = (window.innerHeight - e.offsetHeight) / 2 + 'px');
                                })
                            );
                        })
                    );
                }),
                (e.prototype.showChangeLog = function () {
                    var e, i, s;
                    return (
                        (e = document.querySelector('.modal')),
                        'block' === e.style.display
                            ? 'changelog' === this.lastModal
                                ? this.closeModal()
                                : this.closeModal(this.showChangeLog)
                            : ((document.querySelector('.modal .modaltitle').innerHTML = t('Changelog')),
                              (i = document.querySelector('.modal .modalbody')),
                              (s = new XMLHttpRequest()),
                              s.open('GET', './changelog.txt', !0),
                              (s.onreadystatechange = (function (t) {
                                  return function () {
                                      if (4 === s.readyState && 200 === s.status) return (i.innerHTML = "<p class='smalltext'>" + s.responseText.replace(/(\d{4}-\d{2}-\d{2})\s/g, "<span class='date'>$1</span>").replace(/\n/g, '<br>') + '</p>'), t.showModal('changelog');
                                  };
                              })(this)),
                              s.send(null))
                    );
                }),
                (e.prototype.getModdingRealTime = function () {
                    var t;
                    return (
                        (t = new XMLHttpRequest()),
                        t.open('GET', 'https://starblast.io/simstatus.json', !0),
                        (t.onreadystatechange = (function (e) {
                            return function () {
                                var i, s, l, n, a, o, r, h, u, d;
                                if (4 === t.readyState && 200 === t.status) {
                                    for (i = JSON.parse(t.responseText), o = {}, s = 0, l = i.length; s < l; s++) for (u = i[s], h = u.systems, r = 0, n = h.length; r < n; r++) (d = h[r]), d.mod_id && (o[d.mod_id] || (o[d.mod_id] = 0), (o[d.mod_id] += d.players));
                                    for (a in o) document.querySelector('[data-modid=' + a + '] .modrealtime') && (document.querySelector('[data-modid=' + a + '] .modrealtime').innerText = o[a]);
                                    return (e.getrealtimer = setTimeout(e.getModdingRealTime, 5e3));
                                }
                            };
                        })(this)),
                        t.send(null)
                    );
                }),
                (e.prototype.getModdingNextDates = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d;
                    for (l = document.querySelectorAll('.mod.inactive'), n = 0, a = l.length; n < a; n++) (s = l[n]), (r = s.getAttribute('data-start-ts')), (h = (r - Date.now()) / 1e3), (o = Math.max(0, h)), (i = (o / 3600) | 0), (t = ((o / 600) | 0) % 6), (u = ((o / 60) | 0) % 10), (e = Math.abs(((o / 10) | 0) % 6)), (d = Math.abs((0 | o) % 10)), (s.querySelector('.modnext').innerText = i + ':' + t + u + ':' + e + d);
                    return setTimeout(this.getModdingNextDates, 1e3);
                }),
                (e.prototype.showModdingSpace = function () {
                    var e, i, s;
                    return (
                        (e = document.querySelector('.modal')),
                        (i = document.querySelector('.modal .modalbody')),
                        'block' === e.style.display
                            ? 'moddingspace' === this.lastModal
                                ? this.closeModal()
                                : this.closeModal(this.showModdingSpace)
                            : ((document.querySelector('.modal .modaltitle').innerHTML = t('Modding Space')),
                              (i = document.querySelector('.modal .modalbody')),
                              (i.innerHTML = "<i class='fa fa-cog fa-spin'></i>"),
                              (s = new XMLHttpRequest()),
                              s.open('GET', this.modsfile, !0),
                              (s.onreadystatechange = (function (t) {
                                  return function () {
                                      var e, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k;
                                      if (4 === s.readyState && 200 === s.status) {
                                          for (a = JSON.parse(s.responseText), y = a[0], u = 0, d = y.length; u < d; u++) (I = y[u]), I.active || 'prototypes' !== I.mod_id || ((I.active = !0), (I.featured = !0));
                                          for (i.innerHTML = "<div class='modal-header'>Enjoy our selection of the best mods contributed by the community:</div>", h = document.createElement('div'), h.classList.add('modwrap'), h.style.textAlign = 'center', l = document.createElement('div'), l.style.textAlign = 'center', l.innerHTML = "<h2 style='margin-bottom:5px;'>Featured mods</h2>", e = document.createElement('div'), e.classList.add('modwrap'), e.style.textAlign = 'center', e.style.marginBottom = '20px', e.style.paddingBottom = '10px', e.style.borderBottom = '1px solid hsla(200,50%,70%,.5)', x = 0, f = 0, v = a[0], m = 0, c = v.length; m < c; m++) (I = v[m]), I.active && !I.featured && ((f += 1), (x += 3600 * I.active_duration * 1e3));
                                          for (
                                              n = Date.now() % x,
                                                  k = 0,
                                                  w = 0,
                                                  b = a[0],
                                                  o = function (i, s) {
                                                      var l, a, o, r, u, d, c, p, I;
                                                      return (
                                                          i.featured || (w += 3600 * i.active_duration * 1e3),
                                                          (a = n > k && n < w),
                                                          (I = Date.now() + k - n),
                                                          (k = w),
                                                          I < Date.now() && (I += x),
                                                          (r = document.createElement('div')),
                                                          r.classList.add('mod'),
                                                          r.setAttribute('data-modid', i.mod_id),
                                                          r.setAttribute('data-start-ts', I),
                                                          a || i.featured || r.classList.add('inactive'),
                                                          r.addEventListener('click', function () {
                                                              if (a || i.featured) return t.closeModal(), t.startModdingMode(i);
                                                          }),
                                                          (u = new Image()),
                                                          (u.src = 'https://starblast.data.neuronality.com/modding/img/' + i.mod_id + '.jpg'),
                                                          (p = document.createElement('div')),
                                                          p.classList.add('totalplayed'),
                                                          i.new ? (p.innerHTML = 'NEW!') : ((l = Intl ? new Intl.NumberFormat(translations.getLang()).format(i.timesplayed || 0) : i.timesplayed || 0), (p.innerHTML = '<i class="fa fa-gamepad"></i> ' + l)),
                                                          (d = document.createElement('span')),
                                                          d.classList.add('nowplaying'),
                                                          a || i.featured ? (d.innerHTML = '<i class="sbg sbg-user"></i> <span class="modrealtime">0</span>') : (d.innerHTML = 'Next event: <span class="modnext">' + I + '</span>'),
                                                          (c = document.createElement('div')),
                                                          c.classList.add('title'),
                                                          (c.innerText = i.title),
                                                          (o = document.createElement('span')),
                                                          o.classList.add('author'),
                                                          (o.innerText = 'by ' + i.author),
                                                          c.appendChild(o),
                                                          p.appendChild(d),
                                                          r.appendChild(p),
                                                          r.appendChild(u),
                                                          r.appendChild(c),
                                                          i.featured ? e.prepend(r) : (a && e.appendChild(r), a ? void 0 : h.appendChild(r))
                                                      );
                                                  },
                                                  r = g = 0,
                                                  p = b.length;
                                              g < p;
                                              r = ++g
                                          )
                                              (I = b[r]), I.active && o(I, r);
                                          return t.sortMods(h), i.appendChild(l), i.appendChild(e), i.appendChild(h), (O = document.createElement('div')), O.classList.add('modecp'), (O.innerHTML = "<a target='_blank' href='https://starblast.io/shipeditor/'><i class='sbg sbg-fly-full fa-2x'></i> Ship Editor</a> <a target='_blank' href='https://starblast.io/modding.html'><i class='sbg sbg-modding fa-2x'></i> Mod Editor</a><div>Create more ships and mods (coding skills required)</div>"), t.l1110.l1OI0.Il1lI() && !t.l1110.is_app && i.appendChild(O), t.showModal('moddingspace'), t.getModdingRealTime(), t.getModdingNextDates();
                                      }
                                  };
                              })(this)),
                              s.send(null))
                    );
                }),
                (e.prototype.sortMods = function (t) {
                    var e, i, s, l, n;
                    for (
                        s = (function () {
                            var e, i, s, n;
                            for (s = t.children, n = [], e = 0, i = s.length; e < i; e++) (l = s[e]), n.push(l);
                            return n;
                        })(),
                            s.sort(function (t, e) {
                                return t.dataset.startTs - e.dataset.startTs;
                            });
                        null != t.firstChild;

                    )
                        t.removeChild(t.firstChild);
                    for (n = [], e = 0, i = s.length; e < i; e++) (l = s[e]), n.push(t.appendChild(l));
                    return n;
                }),
                (e.prototype.showDonate = function () {
                    var e, i, s, l, n, a, o, r, h, u, d, c;
                    if (((u = document.querySelector('.modal')), (d = document.querySelector('.modal .modalbody')), 'block' === u.style.display)) return 'donate' === this.lastModal ? this.closeModal() : this.closeModal(this.showDonate);
                    if (this.l1110.l1OI0.Il1lI()) {
                        for (
                            c = (function (t) {
                                return function () {
                                    return (document.querySelector('.ecpverifiedlogo').innerHTML = ''), (document.querySelector('.shippreview').innerHTML = ''), document.querySelector('.ecpverifiedlogo').appendChild(new Il01O(112, t.l1110.l1OI0.custom).canvas), document.querySelector('.shippreview').appendChild(lIl1O.exportThumbnail(101, localStorage.getItem('shipColor'), t.l1110.l1OI0.custom.finish, t.l1110.l1OI0.custom.laser, 192)), t.IOl00();
                                };
                            })(this),
                                n = l011O.options,
                                document.querySelector('.modal .modaltitle').innerHTML = t('Greetings, Elite Commander'),
                                d.innerHTML = '<div class="infos">\n  <div class="center">\n    <p>' + t('Thank you for your purchase! Your ECP is valid, please keep it safe.') + '</p>\n<button id="viewEcp" class="ecpinput ecpbtn"><i class="fa fa-eye"></i></button>\n<input id="ECPKey" readonly class=\'ecpinput\' placeholder="&#9679;&#9679;&#9679;&#9679;&#9679; - &#9679;&#9679;&#9679;&#9679;&#9679;" data-value=\'' + localStorage.getItem('ECPKey') + '\' style="vertical-align:middle; width:200px;">\n  <button id="removeEcp" class="ecpinput ecpbtn"><i class="fa fa-trash"></i></button>\n</div>\n<div class=\'beta textcentered\'>\n  <h3 class=\'customizeship\'>' + t('Create your custom game') + "</h3>\n</div>\n<h3 class='customizeship'>" + t('Customize your ship') + "</h3>\n<table class='customtable noselect'>\n  <tr>\n    <td class='ecpverifiedlogo frozenbg'></td>\n    <td>\n      <div data-type='badge'>\n          <i class='fa fa-caret-left'></i>\n          <div class='title frozenbg'>" + t(n.badge[this.l1110.l1OI0.custom.badge]) + "</div>\n    <i class='fa fa-caret-right'></i><br />\n</div>\n<div data-type='finish'>\n    <i class='fa fa-caret-left'></i>\n    <div class='title frozenbg'>" + t(n.finish[this.l1110.l1OI0.custom.finish]) + "</div>\n    <i class='fa fa-caret-right'></i>\n</div>\n<div data-type='laser'>\n    <i class='fa fa-caret-left'></i>\n    <div class='title frozenbg'>" + t(n.laser[this.l1110.l1OI0.custom.laser]) + "</div>\n          <i class='fa fa-caret-right'></i>\n      </div>\n    </td>\n    <td class='shippreview frozenbg'></td>\n  </tr>\n</table>\n<h3 class=\"customizeship\">" + t('Download our application') + '</h3>\n  <div class=\'download-apps\'>\n    <a href="https://starblast.data.neuronality.com/download/starblast_setup-latest.exe" download><img src="https://starblast.data.neuronality.com/img/windows.png"></a>\n    <a href="https://starblast.data.neuronality.com/download/Starblast.dmg" download><img src="https://starblast.data.neuronality.com/img/osx.jpg"></a>\n    <a href="https://starblast.data.neuronality.com/download/starblast-latest-x86_64.AppImage" download><img src="https://starblast.data.neuronality.com/img/linux.jpg"></a>\n  </div>\n</div>',
                                l = document.createElement('button'),
                                l.setAttribute('class', 'donate-btn'),
                                l.style.marginTop = '0',
                                l.innerHTML = t('Create custom game'),
                                l.addEventListener(
                                    'click',
                                    (function (t) {
                                        return function () {
                                            return t.l1110.l00OO.OlI11();
                                        };
                                    })(this)
                                ),
                                d.querySelector('.textcentered').appendChild(l),
                                document.getElementById('viewEcp').addEventListener('click', function (t) {
                                    var e;
                                    return (e = document.getElementById('ECPKey')), e.value === e.getAttribute('data-value') ? (e.value = '') : (e.value = e.getAttribute('data-value'));
                                }),
                                document.getElementById('removeEcp').addEventListener(
                                    'click',
                                    (function (e) {
                                        return function (i) {
                                            if (confirm(t('Would you like to remove your ECP from this browser?'))) return e.l1110.l1OI0.removeKey();
                                        };
                                    })(this)
                                ),
                                i = document.querySelectorAll('.customtable .fa'),
                                a = (function (e) {
                                    return function (i) {
                                        return i.addEventListener('click', function (s) {
                                            var l, a, o, r, h, u, d;
                                            return (h = i.parentElement), (d = h.getAttribute('data-type')), (l = i.classList.contains('fa-caret-left') ? -1 : 1), (a = Object.keys(n[d])), (o = a.length), (u = a.indexOf(e.l1110.l1OI0.custom[d])), (r = u + l), r < 0 && (r = o - 1), r === o && (r = 0), localStorage.setItem(d, a[r]), (e.l1110.l1OI0.custom[d] = a[r]), (h.querySelector('.title').innerHTML = t(n[d][a[r]])), c();
                                        });
                                    };
                                })(this),
                                r = 0,
                                h = i.length;
                            r < h;
                            r++
                        )
                            (e = i[r]), a(e);
                        return c(), this.showModal('donate');
                    }
                    return (
                        (document.querySelector('.modal .modaltitle').innerHTML = "<i class='fa fa-fw ecphead'></i>" + t('Elite Commander Pass')),
                        (o = new Il01O(64, this.l1110.l1OI0.custom).toImage()),
                        (o.style.height = '32px'),
                        (o.style.marginBottom = '-5px'),
                        (o.style.marginLeft = '-38px'),
                        document.querySelector('.modaltitle .ecphead').appendChild(o),
                        (s = (function (e) {
                            return function () {
                                var i, s, l, n, a, o, r, h, u, c, p, I;
                                for (
                                    I = document.getElementById('donatebox').innerHTML,
                                        d.innerHTML = "<div class='infos'>" + I + '</div>',
                                        translations.translateDOM(),
                                        d.innerHTML = d.innerHTML.replace(/\$/g, e.currency),
                                        n = document.querySelector('#licenceKey'),
                                        a = document.querySelector('#licenceKeyBtn'),
                                        o = document.querySelector('#licenceKeyForm'),
                                        h = document.querySelector('#paypal_submission'),
                                        c = document.querySelectorAll('.pricechoice span'),
                                        i = document.querySelector('#donatebtn'),
                                        p = function (t) {
                                            var e, i, s;
                                            for (i = 0, e = c.length; i < e; i++) (s = c[i]), s.classList.remove('active');
                                            return t.classList.add('active'), (s = t.getAttribute('data-price'));
                                        },
                                        s = function (t) {
                                            return t.addEventListener('click', function (e) {
                                                return p(t);
                                            });
                                        },
                                        r = 0,
                                        l = c.length;
                                    r < l;
                                    r++
                                )
                                    (u = c[r]), s(u);
                                return (
                                    i.addEventListener('click', function (t) {
                                        return e.l1110.l1OI0.OI1l0(), (h.querySelector('[name=amount]').value = document.querySelector('.pricechoice .active').getAttribute('data-price')), (h.querySelector('[name=lc]').value = translations.getLang().toUpperCase()), (h.querySelector('[name=custom]').value = e.l1110.l1OI0.key), (h.querySelector('[name=currency_code]').value = '€' === e.currency ? 'EUR' : 'USD'), h.submit();
                                    }),
                                    o.addEventListener('submit', function (i) {
                                        var s;
                                        if ((i.preventDefault(), !e.ECPverifing))
                                            return (
                                                (s = n.value.replace(/[o|O]/g, '0').toLowerCase()),
                                                e.l1110.l1OI0.lO010(s)
                                                    ? (e.l1110.l1OI0.l0111(s),
                                                      (e.ECPverifing = !0),
                                                      (a.innerHTML = "<i class='fa fa-cog fa-spin'></i>"),
                                                      e.l1110.l1OI0.verify(function (t) {
                                                          return (e.ECPverifing = !1), t ? e.reloadGame() : (a.innerHTML = 'OK');
                                                      }))
                                                    : alert(t('This ECPKey is invalid'))
                                            );
                                    })
                                );
                            };
                        })(this)),
                        new IlOII(
                            this,
                            (function (t) {
                                return function (e, i) {
                                    if (('Europe' === i && ((t.currency = '€'), s()), null !== t.l1110.l1OI0.key))
                                        return t.l1110.l1OI0.verifyServer(e, function (e) {
                                            if (e) return t.reloadGame();
                                        });
                                };
                            })(this)
                        ),
                        s(),
                        this.showModal('donate')
                    );
                }),
                (e.prototype.showMyAccount = function () {
                    var e, i, s, l, n, a, o, r;
                    if (((n = document.querySelector('.modal')), (a = document.querySelector('.modal .modalbody')), 'block' === n.style.display)) return 'myaccount' === this.lastModal ? this.closeModal() : this.closeModal(this.showMyAccount);
                    for (
                        document.querySelector('.modal .modaltitle').innerHTML = t('My Account'),
                            '',
                            a = document.querySelector('.modal .modalbody'),
                            l = "<div class='gmodes'>\n  <span style='width:30%' data-mode=\"myaccount\">" + t('My Account') + '</span>\n<span style=\'width:30%\' data-mode="stats">' + t('My stats') + '</span>\n<span style=\'width:30%\' data-mode="ships">' + t('My ships') + '</span>\n</div>',
                            l += "<div id='tabcontent'></div>",
                            a.innerHTML = l,
                            r = document.querySelectorAll('.gmodes span'),
                            e = (function (t) {
                                return function (e) {
                                    return e.addEventListener('click', function (i) {
                                        return t.accountInterface.buildTab(e.getAttribute('data-mode', i));
                                    });
                                };
                            })(this),
                            i = 0,
                            s = r.length;
                        i < s;
                        i++
                    )
                        (o = r[i]), e(o);
                    return this.showModal('myaccount');
                }),
                (e.prototype.buildSettings = function () {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x;
                    (document.querySelector('.modal .modaltitle').innerHTML = t('SETTINGS')), (e = ''), (h = document.querySelector('.modal .modalbody'));
                    for (s in this.l1110.settings.parameters)
                        if (!this.l1110.settings.isHidden(s))
                            if (((p = this.l1110.settings.parameters[s]), 'range' !== p.type))
                                if ('select' !== p.type) e += '<div class="option">' + t(p.name) + '<label class="switch"><input type="checkbox" ' + (p.value ? 'checked="checked"' : '') + ' id="' + s + '""><div class="slider"></div></label></div>';
                                else {
                                    for (e += '<div class="option">' + t(p.name) + '<select id="' + s + '">', 'language' === s && p.options.sort(), g = p.options, l = 0, n = g.length; l < n; l++) (d = g[l]), 'language' === s ? ((x = t(d, d) + ' - ' + t(d, 'en')), (v = "style='font-size:.8em'")) : ((x = t(d)), (v = '')), (e += '<option ' + v + ' value="' + d + '" ' + (p.value === d ? 'selected="selected"' : '') + '>' + x + '</option>');
                                    e += '</select></div>';
                                }
                            else e += '<div class="option">' + t(p.name) + '<div class="range">\n  <input id=\'' + s + '\' type="range" min=\'' + p.min + "' max='" + p.max + "' value='" + p.value + "' step='" + p.l0Ill + "'>\n<span id='" + s + "_value'>" + p.value + '</span>\n  </div>\n</div>';
                    for (h.innerHTML = e, c = document.querySelectorAll('.option input[type=checkbox]'), u = 0, a = c.length; u < a; u++)
                        (d = c[u]),
                            d.addEventListener(
                                'click',
                                (function (t) {
                                    return function (e) {
                                        return t.updateSettings(e);
                                    };
                                })(this)
                            );
                    for (
                        f = document.querySelectorAll('.option input[type=range]'),
                            i = (function (e) {
                                return function (i) {
                                    if (
                                        (i.addEventListener('input', function (s) {
                                            return (x = document.querySelector('#' + i.getAttribute('id') + '_value')), (x.innerText = '0' === i.value ? t('Off') : Math.round(50 * i.value) + ' %'), e.updateSettings(s, !0);
                                        }),
                                        i.dispatchEvent(new Event('input')),
                                        'sounds' === i.id)
                                    )
                                        return i.addEventListener('change', function (t) {
                                            return e.l1110.l0I11.beep(4 + 0.2 * Math.random(), 1);
                                        });
                                };
                            })(this),
                            I = 0,
                            o = f.length;
                        I < o;
                        I++
                    )
                        (m = f[I]), i(m);
                    for (w = document.querySelectorAll('.option select'), y = [], O = 0, r = w.length; O < r; O++)
                        (b = w[O]),
                            y.push(
                                b.addEventListener(
                                    'change',
                                    (function (t) {
                                        return function (e) {
                                            return t.updateSettings(e, !0);
                                        };
                                    })(this)
                                )
                            );
                    return y;
                }),
                (e.prototype.showSettings = function () {
                    var t;
                    return (t = document.querySelector('.modal')), 'block' === t.style.display ? ('settings' === this.lastModal ? this.closeModal() : this.closeModal(this.showSettings)) : (this.buildSettings(), this.showModal('settings'));
                }),
                (e.prototype.OlI11 = function () {
                    var e, i, s, l;
                    return (
                        (i = document.querySelector('.modal')),
                        'block' === i.style.display
                            ? 'gamecreator' === this.lastModal
                                ? this.closeModal()
                                : this.closeModal(this.OlI11)
                            : ((s = document.querySelector('.modal .modalbody')),
                              (document.querySelector('.modal .modaltitle').innerHTML = t('Create custom game')),
                              (e = ''),
                              (l = new XMLHttpRequest()),
                              l.open('GET', 'https://starblast.io/simstatus.json', !0),
                              (l.onreadystatechange = (function (i) {
                                  return function () {
                                      var n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M;
                                      if (4 === l.readyState && 200 === l.status) {
                                          for (z = JSON.parse(l.responseText), x = [], c = 0, p = z.length; c < p; c++) (E = z[c]), -1 === x.indexOf(E.location) && x.push(E.location);
                                          for (x.sort(), e += '<div class="option">' + t('Server location') + '<select id="server_location">', f = 0, I = x.length; f < I; f++) (w = x[f]), (e += '<option value="' + w + '">' + w + '</option>');
                                          for (e += '</select></div>', e += '<div class="option">' + t('Map name') + '<input id="map_name" maxlength="20" type="text" placeholder="' + t('Random map name') + '"></div>', e += '<div id="mapsize" class="option">' + t('Map Size') + '<div class="range"><input id="map_size" type="range" min="20" max="200" value="60" step="10"><span id="mpsize">' + t('Average') + '</span></div></div>', e += '<div id="mappattern"><div class="option">' + t('Map pattern') + '<input id="map_id" min="1" max="9999" type="number" class="number" value="5000"></div>', e += '<canvas id="mappreview" width="239" height="239"></canvas></div>', e += '<hr style="clear:both" />', e += '<div class="option">' + t('Game mode') + '<select id="game_mode">', v = i.installed_modes, g = 0, O = v.length; g < O; g++) (u = v[g]), u.custom_game_allowed && (e += '<option value="' + u.id + '">' + t(u.custom_game_name) + '</option>');
                                          for (e += '</select></div>', e += '<div class="sandboxmode" id="_survival"><div class="option">' + t('Survival Triggers') + '</div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Time') + '<div class="range"><input id="survival_time" type="range" min="10" max="600" value="45" step="5"><span id="stvalue">45min</span></div></div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Level') + '<div class="range"><input id="survival_level" type="range" min="2" max="8" value="7" step="1"><span id="slvalue">7</span></div></div></div>', e += '<div class="sandboxmode" id="_team"><div class="option">' + t('Team mode options') + '</div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Station Size') + '<div class="range"><input id="station_size" type="range" min="1" max="4" value="2" step="1"><span id="ssvalue">' + t('Average') + '</span></div></div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Station Crystal Capacity') + '<div class="range"><input id="station_crystal_capacity" type="range" min="0.1" max="10" value="1" step=".1"><span id="sccvalue">&times; 1</span></div></div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Station Repair Threshold') + '<div class="range"><input id="station_repair_threshold" type="range" min="0" max="1" value=".25" step=".01"><span id="srtvalue">25 %</span></div></div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Station Regeneration') + '<div class="range"><input id="station_regeneration" type="range" min="0" max="2" value="1" step=".1"><span id="stregenvalue">&times; 1</span></div></div>', e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Healing Enabled') + '<label class="switch"><input type="checkbox" id="healing_enabled"><div class="slider"></div></label></div>', e += '</div>', e += '<div style="display:none;" class="option" id="seasonchoice"><select id="season"><option value="s1">' + t('Season %d').replace('%d', '1') + '</option></select></div>', e += '<div id="mapspecs">', e += '<hr />', localStorage.getItem('debug') ? (e += '<div class="option">' + t('Max players') + '<div class="range"><input id="max_players" type="range" min="2" max="240" value="30" step="1"><span id="mpvalue">30</span></div></div>') : (e += '<div class="option">' + t('Max players') + '<div class="range"><input id="max_players" type="range" min="2" max="120" value="30" step="1"><span id="mpvalue">30</span></div></div>'), e += '<div class="option" id="crysval">' + t('Crystal value') + '<div class="range"><input id="crystal_value" type="range" min="0" max="5" value="2" step="0.5"><span id="crvalue">&times;2</span></div></div>', e += '<div class="option">' + t('Asteroids strength') + '<div class="range"><input id="asteroids_strength" type="range" min="0" max="5" value="1" step="0.1"><span id="asstr">' + t('Default') + '</span></div></div>', e += '<div class="option" id="nteams">' + t('Number of teams') + '<div class="range"><input id="friendly_colors" type="range" min="0" max="5" value="0" step="1"><span id="fcvalue">' + t('None') + '</span></div></div>', e += '<hr />', e += '</div>', e += '<div id="shipspecs">', e += '<div class="option">' + t('Number of lives') + '<div class="range"><input id="lives" type="range" min="0" max="5" value="3" step="1"><span id="livesvalue">3</span></div></div>', e += '<div class="option">' + t('Starting ship') + '<select id="starting_ship">', b = OlII0.ships, y = 0, m = b.length; y < m; y++) (_ = b[y]), (n = 100 * _.level + _.model), (e += '<option style="font-size:.8em;" data-level="' + _.level + '" value="' + n + '">[' + t('Level') + ' ' + _.level + '] ' + _.name + '</option>');
                                          if (
                                              ((e += '</select></div>'),
                                              (e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Maxed') + '<label class="switch"><input type="checkbox" id="maxedship"><div class="slider"></div></label></div>'),
                                              (e += '<div class="option">' + t('Max ship level') + '<div class="range"><input id="max_level" type="range" min="1" max="7" value="7" step="1"><span id="mlvalue">7</span></div></div>'),
                                              (e += '<div class="option"> <i class="fa fa-fw fa-level-up fa-rotate-90"></i> ' + t('Number of lives') + '<div class="range"><input id="maxtierlives" type="range" min="0" max="5" value="3" step="1"><span id="maxtierlivesvalue">3</span></div></div>'),
                                              (e += '<hr />'),
                                              (e += '</div>'),
                                              (e += '<div id="shipoptions">'),
                                              (e += '<div class="option">' + t('Ship Speed') + '<div class="range"><input id="speed_mod" type="range" min="0.1" max="2" value="1" step="0.1"><span id="ssstr">' + t('Default') + '</span></div></div>'),
                                              (e += '<div class="option">' + t('Shield regen factor') + '<div class="range"><input id="shield_regen_factor" type="range" min="0" max="2" value="1" step="0.1"><span id="srf">' + t('Default') + '</span></div></div>'),
                                              (e += '<div class="option">' + t('Power regen factor') + '<div class="range"><input id="power_regen_factor" type="range" min="0" max="2" value="1" step="0.1"><span id="prf">' + t('Default') + '</span></div></div>'),
                                              (e += '<div class="option">' + t('Friction ratio') + '<div class="range"><input id="friction_ratio" type="range" min="0" max="2" value="1" step="0.1"><span id="frratio">&times; 1</span></div></div>'),
                                              (e += '<div class="option">' + t('Strafe') + '<div class="range"><input id="strafe" type="range" min="0" max="1" value="0" step="0.1"><span id="stratio">None</span></div></div>'),
                                              (e += '<div class="option">' + t('RCS Toggle') + '<label class="switch"><input type="checkbox" id="rcs_toggle"><div class="slider"></div></label></div>'),
                                              (e += '<div class="option">' + t('Limited mines lifespan') + '<label class="switch"><input checked="checked" type="checkbox" id="mines_self_destroy"><div class="slider"></div></label></div>'),
                                              (e += '</div>'),
                                              localStorage.getItem('debug') && ((e += '<hr />'), (e += '<div id="aowoptions">'), (e += '<div class="option">' + t('Start timestamp') + '<div style="float:right"><input id="timestamp" type="datetime-local"></div></div>'), (e += '</div>')),
                                              (e += '<div class="textcentered"></div>'),
                                              (s.innerHTML = e),
                                              (a = document.createElement('button')),
                                              a.setAttribute('class', 'donate-btn'),
                                              (a.innerHTML = t('Create custom game')),
                                              s.querySelector('.textcentered').appendChild(a),
                                              (o = !1),
                                              a.addEventListener('click', function () {
                                                  var e, l, n, r, h;
                                                  if (!o) {
                                                      for (o = !0, n = s.querySelectorAll('.option'), h = {}, r = 0, e = n.length; r < e; r++) (l = n[r]), l.querySelector('select') && (h[l.querySelector('select').getAttribute('id')] = l.querySelector('select').value), l.querySelector('input') && (h[l.querySelector('input').getAttribute('id')] = l.querySelector('input').value), l.querySelector('input[type=checkbox]') && (h[l.querySelector('input').getAttribute('id')] = l.querySelector('input').checked);
                                                      return (
                                                          h.timestamp && (h.timestamp = new Date(h.timestamp).getTime()),
                                                          'team' !== h.game_mode && (h.healing_enabled = void 0),
                                                          (a.innerHTML = "<i class='fa fa-cog fa-spin'></i>"),
                                                          i.l1110.createMatch(h, function (e, s) {
                                                              return k(), e || ((o = !1), (a.innerHTML = t('Create custom game'))), (document.location.hash = s), i.showGameCreated();
                                                          })
                                                      );
                                                  }
                                              }),
                                              (k = function () {
                                                  var t, e, i, l, n;
                                                  for (i = s.querySelectorAll('.option'), l = {}, n = 0, t = i.length; n < t; n++) (e = i[n]), e.querySelector('select') && (l[e.querySelector('select').getAttribute('id')] = e.querySelector('select').value), e.querySelector('input') && (l[e.querySelector('input').getAttribute('id')] = e.querySelector('input').value), e.querySelector('input[type=checkbox]') && (l[e.querySelector('input').getAttribute('id')] = e.querySelector('input').checked);
                                                  return localStorage.setItem('privateGameSettings', JSON.stringify(l));
                                              }),
                                              (M = function () {
                                                  var t, e, s;
                                                  return (document.getElementById('mappattern').style.display = 'block'), (document.getElementById('nteams').style.display = 'block'), (document.getElementById('mapsize').style.display = 'block'), (document.getElementById('shipspecs').style.display = 'block'), (document.getElementById('shipoptions').style.display = 'block'), (document.getElementById('mapspecs').style.display = 'block'), (e = document.getElementById('map_id').value), (s = document.getElementById('map_size').value), (t = document.getElementById('game_mode').value), 'battleroyale' === t && ((document.getElementById('nteams').style.display = 'none'), (document.getElementById('shipspecs').style.display = 'none'), (document.getElementById('shipoptions').style.display = 'none'), (document.getElementById('crysval').style.display = 'none')), 'deathmatch' === t && ((document.getElementById('mappattern').style.display = 'none'), (document.getElementById('nteams').style.display = 'none'), (document.getElementById('shipspecs').style.display = 'none')), 'invasion' === t && ((document.getElementById('mappattern').style.display = 'none'), (document.getElementById('nteams').style.display = 'none'), (document.getElementById('mapsize').style.display = 'none'), (document.getElementById('shipspecs').style.display = 'none'), (document.getElementById('shipoptions').style.display = 'none'), (document.getElementById('mapspecs').style.display = 'none')), i.showModal(i.lastmodal), new lI0l1(i.l1110).lOO11(document.getElementById('mappreview'), e, s, t);
                                              }),
                                              document.getElementById('map_id').addEventListener('input', function () {
                                                  var t;
                                                  return (t = parseInt(this.value)), isNaN(t) && (this.value = '5000'), t < 1 && (this.value = '1'), t > 9999 && (this.value = '9999'), M(), k();
                                              }),
                                              document.getElementById('rcs_toggle').addEventListener('click', function () {
                                                  return k();
                                              }),
                                              document.getElementById('mines_self_destroy').addEventListener('click', function () {
                                                  return k();
                                              }),
                                              document.getElementById('healing_enabled').addEventListener('click', function () {
                                                  return k();
                                              }),
                                              document.getElementById('friction_ratio').addEventListener('input', function () {
                                                  return (document.getElementById('frratio').innerHTML = '&times; ' + this.value), '1' === this.value && (document.getElementById('frratio').innerHTML = t('Default')), k();
                                              }),
                                              document.getElementById('strafe').addEventListener('input', function () {
                                                  return (document.getElementById('stratio').innerHTML = '&times; ' + this.value), '0' === this.value && (document.getElementById('stratio').innerHTML = t('None')), k();
                                              }),
                                              document.getElementById('speed_mod').addEventListener('input', function () {
                                                  return (document.getElementById('ssstr').innerHTML = '&times; ' + this.value), '1' === this.value && (document.getElementById('ssstr').innerHTML = t('Default')), k();
                                              }),
                                              document.getElementById('shield_regen_factor').addEventListener('input', function () {
                                                  return (document.getElementById('srf').innerHTML = '&times; ' + this.value), '1' === this.value && (document.getElementById('srf').innerHTML = t('Default')), k();
                                              }),
                                              document.getElementById('power_regen_factor').addEventListener('input', function () {
                                                  return (document.getElementById('prf').innerHTML = '&times; ' + this.value), '1' === this.value && (document.getElementById('prf').innerHTML = t('Default')), k();
                                              }),
                                              document.getElementById('maxedship').addEventListener('click', function () {
                                                  return k();
                                              }),
                                              document.getElementById('game_mode').addEventListener('input', function () {
                                                  var t, e, i, s, l;
                                                  for (document.getElementById('seasonchoice').style.display = 'none', i = document.querySelectorAll('.sandboxmode'), l = 0, e = i.length; l < e; l++) (s = i[l]), (s.style.display = 'none');
                                                  return (t = document.getElementById('friendly_colors')), 'survival' === this.value && ((document.getElementById('_survival').style.display = 'block'), t.setAttribute('min', '0'), t.dispatchEvent(new Event('input'))), 'team' === this.value && ((document.getElementById('_team').style.display = 'block'), t.setAttribute('min', '2'), t.dispatchEvent(new Event('input'))), 'invasion' === this.value && (document.getElementById('seasonchoice').style.display = 'block'), M(), k();
                                              }),
                                              document.getElementById('starting_ship').addEventListener('input', function () {
                                                  var t, e;
                                                  return (t = document.getElementById('max_level')), t.setAttribute('min', this.options[this.selectedIndex].getAttribute('data-level')), t.dispatchEvent(new Event('input')), (e = document.getElementById('survival_level')), e.setAttribute('min', 1 * this.options[this.selectedIndex].getAttribute('data-level') + 1), e.dispatchEvent(new Event('input')), k();
                                              }),
                                              document.getElementById('server_location').addEventListener('input', function () {
                                                  return k();
                                              }),
                                              document.getElementById('max_players').addEventListener('input', function () {
                                                  return (document.getElementById('mpvalue').innerHTML = this.value), k();
                                              }),
                                              document.getElementById('crystal_value').addEventListener('input', function () {
                                                  var e;
                                                  return (e = '&times; ' + this.value), '0' === this.value && (e = t('None')), '1' === this.value && (e = t('Default')), (document.getElementById('crvalue').innerHTML = e), k();
                                              }),
                                              document.getElementById('asteroids_strength').addEventListener('input', function () {
                                                  var e;
                                                  return (e = '&times; ' + this.value), '0' === this.value && (e = t('None')), '1' === this.value && (e = t('Default')), (document.getElementById('asstr').innerHTML = e), k();
                                              }),
                                              document.getElementById('station_size').addEventListener('input', function () {
                                                  var e;
                                                  return '1' === this.value && (e = t('Small')), '2' === this.value && (e = t('Average')), '3' === this.value && (e = t('Big')), '4' === this.value && (e = t('Huge')), (document.getElementById('ssvalue').innerHTML = e), k();
                                              }),
                                              document.getElementById('station_crystal_capacity').addEventListener('input', function () {
                                                  return (document.getElementById('sccvalue').innerHTML = '&times; ' + this.value), k();
                                              }),
                                              document.getElementById('station_repair_threshold').addEventListener('input', function () {
                                                  return (document.getElementById('srtvalue').innerHTML = Math.round(100 * this.value) + ' %'), k();
                                              }),
                                              document.getElementById('station_regeneration').addEventListener('input', function () {
                                                  return (document.getElementById('stregenvalue').innerHTML = '&times; ' + this.value), k();
                                              }),
                                              document.getElementById('map_size').addEventListener('input', function () {
                                                  var e;
                                                  return (e = 20 * Math.round(this.value / 20)), 20 === e && (e = t('Micro')), 40 === e && (e = t('Tiny')), 60 === e && (e = t('Small')), 80 === e && (e = t('Average')), 100 === e && (e = t('Big')), 120 === e && (e = t('Bigger')), 140 === e && (e = t('Even Bigger')), 160 === e && (e = t('Really big')), 180 === e && (e = t('Biggest')), 200 === e && (e = t('Huge')), (document.getElementById('mpsize').innerHTML = e), M(), k();
                                              }),
                                              document.getElementById('lives').addEventListener('input', function () {
                                                  return (document.getElementById('livesvalue').innerHTML = this.value), k();
                                              }),
                                              document.getElementById('maxtierlives').addEventListener('input', function () {
                                                  return (document.getElementById('maxtierlivesvalue').innerHTML = this.value), k();
                                              }),
                                              document.getElementById('max_level').addEventListener('input', function () {
                                                  return (document.getElementById('mlvalue').innerHTML = this.value), k();
                                              }),
                                              document.getElementById('friendly_colors').addEventListener('input', function () {
                                                  var e;
                                                  return (e = '0' === this.value ? t('None') : this.value), (document.getElementById('fcvalue').innerHTML = e), k();
                                              }),
                                              document.getElementById('survival_time').addEventListener('input', function () {
                                                  return (document.getElementById('stvalue').innerHTML = t('%s minutes').replace('%s', this.value)), k();
                                              }),
                                              document.getElementById('survival_level').addEventListener('input', function () {
                                                  var e;
                                                  return (e = '8' === this.value ? t('Infinite') : this.value), (document.getElementById('slvalue').innerHTML = e), k();
                                              }),
                                              (r = localStorage.getItem('privateGameSettings')))
                                          ) {
                                              r = JSON.parse(r);
                                              for (d in r) null != document.getElementById(d) && ('checkbox' === document.getElementById(d).getAttribute('type') ? (document.getElementById(d).checked = r[d]) : ((document.getElementById(d).value = r[d]), (h = new Event('input')), document.getElementById(d).dispatchEvent(h)));
                                          } else document.querySelectorAll('.sandboxmode')[0].style.display = 'block';
                                          return M(), i.showModal('gamecreator');
                                      }
                                  };
                              })(this)),
                              l.send(null))
                    );
                }),
                (e.prototype.showGameCreated = function () {
                    var e, i, s, l;
                    return (
                        (i = document.querySelector('.modal')),
                        'block' === i.style.display
                            ? 'gamecreated' === this.lastModal
                                ? this.closeModal()
                                : this.closeModal(this.showGameCreated)
                            : ((s = document.querySelector('.modal .modalbody')),
                              (document.querySelector('.modal .modaltitle').innerHTML = t('Your custom game')),
                              (e = document.location.href),
                              (l = "<div class='infos textcentered'>"),
                              (l += t('Your custom game was successfully created. You can now invite people with the link below:')),
                              (l += '</div>'),
                              this.l1110.is_app ? (l += "<div class='stats textcentered' style='padding:20px'>\n  <small>" + t('Copy Room Link') + "</small><br />\n<input readonly value='https://starblast.io/" + document.location.hash + '\' onclick="this.focus(); this.select();" />\n</div>') : (l += "<div class='stats textcentered' style='padding:20px'>\n  <small>" + t('Copy Room Link') + "</small><br />\n<input readonly value='" + e + '\' onclick="this.focus(); this.select();" /><br />\n  <i class="fa fa-facebook"></i>\n  <i class="fa fa-twitter"></i>\n  <i class="fa fa-vk"></i>\n  <i class="fa fa-envelope"></i>\n</div>'),
                              (l += "<div class='infos textcentered'>"),
                              (l += t('You have to join the game within 2 minutes or it will be discarded.')),
                              (l += '<br />'),
                              (l += "<button class='donate-btn' id='joincustom'>" + t('Join my custom game') + '</button>'),
                              (l += '</div>'),
                              (s.innerHTML = l),
                              document.querySelector('#joincustom').addEventListener(
                                  'click',
                                  (function (e) {
                                      return function (i) {
                                          var s;
                                          return (s = document.location.hash.match(/#(\d+)@(\w.+):(\d+)/)), (e.game_modes = [{ name: t('Private game'), id: 'private', custom_color: !0, address: { ip: s[2], port: 0 | s[3], gameid: 0 | s[1] } }]), e.startGame(), e.closeModal();
                                      };
                                  })(this)
                              ),
                              this.l1110.is_app ||
                                  (document.querySelector('.modalbody .fa-envelope').addEventListener(
                                      'click',
                                      (function (t) {
                                          return function (t) {
                                              return (document.location.href = 'mailto:?subject=starblast.io&body=' + e);
                                          };
                                      })()
                                  ),
                                  document.querySelector('.modalbody .fa-facebook').addEventListener(
                                      'click',
                                      (function (t) {
                                          return function (t) {
                                              return window.open('https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent(e));
                                          };
                                      })()
                                  ),
                                  document.querySelector('.modalbody .fa-vk').addEventListener(
                                      'click',
                                      (function (t) {
                                          return function (t) {
                                              return window.open('http://vk.com/share.php?url=' + encodeURIComponent(e));
                                          };
                                      })()
                                  ),
                                  document.querySelector('.modalbody .fa-twitter').addEventListener(
                                      'click',
                                      (function (i) {
                                          return function (i) {
                                              var s;
                                              return (s = t('Come and play') + ' #starblastio'), window.open('https://twitter.com/intent/tweet?text=' + encodeURIComponent(s) + '&url=' + encodeURIComponent(e));
                                          };
                                      })()
                                  )),
                              this.showModal('gamecreated'))
                    );
                }),
                (e.prototype.showPDMRankings = function () {
                    var e, i, s, l, n, a, o, r, h, u, d;
                    return (
                        (a = document.querySelector('.modal')),
                        'block' === a.style.display
                            ? 'pdmrankings' === this.lastModal
                                ? this.closeModal()
                                : this.closeModal(this.showPDMRankings)
                            : ((o = document.querySelector('.modal .modalbody')),
                              (i = localStorage.getItem('activeseason') || 's1'),
                              (e = localStorage.getItem('activeregion') || 'Europe'),
                              null == document.querySelector('[data-region=' + e + ']') && (e = 'America'),
                              (l = null),
                              (s = null),
                              (n = '<div class=\'gmodes\'>\n  <span data-mode="deathmatch" class="selected">' + t('Pro Deathmatch') + '</span>\n<span data-mode="invasion">' + t('Invasion') + '</span>\n</div>'),
                              (n += "<div class='textcentered spinner'><i class='fa fa-3x fa-cog fa-spin'></i></div>"),
                              this.l1110.l1OI0.Il1lI() || ((n += "<div class='textcentered' style='margin-bottom:50px;'>"), (n += t('Buy your Elite Commander Pass to take part in the Championship.')), (n += '</div>')),
                              (n += "<div id='modalcontent'></div>"),
                              (o.innerHTML = n),
                              (d = (function (e) {
                                  return function (e) {
                                      var i, l, n, a, r, h, u, d, c, p, I, O, m, f, g, y, v, b;
                                      for (
                                          m = function (t) {
                                              var i, l, n, a;
                                              for (a = s[e], i = 0, l = a.length; i < l; i++) if (((n = a[i]), t === n.id)) return n;
                                          },
                                              document.querySelector('.modal .modaltitle').innerHTML = t('Invasion rankings'),
                                              d = "<div class='textcentered regions'>",
                                              d += "<span data-season='s1' class='region active frozenbg'>" + t('Season %d').replace('%d', '1') + '</span>',
                                              d += '</div>',
                                              d += "<div id='ranks'></div>",
                                              o.querySelector('#modalcontent').innerHTML = d,
                                              n = new Date(s.last_update),
                                              y = '<table class="rankings">\n<thead style="background:rgba(0,0,0,.5)"><tr>\n  <th colspan="2">' + t('Updated %d').replace('%d', n.toLocaleTimeString(translations.getLang(), { weekday: 'long', year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' })) + '</th>\n<th></th>\n<th>' + t('Max wave reached') + '</th>\n<th>' + t('Highscore') + '</th>\n</tr></thead>\n<tbody>',
                                              a = 0,
                                              f = s[e],
                                              r = 0,
                                              h = f.length;
                                          r < h && ((O = f[r]), (p = O.name.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')), (b = O.max_wave), O.victory > 0 && (b = O.victory + " <i class='fa fa-trophy'></i>"), (y += '<tr I01Il="' + O.id + '">\n  <td style="width:80px; padding:0 10px;"></td>\n  <td style="width:20%; word-wrap: break-word; word-break: break-all; white-space: normal;font-size:.7em; padding:0;"><div style=\'max-height:30px; overflow:hidden;\'>' + p + '</div></td>\n  <td class="textcentered" style="width:1%; background:rgba(0,0,0,.2); border-left:1px dashed hsl(200,50%,50%);">#' + ++a + '</td>\n  <td class="trophies textcentered" style="width:30%">' + b + '</td>\n  <td class="textcentered" style="width:30%">' + O.score.toLocaleString() + '</td>\n</tr>'), !(a >= 100));
                                          r++
                                      );
                                      for (y += '</tbody></table>', document.getElementById('ranks').innerHTML = y, l = document.querySelectorAll('[I01Il]'), v = 500, I = 700, g = [], c = 0, u = l.length; c < u; c++)
                                          (i = l[c]),
                                              g.push(
                                                  (function (t) {
                                                      return setTimeout(function () {
                                                          var e;
                                                          return (
                                                              (O = m(t.getAttribute('I01Il'))),
                                                              (e = new Il01O(t.offsetHeight - 5, { badge: O.custom.badge, laser: O.custom.laser, finish: O.custom.finish }).canvas),
                                                              t.querySelector('td:first-child').appendChild(e),
                                                              setTimeout(function () {
                                                                  return (e.style.opacity = '1'), (e.style.transform = 'translateY(0px) scale(1)');
                                                              }, (I += 50))
                                                          );
                                                      }, (v += 1));
                                                  })(i)
                                              );
                                      return g;
                                  };
                              })()),
                              (u = (function (i) {
                                  return function (i, s) {
                                      var l, n, a, r, h, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H;
                                      (b = function (t) {
                                          var e, l, n, a;
                                          for (a = i.ratings[s], e = 0, l = a.length; e < l; e++) if (((n = a[e]), t === n.id)) return n;
                                      }),
                                          (document.querySelector('.modal .modaltitle').innerHTML = t('Pro Deathmatch Championship')),
                                          (m = "<div class='textcentered regions'>");
                                      for (S in i.ratings) 'local' !== S && 'Australia' !== S && (m += '<span data-region=' + S + " class='region frozenbg'>" + t(S) + '</span>');
                                      for (
                                          m += '</div>',
                                              m += "<div id='ranks'></div>",
                                              o.querySelector('#modalcontent').innerHTML = m,
                                              e = localStorage.getItem('activeregion') || 'Europe',
                                              null == document.querySelector('[data-region=' + e + ']') && (e = 'America'),
                                              document.querySelector('[data-region=' + e + ']').classList.add('active'),
                                              z = document.querySelectorAll('.region.frozenbg'),
                                              r = function (t) {
                                                  return t.addEventListener('click', function () {
                                                      var e, s, l;
                                                      for (l = 0, s = z.length; l < s; l++) (e = z[l]), e.classList.remove('active');
                                                      return t.classList.add('active'), localStorage.setItem('activeregion', t.getAttribute('data-region')), u(i, t.getAttribute('data-region'));
                                                  });
                                              },
                                              d = 0,
                                              c = z.length;
                                          d < c;
                                          d++
                                      )
                                          (_ = z[d]), r(_);
                                      for (
                                          i.ratings[s].sort(function (t, e) {
                                              return e.live_rating - t.live_rating;
                                          }),
                                              h = 0,
                                              M = i.ratings[s],
                                              f = 0,
                                              p = M.length;
                                          f < p;
                                          f++
                                      )
                                          (v = M[f]), (v.live_rank = ++h);
                                      for (
                                          i.ratings[s].sort(function (t, e) {
                                              return e.official_rating - t.official_rating;
                                          }),
                                              a = new Date(i.last_update),
                                              A = '<table class="rankings">\n<thead><tr>\n  <th colspan="2">' + t('Official rankings are updated every day at %d').replace('%d', a.toLocaleTimeString(translations.getLang(), { hour: 'numeric', minutes: 'numeric' })) + '</th>\n  <th class="orating" colspan="3">' + t('Official ranking') + '</th>\n  <th colspan="3" style="width:33.333%">' + t('Live ranking') + '</th>\n</tr></thead>\n<tbody>',
                                              h = 0,
                                              T = i.ratings[s],
                                              k = 0,
                                              I = T.length;
                                          k < I && ((v = T[k]), (w = Math.round(v.live_rating - Math.round(v.official_rating))), (P = v.official_rating < v.live_rating ? '+' : ''), (x = 0 === w ? '=' : '(' + P + w + ')'), (g = v.name.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')), (A += '<tr I01Il="' + v.id + '">\n  <td style="width:80px; padding:0 10px;"></td>\n  <td style="width:25%; word-wrap: break-word; word-break: break-all; white-space: normal;font-size:.7em; padding:0;"><div style="max-height:30px; overflow:hidden;">' + g + '</div></td>\n  <td style="width:10%; background:rgba(0,0,0,.2); border-left:1px dashed hsl(200,50%,50%);">#' + ++h + '</td>\n  <td style="text-align:center; background:rgba(0,0,0,.2);">' + Math.round(v.official_rating) + '</td>\n  <td class="trophies">' + (h <= 3 ? "<i class='fa fa-trophy'></i>" : '') + '</td>\n  <td style="width:10%">#' + v.live_rank + '</td>\n  <td style="text-align:center;">' + Math.round(v.live_rating) + ' <small>' + x + '</small></td>\n  <td style="width:10%;">' + (h > v.live_rank ? "<i class='fa fa-long-arrow-up'></i>&nbsp;" + (h - v.live_rank) : h < v.live_rank ? "<i class='fa fa-long-arrow-down'></i>&nbsp;" + -1 * (h - v.live_rank) : '') + '</td>\n</tr>'), !(h >= 100));
                                          k++
                                      );
                                      for (A += '</tbody></table>', document.getElementById('ranks').innerHTML = A, n = document.querySelectorAll('[I01Il]'), H = 500, y = 700, R = [], E = 0, O = n.length; E < O; E++)
                                          (l = n[E]),
                                              R.push(
                                                  (function (t) {
                                                      return setTimeout(function () {
                                                          var e;
                                                          return (
                                                              (v = b(t.getAttribute('I01Il'))),
                                                              (e = new Il01O(t.offsetHeight - 5, { badge: v.custom.badge, laser: v.custom.laser, finish: v.custom.finish }).canvas),
                                                              t.querySelector('td:first-child').appendChild(e),
                                                              setTimeout(function () {
                                                                  return (e.style.opacity = '1'), (e.style.transform = 'translateY(0px) scale(1)');
                                                              }, (y += 50))
                                                          );
                                                      }, (H += 1));
                                                  })(l)
                                              );
                                      return R;
                                  };
                              })()),
                              (r = new XMLHttpRequest()),
                              r.open('GET', this.rankingsfile, !0),
                              (r.onreadystatechange = (function (t) {
                                  return function () {
                                      var t;
                                      if (4 === r.readyState && 200 === r.status) return (t = JSON.parse(r.responseText)), (l = t), document.querySelector('.modal .spinner') && document.querySelector('.modal .spinner').remove(), u(t, e);
                                  };
                              })()),
                              r.send(null),
                              (h = new XMLHttpRequest()),
                              h.open('GET', this.invasionfile, !0),
                              (h.onreadystatechange = function () {
                                  var t, n, a, o, r;
                                  if (4 === h.readyState && 200 === h.status) {
                                      for (s = JSON.parse(h.responseText), n = document.querySelectorAll('.gmodes span'), r = [], a = 0, o = n.length; a < o; a++)
                                          (t = n[a]),
                                              r.push(
                                                  (function (t) {
                                                      return t.addEventListener('click', function () {
                                                          var s, a, o;
                                                          for (o = 0, a = n.length; o < a; o++) (s = n[o]), s.classList.remove('selected');
                                                          if ((t.classList.add('selected'), 'invasion' === t.getAttribute('data-mode') && d(i), 'deathmatch' === t.getAttribute('data-mode'))) return u(l, e);
                                                      });
                                                  })(t)
                                              );
                                      return r;
                                  }
                              }),
                              h.send(null),
                              this.showModal('pdmrankings'))
                    );
                }),
                (e.prototype.updateSettings = function (t, e) {
                    var i;
                    if ((null == e && (e = !1), this.l1110.settings.set(t.target.id, e ? t.target.value : t.target.checked), (this.l1110.settings.auto = !1), localStorage.setItem('auto', !1), 'language' === t.target.id)) return translations.langChanged(), this.buildSettings(), this.l1110.is_app ? (this.l1110.is_mobile_app ? (i = document.querySelector('.gamemodes')) : ((i = document.querySelector('.gamemodes')), (i.innerHTML = ''), (this.modeMenuBuilt = !1))) : this.changeGameMode(0);
                }),
                (e.prototype.openingCountdown = function () {
                    var e, i, s, l, n, a, o, r, h;
                    return (
                        (s = document.querySelector('#game_over')),
                        (a = (this.opening - Date.now()) / 1e3),
                        (n = Math.max(0, a)),
                        (l = (n / 3600) | 0),
                        (e = ((n / 600) | 0) % 6),
                        (r = ((n / 60) | 0) % 10),
                        (i = Math.abs(((n / 10) | 0) % 6)),
                        (h = Math.abs((0 | n) % 10)),
                        a <= 0
                            ? this.reloadGame()
                            : ((o = l + ' : ' + e + r + ' : ' + i + h),
                              (s.innerHTML = "<div class='smallblue'>" + t('game starts in') + '</div>' + o),
                              this.OllO0(),
                              setTimeout(
                                  (function (t) {
                                      return function () {
                                          return t.openingCountdown();
                                      };
                                  })(this),
                                  100
                              ))
                    );
                }),
                (e.prototype.clear = function () {
                    return this.O01I0(this.overlay);
                }),
                (e.prototype.OII1O = function (t) {
                    if (t >= 100) return 'function' == typeof GiveAway ? new GiveAway(this.l1110) : 'function' == typeof PromoContest ? new PromoContest(this.l1110) : this.I01O1();
                }),
                (e.prototype.gameLoader = function (t, e) {
                    var i, s, l;
                    if (((i = document.querySelector('.gameloader')), (s = i.querySelector('.loaderprogress')), (l = i.querySelector('.textprogress')), (s.style.width = t + '%'), (l.innerHTML = e), t >= 100)) return this.O01I0(this.overlay);
                }),
                (e.prototype.setFullScreen = function () {
                    if ((null == document.documentElement.webkitRequestFullScreen || document.webkitIsFullScreen ? (null == document.documentElement.requestFullScreen || document.fullScreen ? null == document.documentElement.mozRequestFullScreen || document.mozFullScreen || document.documentElement.mozRequestFullScreen() : document.documentElement.requestFullScreen()) : document.documentElement.webkitRequestFullScreen(), 'undefined' != typeof screen && null !== screen && null != screen.orientation)) return screen.orientation.lock('landscape').then(null, function (t) {});
                }),
                (e.prototype.isFullScreen = function () {
                    return !!document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenEnabled;
                }),
                (e.prototype.exitFullScreen = function () {
                    return null != document.exitFullscreen ? document.exitFullscreen() : null != document.webkitExitFullscreen ? document.webkitExitFullscreen() : null != document.mozCancelFullScreen ? document.mozCancelFullScreen() : null != document.msExitFullscreen ? document.msExitFullscreen() : void 0;
                }),
                (e.prototype.toggleFullScreen = function () {
                    return this.isFullScreen() ? this.exitFullScreen() : this.setFullScreen();
                }),
                (e.prototype.showStatLines = function () {
                    if (document.querySelector('.statinfo.hide'))
                        return (
                            document.querySelector('.statinfo.hide').classList.remove('hide'),
                            setTimeout(
                                (function (t) {
                                    return function () {
                                        return t.showStatLines();
                                    };
                                })(this),
                                300
                            )
                        );
                }),
                (e.prototype.swapElements = function (t, e) {
                    var i, s, l;
                    return (i = t.parentNode), (s = e.parentNode), (l = e.nextSibling), l === t && (l = l.nextSibling), i.replaceChild(e, t), l ? s.insertBefore(t, l) : s.appendChild(t), !0;
                }),
                (e.prototype.killed = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O;
                    if ((e || (e = { score: 0, killer: null, kills: 0, highscore: 0, gameover: !1, rank: 0 }), e.gameover)) return this.gameOver(e);
                    this.l1110.l1OI0.Il1lI() || this.l1110.is_app || gdactive || cgactive || window.csdk.requestBanner([{ containerId: 'cgbottom', size: this.ismobile ? '320x50' : '300x250' }]), cgactive && (window.crazysdk.requestBanner([{ containerId: 'cgbottom', size: this.ismobile ? '320x50' : '300x250' }]), window.crazysdk.gameplayStop()), null != e.killer && (e.killer = e.killer.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')), (o = document.querySelector('#player')), (h = document.querySelector('#respawn')), (i = h.nextElementSibling), (p = h.querySelector('.stats')), (n = document.querySelector('.gameloader')), (u = document.querySelector('#respawn_actions')), (c = document.querySelector('#respawn_swap')), (s = document.querySelector('#continue_btn')), (d = document.querySelector('#respawn_btn')), (r = document.querySelector('#refresh_btn')), (l = document.querySelector('.followtools')), this.overlay.classList.remove('hide'), (this.overlay.style.display = 'block'), (o.style.display = 'none'), (i.style.display = 'block'), l && (l.style.display = 'block'), (i.style.visibility = 'hidden'), (u.style.opacity = '0'), (c.style.opacity = '0'), (n.style.display = 'none'), (h.style.display = 'block'), (I = '');
                    for (a in e) (O = e[a]), 'rank' !== a && 'mode' !== a && 'boolean' != typeof O && O && null != (O = ('' + O).replace(/</g, '&lt;').replace(/>/g, '&gt;')) && (I += '<div class="statinfo hide"><span>' + t(a) + '</span><span>' + O + '</span></div>');
                    return (
                        (p.innerHTML = I),
                        this.showStatLines(),
                        this.displayOptions(),
                        this.OllO0(),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return (
                                        Math.random() < 0.5 && t.swapElements(u, c),
                                        (i.style.visibility = 'visible'),
                                        t.displayOptions(),
                                        t.OllO0(),
                                        setTimeout(
                                            function () {
                                                return (d.style.display = 'none'), (r.style.display = 'none'), (s.style.display = 'inline-block'), (u.style.opacity = '1'), (c.style.opacity = '1'), t.OllO0(), (t.timeout = 100), t.countdown();
                                            },
                                            t.l1110.l1OI0.Il1lI() ? 10 : 100
                                        )
                                    );
                                };
                            })(this),
                            this.l1110.l1OI0.Il1lI() ? 10 : 100
                        )
                    );
                }),
                (e.prototype.sharePart = function () {
                    var e, i, s, l, n, a;
                    return (
                        (s = document.querySelector('#respawn')),
                        (e = s.nextElementSibling),
                        (l = document.querySelector('#respawn_actions')),
                        (n = document.querySelector('#respawn_swap')),
                        (a = document.querySelector('.stats')),
                        (e.style.opacity = '0'),
                        (l.style.opacity = '0'),
                        (n.style.opacity = '0'),
                        (a.style.opacity = '0'),
                        (i = document.location.href),
                        this.isAdBlocked || this.refreshAds(),
                        setTimeout(
                            (function (s) {
                                return function () {
                                    return (
                                        (a.innerHTML = '<p>' + t('Play now with friends!') + '</p>\n<small>' + t('Copy Room Link') + "</small><br />\n<input readonly value='" + i + '\' onclick="this.focus(); this.select();" /><br />\n<i class="fa fa-facebook"></i>\n<i class="fa fa-twitter"></i>\n<i class="fa fa-vk"></i>\n<i class="fa fa-envelope"></i>'),
                                        document.querySelector('.stats .fa-envelope').addEventListener('click', function (t) {
                                            return (document.location.href = 'mailto:?subject=starblast.io&body=' + i);
                                        }),
                                        document.querySelector('.stats .fa-facebook').addEventListener('click', function (t) {
                                            return window.open('https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent(i));
                                        }),
                                        document.querySelector('.stats .fa-vk').addEventListener('click', function (t) {
                                            return window.open('http://vk.com/share.php?url=' + encodeURIComponent(i));
                                        }),
                                        document.querySelector('.stats .fa-twitter').addEventListener('click', function (e) {
                                            var s;
                                            return (s = t('Come and play') + ' #starblastio'), window.open('https://twitter.com/intent/tweet?text=' + encodeURIComponent(s) + '&url=' + encodeURIComponent(i));
                                        }),
                                        (document.querySelector('#continue_btn').style.display = 'none'),
                                        (document.querySelector('#respawn_btn').style.display = 'inline-block'),
                                        (document.querySelector('#refresh_btn').style.display = 'inline-block'),
                                        (a.style.opacity = '1'),
                                        Math.random() < 0.5 && s.swapElements(l, n),
                                        s.OllO0(),
                                        setTimeout(
                                            function () {
                                                return s.displayOptions(), s.OllO0(), (e.style.visibility = 'visible'), (e.style.opacity = '1'), (l.style.opacity = '1'), (n.style.opacity = '1');
                                            },
                                            s.l1110.l1OI0.Il1lI() ? 10 : 500
                                        )
                                    );
                                };
                            })(this),
                            this.l1110.l1OI0.Il1lI() ? 10 : 2e3
                        )
                    );
                }),
                (e.prototype.countdown = function () {
                    var t;
                    return (
                        (t = document.querySelector('#menucountdown')),
                        (t.innerHTML = --this.timeout),
                        (this.OO0Il = setTimeout(
                            (function (t) {
                                return function () {
                                    return 0 === t.timeout ? ((window.onbeforeunload = null), t.reloadGame()) : t.countdown();
                                };
                            })(this),
                            1e3
                        ))
                    );
                }),
                (e.prototype.clearAds = function () {
                    var t, e, i;
                    for (i = [], t = e = 1; e <= 3; t = ++e) document.querySelector('#cdm-zone-0' + t) ? i.push((document.querySelector('#cdm-zone-0' + t).innerHTML = '')) : i.push(void 0);
                    return i;
                }),
                (e.prototype.refreshAds = function () {
                    var t;
                    if (!this.l1110.l1OI0.Il1lI()) {
                        if ('undefined' != typeof factorem && null !== factorem && 'function' == typeof factorem.refreshAds)
                            try {
                                document.querySelector('#cdm-zone-01') && factorem.refreshAds([1], !0), document.querySelector('#cdm-zone-02') && factorem.refreshAds([2], !0), document.querySelector('#cdm-zone-03') && factorem.refreshAds([3], !0);
                            } catch (t) {
                                t;
                            }
                        if (((t = document.querySelector('#home')), 'undefined' != typeof googletag && null !== googletag && 'undefined' != typeof homeads && null !== homeads && 'undefined' != typeof homeadsmobile && null !== homeadsmobile && 'function' == typeof googletag.pubads)) {
                            if (!this.ismobile) {
                                if (Math.random() < 0.02) return (t = document.querySelector('#home')), void (t.innerHTML = "<a target='_blank' href='http://www.neuronball.com/'><img src='http://195.154.232.40/neuronball.jpg'></a>");
                                googletag.pubads().refresh(homeads);
                            }
                            if (this.ismobile) return googletag.pubads().refresh(homeadsmobile);
                        }
                    }
                }),
                (e.prototype.gameOver = function (e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m;
                    (s = document.querySelector('#canvaswrapper')), (h = document.querySelector('#player')), (d = document.querySelector('#respawn')), (i = d.nextElementSibling), (I = document.querySelector('.stats')), (n = document.querySelector('#game_over')), (c = document.querySelector('#respawn_actions')), (l = document.querySelector('#continue_btn')), (p = document.querySelector('#respawn_btn')), (u = document.querySelector('#refresh_btn')), (a = document.querySelector('.gameloader')), this.overlay.classList.remove('hide'), (this.overlay.style.display = 'block'), (n.style.display = 'block'), (d.style.display = 'block'), (c.style.display = 'block'), c.classList.remove('hide'), (h.style.display = 'none'), (a.style.display = 'none'), (i.style.display = 'none'), (I.style.display = 'block'), (l.style.display = 'none'), (p.style.display = 'none'), (u.style.display = 'inline-block'), (u.innerText = t('New Battle')), this.isAdBlocked || (this.refreshAds(), (i.style.display = 'block'), (i.style.visibility = 'visible'), (i.style.opacity = '1')), (O = '');
                    for (r in e) (m = e[r]), 'mode' !== r && 'boolean' != typeof m && m && ((m = ('' + m).replace(/</g, '&lt;').replace(/>/g, '&gt;')), 'team' !== e.mode || 'rank' !== r || null == m ? ('wave' !== r ? null != m && (O += '<div class="statinfo hide"><span>' + t(r) + '</span><span>' + m + '</span></div>') : (O += '<div class="statinfo hide"><span>' + t('Wave %d').replace('%d', '') + '</span><span>' + m + '</span></div>')) : (O += '<div class="statinfo hide"><span>' + t('Team rank') + '</span><span>' + m + '</span></div>'));
                    return (I.innerHTML = O), this.showStatLines(), 1 === e.rank && (cgactive && 'undefined' != typeof crazysdk && null !== crazysdk && window.crazysdk.happytime(), (o = document.getElementById('gameovermsg')), 'survival' === e.mode ? (o.innerHTML = t("Congratulations, you're the last survivor!")) : 'team' === e.mode && (o.innerHTML = t('Your team wins!'))), 'invasion' === e.mode && e.victory && ((o = document.getElementById('gameovermsg')), (o.innerHTML = t('You win!'))), 'battleroyale' === e.mode && e.victory && ((o = document.getElementById('gameovermsg')), (o.innerHTML = t('You win!'))), 'tutorial' === e.mode && e.victory && ((o = document.getElementById('gameovermsg')), (o.innerHTML = t('Training Complete!'))), (u.style.display = 'inline-block'), (s.style['-webkit-filter'] = 'blur(3px) grayscale(100%)'), (s.style['-moz-filter'] = 'blur(3px) grayscale(100%)'), (s.style.filter = 'blur(3px) grayscale(100%)'), this.displayOptions(), this.OllO0();
                }),
                (e.prototype.connectionLost = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d;
                    return (e = document.querySelector('#canvaswrapper')), (n = document.querySelector('#player')), (o = document.querySelector('#respawn')), (t = o.nextElementSibling), (d = document.querySelector('.stats')), (i = document.querySelector('#connection_lost')), (r = document.querySelector('#respawn_actions')), (s = document.querySelector('#continue_btn')), (h = document.querySelector('#respawn_btn')), (a = document.querySelector('#refresh_btn')), (l = document.querySelector('.gameloader')), (u = document.getElementById('serverip')), (u.innerText = '(' + this.l1110.I0O01.address + ')'), (u.style.fontSize = '.4em'), this.overlay.classList.remove('hide'), (this.overlay.style.display = 'block'), (i.style.display = 'block'), (o.style.display = 'block'), (r.style.display = 'block'), r.classList.remove('hide'), (n.style.display = 'none'), (l.style.display = 'none'), (t.style.display = 'none'), (d.style.display = 'none'), (s.style.display = 'none'), (h.style.display = 'none'), (a.style.display = 'inline-block'), (e.style['-webkit-filter'] = 'blur(3px) grayscale(100%)'), (e.style['-moz-filter'] = 'blur(3px) grayscale(100%)'), (e.style.filter = 'blur(3px) grayscale(100%)'), this.displayOptions(), this.OllO0(), (this.timeout = 60), this.countdown();
                }),
                (e.prototype.adBlockedPage = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c;
                    return (
                        (l = document.querySelector('#canvaswrapper')),
                        (o = document.querySelector('#player')),
                        (h = document.querySelector('#respawn')),
                        (i = h.nextElementSibling),
                        (c = document.querySelector('.stats')),
                        (t = document.querySelector('#adblocked_message')),
                        (u = document.querySelector('#respawn_actions')),
                        (n = document.querySelector('#continue_btn')),
                        (d = document.querySelector('#respawn_btn')),
                        (r = document.querySelector('#refresh_btn')),
                        (a = document.querySelector('.gameloader')),
                        this.overlay.classList.remove('hide'),
                        (this.overlay.style.display = 'block'),
                        (t.style.display = 'block'),
                        (h.style.display = 'block'),
                        (u.style.display = 'block'),
                        u.classList.remove('hide'),
                        (o.style.display = 'none'),
                        (a.style.display = 'none'),
                        (i.style.display = 'none'),
                        (c.style.display = 'none'),
                        (n.style.display = 'none'),
                        (d.style.display = 'none'),
                        (r.style.display = 'none'),
                        (l.style['-webkit-filter'] = 'blur(3px) grayscale(100%)'),
                        (l.style['-moz-filter'] = 'blur(3px) grayscale(100%)'),
                        (l.style.filter = 'blur(3px) grayscale(100%)'),
                        this.displayOptions(),
                        this.OllO0(),
                        (s = 20),
                        (e = (function (n) {
                            return function () {
                                return 0 == s-- ? (l.removeAttribute('style'), (t.style.display = 'none'), (i.style.display = 'block'), (c.style.display = 'block'), n.l1110.resume(), n.l1110.respawn(), n.clear()) : ((t.querySelector('.donate-btn').innerHTML = s), setTimeout(e, 1e3));
                            };
                        })(this))()
                    );
                }),
                (e.prototype.I1IIO = function (t) {
                    var e, i;
                    return (
                        null == t && (t = 1.25),
                        (e = document.createElement('canvas')),
                        (i = new Image()),
                        (i.src = 'https://starblast.data.neuronality.com/img/starblast_io_logo.svg?3'),
                        (i.crossOrigin = 'Anonymous'),
                        (i.ondragstart = function (t) {
                            return t.preventDefault();
                        }),
                        i.addEventListener('dragstart', function (t) {
                            return t.preventDefault();
                        }),
                        (i.onload = (function (t) {
                            return function () {
                                var s, l;
                                return (l = document.getElementById('logo')), l.appendChild(i), (l.style.opacity = 1), (s = e.getContext('2d')), s.drawImage(i, 0, 0), t.OllO0();
                            };
                        })(this)),
                        e
                    );
                }),
                (e.prototype.drawHex = function (t, e, i, s, l) {
                    var n, a, o, r, h, u, d, c, p, I;
                    for (t.beginPath(), n = (180 * THREE.Math.DEG2RAD) / 2, t.moveTo(e + Math.cos(n) * s, i + Math.sin(n) * l), o = r = 1; r <= 5; o = r += 1) (n += (180 * THREE.Math.DEG2RAD) / 3), t.lineTo(e + Math.cos(n) * s, i + Math.sin(n) * l);
                    for (t.closePath(), t.stroke(), a = t.createRadialGradient(e + 0.5, i + 0.5, 0, e, i, 1), a.addColorStop(0, 'hsla(200,70%,70%,0)'), a.addColorStop(1, 'hsla(200,70%,70%,.05)'), t.fillStyle = a, t.fill(), t.fillStyle = 'hsla(200,70%,70%,.25)', n = (180 * THREE.Math.DEG2RAD) / 2, o = h = 0; h <= 5; o = h += 1) (n += (180 * THREE.Math.DEG2RAD) / 3), t.fillRect(e + Math.cos(n) * s - 0.01, i + Math.sin(n) * l - 0.01, 0.02, 0.02), t.fillRect(e + Math.cos(n) * s * 0.5 - 0.01, i + Math.sin(n) * l * 0.5 - 0.01, 0.02, 0.02), t.fillRect(e + Math.cos(n) * s * 0.75 - 0.01, i + Math.sin(n) * l * 0.75 - 0.01, 0.02, 0.02);
                    for (n = (180 * THREE.Math.DEG2RAD) / 2, o = u = 0; u <= 6; o = u += 1) (n += (180 * THREE.Math.DEG2RAD) / 3), (c = Math.cos(n) * s - 0.01), (I = Math.sin(n) * l - 0.01), o > 0 && (t.fillRect(e + 0.5 * (d + c) - 0.01, i + 0.5 * (p + I) - 0.01, 0.02, 0.02), t.fillRect(e + 0.375 * (d + c) - 0.01, i + 0.375 * (p + I) - 0.01, 0.02, 0.02), t.fillRect(e + 0.25 * (d + c) - 0.01, i + 0.25 * (p + I) - 0.01, 0.02, 0.02)), (d = c), (p = I);
                }),
                (e.prototype.createDeco = function () {
                    var t, e, i, s, l;
                    return (t = document.createElement('canvas')), (t.width = 512), (t.height = 416), (e = t.getContext('2d')), (e.strokeStyle = 'hsla(200,70%,70%,.15)'), e.translate(t.width / 2, t.height / 2), e.scale(t.width / 4, t.height / 4), (e.lineWidth = 4 / t.width), (s = (1 / Math.cos((180 * THREE.Math.DEG2RAD) / 6)) * 0.95), (l = (1 / Math.cos((180 * THREE.Math.DEG2RAD) / 6)) * 1.1), this.drawHex(e, -1, -2, s, l), this.drawHex(e, 1, -2, s, l), this.drawHex(e, -2, 0, s, l), this.drawHex(e, 0, 0, s, l), this.drawHex(e, 2, 0, s, l), this.drawHex(e, -1, 2, s, l), this.drawHex(e, 1, 2, s, l), (i = t.toDataURL()), (document.getElementById('overlay').style['background-image'] = 'url(' + i + ')'), (document.getElementById('overlay').style['background-position'] = 'center');
                }),
                e
            );
        })()),
        null == (base = Array.prototype).shuffle &&
            (base.shuffle = function () {
                var t, e, i, s, l;
                if (this.length > 1) for (t = i = s = this.length - 1; s <= 1 ? i <= 1 : i >= 1; t = s <= 1 ? ++i : --i) (e = Math.floor(Math.random() * (t + 1))), (l = [this[e], this[t]]), (this[t] = l[0]), (this[e] = l[1]);
                return this;
            }),
        (indexOf =
            [].indexOf ||
            function (t) {
                for (var e = 0, i = this.length; e < i; e++) if (e in this && this[e] === t) return e;
                return -1;
            }),
        (this.Settings = (function () {
            function t(t) {
                var e, i, s, l, n, a;
                (this.l1110 = t), (this.parameters = { antialias: { name: 'Antialiasing', value: !0, level: 10, filter: 'default,app' }, fullres: { name: 'Full Resolution', value: !0, level: 8, filter: 'default,app' }, galaxies: { name: 'Galaxies', value: !0, level: 9, filter: 'default,app,mobile' }, nebulae: { name: 'Nebulae', value: !0, level: 7, filter: 'default,app' }, explolight: { name: 'Explosions Lights', value: !0, level: 7, filter: 'default,app,mobile' }, moons: { name: 'Moons', value: !0, level: 6, filter: 'default,app' }, planets: { name: 'Planets', value: !0, level: 5, filter: 'default,app' }, background: { name: 'Background', value: !0, level: 4, filter: 'default,app' }, snow: { name: 'Snow', value: !1, level: 4 }, gravity_field: { name: 'Display gravity field', value: !0, filter: 'default,app' }, colorblind: { name: 'High Contrast', value: !1, filter: 'default,app,mobile' }, buttons_disabled: { name: 'Button clicks disabled', value: !1, filter: 'default,app' }, shake: { name: 'Camera shake', value: !0, skipauto: !0, filter: 'default,app,mobile' }, gamepad_control: { name: 'Gamepad support', value: !1, filter: 'app,mobile' }, automatic_screenshots: { name: 'Automatic screenshots', value: !1, filter: 'app' }, sounds: { name: 'Sound Effects', value: 1, skipauto: !0, type: 'range', min: 0, max: 2, l0Ill: 0.02, filter: 'default,app,mobile' }, music: { name: 'Music', value: 1, skipauto: !0, type: 'range', min: 0, max: 2, l0Ill: 0.02, filter: 'default,app,mobile' }, language: { name: 'Language', value: !1, type: 'select', options: ['en', 'fr', 'de', 'es', 'pl', 'ru', 'hu', 'ja', 'pt', 'hr', 'tr', 'cs', 'sk', 'id', 'nl', 'it', 'zh', 'zh-tw', 'da', 'ar', 'sv', 'ro', 'lt', 'az', 'th', 'he', 'ko', 'fa', 'el'], filter: 'default,app,mobile' }, joystick_thrust: { name: 'Joystick thrust', value: !1, filter: 'mobile' }, auto_rcs: { name: 'Auto RCS', value: !1, filter: 'mobile' } }), (this.level = 10), (this.auto = JSON.parse(localStorage.getItem('auto') || !0)), (this.forced = {});
                for (a in this.parameters) localStorage.getItem(a) && ((this.parameters[a].stored = !0), (this.parameters[a].value = JSON.parse(localStorage.getItem(a))), 'range' === this.parameters[a].type && (!0 === this.parameters[a].value ? (this.parameters[a].value = 1) : !1 === this.parameters[a].value && (this.parameters[a].value = 0)));
                this.parameters.language.value || ((n = (navigator.language || navigator.userLanguage || 'en').substr(0, 2)), navigator.languages && navigator.languages[0] && (n = navigator.languages[0].substr(0, 2)), indexOf.call(this.parameters.language.options, n) < 0 && (n = 'en'), (this.first_launch = !0), this.set('language', n)), this.auto && ((i = document.createElement('canvas')), (i.width = i.height = 2), (s = i.getContext('2d')), (l = window.devicePixelRatio || 1), (e = s.webkitBackingStorePixelRatio || s.mozBackingStorePixelRatio || s.msBackingStorePixelRatio || s.oBackingStorePixelRatio || s.backingStorePixelRatio || 1), 1 !== l / e && this.set('antialias', !1)), this.first_launch && this.set('joystick_thrust', !0);
            }
            return (
                (t.prototype.init = function () {
                    if (((this.filter = 'default'), this.l1110.is_app && ((this.filter = 'app'), this.parameters.gamepad_control.stored || (this.parameters.gamepad_control.value = !0)), this.l1110.is_mobile_app && ((this.filter = 'mobile'), this.set('antialias', !1), this.set('fullres', !0), !this.parameters.gamepad_control.stored))) return (this.parameters.gamepad_control.value = !1);
                }),
                (t.prototype.isHidden = function (t) {
                    var e;
                    return null != (e = this.parameters[t]) && null != e.filter && e.filter.indexOf(this.filter) < 0;
                }),
                (t.prototype.remove = function (t) {
                    return delete this.parameters[t];
                }),
                (t.prototype.check = function (t) {
                    var e;
                    return null != (e = this.forced[t] || this.parameters[t]) && e.value;
                }),
                (t.prototype.getVolume = function (t) {
                    var e;
                    return (e = this.parameters[t]), null == e ? 0 : 'boolean' == typeof e.value ? (e.value ? 1 : 0) : e.value;
                }),
                (t.prototype.set = function (t, e) {
                    if (this.parameters[t].value !== e) return (this.parameters[t].value = e), this.save(t), this.l1110.propertyChanged(t, e);
                }),
                (t.prototype.get = function (t) {
                    var e;
                    return null != (e = this.parameters[t]) && e.value;
                }),
                (t.prototype.save = function (t) {
                    var e;
                    if ((null == t && (t = null), null != t)) return localStorage.setItem(t, JSON.stringify(this.parameters[t].value));
                    for (e in this.parameters) localStorage.setItem(e, JSON.stringify(this.parameters[e].value));
                    return localStorage.setItem('auto', JSON.stringify(this.auto));
                }),
                t
            );
        })()),
        (this.Il01O = (function () {
            function t(t, e) {
                (this.size = null != t ? t : 128), (this.custom = null != e ? e : {}), (this.icon = this.custom.badge || 'pirate'), (this.laser = this.custom.laser || 'simple'), (this.finish = this.custom.finish || 'gold'), (this.hue = this.custom.hue || 0), this.IO11O();
            }
            return (
                (t.prototype.toImage = function () {
                    return (this.image = new Image()), (this.image.src = this.canvas.toDataURL()), this.image;
                }),
                (t.prototype.updateImage = function () {
                    if (null != this.image) return (this.image.src = this.canvas.toDataURL());
                }),
                (t.prototype.IO11O = function () {
                    var t, e, i, s, l;
                    if ((null == this.canvas && (this.canvas = document.createElement('canvas')), (l = this.canvas.width = 2 * this.size), (s = this.canvas.height = this.size), (e = this.canvas.getContext('2d')), e.clearRect(0, 0, this.canvas.width, this.canvas.height), 'blank' !== this.custom.badge)) return (e.fillStyle = '#000'), e.beginPath(), e.arc(l / 2, s / 2, s / 2, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.fill(), e.beginPath(), e.moveTo(0.05 * l, 0.25 * s), e.lineTo(0.05 * l, 0.75 * s), e.lineTo(l / 2, 0.9 * s), e.lineTo(0.95 * l, 0.75 * s), e.lineTo(0.95 * l, 0.25 * s), e.lineTo(l / 2, 0.1 * s), e.closePath(), e.fill(), (e.lineWidth = 0.07 * s), (e.globalCompositeOperation = 'destination-out'), (e.strokeStyle = '#000'), e.beginPath(), e.arc(l / 2, s / 2, 0.6 * s, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.stroke(), this.drawMaterial(e, l, s), this.drawIcon(e, l, s), this.drawLaser(e, l, s), (e.globalCompositeOperation = 'source-atop'), e.save(), e.translate(l / 2, s / 2), e.scale(l / 2, s / 2), (i = e.createRadialGradient(0, 0, 0, 0, 0, 1)), i.addColorStop(0, 'rgba(255,255,255,.2)'), i.addColorStop(1, 'rgba(0,0,0,.2)'), (e.fillStyle = i), e.fillRect(-1, -1, 2, 2), e.restore(), (e.globalCompositeOperation = 'source-over'), (i = e.createRadialGradient(l / 2 - 0.25 * s, s / 2 - 0.25 * s, 0, l / 2, s / 2, 0.45 * s)), i.addColorStop(0, 'rgba(0,0,0,0)'), i.addColorStop(0.5, 'rgba(0,0,0,0)'), i.addColorStop(1, 'rgba(0,0,0,.5)'), (e.fillStyle = i), e.beginPath(), e.arc(l / 2, s / 2, 0.45 * s, 0, 180 * THREE.Math.DEG2RAD * 2, !0), e.fill(), (e.globalCompositeOperation = 'destination-over'), e.translate(l / 2, s / 2), e.scale(l / 2, s / 2), (i = e.createRadialGradient(0, 0, 0, 0, 0, 1)), i.addColorStop(0.7, 'rgba(0,0,0,1)'), i.addColorStop(1, 'rgba(0,0,0,0)'), (e.fillStyle = i), e.fillRect(-1, -1, 2, 2), this.resize ? ((t = document.createElement('canvas')), (t.width = this.size), (t.height = this.size / 2), t.getContext('2d').drawImage(this.canvas, 0, 0, this.size, this.size / 2), (this.canvas = t)) : void 0;
                }),
                (t.prototype.drawMaterial = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c;
                    switch (this.finish) {
                        case 'alloy':
                            (s = t.createLinearGradient(0, 0, 0, i)), s.addColorStop(0, '#68A'), s.addColorStop(0.5, '#FFF'), s.addColorStop(0.5, '#765'), s.addColorStop(1, '#CCC');
                            break;
                        case 'titanium':
                            (s = t.createLinearGradient(0, 0, 0, i)), s.addColorStop(0, '#444'), s.addColorStop(0.5, '#AAA'), s.addColorStop(0.5, '#444'), s.addColorStop(1, '#111');
                            break;
                        case 'gold':
                            (s = t.createLinearGradient(0, 0, 0, i)), s.addColorStop(0, 'hsl(40,100%,50%)'), s.addColorStop(0.5, 'hsl(40,100%,80%)'), s.addColorStop(0.5, 'hsl(20,100%,30%)'), s.addColorStop(1, 'hsl(40,100%,50%)');
                            break;
                        case 'carbon':
                            for (s = t.createLinearGradient(0, 0, 0, i), h = Math.min(10, this.size / 10), n = a = 0, u = h - 1; a <= u; n = a += 1) s.addColorStop(n / h, '#000'), s.addColorStop((n + 1) / h, '#888');
                            for (l = t.createLinearGradient(0, 0, 0, i), l.addColorStop(0, '#333'), l.addColorStop(0.1, '#888'), n = o = 0, d = h - 1; o <= d; n = o += 1) l.addColorStop((n + 0.5) / h, '#000'), l.addColorStop(Math.min(1, (n + 1.5) / h), '#888');
                            break;
                        default:
                            (s = t.createLinearGradient(0, 0, 0, i)), s.addColorStop(0, '#EEE'), s.addColorStop(1, '#666');
                    }
                    if (((t.globalCompositeOperation = 'source-atop'), (t.fillStyle = s), 'carbon' === this.finish)) {
                        for (n = r = 0, c = 4 * h - 1; r <= c; n = r += 1) (t.fillStyle = n % 2 == 0 ? s : l), t.fillRect((n * e) / (4 * h), 0, e / (4 * h), i);
                        (s = t.createLinearGradient(0, 0, 0, i)), s.addColorStop(0.3, 'rgba(0,0,0,.5)'), s.addColorStop(0.5, 'rgba(0,0,0,0)'), s.addColorStop(0.7, 'rgba(0,0,0,.5)'), (t.fillStyle = s), t.fillRect(0, 0, e, i);
                    } else (t.fillStyle = s), t.fillRect(0, 0, e, i);
                    return (t.globalCompositeOperation = 'source-over');
                }),
                (t.prototype.drawLaser = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p, I;
                    for (t.save(), t.translate(0.12 * e, i / 2), I = ll000.getShape(parseInt(this.laser)), l = 0, a = I.length; l < a; l++) {
                        for (p = I[l], t.beginPath(), s = t.createRadialGradient(0, 0, 0, 0, 0, i / 6), s.addColorStop(0, 'hsl(50,100%,100%)'), s.addColorStop(1, 'hsl(50,80%,40%)'), t.fillStyle = s, t.strokeStyle = 'rgba(0,0,0,.8)', t.lineWidth = i / 24, n = 0, o = p.length; n < o; n++) (c = p[n]), t.lineTo((c[1] * i) / 10, (c[0] * i) / 9);
                        t.closePath(), t.stroke(), t.fill();
                    }
                    for (t.restore(), t.save(), t.translate(0.88 * e, i / 2), I = ll000.getShape(parseInt(this.laser)), u = 0, r = I.length; u < r; u++) {
                        for (p = I[u], t.beginPath(), s = t.createRadialGradient(0, 0, 0, 0, 0, i / 6), s.addColorStop(0, 'hsl(50,100%,100%)'), s.addColorStop(1, 'hsl(50,80%,40%)'), t.fillStyle = s, t.strokeStyle = 'rgba(0,0,0,.8)', t.lineWidth = i / 24, d = 0, h = p.length; d < h; d++) (c = p[d]), t.lineTo((c[1] * i) / 10, (c[0] * i) / 9);
                        t.closePath(), t.stroke(), t.fill();
                    }
                    return t.restore();
                }),
                (t.prototype.drawIcon = function (t, e, i) {
                    var s, l, n, a, o, r, h, u, d, c, p;
                    switch (this.icon) {
                        case 'gamepedia':
                            this.icon = 'https://starblast.io/ecp/gamepedia.png';
                            break;
                        case 'discord':
                            this.icon = 'https://starblast.io/ecp/discord.png';
                            break;
                        case 'twitch':
                            this.icon = 'https://starblast.io/ecp/twitch.png';
                            break;
                        case 'medic':
                            this.icon = 'https://starblast.io/ecp/medic.jpg';
                            break;
                        case 'halo':
                            this.icon = 'https://starblast.io/ecp/halo.png';
                            break;
                        case 'nwac':
                            this.icon = 'https://starblast.io/ecp/nwac.png';
                            break;
                        case 'unge':
                            this.icon = 'https://starblast.io/ecp/unge.png';
                            break;
                        case 'csf':
                            this.icon = 'https://starblast.io/ecp/csf.png';
                            break;
                        case 'pmf':
                            this.icon = 'https://starblast.io/ecp/pmf.png';
                            break;
                        case 'seasonal':
                            this.icon = 'https://starblast.io/ecp/seasonal.png';
                    }
                    if (((d = Math.round(i / 2.2)), null != this.icon && this.icon.startsWith('http'))) {
                        if (
                            ((this.icon = this.icon.replace('http:', 'https:')),
                            this.icon.startsWith('https://starblast.io/') || this.icon.startsWith('https://starblast.data.neuronality.com/') || (this.icon = 'https://starblast.io/ecp/gamepedia.png'),
                            null == this.icon_src &&
                                ((this.icon_src = new Image()),
                                (this.icon_src.crossOrigin = 'Anonymous'),
                                (this.icon_src.src = this.icon),
                                (this.icon_src.onload = (function (t) {
                                    return function () {
                                        return t.IO11O(), t.updateImage();
                                    };
                                })(this))),
                            this.icon_src.complete)
                        )
                            try {
                                (s = document.createElement('canvas')), (s.width = i), (s.height = i), (l = s.getContext('2d')), (l.fillStyle = '#FFF'), l.beginPath(), l.arc(i / 2, i / 2, 0.45 * i, 0, 180 * THREE.Math.DEG2RAD * 2, !0), l.fill(), (l.globalCompositeOperation = 'source-in'), l.drawImage(this.icon_src, 0.05 * i, 0.05 * i, 0.9 * i, 0.9 * i), t.drawImage(s, e / 2 - 0.5 * i, i / 2 - 0.5 * i, i, i);
                            } catch (t) {
                                t;
                            }
                    } else {
                        switch (((t.font = d + 'pt SBGlyphs'), (t.textBaseline = 'middle'), (t.textAlign = 'center'), this.icon)) {
                            case 'reddit':
                                t.fillStyle = '#246';
                                break;
                            case 'star':
                                t.fillStyle = 'hsl(200,50%,20%)';
                                break;
                            case 'youtube':
                                t.fillStyle = '#B11';
                                break;
                            case 'paw':
                                t.fillStyle = '#DA5';
                                break;
                            case 'pirate':
                            case 'invader':
                            case 'empire':
                            case 'alliance':
                            case 'sdf':
                            case 'medic':
                                t.fillStyle = '#111';
                                break;
                            default:
                                t.fillStyle = 'hsl(200,50%,20%)';
                        }
                        switch ((t.beginPath(), t.arc(e / 2, i / 2, 0.45 * i, 0, 180 * THREE.Math.DEG2RAD * 2, !0), t.fill(), this.icon)) {
                            case 'reddit':
                                (t.fillStyle = '#FFF'), t.fillText('~', e / 2, i / 2);
                                break;
                            case 'youtube':
                                (t.fillStyle = '#FFF'), t.fillText('Z', e / 2, i / 2);
                                break;
                            case 'pirate':
                                (t.font = d + 'pt SBGlyphs'), (t.fillStyle = '#FFF'), t.fillText('[', e / 2, i / 2);
                                break;
                            case 'sdf':
                                (t.font = d + 'pt SBGlyphs'), (t.fillStyle = '#FFF'), t.fillText('Y', e / 2, i / 2);
                                break;
                            case 'paw':
                                (t.fillStyle = '#000'), t.fillText('V', e / 2, i / 2);
                                break;
                            case 'alliance':
                                (t.fillStyle = '#F00'), t.fillText('X', e / 2, i / 2);
                                break;
                            case 'empire':
                                (t.fillStyle = '#FFF'), t.fillText('R', e / 2, i / 2);
                                break;
                            case 'invader':
                                for (
                                    u = [
                                        [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0],
                                        [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],
                                        [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
                                        [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0],
                                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                                        [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1],
                                        [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1],
                                        [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0],
                                    ],
                                        t.fillStyle = 'hsl(120,100%,50%)',
                                        n = (0.7 * i) / 11,
                                        a = r = 0;
                                    r <= 10;
                                    a = r += 1
                                )
                                    for (o = h = 0; h <= 7; o = h += 1) (c = e / 2 + n * (a - 5)), (p = i / 2 + n * (o - 4)), 1 === u[o][a] && t.fillRect(c - 0.4 * n, p - 0.4 * n, 0.8 * n, 0.8 * n);
                                break;
                            default:
                                (t.fillStyle = 'hsl(50,100%,70%)'), t.fillText('S', e / 2, i / 2);
                        }
                    }
                }),
                (t.prototype.drawStar = function (t, e, i, s, l) {
                    var n, a, o, r;
                    for (t.beginPath(), n = (-180 * THREE.Math.DEG2RAD) / 2, o = 0; o <= 4; o += 1) (a = Math.cos(n)), (r = Math.sin(n)), t.lineTo(e + a * l, i + r * l), (n += (180 * THREE.Math.DEG2RAD) / 5), (a = Math.cos(n)), (r = Math.sin(n)), t.lineTo(e + a * s, i + r * s), (n += (180 * THREE.Math.DEG2RAD) / 5);
                    return t.closePath(), t.fill();
                }),
                (t.prototype.drawWing = function (t, e, i, s, l, n) {
                    var a, o, r, h, u, d, c, p, I;
                    for (null == n && (n = '#FFF'), t.save(), t.translate(e / 2, i / 2), t.strokeStyle = '#000', t.fillStyle = n, t.lineWidth = 0.03 * i, t.lineCap = 'round', t.beginPath(), a = o = 0, d = s.length - 1; o <= d; a = o += 1) t.lineTo(s[a], l[a]);
                    for (t.closePath(), t.fill(), a = r = 0, c = s.length - 1; r <= c; a = r += 1) t.beginPath(), t.moveTo(s[a], l[a]), t.lineTo(s[(a + 1) % s.length], l[(a + 1) % s.length]), t.stroke();
                    for (t.beginPath(), a = h = 0, p = s.length - 1; h <= p; a = h += 1) t.lineTo(-s[a], l[a]);
                    for (t.closePath(), t.fill(), a = u = 0, I = s.length - 1; u <= I; a = u += 1) t.beginPath(), t.moveTo(-s[a], l[a]), t.lineTo(-s[(a + 1) % s.length], l[(a + 1) % s.length]), t.stroke();
                    return t.restore();
                }),
                (t.table = []),
                (t.I110l = function (e, i, s, l, n) {
                    var a, o;
                    return null == n && (n = 0), (o = e + i + s + l + n), t.table[o] || ((a = new t(l, { badge: e, laser: i, finish: s, hue: n }).toImage()), (t.table[o] = a)), t.table[o];
                }),
                (t.getRandomImage = function (e) {
                    var i, s, l;
                    return (i = ['star', 'paw', 'pirate', 'reddit', 'invader', 'youtube'][Math.floor(6 * Math.random())]), (s = ['zinc', 'gold', 'alloy', 'carbon', 'titanium'][Math.floor(5 * Math.random())]), (l = ['0', '1', '2', '3'][Math.floor(4 * Math.random())]), t.I110l(i, l, s, e);
                }),
                (t.test = function () {
                    var e, i, s, l, n, a, o, r, h, u, d, c;
                    for (u = ['zinc', 'gold', 'alloy', 'carbon', 'titanium'], s = 0, a = u.length; s < a; s++) for (e = u[s], d = ['star', 'paw', 'pirate', 'reddit', 'invader', 'youtube'], l = 0, o = d.length; l < o; l++) for (i = d[l], c = ['simple'], h = 0, r = c.length; h < r; h++) (n = c[h]), document.body.appendChild(new t(128, { badge: i, laser: n, finish: e }).canvas);
                }),
                t
            );
        })()),
        (this.l011O = (function () {
            function t(e) {
                var i, s, l, n;
                if (((this.l1110 = e), (this.key = localStorage.getItem('ECPKey')), null != this.key && this.key.length > 11 && (this.key = this.key.substring(this.key.length - 11, this.key.length)), (this.verified = localStorage.getItem('ECPVerified')), (this.custom = { badge: localStorage.getItem('badge') || 'star', finish: localStorage.getItem('finish') || 'alloy', laser: localStorage.getItem('laser') || '1' }), 'halloween' === this.custom.badge && ((this.custom.badge = 'seasonal'), localStorage.setItem('badge', 'seasonal')), 'fullcolor' === this.custom.finish && (this.custom.finish = 'alloy'), (this.additional_badges = []), null != localStorage.getItem('additional_badges'))) {
                    try {
                        this.additional_badges = JSON.parse(localStorage.getItem('additional_badges'));
                    } catch (t) {
                        t;
                    }
                    for (n = this.additional_badges, s = 0, l = n.length; s < l; s++) (i = n[s]), t.options.badge[i.name] || (t.options.badge[i.url] = i.name);
                }
                this.key || 'yes' !== this.verified || this.Ol1ll('no');
            }
            return (
                (t.prototype.OI1l0 = function () {
                    var t;
                    return (
                        (t = 'xxxxx-xxxxx'.replace(/x/g, function () {
                            return ((16 * Math.random()) | 0).toString(16);
                        })),
                        this.l0111(t)
                    );
                }),
                (t.prototype.l0111 = function (t) {
                    if (t !== this.key) return (this.key = t), null != this.key && this.key.length > 11 && (this.key = this.key.substring(this.key.length - 11, this.key.length)), (this.verified = 'no'), localStorage.setItem('ECPKey', this.key), localStorage.setItem('ECPVerified', 'no');
                }),
                (t.prototype.lO010 = function (t) {
                    return /([0-9a-f]{5})-([0-9a-f]{5})/.test(t);
                }),
                (t.prototype.Ol1ll = function (t) {
                    return (this.verified = t), localStorage.setItem('ECPVerified', this.verified);
                }),
                (t.prototype.removeKey = function () {
                    return localStorage.removeItem('ECPKey'), localStorage.removeItem('ECPVerified'), this.l1110.l00OO.reloadGame();
                }),
                (t.prototype.Il1lI = function () {
                    return 'yes' === this.verified;
                }),
                (t.prototype.O00Ol = function (t, e, i) {
                    var s, l, n, a;
                    if ((this.l1110.l00OO.I1111 ? e && (null != t && this.l0111(t), this.Ol1ll('yes'), (this.verified = 'yes')) : t === this.key && this.Ol1ll(e ? 'yes' : 'no'), e && null != i)) {
                        for (a = [], l = 0, n = i.length; l < n; l++) (s = i[l]), a.push(this.installCustomBadge(s.name, s.url));
                        return a;
                    }
                }),
                (t.prototype.verify = function (t) {
                    return (this.OIOI1 = new IlOII(
                        this,
                        (function (e) {
                            return function (i, s) {
                                return (e.region = s), e.verifyServer(i, t);
                            };
                        })(this)
                    ));
                }),
                (t.prototype.verifyServer = function (t, e) {
                    var i;
                    return (
                        (i = WSS.create(t)),
                        (i.onmessage = (function (t) {
                            return function (s) {
                                var l, n, a, o;
                                if (((s = JSON.parse(s.data)), t.Ol1ll(s.verified), (t.additional_badges = []), localStorage.setItem('additional_badges', JSON.stringify(t.additional_badges)), t.Il1lI() && null != s.custom_badges)) for (o = s.custom_badges, n = 0, a = o.length; n < a; n++) (l = o[n]), t.installCustomBadge(l.name, l.url);
                                return e(t.Il1lI()), i.close();
                            };
                        })(this)),
                        (i.onopen = (function (t) {
                            return function () {
                                return i.send(JSON.stringify({ name: 'verify_key', data: { key: t.key } }));
                            };
                        })(this))
                    );
                }),
                (t.prototype.installCustomBadge = function (e, i) {
                    var s, l, n, a;
                    for (a = this.additional_badges, l = 0, n = a.length; l < n; l++) if (((s = a[l]), s.url === i)) return;
                    return this.additional_badges.push({ name: e, url: i }), localStorage.setItem('additional_badges', JSON.stringify(this.additional_badges)), (t.options.badge[i] = e);
                }),
                (t.options = { badge: { star: 'Star', reddit: 'Reddit', pirate: 'Pirate', csf: 'Centauri Space Force', pmf: 'Proxima Mining Front', nwac: 'New World Army Citizens', unge: 'United Nations Green Eagles', halo: 'Halo Corsairs', youtube: 'Youtube', twitch: 'Twitch', invader: 'Invader', empire: 'Galactic Empire', alliance: 'Rebel Alliance', sdf: 'Soloist Defence Force', paw: 'Paw', gamepedia: 'Gamepedia', discord: 'Discord', medic: 'Medic', blank: 'Blank', seasonal: 'Seasonal' }, finish: { zinc: 'Zinc', alloy: 'Alloy', gold: 'Gold', titanium: 'Titanium', carbon: 'Carbon' }, laser: { 0: 'Single', 1: 'Double', 2: 'Lightning', 3: 'Digital' } }),
                t
            );
        })()),
        (this.lI0l1 = (function () {
            function t(t) {
                this.l1110 = t;
            }
            return (
                (t.prototype.lOO11 = function (t, e, i, s) {
                    var l, n, a, o, r, h, u, d, c, p, I, O, m, f;
                    for (i /= 2, n = t.getContext('2d'), n.save(), n.clearRect(0, 0, t.width, t.height), n.translate(t.width / 2, t.height / 2), n.scale(t.width / 2, t.height / 2), n.fillStyle = '#FFF', I = this.l1110.l00OO.installed_modes, r = 0, u = I.length; r < u; r++) (d = I[r]), d.id === s && (c = d);
                    for (l = new l1ll1(e, i, c), f = {}, a = h = -i, O = i - 1; h <= O; a = h += 1) for (o = p = -i, m = i - 1; p <= m; o = p += 1) l.get(a, o, f), f.on && (n.beginPath(), n.arc(f.x / i, -f.y / i, f.size / i, 0, 180 * THREE.Math.DEG2RAD * 2, !0), n.fill());
                    return null != c.drawRadarInfo && ((c.options.map_id = e), (c.options.map_size = i), c.drawRadarInfo(n)), n.restore();
                }),
                t
            );
        })()),
        (this.l0IOO = (function () {
            function t() {
                var t, e, i;
                for (this.IllO1 = [-1011393833, -976314432, 839460795, -421701588, 1314828729, -394527967, -329686549, 401033611, -398659356, 1980082871, 546305162, 1623261005, 892242836, 881268343, 546305156, 63201784, 1507945471, 2096522726, 774615138, -643097469, 439299200, 808909985, -677324264, -676012277, 1330256882, 1677439667, -662944360, 426854107, 1077601070, 956698694, -1844041477, -1844238272, -1893741710, 776581756, -1893544903, 874187636, 1227730819, 589969921, -1329607567, 882345148, -1802742346, 1563250459, 88051913, 497129727, 1586759904, -133013522, -1828736344, -931446683, -438019612, -463320716, -462795919, 1046531205], this.min_length = 3, this.max_length = 5, this.OIllI = [4053, 4054, 4055, 4056, 21325, 21328, 5835], t = e = 0, i = this.OIllI.length - 1; 0 <= i ? e <= i : e >= i; t = 0 <= i ? ++e : --e) this.OIllI[t] = String.fromCharCode(this.OIllI[t]);
            }
            return (
                (t.prototype.hash = function (t) {
                    var e, i, s, l;
                    for (l = 0, e = i = 0, s = t.length - 1; 0 <= s ? i <= s : i >= s; e = 0 <= s ? ++i : --i) l = 4294967295 & (t.charCodeAt(e) + (l << 6) + (l << 16) - l);
                    return l;
                }),
                (t.prototype.lO0OI = function (t) {
                    var e;
                    return this.check(t) ? t : 'undefined' != typeof IOOIO && null !== IOOIO ? ((e = Math.abs(this.hash(t)) % IOOIO.length), IOOIO[e].toUpperCase()) : '';
                }),
                (t.prototype.check = function (t) {
                    var e, i, s, l, n, a, o, r, h, u, d, c, p, I;
                    for (u = this.OIllI, n = 0, r = u.length; n < r; n++) if (((e = u[n]), t.indexOf(e) >= 0)) return !1;
                    if (t.match(/[A-Fa-f0-9]{5}-[A-Fa-f0-9]{5}/)) return !1;
                    for (i = a = 0, d = t.length - 1; a <= d; i = a += 1) if (55349 === t.charCodeAt(i)) return !1;
                    for (t = t.replace(/[^a-zA-Z0-9]/g, ''), t = t.toLowerCase(), t = t.replace(/3/g, 'e'), t = t.replace(/€/g, 'e'), t = t.replace(/4/g, 'a'), t = t.replace(/1/g, 'i'), t = t.replace(/2/g, 'z'), t = t.replace(/0/g, 'o'), t = t.replace(/5/g, 's'), t = t.replace(/6/g, 'g'), t = t.replace(/7/g, 't'), t = t.replace(/9/g, 'g'), t = t.replace(/!/g, 'i'), t = t.replace(/İ/g, 'i'), s = o = 0, c = t.length - this.min_length; o <= c; s = o += 1) for (l = h = this.min_length, p = Math.min(this.max_length, t.length - s); h <= p; l = h += 1) if (((I = t.substring(s, s + l)), this.IllO1.indexOf(this.hash(I)) >= 0)) return !1;
                    return !0;
                }),
                t
            );
        })()),
        (this.IOOIO = ['Arkady Darell', 'Bel Riose', 'Cleon I', 'Dors Venabili', 'Ebling Mis', 'Gaal Dornick', 'Hari Seldon', 'Hober Mallow', 'Janov Pelorat', 'The Mule', 'Preem Palver', 'R.D. Olivaw', 'R.G. Reventlov', 'Raych Seldon', 'Salvor Hardin', 'Wanda Seldon', 'Yugo Amaryl', 'James T. Kirk', 'Leonard McCoy', 'Hikaru Sulu', 'Montgomery Scott', 'Spock', 'Picard', 'Christine Chapel', 'Nyota Uhura', 'Pavel Chekov', 'Ford', 'Zaphod', 'Marvin', 'Anakin', 'Luke', 'Leia', 'Ackbar', 'Tarkin', 'Jabba', 'Rey', 'Kylo', 'Han', 'Vader', 'D.A.R.Y.L.', 'HAL 9000', 'Lyta Alexander', 'Stephen Franklin', 'Lennier']),
        (this.WSS = (function () {
            function t() {}
            return (
                (t.create = function (t) {
                    var e, i, s;
                    return (s = t.split(':')), (e = s[0].replace(/\./g, '-') + '.starblast.io'), (i = s[1]), new WebSocket('wss://' + e + ':' + i);
                }),
                t
            );
        })()),
        (this.l11IO = (function () {
            function t() {
                (this.ships = []), (this.ships_by_code = []);
            }
            return (
                (t.prototype.clear = function () {
                    return (this.ships = []), (this.ships_by_code = []);
                }),
                (t.prototype.add = function (t) {
                    return this.ships.push(t), (this.ships_by_code[100 * t.level + t.model] = t);
                }),
                (t.prototype.getDefaultShip = function () {
                    return this.ships[0];
                }),
                (t.prototype.l100l = function () {
                    return this.ships[Math.floor(Math.random() * this.ships.length)];
                }),
                t
            );
        })()),
        (OlII0 = new this.l11IO()),
        (this.BattleShips = (function () {
            function t() {
                (this.ships = []), (this.ships_by_code = []);
            }
            return (
                (t.prototype.add = function (t) {
                    return this.ships.push(t), (this.ships_by_code[100 * t.level + t.model] = t);
                }),
                (t.prototype.l100l = function () {
                    return this.ships[Math.floor(Math.random() * this.ships.length)];
                }),
                t
            );
        })()),
        (BATTLE_SHIPS = new this.BattleShips()),
        OlII0.add({ name: 'Fly', level: 1, model: 1, size: 1.05, specs: { shield: { capacity: [75, 100], reload: [2, 3] }, generator: { capacity: [40, 60], reload: [10, 15] }, ship: { mass: 60, speed: [125, 145], rotation: [110, 130], acceleration: [100, 120] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-65, -60, -50, -20, 10, 30, 55, 75, 60] }, width: [0, 8, 10, 30, 25, 30, 18, 15, 0], height: [0, 6, 8, 12, 20, 20, 18, 15, 0], propeller: !0, texture: [4, 63, 10, 1, 1, 1, 12, 17] }, II1lI: { section_segments: 12, offset: { x: 0, y: -0, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-15, 0, 20, 30, 60] }, width: [0, 13, 17, 10, 5], height: [0, 18, 25, 18, 5], propeller: !1, texture: [7, 9, 9, 4, 4] }, cannon: { section_segments: 6, offset: { x: 0, y: -15, z: -10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-40, -50, -20, 0, 20, 30], z: [0, 0, 0, 0, 0, 20] }, width: [0, 5, 8, 11, 7, 0], height: [0, 5, 8, 11, 10, 0], angle: 0, laser: { damage: [5, 6], rate: 4, type: 1, speed: [160, 180], number: 1, error: 2.5 }, propeller: !1, texture: [3, 3, 10, 3] } }, wings: { main: { length: [60, 20], width: [100, 50, 40], angle: [-10, 10], position: [0, 20, 10], doubleside: !0, offset: { x: 0, y: 10, z: 5 }, bump: { position: 30, size: 20 }, texture: [11, 63] } } }),
        OlII0.add({ name: 'Delta-Fighter', level: 2, model: 1, size: 1.3, specs: { shield: { capacity: [100, 150], reload: [3, 4] }, generator: { capacity: [50, 80], reload: [15, 25] }, ship: { mass: 80, speed: [110, 135], rotation: [80, 100], acceleration: [110, 120] } }, bodies: { II1lI: { angle: 0, section_segments: 8, offset: { x: 0, y: -20, z: 12 }, position: { x: [0, 0, 0, 0, 0], y: [-20, -10, 0, 10, 20], z: [-7, -3, 0, 5, 3] }, width: [3, 12, 18, 16, 3], height: [3, 6, 8, 6, 3], texture: [9] }, cockpit2: { angle: 0, section_segments: 8, offset: { x: 0, y: -10, z: 12 }, position: { x: [0, 0, 0, 0], y: [-10, 0, 10, 40], z: [0, 0, 5, 3] }, width: [5, 18, 16, 3], height: [5, 12, 10, 5], texture: [9, 2, 11] }, propulsor: { section_segments: 8, offset: { x: 0, y: 35, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [0, 10, 20, 30, 40, 30], z: [0, 0, 0, 0, 0] }, width: [5, 15, 10, 10, 10, 0], height: [15, 15, 15, 15, 10, 0], texture: [63, 63, 4, 5, 12], propeller: !0 }, bumps: { section_segments: 8, offset: { x: 40, y: 40, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-40, -10, 0, 10, 40, 45], z: [0, 0, 0, 0, 0, 0] }, width: [0, 5, 8, 12, 5, 0], height: [0, 25, 28, 22, 15, 0], texture: [63] }, gunsupport: { section_segments: 8, offset: { x: 30, y: -40, z: 5 }, position: { x: [-30, -20, -10, 0, 0, 0], y: [-20, -15, -5, 10, 40, 55], z: [-20, -20, -10, 0, 0, 0] }, width: [3, 5, 8, 4, 5, 0], height: [3, 5, 8, 12, 15, 0], texture: 63 }, gun: { section_segments: 8, offset: { x: 0, y: -60, z: -15 }, position: { x: [0, 0, 0, 0], y: [-20, -10, 5, 10], z: [0, 0, 0, 0] }, width: [3, 7, 8, 3], height: [3, 7, 8, 3], texture: [6, 4, 5], laser: { damage: [3, 5], rate: 3, type: 1, speed: [100, 120], number: 3, angle: 15, error: 0 } } }, wings: { main: { doubleside: !0, offset: { x: 0, y: -25, z: 5 }, length: [100], width: [120, 30, 40], angle: [0, 20], position: [30, 90, 85], texture: 11, bump: { position: 30, size: 20 } } } }),
        OlII0.add({ name: 'Trident', level: 2, model: 2, size: 1.2, specs: { shield: { capacity: [125, 175], reload: [3, 5] }, generator: { capacity: [50, 80], reload: [15, 20] }, ship: { mass: 100, speed: [110, 135], rotation: [70, 85], acceleration: [90, 110] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-100, -50, 0, 30, 70, 100, 90], z: [0, 0, 0, 0, 0, 0, 0] }, width: [1, 25, 15, 30, 30, 20, 10], height: [1, 20, 20, 30, 30, 10, 0], texture: [1, 1, 10, 2, 3], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -40, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-20, -10, 0, 30, 40] }, width: [0, 10, 10, 10, 0], height: [0, 10, 15, 12, 0], texture: [9], propeller: !1 }, IOI0O: { section_segments: 12, offset: { x: 50, y: 40, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -45, -20, 0, 20, 50, 55] }, width: [0, 5, 10, 10, 15, 10, 0], height: [0, 5, 15, 15, 10, 5, 0], angle: 0, laser: { damage: [4, 8], rate: 2.5, type: 1, speed: [100, 120], number: 1, angle: 0, error: 0 }, propeller: !1, texture: [4, 4, 10, 4, 63, 4] } }, wings: { main: { offset: { x: 0, y: 60, z: 0 }, length: [80, 30], width: [70, 50, 60], texture: [4, 63], angle: [0, 0], position: [10, -20, -50], bump: { position: -10, size: 15 } }, Il111: { length: [30, 20], width: [10, 30, 0], angle: [50, 20], position: [90, 80, 50], texture: [63], bump: { position: 10, size: 30 } } } }),
        OlII0.add({ name: 'Side-Fighter', level: 3, model: 2, size: 1.5, next: [403, 404], specs: { shield: { capacity: [125, 175], reload: [2, 4] }, generator: { capacity: [75, 125], reload: [20, 35] }, ship: { mass: 90, speed: [100, 120], rotation: [50, 70], acceleration: [100, 130] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-30, -22, -15, 0, 15, 22, 40, 30], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [5, 10, 25, 30, 25, 17, 15, 0], height: [5, 10, 25, 30, 25, 17, 15, 0], texture: [5, 63, 63, 63, 63, 12, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -20, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, -8, 0] }, width: [0, 10, 10], height: [0, 10, 10], texture: [9], propeller: !1, laser: { damage: [4, 6], rate: 10, type: 1, speed: [150, 240], number: 1, error: 20 } } }, wings: { wings1: { doubleside: !0, offset: { x: 60, y: 0, z: -80 }, length: [0, 50, 50, 50], width: [0, 0, 100, 100, 0], angle: [95, 90, 90, 95], position: [0, 0, 0, 0, 0], texture: [7], bump: { position: 0, size: 8 } }, join: { offset: { x: 0, y: 0, z: 0 }, length: [61], width: [10, 6], angle: [0], position: [0, 0, 0, 50], texture: [8], bump: { position: 10, size: 20 } } } }),
        OlII0.add({ name: 'Pulse-Fighter', level: 3, model: 1, size: 1.3, specs: { shield: { capacity: [150, 200], reload: [3, 5] }, generator: { capacity: [60, 90], reload: [20, 30] }, ship: { mass: 120, speed: [105, 120], rotation: [60, 80], acceleration: [80, 100] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -75, -50, 0, 50, 105, 90] }, width: [0, 15, 25, 30, 35, 20, 0], height: [0, 10, 15, 25, 25, 20, 0], propeller: !0, texture: [63, 1, 1, 10, 2, 12] }, II1lI: { section_segments: 12, offset: { x: 0, y: -20, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-30, -10, 10, 30, 60] }, width: [0, 10, 15, 10, 5], height: [0, 18, 25, 18, 5], propeller: !1, texture: 9 }, cannon: { section_segments: 6, offset: { x: 0, y: -40, z: -10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-40, -50, -20, 0, 20, 50] }, width: [0, 5, 10, 10, 15, 0], height: [0, 5, 15, 15, 10, 0], angle: 0, laser: { damage: [15, 30], rate: 1, type: 2, speed: [150, 175], number: 1, error: 0 }, propeller: !1, texture: 3 }, ll1ll: { section_segments: 8, offset: { x: 50, y: 50, z: -10 }, position: { x: [0, 0, 5, 5, 0, 0, 0], y: [-52, -50, -20, 0, 20, 40, 42] }, width: [0, 5, 10, 10, 5, 5, 0], height: [0, 5, 10, 15, 10, 5, 0], angle: 0, laser: { damage: [3, 6], rate: 3, type: 1, speed: [100, 150], number: 1, error: 0 }, propeller: !1, texture: 4 } }, wings: { main: { length: [80, 20], width: [120, 50, 40], angle: [-10, 20], position: [30, 50, 30], doubleside: !0, bump: { position: 30, size: 10 }, texture: [11, 63] }, Il111: { length: [40], width: [40, 20, 30], angle: [10, -10], position: [-40, -60, -55], bump: { position: 0, size: 30 }, texture: 63 }, l0l0l: { length: [40, 10], width: [50, 20, 20], angle: [40, 30], position: [70, 75, 80], doubleside: !0, texture: 63, bump: { position: 0, size: 20 } } } }),
        OlII0.add({ name: 'Shadow X-1', level: 3, model: 3, size: 1, next: [403, 404], zoom: 0.9, specs: { shield: { capacity: [90, 130], reload: [3, 6] }, generator: { capacity: [50, 80], reload: [13, 19] }, ship: { mass: 70, speed: [120, 150], rotation: [35, 60], acceleration: [90, 120] } }, bodies: { main: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -98, -95, -70, -40, 0, 40, 70, 80, 90, 100], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 20, 30, 40, 20, 20, 40, 40, 40, 20, 0], height: [0, 4, 4, 20, 20, 10, 10, 15, 15, 15, 10, 10], texture: [12, 5, 63, 4, 4, 63, 4, 4, 5] }, OOll0: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [90, 95, 100, 105, 90], z: [0, 0, 0, 0, 0] }, width: [10, 15, 18, 19, 2], height: [3, 5, 7, 8, 2], texture: [63], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -25, z: 15 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-45, -40, -25, 0, 5], z: [0, 0, 0, 0, 0, 0] }, width: [0, 13, 17, 11, 0], height: [0, 10, 13, 5, 0], texture: [9] }, laser: { section_segments: 10, offset: { x: 70, y: 10, z: -20 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 70, 60], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], texture: [3, 4, 10, 3], propeller: !0, laser: { damage: [3, 5], rate: 10, type: 1, speed: [140, 190], number: 1 } } }, wings: { top: { offset: { x: 0, y: 50, z: 5 }, length: [0, 30], width: [0, 70, 30], angle: [90, 90], position: [0, 0, 50], texture: [4], bump: { position: 10, size: 10 } }, side_joins: { offset: { x: 0, y: 30, z: -3 }, length: [100], width: [100, 40], angle: [0], position: [-50, 50], texture: [4], bump: { position: 10, size: 10 } } } }),
        OlII0.add({ name: 'Y-Defender', level: 3, model: 4, size: 1.5, specs: { shield: { capacity: [175, 225], reload: [4, 6] }, generator: { capacity: [50, 80], reload: [18, 25] }, ship: { mass: 200, speed: [80, 100], rotation: [40, 60], acceleration: [70, 80] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -95, -50, -40, -20, -10, 30, 70, 65], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 20, 25, 10, 10, 20, 15, 20, 0], height: [0, 10, 20, 15, 15, 20, 25, 15, 0], texture: [1, 2, 2, 63, 2, 10, 2, 12], laser: { damage: [20, 40], rate: 2, type: 1, speed: [130, 170], number: 1, recoil: 75, error: 0 } }, propulsors: { section_segments: 8, offset: { x: 50, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-30, -25, 20, 25, 40, 50, 60, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 20, 15, 5, 25, 20, 15, 15, 0], height: [0, 20, 15, 5, 25, 20, 20, 10, 0], texture: [63, 63, 63, 2, 2, 3, 4, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -70, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-20, -10, 0, 10, 20] }, width: [0, 10, 10, 10, 0], height: [0, 10, 15, 12, 0], texture: [9], propeller: !1 } }, wings: { join: { offset: { x: 14, y: 0, z: 0 }, length: [25], width: [20, 10], angle: [0], position: [0, 0, 0, 50], texture: [63], bump: { position: 10, size: 40 } }, join2: { offset: { x: 14, y: 50, z: 0 }, length: [25], width: [20, 10], angle: [0], position: [0, 0, 0, 50], texture: [3], bump: { position: 10, size: 40 } }, Il111: { offset: { x: 5, y: 40, z: 10 }, length: [10, 20], width: [15, 30, 50], angle: [60, -20], position: [0, 5, 60], texture: [63], bump: { position: 10, size: 60 } } } }),
        OlII0.add({ name: 'Vanguard', level: 4, model: 1, size: 1.2, specs: { shield: { capacity: [140, 190], reload: [3, 4] }, generator: { capacity: [80, 140], reload: [25, 35] }, ship: { mass: 200, speed: [75, 90], rotation: [90, 120], acceleration: [75, 100] } }, bodies: { main: { section_segments: 11, offset: { x: 0, y: -47, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [0, 6, 12, 48, 77, 110, 137, 141], z: [0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 22, 24, 35, 37, 34, 23, 0], height: [0, 22, 24, 35, 37, 34, 23, 0], texture: [9, 3, 2, 8, 3, 2, 3] }, engines: { section_segments: 12, offset: { x: 28, y: -27, z: -10 }, position: { x: [25, -2, -4, -2, 0, 0], y: [0, 40, 74, 98, 108, 105], z: [18, 10, 0, 0, 0, 0] }, width: [9, 10, 9, 14, 11, 0], height: [2, 10, 9, 14, 11, 0], texture: [3, 3, 3, 3, 17], propeller: !0 }, II1lI: { section_segments: 12, offset: { x: 0, y: -30, z: 15 }, position: { x: [0, 0, 0, 0, 0], y: [0, 40, 66, 84, 89], z: [-8, -2, -1, 1, 20] }, width: [20, 30, 30, 23, 0], height: [20, 30, 30, 23, 0], texture: [9], propeller: !1 }, IOI0O: { section_segments: 8, offset: { x: 18, y: -183, z: 8 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [5, 0, 23, 27, 62, 62, 97, 102, 163], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 5, 7, 7, 4, 4, 7, 7], height: [0, 5, 5, 7, 7, 4, 4, 7, 7], texture: [12, 13, 4, 8, 4, 4, 3, 8], propeller: !1, laser: { damage: [18, 25], rate: 3, type: 2, speed: [170, 200], recoil: 70, number: 1, error: 0 } } }, wings: { outer: { offset: { x: 37, y: -115, z: 15 }, length: [0, 12, 12, 22, 4, 38], width: [165, 235, 246, 232, 167, 122, 35], angle: [-15, -15, -15, -8, -8, -8], position: [20, 54, 54, 47, 79, 100, 101], texture: [4, 3, 4, 4, 1, 8], doubleside: !0, bump: { position: 30, size: 4 } }, inner: { offset: { x: -37, y: -115, z: 15 }, length: [12], width: [165, 112], angle: [0], position: [20, 0], texture: [63, 63], doubleside: !0, bump: { position: 30, size: 4 } }, winglet: { offset: { x: 104, y: -13, z: 55 }, length: [45, 15, 15, 45], width: [25, 70, 35, 70, 25], angle: [-70, -70, -110, -110], position: [0, 0, 0, 0, 0], texture: [63], doubleside: !0, bump: { position: 0, size: 5 } } } }),
        OlII0.add({ name: 'X-Warrior', level: 4, model: 3, size: 1.6, specs: { shield: { capacity: [150, 200], reload: [3, 5] }, generator: { capacity: [90, 150], reload: [35, 55] }, ship: { mass: 250, speed: [75, 100], rotation: [50, 90], acceleration: [90, 110] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -99, -50, 0, 10, 30, 50, 80, 100, 90], z: [-10, -10, -5, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 30, 35, 25, 30, 50, 50, 20, 0], height: [0, 5, 20, 20, 20, 20, 20, 20, 10, 0], texture: [4, 2, 10, 2, 63, 11, 4, 63, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -20, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-30, -20, 0, 30, 40] }, width: [0, 10, 15, 10, 0], height: [0, 18, 25, 18, 0], texture: 9, propeller: !1 }, IOI0O: { section_segments: 12, offset: { x: 30, y: -70, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-30, -20, 0, 20, 30] }, width: [3, 5, 5, 5, 3], height: [3, 5, 15, 15, 3], texture: [6, 4, 4, 6], angle: 0, laser: { damage: [5, 8], rate: 3, type: 1, speed: [120, 180], number: 1, error: 0 } }, wingendtop: { section_segments: 12, offset: { x: 105, y: 50, z: 40 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-65, -70, -20, 0, 20, 30, 5] }, width: [0, 2, 3, 7, 7, 5, 0], height: [0, 2, 3, 7, 7, 5, 0], texture: [12, 63, 63, 11, 63, 12], angle: 0 }, wingendbottom: { section_segments: 12, offset: { x: 105, y: 50, z: -40 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-65, -70, -20, 0, 20, 30, 25] }, width: [0, 2, 3, 7, 7, 5, 0], height: [0, 2, 3, 7, 7, 5, 0], texture: [12, 63, 63, 11, 63, 12], angle: 0, laser: { damage: [3, 5], rate: 2.5, type: 1, speed: [100, 160], number: 1, error: 0 } }, propellers: { section_segments: 12, offset: { x: 40, y: 60, z: 0 }, position: { x: [0, 0, 5, 3, 5, 0, 0], y: [-35, -40, -30, 0, 40, 50, 40] }, width: [0, 5, 10, 10, 15, 10, 0], height: [0, 5, 25, 30, 25, 5, 0], texture: 4, angle: 0, propeller: !0 } }, wings: { xwing1: { doubleside: !0, offset: { x: 0, y: 70, z: 0 }, length: [80, 35], width: [50, 40, 30], angle: [20, 20], position: [0, -10, -20], texture: [1, 10], bump: { position: 10, size: 20 } }, xwing2: { doubleside: !0, offset: { x: 0, y: 70, z: 0 }, length: [80, 35], width: [50, 40, 30], angle: [-20, -20], position: [0, -10, -20], texture: [1, 1], bump: { position: 10, size: 20 } }, winglets2: { offset: { x: 30, y: -40, z: 0 }, length: [20, 10], width: [30, 20, 5], angle: [-10, 20], position: [0, 0, 0], texture: 63, bump: { position: 30, size: 10 } } } }),
        OlII0.add({ name: 'Mercury', level: 4, model: 2, size: 1.3, specs: { shield: { capacity: [150, 200], reload: [3, 5] }, generator: { capacity: [100, 150], reload: [30, 50] }, ship: { mass: 200, speed: [85, 105], rotation: [60, 90], acceleration: [60, 80] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-45, -50, -40, -30, 0, 50, 100, 90] }, width: [1, 5, 15, 20, 30, 35, 20, 0], height: [1, 5, 10, 15, 25, 15, 10, 0], texture: [1, 4, 3, 63, 11, 10, 12], propeller: !0, laser: { damage: [20, 40], rate: 1, type: 2, speed: [170, 200], number: 1, error: 0 } }, II1lI: { section_segments: 8, offset: { x: 0, y: 20, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-40, -20, 0, 20, 50] }, width: [0, 10, 15, 10, 0], height: [0, 18, 25, 18, 0], texture: [4, 9, 4, 4], propeller: !1 }, ll1ll: { section_segments: 8, offset: { x: 70, y: 0, z: -10 }, position: { x: [0, 0, 0, 10, -5, 0, 0, 0], y: [-115, -80, -100, -30, 0, 30, 100, 90] }, width: [1, 5, 10, 15, 15, 20, 10, 0], height: [1, 5, 15, 20, 35, 30, 10, 0], texture: [6, 6, 4, 63, 63, 4, 12], angle: 0, propeller: !0 }, wingends: { section_segments: 8, offset: { x: 115, y: 25, z: -5 }, position: { x: [0, 2, 4, 2, 0, 0], y: [-20, -10, 0, 10, 20, 15] }, width: [2, 3, 6, 3, 4, 0], height: [5, 15, 22, 17, 5, 0], texture: [4, 4, 4, 4, 6], propeller: !0, angle: 2, laser: { damage: [3, 5], rate: 4, type: 1, speed: [150, 180], number: 1, error: 0 } } }, wings: { main: { length: [80, 40], width: [40, 30, 20], angle: [-10, 20], position: [30, 50, 30], texture: [11, 11], bump: { position: 30, size: 10 } }, font: { length: [80, 30], width: [20, 15], angle: [-10, 20], position: [-20, -40], texture: [63], bump: { position: 30, size: 10 } } } }),
        OlII0.add({ name: 'Side-Interceptor', level: 4, model: 4, size: 1.6, specs: { shield: { capacity: [175, 225], reload: [3, 6] }, generator: { capacity: [100, 150], reload: [30, 40] }, ship: { mass: 120, speed: [80, 125], rotation: [50, 100], acceleration: [110, 140] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-30, -22, -15, 0, 15, 22, 30, 20], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [5, 10, 25, 30, 25, 10, 15, 0], height: [5, 10, 25, 30, 25, 10, 15, 0], texture: [1, 3, 63, 63, 3, 4, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -20, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, -8, 0], z: [0, 0, 0] }, width: [0, 10, 10], height: [0, 10, 10], texture: [5, 9, 5], propeller: !1 }, IOI0O: { section_segments: 12, offset: { x: 60, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-25, -30, -20, 0, 20, 30, 20], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 3, 5, 5, 5, 3, 0], height: [0, 3, 5, 5, 5, 3, 0], texture: [12, 6, 63, 63, 6, 12], angle: 0, laser: { damage: [5, 7], rate: 7, type: 1, speed: [100, 200], number: 1, error: 5 } } }, wings: { wings1: { doubleside: !0, offset: { x: 60, y: 20, z: 0 }, length: [-20, -10, -40], width: [50, 50, 130, 30], angle: [280, 315, 315], position: [0, 0, -50, 0], texture: 4, bump: { position: 10, size: -10 } }, wings2: { doubleside: !0, offset: { x: 60, y: 20, z: 0 }, length: [20, 10, 40], width: [50, 50, 130, 30], angle: [-100, -135, -135], position: [0, 0, -50, 0], texture: 4, bump: { position: 10, size: 10 } }, join: { doubleside: !0, offset: { x: 0, y: 0, z: 0 }, length: [61], width: [10, 6], angle: [0], position: [0, 0, 0, 50], texture: 63, bump: { position: 10, size: 20 } } } }),
        OlII0.add({ name: 'Pioneer', level: 4, model: 5, size: 1.6, specs: { shield: { capacity: [175, 230], reload: [4, 7] }, generator: { capacity: [50, 100], reload: [25, 30] }, ship: { mass: 250, speed: [90, 120], rotation: [40, 80], acceleration: [50, 100] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -60, -10, 0, 20, 50, 80, 100, 90], z: [-10, -5, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [5, 50, 50, 30, 40, 50, 50, 20, 0], height: [5, 20, 20, 20, 30, 30, 20, 10, 0], texture: [2, 10, 2, 4, 11, 11, 63, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -40, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-30, -20, 0, 30, 40] }, width: [0, 10, 15, 10, 0], height: [0, 18, 25, 18, 0], texture: [9], propeller: !1 }, IOI0O: { section_segments: 12, offset: { x: 30, y: -70, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-30, -20, 0, 20, 30] }, width: [3, 5, 5, 5, 3], height: [3, 5, 15, 15, 3], texture: [6, 4, 4, 6], angle: 0, laser: { damage: [6, 11], rate: 3, type: 1, speed: [100, 140], number: 1, error: 0 } }, shield: { section_segments: 12, offset: { x: 60, y: -40, z: 0 }, position: { x: [0, 5, 3, 5, 0, 0], y: [-30, -20, 0, 20, 30, 20] }, width: [5, 10, 10, 10, 5, 0], height: [5, 25, 30, 25, 5, 0], propeller: !0, texture: 4, angle: 0 }, shield2: { section_segments: 12, offset: { x: 60, y: 60, z: 0 }, position: { x: [0, 5, 3, 5, 0, 0], y: [-30, -20, 0, 20, 30, 20] }, width: [5, 10, 10, 10, 5, 0], height: [5, 25, 30, 25, 5, 0], propeller: !0, texture: 4, angle: 0 } } }),
        OlII0.add({ name: 'Crusader', level: 4, model: 6, size: 1.6, specs: { shield: { capacity: [250, 300], reload: [5, 7] }, generator: { capacity: [50, 90], reload: [20, 34] }, ship: { mass: 250, speed: [75, 100], rotation: [40, 70], acceleration: [80, 100] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -99, -90, -30, 30, 100, 80], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 15, 40, 25, 20, 0], height: [0, 5, 15, 40, 50, 20, 0], texture: [6, 63, 1, 8, 63, 12] }, II1lI: { section_segments: 8, offset: { x: 0, y: -50, z: 30 }, position: { x: [0, 0, 0, 0, 0], y: [-30, -10, 0, 10, 20], z: [-13, -3, 0, 5, 3] }, width: [3, 13, 15, 9, 3], height: [3, 6, 8, 6, 3], texture: [9] }, main_propulsor: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0], y: [50], z: [0] }, width: [25], height: [0], propeller: !0 }, side_propulsors: { section_segments: 8, offset: { x: 60, y: 20, z: 0 }, position: { x: [-30, -10, 0, 0, 0], y: [-40, -20, 0, 20, 70], z: [0, 0, 0, 0, 0] }, width: [5, 5, 10, 20, 10], height: [5, 5, 10, 10, 10], texture: [63], propeller: !0 }, lasers: { section_segments: 8, offset: { x: 45, y: -20, z: -5 }, position: { x: [0, 0, 0, 0, 0], y: [-40, -20, -30, 20, 70], z: [0, 0, 0, 0, 0] }, width: [0, 5, 8, 12, 1], height: [0, 3, 5, 12, 1], texture: [6, 6, 10], laser: { damage: [20, 35], rate: 3, type: 1, speed: [130, 155], number: 1, error: 0 } } }, wings: { main: { offset: { x: 20, y: -25, z: 5 }, length: [100, 15], width: [120, 30, 40], angle: [0, 40], position: [30, 90, 85], texture: [11, 63], bump: { position: 0, size: 20 } }, tail: { offset: { x: 0, y: 75, z: 20 }, length: [30, 40], width: [30, 20, 25], angle: [10, -30], position: [0, 0, -30], texture: [63], bump: { position: 0, size: 20 } } } }),
        OlII0.add({ name: 'U-Sniper', level: 5, model: 1, size: 1.8, specs: { shield: { capacity: [200, 300], reload: [4, 6] }, generator: { capacity: [80, 160], reload: [40, 60] }, ship: { mass: 200, speed: [70, 90], rotation: [50, 70], acceleration: [60, 110] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [0, -10, 40, 100, 90, 100] }, width: [0, 10, 23, 10, 0], height: [0, 5, 23, 10, 0], texture: [12, 1, 10, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: 0, z: 30 }, position: { x: [0, 0, 0, 0], y: [20, 40, 80], z: [-4, 0, -6] }, width: [5, 10, 5], height: [0, 8, 0], texture: [9] }, uwings: { section_segments: 8, offset: { x: 50, y: -20, z: -10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-90, -100, 40, 80, 90, 100] }, width: [0, 10, 25, 20, 0], height: [0, 5, 25, 20, 0], texture: [12, 2, 3, 4] }, IOI0O: { section_segments: 12, offset: { x: 70, y: 20, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-60, -70, -20, 0, 20, 50, 45] }, width: [0, 5, 6, 10, 15, 5, 0], height: [0, 5, 5, 10, 10, 5, 0], angle: 0, laser: { damage: [40, 60], rate: 2, type: 2, speed: [190, 240], recoil: 200, number: 1, error: 0 }, propeller: !1, texture: [4, 4, 10, 4, 63, 4] }, side_propulsors: { section_segments: 10, offset: { x: 30, y: 30, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [0, 10, 13, 25, 30, 40, 60, 50] }, width: [0, 5, 10, 10, 10, 5, 5, 10, 5, 0], height: [0, 5, 10, 10, 10, 5, 5, 10, 5, 0], propeller: !0, texture: [5, 2, 11, 2, 63, 11, 12] } } }),
        OlII0.add({ name: 'T-Warrior', level: 5, model: 3, size: 1.6, specs: { shield: { capacity: [225, 325], reload: [4, 7] }, generator: { capacity: [80, 140], reload: [35, 50] }, ship: { mass: 250, speed: [80, 100], rotation: [50, 80], acceleration: [90, 120] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-95, -100, -98, -70, 0, 90, 91], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 6, 20, 30, 20, 3], height: [0, 2, 4, 20, 30, 25, 3], texture: [12, 5, 63, 1, 10, 12] }, cannon: { section_segments: 6, offset: { x: 0, y: -45, z: -15 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-40, -50, -20, 0, 20, 30], z: [0, 0, 0, 0, 0, 20] }, width: [0, 5, 8, 11, 7, 0], height: [0, 5, 8, 11, 10, 0], angle: 0, laser: { damage: [4, 6], rate: 5, type: 1, speed: [130, 160], number: 5, angle: 30, error: 0 }, propeller: !1, texture: [3, 3, 10, 3] }, OOll0: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0], y: [90, 95, 95], z: [0, 0, 0] }, width: [15, 18, 2], height: [18, 23, 2], texture: [63] }, II1lI: { section_segments: 8, offset: { x: 0, y: 0, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-50, -40, -25, 0, 5], z: [0, 0, 0, 0, 9, 9] }, width: [0, 10, 15, 10, 0], height: [0, 10, 15, 16, 0], texture: [9] }, Ol001: { section_segments: 10, offset: { x: 0, y: 30, z: 60 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 15, 20, 20, 20, 15, 15, 20, 10, 0], height: [0, 15, 20, 20, 20, 15, 15, 20, 10, 0], texture: [4, 63, 1, 1, 1, 63, 1, 1, 12], propeller: !0 }, side_propulsors: { section_segments: 10, offset: { x: 80, y: 30, z: -30 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 15, 20, 20, 20, 15, 15, 20, 10, 0], height: [0, 15, 20, 20, 20, 15, 15, 20, 10, 0], texture: [4, 63, 1, 1, 1, 63, 1, 1, 12], propeller: !0 } }, wings: { top_join: { offset: { x: 0, y: 50, z: 0 }, length: [60], width: [70, 30], angle: [90], position: [0, 0, 0, 50], texture: [11], bump: { position: 10, size: 20 } }, side_joins: { offset: { x: 0, y: 50, z: 0 }, length: [80], width: [70, 30], angle: [-20], position: [0, 0, 0, 50], texture: [11], bump: { position: 10, size: 20 } } } }),
        OlII0.add({ name: 'Aetos', level: 5, model: 4, size: 1.5, specs: { shield: { capacity: [200, 300], reload: [5, 7] }, generator: { capacity: [80, 140], reload: [35, 45] }, ship: { mass: 175, speed: [90, 120], rotation: [70, 90], acceleration: [110, 130] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-100, -99, -98, -50, 0, 100, 80], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 6, 17, 28, 20, 0], height: [0, 2, 4, 15, 25, 25, 0], texture: [4, 6, 10, 10, 11, 12], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -60, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, 0, 20, 30, 40], z: [0, 0, 0, 0, 0] }, width: [0, 5, 10, 10, 0], height: [0, 5, 10, 12, 0], texture: [9] }, lasers: { section_segments: 8, offset: { x: 81, y: -15, z: -30 }, position: { x: [0, 0, 0, 0, 0], y: [25, 70, 10, 80, 90], z: [0, 0, 0, 0, 0] }, width: [5, 0, 0, 5, 0], height: [5, 5, 0, 5, 0], texture: [63, 63, 6], angle: 2, laser: { damage: [6, 10], rate: 5, type: 1, speed: [120, 180], number: 1, angle: 0, error: 0 } } }, wings: { top: { doubleside: !0, offset: { x: 15, y: 40, z: 0 }, length: [50], width: [70, 30], angle: [70], position: [0, 30], texture: [63], bump: { position: 10, size: 10 } }, main: { doubleside: !0, offset: { x: 0, y: 25, z: 15 }, length: [90, 40], width: [70, 50, 30], angle: [-30, -40], position: [30, 20, -20], texture: [8, 63], bump: { position: 10, size: 10 } } } }),
        OlII0.add({ name: 'Shadow X-2', level: 5, model: 5, size: 1.3, specs: { shield: { capacity: [150, 220], reload: [5, 7] }, generator: { capacity: [80, 145], reload: [20, 34] }, ship: { mass: 150, speed: [110, 145], rotation: [35, 55], acceleration: [140, 160] } }, bodies: { main: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -98, -95, -70, -40, 0, 40, 70, 80, 90, 100], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 10, 20, 30, 20, 20, 30, 30, 30, 20, 0], height: [0, 4, 4, 20, 20, 10, 10, 15, 15, 15, 10, 10], texture: [12, 5, 63, 4, 4, 3, 4, 4, 5] }, OOll0: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [90, 95, 100, 105, 90], z: [0, 0, 0, 0, 0] }, width: [10, 15, 18, 19, 2], height: [3, 5, 7, 8, 2], texture: [63], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -25, z: 12 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-45, -40, -25, 0, 5], z: [0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 5, 0], height: [0, 10, 15, 5, 0], texture: [9] }, laser: { section_segments: 10, offset: { x: 50, y: 10, z: -13 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-30, -25, 0, 10, 20, 25, 30, 40, 70, 60], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], texture: [6, 4, 10, 3, 4, 3, 2], propeller: !0, laser: { damage: [5, 7], rate: 10, type: 1, speed: [160, 190], number: 1 } } }, wings: { top: { doubleside: !0, offset: { x: 10, y: 60, z: 5 }, length: [30], width: [50, 30], angle: [60], position: [0, 50], texture: [3], bump: { position: 10, size: 10 } }, side: { doubleside: !0, offset: { x: 10, y: 70, z: 5 }, length: [30], width: [40, 20], angle: [-13], position: [0, 60], texture: [63], bump: { position: 10, size: 10 } }, wings: { offset: { x: 0, y: 35, z: 0 }, length: [80], width: [100, 70], angle: [0], position: [-80, 50], texture: [4], bump: { position: 10, size: 15 } } } }),
        OlII0.add({ name: 'FuryStar', level: 5, model: 2, size: 1.5, specs: { shield: { capacity: [200, 275], reload: [6, 7] }, generator: { capacity: [100, 150], reload: [30, 40] }, ship: { mass: 200, speed: [70, 100], rotation: [120, 180], acceleration: [150, 180] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-50, -45, 0, 10, 15, 35, 55, 40] }, width: [0, 20, 25, 17, 25, 20, 15, 0], height: [0, 15, 15, 15, 20, 20, 15, 0], texture: [1, 4, 63, 4, 2, 12, 17], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -43, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, -4, 10], z: [-5, 0, 0] }, width: [1, 18, 20], height: [1, 15, 10], texture: [9] }, missiles: { section_segments: 12, offset: { x: 35, y: -5, z: 10 }, position: { x: [0, 0, 0, 0, 0], y: [-30, -23, 0, 23, 30], z: [0, 0, 0, 0, 0] }, width: [0, 5, 5, 5, 0], height: [0, 5, 5, 5, 0], texture: [6, 4, 4, 10], angle: 0, laser: { damage: [1, 2], rate: 4, type: 1, speed: [100, 125], number: 1, error: 0 } }, cannon: { section_segments: 6, offset: { x: 15, y: -10, z: -15 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-40, -50, -20, 0, 20, 30], z: [0, 0, 0, 0, 0, 20] }, width: [0, 5, 8, 11, 7, 0], height: [0, 5, 8, 11, 10, 0], angle: 0, laser: { damage: [12, 18], rate: 2, type: 1, speed: [200, 250], number: 1, error: 0 }, propeller: !1, texture: [3, 3, 10, 3] }, top_propulsors: { section_segments: 10, offset: { x: 75, y: 45, z: 40 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 80, 70], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], propeller: !0, texture: [4, 4, 2, 2, 5, 63, 5, 63, 17] }, bottom_propulsors: { section_segments: 10, offset: { x: 100, y: 0, z: -40 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 80, 70], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], propeller: !0, texture: [4, 4, 2, 2, 5, 63, 5, 4, 17] } }, wings: { rooftop: { doubleside: !0, offset: { x: 0, y: -20, z: 20 }, length: [20, 15, 25, 25, 5], width: [50, 40, 35, 35, 35, 30], angle: [0, -20, 30, 30, 30], position: [0, 10, 20, 50, 80, 100], texture: [8, 63, 3, 3], bump: { position: -40, size: 5 } }, bottom: { doubleside: !0, offset: { x: 10, y: -20, z: 0 }, length: [30, 30, 30], width: [60, 50, 50, 50], angle: [-27, -27, -27], position: [0, 10, 30, 40], texture: [1], bump: { position: -40, size: 5 } }, topwinglets: { doubleside: !0, offset: { x: 80, y: 87, z: 45 }, length: [20], width: [40, 30], angle: [60], position: [0, 50], texture: [63], bump: { position: 10, size: 10 } }, bottomwinglets: { doubleside: !0, offset: { x: 100, y: 50, z: -45 }, length: [20], width: [40, 30], angle: [-60], position: [0, 50], texture: [4], bump: { position: 10, size: 10 } } } }),
        (arrayMult = function (t, e) {
            return t.map(function (t) {
                return t * e;
            });
        }),
        OlII0.add({ name: 'Howler', level: 5, model: 6, size: 1.2, zoom: 1, specs: { shield: { capacity: [275, 340], reload: [5, 7] }, generator: { capacity: [80, 110], reload: [35, 50] }, ship: { mass: 225, speed: [85, 98], rotation: [70, 95], acceleration: [90, 120] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: -20, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-145, -135, -125, -130, -100, -55, 5, 60, 85, 120, 118], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 5, 8, 20, 30, 35, 35, 30, 22, 0], height: [0, 5, 5, 8, 15, 20, 33, 30, 30, 22, 0], texture: [17, 4, 13, 3, 2, 1, 10, 31, 12, 17], propeller: !0, laser: { damage: [2.5, 4], rate: 6, speed: [160, 210], number: 2, recoil: 0, type: 1 } }, II1lI: { section_segments: 8, offset: { x: 0, y: -80, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: arrayMult([-10, -8, 15, 30], 2), z: [-4, -4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: arrayMult([0, 3, 8, 6], 2), height: arrayMult([0, 2, 8, 6], 2), texture: [2, 9, 31] }, front1: { section_segments: 8, offset: { x: 22, y: -125, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, -5], y: arrayMult([-15, -8, -3, -5, 15, 40], 1.5), z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: arrayMult([0, 3, 3, 4, 8, 6], 1.5), height: arrayMult([0, 3, 3, 4, 8, 6], 1.5), texture: [17, 4, 3], laser: { damage: [9, 15], rate: 1, speed: [150, 200], number: 1, recoil: 25, type: 2 } }, front2: { section_segments: 10, offset: { x: 32, y: -95, z: 0 }, position: { x: [-4, -4, 0, -1], y: arrayMult([0, -8, 15, 40], 1.5), z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: arrayMult([0, 5, 8, 6], 1.5), height: arrayMult([0, 8, 12, 10], 1.5), texture: [13, 2, 63], angle: 0 }, propulsors: { section_segments: 8, offset: { x: 40, y: 30, z: -5 }, position: { x: [-12, -12, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -100, -60, 20, 50, 48], z: [5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: arrayMult([0, 3, 10, 20, 12, 0], 1.2), height: arrayMult([0, 3, 13, 20, 12, 0], 1.2), texture: [4, 31, 10, 13, 17], propeller: !0 }, uwing: { section_segments: [0, 60, 120, 180], offset: { x: -20, y: -30, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-65, -70, 40, 80, 110], z: [0, 0, 0, 0, 0, 0] }, width: [0, 5, 25, 25, 0], height: [0, 10, 25, 25, 20], texture: [4] } }, wings: { main: { doubleside: !0, offset: { x: 20, y: -20, z: 5 }, length: [89, 0], width: [130, 60], angle: [-12, -12], position: [0, 80, 80], texture: 18, bump: { position: 20, size: 5 } }, sides: { doubleside: !0, offset: { x: 20, y: -20, z: 10 }, length: [84, -3, 5, 12, -5], width: [25, 25, 140, 140, 50, 50], angle: [-12, 5, 5, 5, 5], position: [40, 85, 55, 55, 70, 70], texture: [63, 4, 63, 4, 17], bump: { position: 35, size: 15 } } } }),
        OlII0.add({ name: 'Toscain', level: 5, model: 7, size: 1.7, specs: { shield: { capacity: [275, 350], reload: [5, 8] }, generator: { capacity: [75, 100], reload: [32, 48] }, ship: { mass: 300, speed: [70, 90], rotation: [50, 75], acceleration: [80, 110] } }, bodies: { front: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-100, -95, -25, 0, 25], z: [0, 0, 0, 0, 0] }, width: [0, 20, 40, 40, 20], height: [0, 10, 35, 20, 5], texture: [63, 11, 2, 63], laser: { damage: [25, 45], rate: 1, type: 2, speed: [145, 190], number: 1, recoil: 50, error: 0 } }, II1lI: { section_segments: 8, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0], y: [-70, -70, -25, 0, 100], z: [0, 0, 0, 0, 10] }, width: [0, 10, 15, 15, 10], height: [0, 15, 35, 20, 0], texture: [9, 9, 9, 4] }, lasers: { section_segments: 8, angle: 15, offset: { x: 1, y: -5, z: -3 }, position: { x: [0, 0, 0], y: [-90, -70, -100], z: [0, 0, 0] }, width: [5, 5, 0], height: [5, 5, 0], texture: [6], laser: { damage: [4, 6], rate: 2, type: 1, speed: [100, 130], number: 2, angle: 35, error: 0 } }, motor: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [10, 20, 30, 100, 95], z: [0, 0, 0, 0, 0] }, width: [0, 40, 50, 50, 0], height: [0, 10, 15, 20, 0], texture: [63, 63, 10, 4] }, propulsors: { section_segments: 8, offset: { x: 25, y: 0, z: 0 }, position: { x: [0, 0, 0], y: [30, 105, 100], z: [0, 0, 0] }, width: [15, 15, 0], height: [10, 10, 0], propeller: !0, texture: [12] } }, wings: { main: { doubleside: !0, offset: { x: 30, y: 80, z: 0 }, length: [70, 20], width: [80, 20], angle: [0, 0], position: [-20, 0], texture: [11], bump: { position: 20, size: 10 } }, Il111: { doubleside: !0, offset: { x: 98, y: 81, z: -20 }, length: [20, 50, 20], width: [20, 35, 20], angle: [90, 90, 90], position: [0, 0, 0, 0], texture: [63], bump: { position: 30, size: 50 } } } }),
        OlII0.add({ name: 'Bat-Defender', level: 5, model: 8, size: 1.8, specs: { shield: { capacity: [300, 400], reload: [7, 10] }, generator: { capacity: [70, 100], reload: [25, 35] }, ship: { mass: 400, speed: [70, 90], rotation: [40, 70], acceleration: [90, 100] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-99, -100, -97, -45, -40, -25, -23, 15, 20, 55, 50], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 5, 30, 17, 27, 25, 25, 27, 15, 5], height: [0, 2, 2, 25, 27, 27, 25, 25, 27, 20, 0], texture: [6, 5, 1, 4, 6, 4, 63, 6, 2, 12] }, propulsors: { section_segments: 8, offset: { x: 30, y: -20, z: 0 }, position: { x: [-5, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [30, 55, 60, 80, 95, 100, 90, 95], z: [0, 0, 0, 0, 0, 0, 0, 0] }, width: [12, 14, 14, 10, 12, 10, 0], height: [5, 14, 14, 10, 12, 10, 0], texture: [2, 6, 4, 11, 6, 12], propeller: !0 }, lasers: { section_segments: 8, offset: { x: 70, y: -40, z: 10 }, position: { x: [0, 0, 0, 0, 0], y: [25, 90, 10, 50, 60], z: [0, 0, 0, 0, 0] }, width: [5, 5, 0, 10, 5], height: [5, 1, 0, 0, 5], texture: [63, 6], angle: 3, laser: { damage: [10, 15], rate: 2.5, type: 1, speed: [150, 200], number: 1, error: 0 }, propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -45, z: 8 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-50, -40, -25, 0, 5], z: [-10, -5, 0, 0, 0] }, width: [0, 5, 10, 10, 0], height: [0, 10, 15, 16, 0], texture: [9] } }, wings: { wings: { offset: { x: 20, y: 0, z: 0 }, length: [35, 15, 20, 15], width: [100, 50, 50, 40, 45], angle: [-10, 20, 0, 0], position: [0, 0, 10, 30, 0], texture: [11, 4], bump: { position: -20, size: 15 } }, side: { doubleside: !0, offset: { x: 105, y: 30, z: -30 }, length: [30, 10, 30], width: [40, 60, 60, 40], angle: [90, 110, 110, 90], position: [0, -30, -30, 0], texture: [63], bump: { position: 0, size: 15 } } } }),
        OlII0.add({
            name: 'Advanced-Fighter',
            level: 6,
            model: 1,
            size: 2,
            specs: { shield: { capacity: [200, 350], reload: [4, 6] }, generator: { capacity: [120, 200], reload: [50, 60] }, ship: { mass: 400, speed: [70, 80], rotation: [30, 50], acceleration: [70, 100] } },
            bodies: {
                main: { section_segments: 12, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -80, -90, -50, 0, 50, 100, 90] }, width: [0, 5, 15, 25, 40, 25, 20, 0], height: [0, 5, 10, 30, 25, 20, 10, 0], propeller: !0, texture: [4, 4, 1, 1, 10, 1, 1], laser: { damage: [90, 150], rate: 1, type: 2, speed: [180, 240], number: 1, recoil: 150, error: 0 } },
                II1lI: { section_segments: 12, offset: { x: 0, y: -35, z: 33 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-30, -20, 10, 30, 40], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 12, 15, 10, 0], height: [0, 12, 18, 12, 0], propeller: !1, texture: [7, 9, 9, 7] },
                side_propellers: { section_segments: 10, offset: { x: 30, y: 30, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-50, -20, 0, 20, 80, 70] }, width: [15, 20, 10, 25, 10, 0], height: [10, 15, 15, 10, 5, 0], angle: 0, propeller: !0, texture: [3, 63, 4, 10, 3] },
                IOI0O: {
                    section_segments: 12,
                    offset: { x: 70, y: 50, z: -30 },
                    position: {
                        x: [0, 0, 0, 0, 0, 0, 0],
                        y: [-50, -45, -20, 0, 20, 50, 55],
                    },
                    width: [0, 5, 10, 10, 15, 10, 0],
                    height: [0, 5, 15, 15, 10, 5, 0],
                    angle: 0,
                    propeller: !1,
                    texture: [4, 4, 10, 4, 63, 4],
                    laser: { damage: [6, 12], rate: 3, type: 1, speed: [100, 150], number: 1, error: 0 },
                },
                cannons2: { section_segments: 12, offset: { x: 95, y: 50, z: -40 }, position: { x: [0, 0, 0, 0], y: [-50, -20, 40, 50] }, width: [2, 5, 5, 2], height: [2, 15, 15, 2], angle: 0, propeller: !1, texture: 6, laser: { damage: [4, 10], rate: 3, type: 1, speed: [100, 150], number: 1, error: 0 } },
            },
            wings: { main: { length: [100, 30, 20], width: [100, 50, 40, 30], angle: [-25, 20, 25], position: [30, 70, 50, 50], bump: { position: -20, size: 20 }, offset: { x: 0, y: 0, z: 0 }, texture: [11, 11, 63], doubleside: !0 }, Il111: { length: [40], width: [40, 20, 30], angle: [10, -10], position: [-50, -70, -65], bump: { position: 0, size: 30 }, texture: 63 } },
        }),
        OlII0.add({ name: 'Scorpion', level: 6, model: 2, size: 2, specs: { shield: { capacity: [225, 400], reload: [5, 7] }, generator: { capacity: [80, 175], reload: [38, 50] }, ship: { mass: 450, speed: [75, 90], rotation: [50, 70], acceleration: [80, 100] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -40, -30, 0, 50, 100, 120, 110], z: [-10, -5, 0, 0, 0, 0, 20, 20] }, width: [0, 12, 20, 15, 25, 10, 5], height: [0, 10, 15, 25, 15, 10, 5], texture: [1, 4, 63, 11, 11, 4], propeller: !1 }, tail: { section_segments: 14, offset: { x: 0, y: 70, z: 50 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-70, -25, -10, 20, 40, 50], z: [0, 0, 0, 0, -10, -20] }, width: [0, 5, 35, 25, 5, 5], height: [0, 5, 25, 20, 5, 5], texture: [6, 4, 63, 10, 4], laser: { damage: [50, 100], rate: 0.9, type: 2, speed: [170, 230], number: 1, angle: 0, error: 0, recoil: 100 } }, II1lI: { section_segments: 8, offset: { x: 13, y: -44, z: 12 }, position: { x: [-5, 0, 0, 0, 0], y: [-15, -5, 0, 5, 15], z: [0, 0, 0, 1, 0] }, width: [0, 8, 10, 8, 0], height: [0, 5, 5, 5, 0], texture: [6, 5], propeller: !1 }, ll1ll: { section_segments: 8, offset: { x: 70, y: 0, z: -10 }, position: { x: [0, 0, 0, 10, -5, 0, 0, 0], y: [-115, -80, -100, -60, -30, -10, 20, 0] }, width: [1, 5, 10, 15, 15, 20, 10, 0], height: [1, 5, 15, 20, 35, 30, 10, 0], texture: [6, 6, 1, 1, 11, 2, 12], laser: { damage: [2, 3], rate: 1.8, type: 1, speed: [130, 170], number: 2, angle: 5, error: 0 }, propeller: !0 }, wingends: { section_segments: 8, offset: { x: 105, y: -80, z: -10 }, position: { x: [0, 2, 4, 2, 0], y: [-20, -10, 0, 10, 20] }, width: [2, 3, 6, 3, 2], height: [5, 15, 22, 17, 5], texture: 4, angle: 0, propeller: !1 } }, wings: { main: { length: [80, 30], width: [40, 30, 20], angle: [-10, 20], position: [30, -50, -80], texture: 63, bump: { position: 30, size: 10 } }, font: { length: [80, 30], width: [20, 15], angle: [-10, 20], position: [-20, -40], texture: 4, bump: { position: 30, size: 10 } } } }),
        OlII0.add({ name: 'Marauder', level: 6, model: 3, size: 1.4, specs: { shield: { capacity: [210, 350], reload: [8, 11] }, generator: { capacity: [85, 160], reload: [25, 45] }, ship: { mass: 250, speed: [85, 115], rotation: [60, 80], acceleration: [80, 120] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: -20, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-65, -75, -55, -40, 0, 30, 60, 80, 90, 80], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 6, 18, 23, 30, 25, 25, 30, 35, 0], height: [0, 5, 10, 12, 12, 20, 15, 15, 15, 0], texture: [6, 4, 1, 10, 1, 1, 11, 12, 17], propeller: !0, laser: { damage: [10, 16], rate: 10, type: 1, speed: [170, 200], recoil: 0, number: 1, error: 0 } }, II1lI: { section_segments: [40, 90, 180, 270, 320], offset: { x: 0, y: -85, z: 22 }, position: { x: [0, 0, 0, 0, 0, 0], y: [15, 35, 60, 95, 125], z: [-1, -2, -1, -1, 3] }, width: [5, 12, 14, 15, 5], height: [0, 12, 15, 15, 0], texture: [8.98, 8.98, 4] }, outriggers: { section_segments: 10, offset: { x: 25, y: 0, z: -10 }, position: { x: [-5, -5, 8, -5, 0, 0, 0, 0, 0, 0], y: [-100, -125, -45, 0, 30, 40, 70, 80, 100, 90], z: [10, 10, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 6, 10, 10, 15, 15, 15, 15, 10, 0], height: [0, 10, 20, 25, 25, 25, 25, 25, 20, 0], texture: [13, 4, 4, 63, 4, 18, 4, 13, 17], laser: { damage: [4, 8], rate: 3, type: 1, speed: [110, 140], recoil: 0, number: 1, error: 0 }, propeller: !0 }, intake: { section_segments: 12, offset: { x: 25, y: -5, z: 10 }, position: { x: [0, 0, 5, 0, -3, 0, 0, 0, 0, 0], y: [-10, -30, -5, 35, 60, 70, 85, 100, 85], z: [0, -6, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 10, 10, 15, 10, 10, 5, 0], height: [0, 15, 15, 20, 20, 15, 15, 5, 0], texture: [6, 4, 63, 4, 63, 18, 4, 17] } }, wings: { main: { length: [20, 70, 35], width: [50, 55, 40, 20], angle: [0, -20, 0], position: [20, 20, 70, 25], texture: [3, 18, 63], doubleside: !0, bump: { position: 30, size: 15 }, offset: { x: 0, y: 0, z: 13 } }, spoiler: { length: [20, 45, 0, 5], width: [40, 40, 20, 30, 0], angle: [0, 20, 90, 90], position: [60, 60, 80, 80, 90], texture: [10, 11, 63], doubleside: !0, bump: { position: 30, size: 18 }, offset: { x: 0, y: 0, z: 30 } }, font: { length: [37], width: [40, 15], angle: [-10], position: [0, -45], texture: [63], doubleside: !0, bump: { position: 30, size: 10 }, offset: { x: 35, y: -20, z: 10 } }, shields: { doubleside: !0, offset: { x: 12, y: 60, z: -15 }, length: [0, 15, 45, 20], width: [30, 30, 65, 65, 30, 30], angle: [30, 30, 90, 150], position: [10, 10, 0, 0, 10], texture: [4], bump: { position: 0, size: 4 } } } }),
        OlII0.add({ name: 'Condor', level: 6, model: 4, size: 1.5, specs: { shield: { capacity: [225, 400], reload: [7, 10] }, generator: { capacity: [70, 130], reload: [30, 48] }, ship: { mass: 200, speed: [95, 120], rotation: [50, 70], acceleration: [80, 120] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-110, -95, -100, -100, -45, -40, -25, -23, 15, 20, 55, 80, 100, 90], z: [-10, -9, -8, -7, -6, -4, -2, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 2, 5, 10, 25, 27, 27, 25, 25, 27, 40, 35, 30, 0], height: [0, 2, 5, 10, 25, 27, 27, 25, 25, 27, 20, 15, 10, 0], texture: [6, 2, 3, 10, 5, 63, 5, 2, 5, 3, 63, 11, 4], propeller: !0, laser: { damage: [30, 60], rate: 2, type: 2, speed: [150, 200], number: 1, angle: 0, error: 0 } }, IOI0O: { section_segments: 12, offset: { x: 75, y: 30, z: -25 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -45, -20, 0, 20, 50, 55], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 10, 10, 10, 10, 0], height: [0, 5, 15, 15, 10, 5, 0], angle: 0, laser: { damage: [3, 6], rate: 4, type: 1, speed: [100, 130], number: 1, angle: 0, error: 0 }, propeller: !1, texture: [6, 4, 10, 4, 63, 4] }, II1lI: { section_segments: 12, offset: { x: 0, y: -60, z: 8 }, position: { x: [0, 0, 0, 0], y: [-25, -8, 20, 65], z: [0, 0, 0, 0] }, width: [0, 10, 10, 0], height: [0, 12, 15, 5], texture: [9] } }, wings: { OOll0: { offset: { x: 0, y: 25, z: 10 }, length: [90, 40], width: [70, 50, 30], angle: [-30, 40], position: [0, 20, 0], texture: [11, 63], doubleside: !0, bump: { position: 10, size: 20 } }, front: { offset: { x: 0, y: 55, z: 10 }, length: [90, 40], width: [70, 50, 30], angle: [-30, -40], position: [-60, -20, -20], texture: [11, 63], doubleside: !0, bump: { position: 10, size: 10 } } } }),
        OlII0.add({ name: 'A-Speedster', level: 6, model: 5, size: 1.5, specs: { shield: { capacity: [200, 300], reload: [6, 8] }, generator: { capacity: [80, 140], reload: [30, 45] }, ship: { mass: 165, speed: [90, 130], rotation: [40, 70], acceleration: [90, 120] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-100, -95, 0, 0, 70, 65], z: [0, 0, 0, 0, 0, 0] }, width: [0, 10, 40, 20, 20, 0], height: [0, 5, 30, 30, 15, 0], texture: [6, 11, 5, 63, 12], propeller: !0, laser: { damage: [38, 84], rate: 1, type: 2, speed: [150, 205], recoil: 50, number: 1, error: 0 } }, II1lI: { section_segments: 8, offset: { x: 0, y: -60, z: 15 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-20, 0, 20, 40, 50], z: [-7, -5, 0, 0, 0] }, width: [0, 10, 10, 10, 0], height: [0, 10, 15, 12, 0], texture: [9] }, side_propulsors: { section_segments: 10, offset: { x: 50, y: 25, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 80, 70], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 15, 20, 20, 20, 15, 15, 20, 10, 0], height: [0, 15, 20, 20, 20, 15, 15, 20, 10, 0], propeller: !0, texture: [4, 4, 2, 2, 5, 63, 5, 4, 12] }, IOI0O: { section_segments: 12, offset: { x: 30, y: 40, z: 45 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -45, -20, 0, 20, 30, 40], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 7, 10, 3, 5, 0], height: [0, 5, 7, 8, 3, 5, 0], angle: -10, laser: { damage: [8, 12], rate: 2, type: 1, speed: [100, 130], number: 1, angle: -10, error: 0 }, propeller: !1, texture: [6, 4, 10, 4, 63, 4] } }, wings: { join: { offset: { x: 0, y: 0, z: 10 }, length: [40, 0], width: [10, 20], angle: [-1], position: [0, 30], texture: [63], bump: { position: 0, size: 25 } }, Il111: { offset: { x: 0, y: -40, z: 10 }, doubleside: !0, length: [45, 10], width: [5, 20, 30], angle: [50, -10], position: [90, 80, 50], texture: [4], bump: { position: 10, size: 30 } } } }),
        OlII0.add({ name: 'Rock-Tower', level: 6, model: 6, size: 2.1, specs: { shield: { capacity: [300, 500], reload: [8, 11] }, generator: { capacity: [75, 115], reload: [35, 45] }, ship: { mass: 450, speed: [85, 110], rotation: [50, 70], acceleration: [80, 90] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -85, -70, -60, -20, -25, 40, 85, 70], z: [-10, -8, -5, 0, 0, 0, 0, 0, 0] }, width: [0, 40, 45, 10, 12, 30, 30, 20, 0], height: [0, 10, 12, 8, 12, 10, 25, 20, 0], texture: [4, 63, 4, 4, 4, 11, 10, 12], propeller: !0 }, II1lI: { section_segments: 12, offset: { x: 0, y: 30, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-30, -20, 0, 10, 20, 30], z: [0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 10, 5], height: [0, 10, 15, 15, 10, 5], texture: 9, propeller: !1 }, dimeds_banhammer: { section_segments: 6, offset: { x: 25, y: -70, z: -10 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-20, -10, -20, 0, 10, 12], z: [0, 0, 0, 0, 0, 0] }, width: [0, 0, 5, 7, 6, 0], height: [0, 0, 5, 7, 6, 0], texture: [6, 6, 6, 10, 12], angle: 0, laser: { damage: [4, 6], rate: 8, type: 1, speed: [150, 230], number: 1, error: 5 } }, propulsors: { section_segments: 8, offset: { x: 30, y: 50, z: 0 }, position: { x: [0, 0, 5, 5, 0, 0, 0], y: [-45, -50, -20, 0, 20, 50, 40], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 0], height: [0, 15, 20, 25, 20, 10, 0], texture: [11, 2, 3, 4, 5, 12], angle: 0, propeller: !0 } }, wings: { main: { length: [55, 15], width: [60, 40, 30], angle: [-10, 20], position: [30, 40, 30], texture: 63, doubleside: !0, offset: { x: 0, y: 20, z: -5 }, bump: { position: 30, size: 20 } }, finalizer_fins: { length: [20], width: [20, 10], angle: [-70], position: [-42, -30], texture: 63, doubleside: !0, offset: { x: 35, y: -35, z: 0 }, bump: { position: 0, size: 30 } } } }),
        OlII0.add({ name: 'H-Mercury', level: 6, model: 7, size: 2, specs: { shield: { capacity: [250, 350], reload: [6, 8] }, generator: { capacity: [100, 150], reload: [45, 60] }, ship: { mass: 500, speed: [75, 95], rotation: [50, 60], acceleration: [55, 90] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: -10, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-65, -70, -60, -40, 0, 50, 110, 100], z: [0, 0, 0, 0, 0, 0, 0, 0] }, width: [1, 5, 10, 20, 30, 25, 10, 0], height: [1, 5, 10, 15, 25, 20, 10, 0], texture: [6, 4, 4, 63, 11, 63, 12], propeller: !0, laser: { damage: [5, 9], rate: 8, type: 1, speed: [100, 150], number: 1, error: 0 } }, II1lI: { section_segments: 8, offset: { x: 0, y: -30, z: 35 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-20, -10, 0, 15, 25], z: [0, 0, 0, 0, 0] }, width: [0, 10, 12, 10, 5], height: [0, 10, 13, 12, 5], texture: [9, 9, 4, 4], propeller: !1 }, arms: { section_segments: 8, offset: { x: 60, y: -10, z: -10 }, position: { x: [0, 0, 0, 5, 10, 0, 0, -10], y: [-85, -70, -80, -30, 0, 30, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0] }, width: [1, 5, 6, 15, 15, 15, 10, 0], height: [1, 5, 6, 20, 30, 25, 10, 0], texture: [6, 4, 4, 4, 4, 4, 12], angle: 1, propeller: !0, laser: { damage: [3, 5], rate: 4, type: 1, speed: [150, 200], number: 1, error: 0 } }, canon: { section_segments: 12, offset: { x: 100, y: 17, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -45, -20, 0, 20, 30, 40], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 7, 7, 3, 5, 0], height: [0, 5, 15, 15, 3, 5, 0], angle: 3, laser: { damage: [5, 11], rate: 2, type: 1, speed: [150, 200], number: 1, error: 0 }, propeller: !1, texture: [6, 4, 10, 4, 4, 4] } }, wings: { main: { offset: { x: 0, y: -25, z: 20 }, length: [60, 40], width: [60, 30, 20], angle: [-20, 10], position: [30, 50, 30], texture: [11, 11], bump: { position: 30, size: 10 } }, font: { length: [60], width: [20, 15], angle: [-10, 20], position: [-20, -40], texture: [63], bump: { position: 30, size: 10 }, offset: { x: 0, y: -10, z: 0 } }, font2: { offset: { x: 0, y: 30, z: 8 }, length: [60], width: [20, 15], angle: [-10, 20], position: [20, 40], texture: [63], bump: { position: 30, size: 10 } } } }),
        OlII0.add({ name: 'Barracuda', level: 6, model: 8, size: 2.4, specs: { shield: { capacity: [300, 400], reload: [8, 12] }, generator: { capacity: [100, 150], reload: [8, 14] }, ship: { mass: 675, speed: [70, 90], rotation: [30, 45], acceleration: [130, 150], dash: { rate: 2, burst_speed: [160, 200], speed: [120, 150], acceleration: [70, 70], initial_energy: [50, 75], energy: [20, 30] } } }, bodies: { body: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -100, -60, -10, 0, 20, 50, 80, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 20, 25, 35, 40, 40, 35, 30, 0], height: [0, 5, 40, 45, 40, 60, 70, 60, 30, 0], texture: [10, 2, 10, 2, 3, 13, 13, 63, 12], propeller: !0 }, front: { section_segments: 8, offset: { x: 0, y: -20, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-90, -85, -70, -60, -20] }, width: [0, 40, 45, 10, 12], height: [0, 15, 18, 8, 12], texture: [8, 63, 4, 4, 4], propeller: !0 }, propeller: { section_segments: 10, offset: { x: 40, y: 40, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 70, 60] }, width: [0, 10, 15, 15, 15, 10, 10, 20, 15, 0], height: [0, 10, 15, 15, 15, 10, 10, 18, 8, 0], texture: [4, 4, 10, 3, 3, 63, 4, 63, 12], propeller: !0 }, sides: { section_segments: 6, angle: 90, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-80, -75, -60, -50, -10, 10, 50, 60, 75, 80], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 30, 35, 10, 12, 12, 10, 35, 30, 0], height: [0, 10, 12, 8, 12, 12, 8, 12, 10, 0], texture: [4, 63, 4, 4, 4, 4, 4, 63, 4] }, II1lI: { section_segments: 12, offset: { x: 0, y: -20, z: 30 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-50, -20, 0, 10, 30, 50] }, width: [0, 12, 18, 20, 15, 0], height: [0, 20, 22, 24, 20, 0], texture: [9] } }, wings: { top: { doubleside: !0, offset: { x: 0, y: 20, z: 15 }, length: [70], width: [70, 30], angle: [90], position: [0, 30], texture: [63], bump: { position: 10, size: 30 } }, top2: { doubleside: !0, offset: { x: 0, y: 51, z: 5 }, length: [70], width: [50, 20], angle: [90], position: [0, 60], texture: [63], bump: { position: 10, size: 30 } } } }),
        OlII0.add({ name: 'O-Defender', level: 6, model: 9, size: 2.2, specs: { shield: { capacity: [400, 550], reload: [9, 13] }, generator: { capacity: [70, 100], reload: [25, 40] }, ship: { mass: 550, speed: [70, 80], rotation: [30, 40], acceleration: [80, 110] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-90, -88, 0, 40, 90, 95, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0] }, width: [5, 6, 25, 25, 15, 18, 15, 0], height: [2, 10, 40, 40, 20, 18, 15, 0], texture: [63, 1, 4, 10, 63, 63, 17], propeller: !0, laser: { damage: [35, 60], rate: 2, type: 2, speed: [130, 180], number: 1, angle: 0, error: 0 } }, side: { section_segments: 10, offset: { x: 50, y: 0, z: 0 }, position: { x: [-40, -5, 15, 25, 20, 0, -50], y: [-100, -70, -40, -10, 20, 50, 90], z: [0, 0, 0, 0, 0, 0, 0] }, width: [5, 20, 20, 20, 20, 20, 5], height: [15, 25, 30, 30, 30, 25, 15], texture: [0, 1, 2, 3, 4, 63] }, II1lI: { section_segments: 8, offset: { x: 0, y: -60, z: 18 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, 0, 20, 30, 40], z: [0, 0, 0, 0, 0] }, width: [0, 5, 10, 10, 0], height: [0, 5, 10, 12, 0], texture: [9] }, Ol001: { section_segments: 8, offset: { x: 20, y: -100, z: 0 }, position: { x: [-3, 0, 0, 0, 0, -5, -5], y: [70, 75, 100, 120, 150, 175, 175], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 20, 22, 20, 10, 0], height: [0, 20, 25, 25, 25, 15, 0], propeller: !1, texture: [2, 3, 63, 11, 1] } }, wings: { join: { offset: { x: 0, y: 20, z: 0 }, length: [80, 0], width: [130, 50], angle: [-1], position: [0, -30], texture: [8], bump: { position: -20, size: 15 } } } }),
        OlII0.add({ name: 'Odyssey', level: 7, model: 1, size: 3.1, specs: { shield: { capacity: [750, 750], reload: [15, 15] }, generator: { capacity: [330, 330], reload: [120, 120] }, ship: { mass: 600, speed: [45, 45], rotation: [20, 20], acceleration: [150, 150] } }, tori: { circle: { segments: 20, radius: 95, section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20], height: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], texture: [63, 63, 4, 10, 4, 4, 10, 4, 63, 63, 63, 63, 3, 10, 3, 3, 10, 3, 63] } }, bodies: { main: { section_segments: 16, offset: { x: 0, y: -10, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-130, -130, -85, -70, -60, -20, -25, 40, 40, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 25, 40, 45, 10, 12, 30, 30, 40, 30, 0], height: [0, 20, 25, 25, 10, 12, 25, 25, 20, 10, 0], texture: [4, 15, 63, 4, 4, 4, 11, 10, 4, 12] }, cannonmain: { section_segments: 6, offset: { x: 0, y: -115, z: 0 }, position: { x: [0, 0, 0, 0], y: [-25, -30, -20, 0], z: [0, 0, 0, 0] }, width: [0, 20, 15, 7], height: [0, 10, 9, 7], texture: [6, 6, 6, 10], laser: { damage: [250, 250], rate: 1, type: 1, speed: [105, 105], number: 1, error: 0, recoil: 400 } }, laser1: { section_segments: 8, offset: { x: 110, y: 0, z: 0 }, position: { x: [0, 0, 0, 0], y: [-25, -30, -20, 0], z: [0, 0, 0, 0] }, width: [0, 3, 5, 5], height: [0, 3, 5, 5], texture: [12, 6, 63], laser: { damage: [20, 20], rate: 3, type: 1, speed: [200, 200], number: 1, error: 0 } }, laser2: { section_segments: 8, offset: { x: 110, y: 0, z: 0 }, position: { x: [0, 0, 0, 0], y: [-25, -30, -20, 0], z: [0, 0, 0, 0] }, width: [0, 3, 5, 5], height: [0, 3, 5, 5], texture: [12, 6, 63], angle: 180, laser: { damage: [20, 20], rate: 3, type: 1, speed: [200, 200], number: 1, error: 0 } }, II1lI: { section_segments: 8, offset: { x: 0, y: 0, z: 15 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-30, -10, 0, 10, 30], z: [0, 0, 0, 0, 0] }, width: [0, 12, 15, 10, 0], height: [0, 20, 22, 18, 0], texture: [9] }, bumpers: { section_segments: 8, offset: { x: 85, y: 20, z: 0 }, position: { x: [-10, -5, 5, 10, 5, -10, -15], y: [-90, -85, -40, 0, 20, 60, 65], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 5, 0], height: [0, 20, 35, 35, 25, 15, 0], texture: [11, 2, 63, 4, 3], angle: 0 }, toppropulsors: { section_segments: 8, offset: { x: 17, y: 50, z: 15 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, -5, 10, 20, 25, 30, 40, 50, 40], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], texture: [3, 4, 10, 3, 3, 63, 4, 13, 17], propeller: !0 }, bottompropulsors: { section_segments: 8, offset: { x: 17, y: 50, z: -15 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, -5, 10, 20, 25, 30, 40, 50, 40], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 10, 0], texture: [3, 4, 10, 3, 3, 63, 4, 4, 17], propeller: !0 } }, wings: { topjoin: { offset: { x: 0, y: -3, z: 0 }, doubleside: !0, length: [100], width: [20, 20], angle: [25], position: [0, 0, 0, 50], texture: [1], bump: { position: 10, size: 30 } }, bottomjoin: { offset: { x: 0, y: -3, z: 0 }, doubleside: !0, length: [100], width: [20, 20], angle: [-25], position: [0, 0, 0, 50], texture: [1], bump: { position: -10, size: 30 } } } }),
        OlII0.add({ name: 'Shadow X-3', level: 7, model: 2, size: 2.5, specs: { shield: { capacity: [500, 500], reload: [10, 10] }, generator: { capacity: [225, 225], reload: [65, 65] }, ship: { mass: 225, speed: [110, 110], rotation: [50, 50], acceleration: [90, 90] } }, bodies: { main: { section_segments: 20, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-125, -123, -110, -70, -40, 0, 40, 70, 80, 90, 100], z: [0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 10, 20, 30, 20, 20, 30, 30, 30, 20, 0], height: [0, 5, 10, 30, 20, 10, 10, 15, 15, 15, 10, 10], texture: [12, 4, 15, 4, 63, 63, 4, 4, 5], laser: { damage: [200, 200], rate: 2, type: 1, speed: [150, 150], number: 1, recoil: 200 } }, air: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [0, -80, -30, -10, 10, 30, 50], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 35, 30, 30, 32, 20], height: [0, 15, 10, 10, 10, 10, 10, 15, 15, 15, 10, 10], texture: [4, 3, 2, 2, 2, 3] }, OOll0: { section_segments: 10, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [90, 95, 100, 105, 90], z: [0, 0, 0, 0, 0] }, width: [10, 15, 18, 22, 2], height: [3, 5, 7, 8, 2], texture: [63], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -30, z: 18 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-40, -25, 0, 25, 60, 90, 100], z: [10, 5, 0, 0, -10, -8, -10] }, width: [0, 10, 15, 10, 20, 15, 10], height: [0, 10, 20, 10, 10, 10, 10], texture: [9, 9, 9, 10, 63, 3] }, booster1: { section_segments: 10, offset: { x: 35, y: -10, z: -15 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-35, -25, 0, 10, 20, 25, 30, 40, 70, 60], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 12, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], texture: [6, 4, 10, 3, 4, 3, 2], propeller: !0, laser: { damage: [25, 25], rate: 1, type: 1, speed: [150, 150], number: 1 } }, booster2: { section_segments: 10, offset: { x: 65, y: 10, z: -15 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-35, -25, 0, 10, 20, 25, 30, 40, 70, 60], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 15, 12, 0], height: [0, 10, 15, 15, 15, 10, 10, 15, 5, 0], texture: [4, 4, 10, 3, 4, 3, 2], propeller: !0 } }, wings: { wings: { doubleside: !0, offset: { x: 10, y: 0, z: 5 }, length: [28, 15, 25, 20, 20], width: [100, 60, 80, 50, 70], angle: [-10, 5, 0, 0, 0], position: [-40, 0, 40, 10, 60], texture: [4], bump: { position: -20, size: 15 } }, sideBack: { doubleside: !0, offset: { x: 20, y: 68, z: 0 }, length: [30], width: [30, 15], angle: [-13], position: [0, 30], texture: [63], bump: { position: 10, size: 10 } }, sideFront: { doubleside: !0, offset: { x: 10, y: -95, z: 0 }, length: [30], width: [30, 15], angle: [-13], position: [0, 40], texture: [63], bump: { position: 10, size: 10 } }, top: { doubleside: !0, offset: { x: 10, y: 60, z: 5 }, length: [30], width: [50, 30], angle: [50], position: [0, 50], texture: [3], bump: { position: 10, size: 10 } } } }),
        OlII0.add({ name: 'Bastion', level: 7, model: 3, size: 3.2, specs: { shield: { capacity: [400, 400], reload: [10, 10] }, generator: { capacity: [350, 350], reload: [110, 110] }, ship: { mass: 275, speed: [80, 80], rotation: [25, 25], acceleration: [105, 105] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: 30, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-40, -50, -20, 0, 20, 40, 25], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 22, 18, 16, 15, 0], height: [0, 2, 12, 16, 16, 15, 0], texture: [10, 1, 1, 10, 8, 17], propeller: !0 }, thrusters: { section_segments: 8, offset: { x: 40, y: 23, z: -24 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-25, -20, 0, 20, 40, 30], z: [0, 0, 0, 0, 0, 0] }, width: [0, 8, 12, 8, 8, 0], height: [0, 12, 12, 8, 8, 0], texture: [63, 2, 2, 2, 17], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: 10, z: 20 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-15, -10, 0, 11, 35], z: [-5, -3, -1, 0, 0] }, width: [0, 5, 10, 10, 0], height: [0, 3, 5, 7, 0], texture: [9] }, cannon1: { section_segments: 4, offset: { x: 10, y: -100, z: 1 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, 0, 20, 30, 40], z: [0, 0, 0, 0, 0] }, width: [0, 2, 4, 7, 3], height: [0, 1, 3, 6, 0], texture: [17, 4], laser: { damage: [10, 10], rate: 4, type: 1, speed: [175, 175], number: 1 } }, cannon2: { section_segments: 4, offset: { x: 42.5, y: -149, z: 8 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, 0, 20, 30, 40], z: [0, 0, 0, 0, 0] }, width: [0, 2, 4, 7, 3], height: [0, 1, 3, 6, 0], texture: [17, 4], angle: 1, laser: { damage: [10, 10], rate: 6, type: 1, speed: [180, 180], number: 1 } }, cannon3: { section_segments: 4, offset: { x: 75, y: -125, z: -8 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-10, 0, 20, 30, 40], z: [0, 0, 0, 0, 0] }, width: [0, 2, 4, 7, 3], height: [0, 1, 3, 6, 0], texture: [17, 4], angle: 3, laser: { damage: [10, 10], rate: 3, type: 1, speed: [170, 170], number: 1 } } }, wings: { main1: { doubleside: !0, offset: { x: 9, y: -5, z: 0 }, length: [0, 15, 0, 7], width: [0, 160, 70, 30, 30], angle: [0, 20, 0, -10], position: [30, -20, 30, 30, 30], texture: [13, 63, 13, 8], bump: { position: 35, size: 5 } }, main2: { doubleside: !0, offset: { x: 30, y: -5, z: 0 }, length: [0, 15, 0, 20], width: [0, 80, 90, 200, 30], angle: [30, 30, 30, 30], position: [30, 30, 10, -45, 30], texture: [13, 3, 13, 4], bump: { position: 35, size: 7 } }, main3: { doubleside: !0, offset: { x: 0, y: 5, z: -7 }, length: [45, 35, 0, 20], width: [40, 40, 40, 200, 40], angle: [-20, 20, -20, -5], position: [20, 30, 0, -30, 10], texture: [0, 8, 13, 63], bump: { position: 35, size: 20 } } } }),
        OlII0.add({ name: 'Aries', level: 7, model: 4, size: 3.9, specs: { shield: { capacity: [775, 775], reload: [11, 11] }, generator: { capacity: [180, 180], reload: [100, 100] }, ship: { mass: 700, speed: [75, 75], rotation: [25, 25], acceleration: [95, 95] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: -5, z: 8 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-60, -40, -30, -15, 0, 15, 25, 45, 70], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 15, 20, 22, 22, 18, 15, 10, 0], height: [0, 10, 13, 15, 15, 15, 12, 10, 0], texture: [2, 15, 15, 3, 4, 3, 63, 15] }, mainlow: { section_segments: 6, angle: 0, offset: { x: 0, y: 5, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -95, -80, -70, -10, 10, 60, 70, 85, 90, 85], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 20, 25, 10, 12, 12, 15, 20, 20, 16, 0], height: [0, 10, 12, 8, 12, 12, 8, 12, 10, 7, 0], texture: [3.9, 63, 3.9, 3.9, 3.9, 3.9, 3.9, 63, 12.9, 16.9], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -20, z: 7 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-30, -15, 0, 30, 60], z: [9, 0, 0, 3, 5] }, width: [3, 12, 15, 10, 0], height: [0, 20, 24, 19, 0], texture: [9, 9, 63, 4] }, frontjoin: { section_segments: 6, angle: 45, offset: { x: 8, y: 0, z: -3 }, position: { x: [0, 0, 0, 0], y: [-60, -55, -40, -30], z: [0, 0, 0, 0] }, width: [0, 10, 15, 10], height: [0, 10, 12, 8], texture: [3.9, 63, 3.9] }, arm110: { section_segments: 6, angle: 110, offset: { x: 10, y: -10, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-90, -85, -70, -60, -10], z: [0, 0, 0, 0, 0] }, width: [0, 18, 22, 10, 12], height: [0, 10, 12, 8, 12], texture: [3.9, 63, 3.9] }, arm140: { section_segments: 6, angle: 140, offset: { x: 10, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-90, -85, -70, -60, -10], z: [0, 0, 0, 0, 0] }, width: [0, 18, 22, 10, 12], height: [0, 10, 12, 8, 12], texture: [3.9, 63, 3.9] }, cannon: { section_segments: 6, offset: { x: 0, y: -68, z: 0 }, position: { x: [0, 0, 0], y: [-28, -30, -20], z: [0, 0, 0] }, width: [0, 10, 8], height: [0, 5, 5], texture: [5.9], laser: { damage: [120, 120], rate: 2, type: 1, speed: [105, 105], number: 1, error: 0, recoil: 150 } }, spike1: { section_segments: 6, offset: { x: 59, y: 15.5, z: 9 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-35, -30, -20, 0, 10, 12], z: [0, 0, 0, 0, -5, -10] }, width: [0, 3, 5, 7, 6, 0], height: [0, 3, 5, 7, 6, 0], texture: [2, 3, 12.9, 3.9], angle: -120, laser: { damage: [15, 15], rate: 2, type: 1, speed: [155, 155], number: 1, error: 0, recoil: 0 } }, spike2: { section_segments: 6, offset: { x: 40, y: 58, z: 11 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-35, -30, -20, 0, 10, 12], z: [0, 0, 0, 0, -5, -10] }, width: [0, 3, 5, 7, 6, 0], height: [0, 3, 5, 7, 6, 0], texture: [2, 3, 12.9, 3.9], angle: 215, laser: { damage: [15, 15], rate: 2, type: 1, speed: [155, 155], number: 1, error: 0, recoil: 0 } }, frontside: { section_segments: 6, offset: { x: 38, y: -35, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -35, -20, 0, 20, 35, 50], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 7, 10, 10, 10, 7, 0], height: [10, 15, 15, 15, 15, 15, 0], texture: [2.9, 63, 3.9, 3.9, 63, 2.9], angle: 18 } }, wings: { side_joins: { offset: { x: 0, y: 5, z: 5 }, length: [40, 30], width: [50, 30, 0], angle: [30, -10], position: [0, 0, 50], texture: [11, 3], bump: { position: 10, size: 20 } } } }),
        BATTLE_SHIPS.add({ name: 'Renegade', designer: 'Kleinem', level: 3, model: 1, size: 1.9, specs: { shield: { capacity: [350, 350], reload: [0, 0] }, generator: { capacity: [450, 450], reload: [0, 0] }, ship: { mass: 200, speed: [120, 120], rotation: [80, 80], acceleration: [120, 120] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: -72, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [0, 1, 35, 80, 105, 105, 118, 108], z: [0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 6, 12, 16, 10, 8, 8, 0], height: [0, 4, 9, 16, 10, 8, 8, 0], texture: [4, 1, 10, 11, 4, 13, 17], propeller: !0, laser: { damage: [55, 55], rate: 1, type: 1, speed: [110, 110], number: 1, error: 0 } }, II1lI: { section_segments: 8, offset: { x: 0, y: -22, z: 10 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [0, 3, 28, 36, 37], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 7, 10, 6, 0], height: [0, 3, 8, 4, 0], texture: [9] }, lasers: { section_segments: 8, offset: { x: 30, y: -98, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [10, 0, 62, 72, 79, 102, 126, 127], z: [6, 6, 9, 3, -3, -5, -5, -5] }, width: [0, 4, 10, 4, 4, 12, 5, 0], height: [0, 4, 8, 4, 4, 5, 4, 0], texture: [12, 10, 1, 4, 11, 11, 63], angle: 18 }, braces: { section_segments: 8, offset: { x: 28, y: -104, z: 0 }, position: { x: [2, 0, 10, 5, 2, 2, 2, 2], y: [0, 1, 35, 52, 76, 97, 112, 113], z: [3, 3, 3, 3, 0, -5, -5, -5] }, width: [0, 6, 13, 14, 9, 9, 4, 0], height: [0, 3, 4, 4, 4, 4, 3, 0], texture: [63, 3, 63, 4, 8, 4, 63] }, thrusters: { section_segments: 8, offset: { x: 82, y: 15, z: 0 }, position: { x: [0, 0, 0, 0], y: [0, 7, 23, 13], z: [0, 0, 0, 0] }, width: [0, 5, 5, 0], height: [0, 4, 4, 0], texture: [4, 13, 17], propeller: !0 } }, wings: { main: { offset: { x: 7, y: 0, z: 7 }, length: [24, 21, 19, 5, 12], width: [40, 44, 27, 27, 70, 61], angle: [-10, -4, 0, -10, 4], position: [0, 8, 4, -6, -6, -6], texture: [4, 63, 3, 13, 4], doubleside: !0, bump: { position: 0, size: 15 } } } }),
        BATTLE_SHIPS.add({ name: 'Stingray', designer: 'Goldman', level: 3, model: 2, size: 1.5, specs: { shield: { capacity: [440, 440], reload: [0, 0] }, generator: { capacity: [400, 400], reload: [0, 0] }, ship: { mass: 250, speed: [100, 100], rotation: [90, 90], acceleration: [110, 110] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: -20, z: -10 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-70, -67, -60, -40, 0, 40, 80, 95, 115, 125, 115], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 5, 10, 20, 30, 25, 25, 25, 15, 13, 0], height: [0, 5, 10, 15, 25, 25, 25, 20, 15, 13, 0], texture: [4, 4, 63, 2, 1, 10, 63, 4, 12, 17], propeller: !0 }, IOI0O: { section_segments: 8, offset: { x: 24, y: -45, z: -35 }, position: { x: [-1, -1, 0, 0, 0, -5], y: [-55, -65, -25, 0, 25, 35], z: [0, 0, 0, 0, 5, 10] }, width: [0, 7, 11, 14, 10, 0], height: [0, 7, 11, 14, 13, 0], angle: 0, laser: { damage: [20, 20], rate: 2, type: 1, speed: [150, 150], recoil: 40, number: 1, error: 0 }, texture: [6, 4, 10, 4] }, II1lI: { section_segments: 8, offset: { x: 0, y: -30, z: 8 }, position: { x: [0, 0, 0, 0, 0, 0], y: [-35, -20, 0, 25, 55], z: [-6, -5, 0, 5, 5] }, width: [0, 10, 15, 10, 0], height: [0, 10, 15, 10, 0], texture: [7, 9, 9, 4] }, arms: { section_segments: 8, offset: { x: 60, y: -30, z: -10 }, position: { x: [-26, -17, -6, 0, 0, 0, 0, 0, 0], y: [-47, -40, -20, 0, 60, 70, 80, 90, 80], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 8, 15, 15, 15, 12, 11, 10, 0], height: [0, 8, 10, 15, 15, 12, 11, 10, 0], texture: [63, 63, 4, 4, 4, 4, 12, 17], angle: 1, propeller: !0 } }, wings: { wings: { doubleside: !0, offset: { x: 5, y: -10, z: -10 }, length: [35, 22, 22, 15], width: [100, 100, 63, 50, 60], angle: [-10, 20, 0, 0], position: [20, 0, 10, 20, 10], texture: [63, 4, 4, 63], bump: { position: 25, size: 10 } }, top: { doubleside: !0, offset: { x: 0, y: 85, z: 0 }, length: [5, 30], width: [60, 60, 40], angle: [90, 90, 90], position: [-30, -30, 0], texture: 63, bump: { position: 20, size: 10 } }, side2: { length: [40, 10], width: [60, 20, 20], angle: [10, 60], position: [0, 20, 15], doubleside: !0, texture: 63, bump: { position: 10, size: 10 }, offset: { x: 0, y: 55, z: -15 } } } }),
        BATTLE_SHIPS.add({ name: 'Intrepid', designer: 'Finalizer', level: 3, model: 3, size: 1.6, specs: { shield: { capacity: [320, 320], reload: [0, 0] }, generator: { capacity: [320, 320], reload: [0, 0] }, ship: { mass: 180, speed: [130, 130], rotation: [110, 110], acceleration: [80, 80] } }, bodies: { main: { section_segments: 8, offset: { x: 0, y: -20, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-110, -106, -80, -40, -20, 0, 30, 50, 80, 100, 120, 115], z: [8, 8, 8, 8, 8, 8, 8, -4, -5, -6, -5, -10] }, width: [0, 18, 37, 45, 45, 40, 25, 20, 18, 15, 13, 10], height: [0, 8, 12, 15, 15, 15, 15, 20, 18, 15, 10, 0], texture: [3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 13] }, side_engines: { section_segments: 8, offset: { x: 45, y: 10, z: -7 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0], y: [10, 12, 18, 20, 80, 90, 89, 85], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 6, 8, 10, 11, 10, 8, 0], height: [0, 6, 7, 10, 11, 10, 8, 0], texture: [17, 17, 2, 10, 3, 18, 17], propeller: !0 }, II1lI: { section_segments: 8, offset: { x: 0, y: -110, z: 26 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [20, 40, 60, 90, 120, 140, 210], z: [-5, -5, -4, -5, -5, -11, -19] }, width: [5, 13, 15, 10, 6, 4, 1], height: [0, 8, 10, 4, 3, 3, 0], texture: [9, 9, 63, 63, 13, 4] }, IOI0O: { section_segments: 8, angle: 3, offset: { x: 25, y: -90, z: 17 }, position: { x: [0, 0, 0, 0, 2, 4, 4, 0, -3], y: [-10, -1, -4, 0, 10, 30, 40, 60, 70], z: [0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 3, 3.5, 3, 3, 3, 3, 3, 0], height: [0, 5, 5, 5, 5, 5, 5, 5, 0], texture: [17, 12, 6, 3], laser: { damage: [4, 4], rate: 5, type: 1, speed: [170, 170], number: 1, error: 0 } }, detail: { section_segments: 8, offset: { x: 0, y: -140, z: 22 }, position: { x: [0, 0], y: [20, 40], z: [-5, -5] }, width: [5, 10], height: [0, 3], texture: [13] } }, wings: { main: { doubleside: !0, offset: { x: 0, y: 70, z: -12 }, length: [25, 20], width: [70, 60, 40], angle: [0, 20], position: [0, -5, -15], texture: [63, 13], bump: { position: 30, size: 5 } } } }),
        BATTLE_SHIPS.add({ name: 'Hammer', designer: 'Goldman', level: 3, model: 4, size: 1.7, specs: { shield: { capacity: [500, 500], reload: [0, 0] }, generator: { capacity: [350, 350], reload: [0, 0] }, ship: { mass: 280, speed: [130, 130], rotation: [80, 80], acceleration: [60, 60], dash: { rate: 2, burst_speed: [240, 240], speed: [150, 150], acceleration: [130, 130], initial_energy: [60, 60], energy: [30, 30] } } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-100, -100, -45, -20, -3, 5, 55, 80, 100, 90], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 23, 21, 21, 45, 40, 15, 0], height: [0, 4, 30, 43, 41, 41, 40, 35, 28, 0], texture: [4, 4, 10, 63, 2, 4, 63, 4, 17], propeller: !0 }, II1lI: { section_segments: 12, offset: { x: 0, y: 10, z: 40 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0], y: [-40, -20, 0, 20, 30, 50], z: [-10, -5, 0, 0, -5, -5] }, width: [0, 12, 18, 20, 15, 0], height: [0, 15, 15, 17, 13, 0], texture: [7, 9, 9, 4, 63] }, uwings: { section_segments: 12, offset: { x: 55, y: -20, z: -10 }, position: { x: [-25, -17, -15, -20, -23, 0], y: [-60, -10, 40, 80, 90, 100], z: [10, 9, 0, 0, 0, 0] }, width: [5, 8, 17, 10, 0], height: [10, 10, 20, 10, 0], texture: [63, 3, 3, 4] }, arm: { section_segments: 12, angle: 90, offset: { x: 0, y: -81, z: 0 }, position: { x: [-8, -8, -5, -1, 0, 0, -1, -5, -8, -8], y: [-62, -59, -50, -40, -10, 10, 40, 50, 59, 62], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 12, 13, 14, 20, 20, 14, 13, 12, 0], height: [0, 12, 13, 14, 25, 25, 14, 13, 12, 0], texture: [4, 63, 4, 10, 63, 10, 4, 63, 4] }, side_propulsors: { section_segments: 10, offset: { x: 40, y: 40, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-20, -15, 0, 10, 20, 25, 30, 40, 70, 60], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 15, 15, 15, 10, 10, 20, 12, 0], height: [0, 20, 25, 25, 25, 25, 25, 30, 17, 0], texture: [4, 4, 63, 3, 3, 63, 4, 63, 17], propeller: !0 } } }),
        BATTLE_SHIPS.add({ name: 'Cronus', designer: 'SChickenMan', level: 3, model: 5, size: 1.6, specs: { shield: { capacity: [300, 300], reload: [0, 0] }, generator: { capacity: [500, 500], reload: [0, 0] }, ship: { mass: 130, speed: [140, 140], rotation: [100, 100], acceleration: [140, 140] } }, bodies: { main: { section_segments: 12, offset: { x: 0, y: 0, z: 0 }, position: { x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y: [-93, -90, -80, -40, -30, -20, -10, 0, 30, 10], z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }, width: [0, 10, 20, 20, 20, 15, 13, 15, 20, 0], height: [0, 10, 20, 25, 25, 15, 13, 10, 15, 0], texture: [3, 2, 63, 2, 2, 11, 63, 12, 17], propeller: !0 }, II1lI: { section_segments: 12, offset: { x: 0, y: -70, z: 16 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-15, -13, 0, 30, 40], z: [-20, -10, 0, 0, 0] }, width: [0, 7, 10, 10, 0], height: [0, 15, 15, 15, 0], texture: [9], propeller: !1 }, cannons1: { section_segments: 12, offset: { x: 60, y: -50, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-30, -20, 0, 20, 30], z: [0, 0, 0, 0, 0] }, width: [2, 4, 10, 10, 3], height: [3, 5, 10, 10, 3], texture: [6, 63, 4, 63], angle: 0, laser: { damage: [3, 3], rate: 4, type: 1, speed: [120, 120], number: 1, error: 0 } }, cannons2: { section_segments: 12, offset: { x: 30, y: -50, z: 0 }, position: { x: [0, 0, 0, 0, 0], y: [-30, -20, 0, 20, 30], z: [0, 0, 0, 0, 0] }, width: [2, 4, 10, 10, 3], height: [3, 5, 10, 10, 3], texture: [6, 63, 4, 63], angle: 0, laser: { damage: [5, 5], rate: 3, type: 1, speed: [140, 140], number: 1, error: 0 } }, cannonsupports: { section_segments: 12, offset: { x: 45, y: -40, z: 5 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -50, -20, 0, 20, 30, 5], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 2, 5, 3, 5, 5, 0], height: [0, 2, 5, 3, 5, 5, 0], texture: [12, 3, 2, 11, 63, 12], angle: 0 }, wingend: { section_segments: 12, offset: { x: 105, y: -20, z: -35 }, position: { x: [0, 0, 0, 0, 0, 0, 0], y: [-50, -50, -20, 0, 20, 30, 5], z: [0, 0, 0, 0, 0, 0, 0] }, width: [0, 2, 5, 3, 5, 5, 0], height: [0, 2, 5, 3, 5, 5, 0], texture: [12, 3, 2, 11, 63, 12], angle: 0 } }, wings: { main: { doubleside: !0, offset: { x: 0, y: -50, z: 0 }, length: [70, 50, 50], width: [60, 40, 40], angle: [0, -45, 0], position: [0, 0, 30], texture: [4, 63], bump: { position: [20], size: 18 } } } }),
        (THREE.OBJLoader = (function () {
            function t() {
                var t = {
                    objects: [],
                    object: {},
                    vertices: [],
                    normals: [],
                    lOI00: [],
                    materialLibraries: [],
                    startObject: function (t, e) {
                        var i, s;
                        if (this.object && !1 === this.object.fromDeclaration) return (this.object.name = t), void (this.object.fromDeclaration = !1 !== e);
                        (i = this.object && 'function' == typeof this.object.currentMaterial ? this.object.currentMaterial() : void 0),
                            this.object && 'function' == typeof this.object._finalize && this.object._finalize(!0),
                            (this.object = {
                                name: t || '',
                                fromDeclaration: !1 !== e,
                                geometry: { vertices: [], normals: [], lOI00: [] },
                                materials: [],
                                smooth: !0,
                                startMaterial: function (t, e) {
                                    var i,
                                        s = this._finalize(!1);
                                    return (
                                        s && (s.inherited || s.groupCount <= 0) && this.materials.splice(s.index, 1),
                                        (i = {
                                            index: this.materials.length,
                                            name: t || '',
                                            mtllib: Array.isArray(e) && e.length > 0 ? e[e.length - 1] : '',
                                            smooth: void 0 !== s ? s.smooth : this.smooth,
                                            groupStart: void 0 !== s ? s.groupEnd : 0,
                                            groupEnd: -1,
                                            groupCount: -1,
                                            inherited: !1,
                                            clone: function (t) {
                                                var e = { index: 'number' == typeof t ? t : this.index, name: this.name, mtllib: this.mtllib, smooth: this.smooth, groupStart: 0, groupEnd: -1, groupCount: -1, inherited: !1 };
                                                return (e.clone = this.clone.bind(e)), e;
                                            },
                                        }),
                                        this.materials.push(i),
                                        i
                                    );
                                },
                                currentMaterial: function () {
                                    if (this.materials.length > 0) return this.materials[this.materials.length - 1];
                                },
                                _finalize: function (t) {
                                    var e,
                                        i = this.currentMaterial();
                                    if ((i && -1 === i.groupEnd && ((i.groupEnd = this.geometry.vertices.length / 3), (i.groupCount = i.groupEnd - i.groupStart), (i.inherited = !1)), t && this.materials.length > 1)) for (e = this.materials.length - 1; e >= 0; e--) this.materials[e].groupCount <= 0 && this.materials.splice(e, 1);
                                    return t && 0 === this.materials.length && this.materials.push({ name: '', smooth: this.smooth }), i;
                                },
                            }),
                            i && i.name && 'function' == typeof i.clone && ((s = i.clone(0)), (s.inherited = !0), this.object.materials.push(s)),
                            this.objects.push(this.object);
                    },
                    finalize: function () {
                        this.object && 'function' == typeof this.object._finalize && this.object._finalize(!0);
                    },
                    parseVertexIndex: function (t, e) {
                        var i = parseInt(t, 10);
                        return 3 * (i >= 0 ? i - 1 : i + e / 3);
                    },
                    parseNormalIndex: function (t, e) {
                        var i = parseInt(t, 10);
                        return 3 * (i >= 0 ? i - 1 : i + e / 3);
                    },
                    parseUVIndex: function (t, e) {
                        var i = parseInt(t, 10);
                        return 2 * (i >= 0 ? i - 1 : i + e / 2);
                    },
                    addVertex: function (t, e, i) {
                        var s = this.vertices,
                            l = this.object.geometry.vertices;
                        l.push(s[t + 0], s[t + 1], s[t + 2]), l.push(s[e + 0], s[e + 1], s[e + 2]), l.push(s[i + 0], s[i + 1], s[i + 2]);
                    },
                    addVertexLine: function (t) {
                        var e = this.vertices;
                        this.object.geometry.vertices.push(e[t + 0], e[t + 1], e[t + 2]);
                    },
                    addNormal: function (t, e, i) {
                        var s = this.normals,
                            l = this.object.geometry.normals;
                        l.push(s[t + 0], s[t + 1], s[t + 2]), l.push(s[e + 0], s[e + 1], s[e + 2]), l.push(s[i + 0], s[i + 1], s[i + 2]);
                    },
                    addUV: function (t, e, i) {
                        var s = this.lOI00,
                            l = this.object.geometry.lOI00;
                        l.push(s[t + 0], s[t + 1]), l.push(s[e + 0], s[e + 1]), l.push(s[i + 0], s[i + 1]);
                    },
                    addUVLine: function (t) {
                        var e = this.lOI00;
                        this.object.geometry.lOI00.push(e[t + 0], e[t + 1]);
                    },
                    addFace: function (t, e, i, s, l, n, a, o, r) {
                        var h,
                            u,
                            d = this.vertices.length,
                            c = this.parseVertexIndex(t, d),
                            p = this.parseVertexIndex(e, d),
                            I = this.parseVertexIndex(i, d);
                        this.addVertex(c, p, I), void 0 !== s && ((h = this.lOI00.length), (c = this.parseUVIndex(s, h)), (p = this.parseUVIndex(l, h)), (I = this.parseUVIndex(n, h)), this.addUV(c, p, I)), void 0 !== a && ((u = this.normals.length), (c = this.parseNormalIndex(a, u)), (p = a === o ? c : this.parseNormalIndex(o, u)), (I = a === r ? c : this.parseNormalIndex(r, u)), this.addNormal(c, p, I));
                    },
                    addLineGeometry: function (t, e) {
                        var i, s, l, n, a;
                        for (this.object.geometry.type = 'Line', i = this.vertices.length, s = this.lOI00.length, l = 0, n = t.length; l < n; l++) this.addVertexLine(this.parseVertexIndex(t[l], i));
                        for (a = 0, n = e.length; a < n; a++) this.addUVLine(this.parseUVIndex(e[a], s));
                    },
                };
                return t.startObject('', !1), t;
            }
            function e(t) {
                (this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager), (this.materials = null);
            }
            var i = /^[og]\s*(.+)?/,
                s = /^mtllib /,
                l = /^usemtl /;
            return (
                (e.prototype = {
                    constructor: e,
                    load: function (t, e, i, s) {
                        var l = this,
                            n = new THREE.FileLoader(l.manager);
                        n.setPath(this.path),
                            n.load(
                                t,
                                function (t) {
                                    e(l.parse(t));
                                },
                                i,
                                s
                            );
                    },
                    setPath: function (t) {
                        this.path = t;
                    },
                    setMaterials: function (t) {
                        return (this.materials = t), this;
                    },
                    parse: function (e) {
                        var n,
                            a,
                            o,
                            r,
                            h,
                            u,
                            d,
                            c,
                            p,
                            I,
                            O,
                            m,
                            f,
                            g,
                            y,
                            v,
                            b,
                            w,
                            x,
                            k,
                            E,
                            _,
                            z,
                            M,
                            T,
                            S,
                            R,
                            P,
                            A,
                            H,
                            D,
                            C,
                            j,
                            G,
                            L,
                            B,
                            F,
                            V,
                            N,
                            q = new t();
                        for (-1 !== e.indexOf('\r\n') && (e = e.replace(/\r\n/g, '\n')), -1 !== e.indexOf('\\\n') && (e = e.replace(/\\\n/g, '')), n = e.split('\n'), a = '', o = '', 0, r = [], h = 'function' == typeof ''.trimLeft, u = 0, d = n.length; u < d; u++)
                            if (((a = n[u]), (a = h ? a.trimLeft() : a.trim()), 0 !== a.length && '#' !== (o = a.charAt(0))))
                                if ('v' === o)
                                    switch (((c = a.split(/\s+/)), c[0])) {
                                        case 'v':
                                            q.vertices.push(parseFloat(c[1]), parseFloat(c[2]), parseFloat(c[3]));
                                            break;
                                        case 'vn':
                                            q.normals.push(parseFloat(c[1]), parseFloat(c[2]), parseFloat(c[3]));
                                            break;
                                        case 'vt':
                                            q.lOI00.push(parseFloat(c[1]), parseFloat(c[2]));
                                    }
                                else if ('f' === o) {
                                    for (p = a.substr(1).trim(), I = p.split(/\s+/), O = [], m = 0, f = I.length; m < f; m++) (g = I[m]), g.length > 0 && ((y = g.split('/')), O.push(y));
                                    for (v = O[0], m = 1, f = O.length - 1; m < f; m++) (b = O[m]), (w = O[m + 1]), q.addFace(v[0], b[0], w[0], v[1], b[1], w[1], v[2], b[2], w[2]);
                                } else if ('l' === o) {
                                    if (((x = a.substring(1).trim().split(' ')), (k = []), (E = []), -1 === a.indexOf('/'))) k = x;
                                    else for (_ = 0, z = x.length; _ < z; _++) (M = x[_].split('/')), '' !== M[0] && k.push(M[0]), '' !== M[1] && E.push(M[1]);
                                    q.addLineGeometry(k, E);
                                } else if (null !== (r = i.exec(a))) (T = (' ' + r[0].substr(1).trim()).substr(1)), q.startObject(T);
                                else if (l.test(a)) q.object.startMaterial(a.substring(7).trim(), q.materialLibraries);
                                else if (s.test(a)) q.materialLibraries.push(a.substring(7).trim());
                                else {
                                    if ('s' !== o) {
                                        if ('\0' === a) continue;
                                        throw Error("Unexpected line: '" + a + "'");
                                    }
                                    (r = a.split(' ')), r.length > 1 ? ((S = r[1].trim().toLowerCase()), (q.object.smooth = '0' !== S && 'off' !== S)) : (q.object.smooth = !0), (R = q.object.currentMaterial()) && (R.smooth = q.object.smooth);
                                }
                        for (q.finalize(), P = new THREE.Group(), P.materialLibraries = [].concat(q.materialLibraries), u = 0, d = q.objects.length; u < d; u++)
                            if (((A = q.objects[u]), (H = A.geometry), (D = A.materials), (C = 'Line' === H.type), 0 !== H.vertices.length)) {
                                for (j = new THREE.BufferGeometry(), j.addAttribute('position', new THREE.BufferAttribute(new Float32Array(H.vertices), 3)), H.normals.length > 0 ? j.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(H.normals), 3)) : j.computeVertexNormals(), H.lOI00.length > 0 && j.addAttribute('uv', new THREE.BufferAttribute(new Float32Array(H.lOI00), 2)), G = [], L = 0, B = D.length; L < B; L++) (F = D[L]), (R = void 0), null !== this.materials && ((R = this.materials.create(F.name)), !C || !R || R instanceof THREE.LineBasicMaterial || ((V = new THREE.LineBasicMaterial()), V.copy(R), (R = V))), R || ((R = C ? new THREE.LineBasicMaterial() : new THREE.MeshPhongMaterial()), (R.name = F.name)), (R.flatShading = !F.smooth), G.push(R);
                                if (G.length > 1) {
                                    for (L = 0, B = D.length; L < B; L++) (F = D[L]), j.addGroup(F.groupStart, F.groupCount, L);
                                    N = C ? new THREE.LineSegments(j, G) : new THREE.Mesh(j, G);
                                } else N = C ? new THREE.LineSegments(j, G[0]) : new THREE.Mesh(j, G[0]);
                                (N.name = A.name), P.add(N);
                            }
                        return P;
                    },
                }),
                e
            );
        })()),
        (this.AlienModel = (function () {
            function t(t) {
                var e, i, s;
                (this.code = t),
                    (s = new THREE.LoadingManager()),
                    (i = new THREE.OBJLoader(s)),
                    (this.lambert_img = new Image()),
                    (this.lambert_img.crossOrigin = 'Anonymous'),
                    (this.lambert_img.onload = (function (t) {
                        return function () {
                            return (t.lambert = new THREE.Texture(t.lambert_img)), (t.lambert.needsUpdate = !0), t.checkLoaded();
                        };
                    })(this)),
                    (this.lambert_img.src = 'https://starblast.data.neuronality.com/models/aliens/' + this.code + '/lambert.jpg'),
                    (this.emissive_img = new Image()),
                    (this.emissive_img.crossOrigin = 'Anonymous'),
                    (this.emissive_img.onload = (function (t) {
                        return function () {
                            return (t.emissive = new THREE.Texture(t.emissive_img)), (t.emissive.needsUpdate = !0), t.checkLoaded();
                        };
                    })(this)),
                    (this.emissive_img.src = 'https://starblast.data.neuronality.com/models/aliens/' + this.code + '/emissive.jpg'),
                    (e = 'https://starblast.data.neuronality.com/models/aliens/' + this.code + '/model.obj'),
                    i.load(
                        e,
                        (function (t) {
                            return function (e) {
                                return (t.object = e), t.checkLoaded();
                            };
                        })(this)
                    ),
                    (this.queue = []);
            }
            return (
                (t.prototype.checkLoaded = function () {
                    if (null != this.object && null != this.emissive && null != this.lambert) for (this.l0OlI = this.object.children[0]; this.queue.length > 0; ) this.getInstance(this.queue.splice(0, 1)[0]);
                }),
                (t.prototype.getInstance = function (t) {
                    var e;
                    return null == this.l0OlI ? this.queue.push(t) : ((e = new THREE.MeshPhongMaterial({ color: 16777215, map: this.lambert, emissiveMap: this.emissive, emissive: 16728080, shininess: 30, specular: 4210752, specularMap: this.lambert })), t(new THREE.Mesh(this.l0OlI.geometry, e)));
                }),
                (t.prototype.shapePoint = function (t, e, i) {
                    var s, l, n;
                    return (n = i.length), (s = Math.atan2(e, -t)), (s = Math.round(((s + 180 * THREE.Math.DEG2RAD * 2) / (180 * THREE.Math.DEG2RAD * 2)) * n) % n), (l = Math.sqrt(t * t + e * e)), (i[s] = Math.max(i[s], l));
                }),
                (t.prototype.l0IO0 = function (t, e) {
                    var i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v;
                    for (null == e && (e = 50), s = new THREE.Geometry(), s.fromBufferGeometry(t), t = s, O = [], n = o = 0, c = e - 1; 0 <= c ? o <= c : o >= c; n = 0 <= c ? ++o : --o) O[n] = 0;
                    for (p = t.faces, r = 0, u = p.length; r < u; r++) for (l = p[r], m = t.vertices[l.a], f = t.vertices[l.b], g = t.vertices[l.c], n = h = 0; h <= 99; n = h += 1) (i = n / 100), (y = m.x * i + f.x * (1 - i)), (v = m.y * i + f.y * (1 - i)), this.shapePoint(y, v, O), (y = g.x * i + f.x * (1 - i)), (v = g.y * i + f.y * (1 - i)), this.shapePoint(y, v, O), (y = g.x * i + m.x * (1 - i)), (v = g.y * i + m.y * (1 - i)), this.shapePoint(y, v, O);
                    for (a = d = 0, I = O.length - 1; 0 <= I ? d <= I : d >= I; a = 0 <= I ? ++d : --d) O[a] = parseFloat(O[a].toFixed(3));
                    return O;
                }),
                t
            );
        })()),
        (this.AlienModels = (function () {
            function t() {
                this.models = {};
            }
            return (
                (t.prototype.getInstance = function (t, e) {
                    return this.models[t] || (this.models[t] = new AlienModel(t)), this.models[t].getInstance(e);
                }),
                t
            );
        })()),
        (ALIEN_MODELS = new AlienModels()),
        (this.HaloModel = (function () {
            function t(t) {
                var e, i, s;
                (this.code = t),
                    (s = new THREE.LoadingManager()),
                    (i = new THREE.OBJLoader(s)),
                    (this.emissive_img = new Image()),
                    (this.emissive_img.crossOrigin = 'Anonymous'),
                    (this.emissive_img.onload = (function (t) {
                        return function () {
                            return (t.emissive = new THREE.Texture(t.emissive_img)), (t.emissive.needsUpdate = !0), t.checkLoaded();
                        };
                    })(this)),
                    (this.emissive_img.src = 'https://starblast.data.neuronality.com/models/aliens/' + this.code + '/halo.jpg'),
                    (e = 'https://starblast.data.neuronality.com/models/aliens/' + this.code + '/halo.obj'),
                    i.load(
                        e,
                        (function (t) {
                            return function (e) {
                                return (t.object = e), t.checkLoaded();
                            };
                        })(this)
                    ),
                    (this.queue = []);
            }
            return (
                (t.prototype.checkLoaded = function () {
                    if (null != this.object && null != this.emissive) for (this.geometry = this.object.children[0].geometry; this.queue.length > 0; ) this.getInstance(this.queue.splice(0, 1)[0]);
                }),
                (t.prototype.getInstance = function (t) {
                    var e;
                    return null == this.geometry ? this.queue.push(t) : ((e = new THREE.MeshBasicMaterial({ color: 4210752, map: this.emissive, blending: THREE.AdditiveBlending, transparent: !0, side: THREE.DoubleSide, depthWrite: !1 })), t(new THREE.Mesh(this.geometry, e)));
                }),
                t
            );
        })()),
        (this.HaloModels = (function () {
            function t() {
                this.models = {};
            }
            return (
                (t.prototype.getInstance = function (t, e) {
                    return this.models[t] || (this.models[t] = new HaloModel(t)), this.models[t].getInstance(e);
                }),
                t
            );
        })()),
        (HALO_MODELS = new HaloModels()),
        (this.Alien = (function () {
            function t(t, e) {
                (this.l1110 = t), (this.code = e.getUint8(1)), (this.id = e.getUint16(2, !0)), (this.level = e.getUint8(5)), (this.IO11l = this.l1110.lIlO0.IO11l), (this.type = ALIEN_TYPES.types_by_code[this.code]), (this.speed = 0.004 * this.getSpec('speed')), (this.dash_speed = 0.004 * this.getSpec('laser_speed')), (this.IlII0 = Math.exp((Math.log(0.5) * this.getSpec('IlII0')) / 3e3)), (this.hue = this.getSpec('hue')), (this.max_shield = this.getSpec('shield')), (this.shield = 0), (this.mass = this.getSpec('mass')), (this.dashing = !1), (this.fancy = !1), (this.llllO = 0), (this.l1O10 = 0), (this.lIl10 = 0), this.read(e), this.l1O0l(e), this.createModel(), (this.pop = 0), (this.killed = !1), (this.rotx = 0), (this.rotxs = 0), (this.roty = 0), (this.rotys = 0), (this.rotz = 0), (this.rotzs = 0), (this.rotk = 0.05), (this.rotf = 0.2);
            }
            return (
                (t.prototype.l1O0l = function (t) {
                    var e, i, s;
                    if ((s = t.getUint32(6, !0)) > this.IO11l.II1O0) this.I0l1l = t;
                    else if (s < this.IO11l.II1O0) {
                        if ((this.read(t), this.IO11l.II1O0 - s < 30)) for (e = s + 1, i = this.IO11l.II1O0; e <= i; e += 1) this.l0Ill();
                    } else this.read(t);
                }),
                (t.prototype.getSpec = function (t) {
                    var e;
                    return (e = this.type[t]), Array.isArray(e) ? e[Math.min(this.level, e.length - 1)] : e;
                }),
                (t.prototype.read = function (t) {
                    return (this.x = t.getFloat32(10, !0)), (this.y = t.getFloat32(14, !0)), (this.lllOl = t.getFloat32(18, !0)), (this.II110 = t.getFloat32(22, !0)), (this.r = t.getFloat32(26, !0)), (this.lIl10 = t.getFloat32(30, !0)), (this.target_r = t.getFloat32(34, !0)), (this.shield = t.getUint8(4)), 2 === this.type.OI00O ? ((this.dashing = !0 & t.getUint8(38)), t.getUint8(38) > 1 && (this.hue = (360 * (254 & t.getUint8(38))) / 256)) : (this.fancy = 0 !== t.getUint8(38)), (this.last_update = this.IO11l.II1O0);
                }),
                (t.prototype.createModel = function () {
                    var t;
                    return 19 === this.code
                        ? ((t = (function (t) {
                              return function () {
                                  if (null != t.body_model && null != t.halo_model) return (t.l0OlI = t.body_model), t.l0OlI.add(t.halo_model), t.l1110.lIlO0.lIlO0.add(t.l0OlI);
                              };
                          })(this)),
                          ALIEN_MODELS.getInstance(
                              this.code,
                              (function (e) {
                                  return function (i) {
                                      return (e.body_model = i), t();
                                  };
                              })(this)
                          ),
                          HALO_MODELS.getInstance(
                              this.code,
                              (function (e) {
                                  return function (i) {
                                      return (e.halo_model = i), t();
                                  };
                              })(this)
                          ))
                        : ALIEN_MODELS.getInstance(
                              this.code,
                              (function (t) {
                                  return function (e) {
                                      if (!t.killed && ((t.l0OlI = e), t.l1110.lIlO0.lIlO0.add(t.l0OlI), !t.type.facing)) return (t.l0OlI.rotation.order = 'ZYX');
                                  };
                              })(this)
                          );
                }),
                (t.prototype.l0Ill = function () {
                    var t, e;
                    if ((null != this.I0l1l && this.IO11l.II1O0 >= this.I0l1l.getUint32(6, !0) && (this.read(this.I0l1l), (this.I0l1l = null)), (t = this.lllOl), (e = this.II110), this.l1110.lIlO0.IO11l.alien_physics.alienStep(this), (this.llllO = this.lllOl - t), (this.l1O10 = this.II110 - e), this.IO11l.II1O0 > this.last_update + 90)) return (this.killed = !0);
                }),
                (t.prototype.dispose = function () {
                    if (null != this.l0OlI) return this.l1110.lIlO0.lIlO0.remove(this.l0OlI);
                }),
                (t.prototype.updateModel = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c;
                    if ((null != this.l0OlI && ((s = O0l1l.hsvToRgbHex(this.hue / 360, 1, this.shield / 255)), this.l0OlI.material.emissive.setHex(s), (s = O0l1l.hsvToRgbHex(0, 0, (this.shield / 255) * 0.25)), this.l0OlI.material.specular.setHex(s), (o = this.getSpec('scale')), this.pop < 30 ? (this.pop++, (a = Math.sqrt(this.pop / 30) * o), this.l0OlI.scale.set(a, a, a)) : this.l0OlI.scale.set(o, o, o), this.type.facing ? ((this.l0OlI.rotation.z = (180 * THREE.Math.DEG2RAD) / 2), (h = (100 * this.llllO * 50) / this.mass), (this.rotxs = (h - this.rotx) * this.rotk), (this.rotxs *= 1 - this.rotf), (this.rotx += this.rotxs), (r = (100 * -this.l1O10 * 50) / this.mass), (this.rotys = (r - this.roty) * this.rotk), (this.rotys *= 1 - this.rotf), (this.roty += this.rotys), (t = 0), this.type.rotative && (t = 180 * THREE.Math.DEG2RAD * 2 * ((this.l1110.lIlO0.IO11l.II1O0 / 480) % 480)), (this.l0OlI.rotation.y = this.roty + t), (this.l0OlI.rotation.x = this.rotx)) : ((n = Math.sqrt(this.lllOl * this.lllOl + this.II110 * this.II110)), (e = 0), (i = 0), n > 0 && ((d = this.lllOl / n), (c = this.II110 / n), (e = this.llllO * d + this.l1O10 * c), (i = this.llllO * c - this.l1O10 * d)), (l = null != this.type.ll010 ? this.type.ll010 : 1), (h = ((100 * -i * 50) / this.mass) * l), (this.rotxs = (h - this.rotx) * this.rotk), (this.rotxs *= 1 - this.rotf), (this.rotx += this.rotxs), (r = (100 * -e * 50) / this.mass), (this.rotys = (r - this.roty) * this.rotk), (this.rotys *= 1 - this.rotf), (this.roty += this.rotys), (u = this.r + 180 * THREE.Math.DEG2RAD), (this.rotzs = Math.normAngle(u - this.rotz) * this.rotk), (this.rotzs *= 1 - this.rotf), (this.rotz += this.rotzs), (this.l0OlI.rotation.y = this.roty), (this.l0OlI.rotation.x = this.rotx), (this.l0OlI.rotation.z = this.rotz)), (this.l0OlI.position.x = this.x), (this.l0OlI.position.y = this.y), (this.l0OlI.position.z = -1), (this.l0OlI.visible = !0), this.IO11l.Ill0l(this.l0OlI)), null != this.halo_model)) return this.fancy ? ((s = O0l1l.hsvToRgbHex(0, 0, 0.5 + 0.5 * Math.sin(((this.l1110.lIlO0.IO11l.II1O0 % 60) / 60) * (180 * THREE.Math.DEG2RAD) * 6))), this.halo_model.material.color.set(s)) : this.halo_model.material.color.set(0);
                }),
                t
            );
        })()),
        (this.Snow = (function () {
            function t(t, e, i) {
                var s, l, n;
                for (this.l1110 = t, this.size = null != e ? e : 1e3, this.welcome = i, this.geometry = new THREE.BufferGeometry(), this.geometry.l000l = new THREE.Box3(new THREE.Vector3(-2e4, -2e4, -2e4), new THREE.Vector3(2e4, 2e4, 2e4)), this.geometry.boundingSphere = new THREE.Sphere(new THREE.Vector3(0, 0, 0), 4e4), this.vertices = new Float32Array(3 * this.size), this.OlIIO = new Float32Array(this.size), this.opac = new Float32Array(this.size), s = l = 0, n = this.size - 1; l <= n; s = l += 1) (this.vertices[3 * s] = 120 * (Math.random() - 0.5)), (this.vertices[3 * s + 1] = 80 * (Math.random() - 0.5)), (this.vertices[3 * s + 2] = 20 * Math.random()), (this.OlIIO[s] = 25), (this.opac[s] = 0.7 * Math.random() + 0.3);
                this.l10lI(), (this.cx = 0), (this.cy = 0), (this.OIOl1 = new I010I(1123));
            }
            return (
                (t.prototype.l10lI = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b;
                    for (y = 'attribute float OlIIO;\nuniform vec2 II001;\nuniform float lllIl;\nuniform float snowing;\nuniform float time ;\nvarying float opac ;\nuniform sampler2D texture ;\nvarying vec2 pos2 ;\n\nvoid main() {\n  pos2 = position.xy;\n  vec3 l0lOI = vec3(II001*OlIIO,0.0)+position;\n  vec4 tex = texture2D(texture,position.xy*.002+vec2(time)*.005);\n  l0lOI.xy += tex.xy*40.0;\n  l0lOI.xy = mod(l0lOI.xy,vec2(120.0,80.0))-vec2(60.0,40.0);\n  l0lOI.z = mod(l0lOI.z-time*5.0,20.0);\n  opac = pow(l0lOI.z/20.0,.75);\n  float sizemul = min(1.0,20.0-l0lOI.z)*(.5+l0lOI.z/40.0);\n  opac *= pow(l0lOI.z/20.0,.25);\n  opac *= pow((20.0-l0lOI.z)/20.0,.25);\n  opac *= snowing ;\n  vec4 mvPosition = modelViewMatrix * vec4(l0lOI, 1.0);\n  gl_Position = projectionMatrix * mvPosition ;\n  gl_PointSize = OlIIO*lllIl*(.1+tex.z)*sizemul;\n}', s = 'uniform sampler2D texture;\nvarying float opac ;\nvarying vec2 pos2 ;\n\nvoid main() {\n  float d = length(gl_PointCoord-vec2(.5))*2.0 ;\n  float b = (dot(gl_PointCoord,vec2(0.5))-.5)*3.0+.5;\n  float radius = texture2D(texture,pos2+gl_PointCoord*.2).x ;\n  float val = pow(max(0.0,1.0-d/radius),.2)*opac;\n  gl_FragColor = vec4(mix(vec3(1.3,1.2,.5),vec3(.0,.3,1.0),b)*2.0*val,1.0) ;\n}', t = document.createElement('canvas'), t.width = 64, t.height = 64, e = t.getContext('2d'), i = e.getImageData(0, 0, t.width, t.height), O = new I010I(100), h = new I010I(200), u = new I010I(300), d = new I010I(400), l = a = 0, m = t.width - 1; 0 <= m ? a <= m : a >= m; l = 0 <= m ? ++a : --a) for (n = o = 0, f = t.height - 1; 0 <= f ? o <= f : o >= f; n = 0 <= f ? ++o : --o) (v = (l / t.width) * 16), (b = (n / t.height) * 16), (r = 255 * O.II0O1(v, b, 4, 2)), (c = 255 * h.II0O1(v, b, 4, 2)), (p = 255 * u.II0O1(v, b, 4, 2)), (I = 255 * d.II0O1(v, b, 4, 2)), (i.data[4 * l + n * t.width * 4] = r), (i.data[4 * l + n * t.width * 4 + 1] = c), (i.data[4 * l + n * t.width * 4 + 2] = p), (i.data[4 * l + n * t.width * 4 + 3] = I);
                    return e.putImageData(i, 0, 0), (g = new THREE.Texture(t)), (g.wrapT = g.wrapS = THREE.RepeatWrapping), (g.minFilter = g.magFilter = THREE.LinearFilter), (g.needsUpdate = !0), (this.II001 = new THREE.Vector2(0, 0)), (this.uniforms = { texture: { type: 't', value: g }, II001: { type: 'v2', value: this.II001 }, lllIl: { type: 'f', value: Math.max(400, Math.min(window.innerHeight, window.innerWidth)) / 1e3 }, snowing: { type: 'f', value: 1 }, time: { type: 'f', value: 0 } }), (this.material = new THREE.ShaderMaterial({ uniforms: this.uniforms, vertexShader: y, fragmentShader: s, transparent: !0, depthWrite: !1, depthTest: !1, blending: THREE.AdditiveBlending })), this.geometry.addAttribute('position', new THREE.BufferAttribute(this.vertices, 3)), this.geometry.addAttribute('OlIIO', new THREE.BufferAttribute(this.OlIIO, 1)), (this.IIl10 = new THREE.Points(this.geometry, this.material)), (this.IIl10.position.z = 0);
                }),
                (t.prototype.lOlI1 = function (t, e) {
                    return (this.uniforms.lllIl.value = Math.max(400, Math.min(t, e)) / 1e3);
                }),
                (t.prototype.disto = function (t) {
                    return t > 0 ? 1 - Math.exp(-t) : -1 + Math.exp(t);
                }),
                (t.prototype.l1O0l = function (t, e, i) {
                    return (this.IIl10.visible = this.l1110.settings.check('snow')), (this.II001.x -= 0.0375 * Math.normRange(this.l1110.lIlO0.I1000.position.x - this.cx, this.l1110.size)), (this.II001.y -= 0.0375 * Math.normRange(this.l1110.lIlO0.I1000.position.y - this.cy, this.l1110.size)), (this.cx = this.l1110.lIlO0.I1000.position.x), (this.cy = this.l1110.lIlO0.I1000.position.y), (this.uniforms.time.value = i), (this.uniforms.snowing.value = 0.5 * this.disto(200 * (this.OIOl1.basic1d(i / 180) - 0.5)) + 0.5);
                }),
                t
            );
        })()),
        (this.snowballmaterial = new THREE.MeshPhongMaterial({ color: 14741759, emissive: 2107440, specular: 8409104, shininess: 10, vertexColors: THREE.VertexColors })),
        (this.Snowball = (function () {
            function t(t) {
                var e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S, R, P, A, H, D, C, j, G, L, B, F, V, N, q, U, K, W, Y, J, Z, X, Q, $;
                for (this.l1110 = t, this.O1III = new THREE.IcosahedronGeometry(1, 3), R = new I010I(), M = new I010I(100), T = new I010I(200), S = new I010I(300), r = this.O1III.vertices[0].x - this.O1III.vertices[1].x, h = this.O1III.vertices[0].y - this.O1III.vertices[1].y, u = this.O1III.vertices[0].z - this.O1III.vertices[1].z, U = Math.sqrt(r * r + h * h + u * u), Z = 1 / U / 2, J = 3 * U, G = this.O1III.vertices, p = 0, f = G.length; p < f; p++) (Y = G[p]), (X = M.OO01O(Y.x * Z, Y.y * Z, Y.z * Z) - 0.3), (Q = T.OO01O(Y.x * Z, Y.y * Z, Y.z * Z) - 0.3), ($ = S.OO01O(Y.x * Z, Y.y * Z, Y.z * Z) - 0.3), (Y.x += X * J), (Y.y += Q * J), (Y.z += $ * J), (z = 1 / Math.sqrt(Y.x * Y.x + Y.y * Y.y + Y.z * Y.z)), (Y.x *= z), (Y.y *= z), (Y.z *= z);
                for (L = this.O1III.vertices, I = 0, g = L.length; I < g; I++) (Y = L[I]), (D = 0.5 * Math.pow(R.lOl0l(2 * Y.x, 2 * Y.y, 2 * Y.z, 3), 3)), (Y.x *= 1 - D), (Y.y *= 1 - D), (Y.z *= 1 - D);
                for (
                    this.O1III.computeFaceNormals(),
                        this.O1III.computeVertexNormals(),
                        _ = function (t, e, i, s) {
                            var l, n, a;
                            return (l = t.x * (1 - i) + e.x * i), (n = t.y * (1 - i) + e.y * i), (a = t.z * (1 - i) + e.z * i), (Y = Math.sqrt(l * l + n * n + a * a)), (s.x = l / Y), (s.y = n / Y), (s.z = a / Y);
                        },
                        B = this.O1III.faces,
                        O = 0,
                        y = B.length;
                    O < y;
                    O++
                )
                    (d = B[O]), _(d.normal, d.vertexNormals[0], 0.8, d.vertexNormals[0]), _(d.normal, d.vertexNormals[1], 0.8, d.vertexNormals[1]), _(d.normal, d.vertexNormals[2], 0.8, d.vertexNormals[2]);
                for (F = this.O1III.vertices, m = 0, v = F.length; m < v; m++) (Y = F[m]), (Y.segments = []), (Y.OOOI1 = 1);
                for (
                    K = {},
                        W = [],
                        C = function (t, e, i, s) {
                            var l, n;
                            return (l = Math.min(t, e) + '-' + Math.max(t, e)), null == K[l] ? ((n = { O1000: t, v2: e, f1: s, opp1: i }), (K[l] = n), W.push(n)) : ((K[l].f2 = s), (K[l].opp2 = i));
                        },
                        V = this.O1III.faces,
                        E = 0,
                        b = V.length;
                    E < b;
                    E++
                )
                    (d = V[E]), C(d.a, d.b, d.c, d), C(d.a, d.c, d.b, d), C(d.b, d.c, d.a, d);
                for (P = 0, w = W.length; P < w; P++) (q = W[P]), (z = q.f1.normal), (i = (this.O1III.vertices[q.f1.a].x + this.O1III.vertices[q.f1.b].x + this.O1III.vertices[q.f1.c].x) / 3), (s = (this.O1III.vertices[q.f1.a].y + this.O1III.vertices[q.f1.b].y + this.O1III.vertices[q.f1.c].y) / 3), (l = (this.O1III.vertices[q.f1.a].z + this.O1III.vertices[q.f1.b].z + this.O1III.vertices[q.f1.c].z) / 3), (n = (this.O1III.vertices[q.f2.a].x + this.O1III.vertices[q.f2.b].x + this.O1III.vertices[q.f2.c].x) / 3), (a = (this.O1III.vertices[q.f2.a].y + this.O1III.vertices[q.f2.b].y + this.O1III.vertices[q.f2.c].y) / 3), (o = (this.O1III.vertices[q.f2.a].z + this.O1III.vertices[q.f2.b].z + this.O1III.vertices[q.f2.c].z) / 3), (r = n - i), (h = a - s), (u = o - l), (H = z.x * r + z.y * h + z.z * u) > 0 && ((M = q.f1.normal), (T = q.f2.normal), (H = Math.max(-1, Math.min(1, M.x * T.x + M.y * T.y + M.z * T.z))), (k = 1 - Math.acos(H) / (180 * THREE.Math.DEG2RAD)), (this.O1III.vertices[q.O1000].OOOI1 *= k), (this.O1III.vertices[q.v2].OOOI1 *= k));
                for (N = this.O1III.faces, A = 0, x = N.length; A < x; A++) (d = N[A]), (j = 255 - 255 * (1 - this.O1III.vertices[d.a].OOOI1) * 0.5), (c = 255 - 160 * (1 - this.O1III.vertices[d.a].OOOI1) * 0.5), (e = 255), (d.vertexColors[0] = new THREE.Color((j << 16) | (c << 8) | e)), (j = 255 - 255 * (1 - this.O1III.vertices[d.b].OOOI1) * 0.5), (c = 255 - 160 * (1 - this.O1III.vertices[d.b].OOOI1) * 0.5), (e = 255), (d.vertexColors[1] = new THREE.Color((j << 16) | (c << 8) | e)), (j = 255 - 255 * (1 - this.O1III.vertices[d.c].OOOI1) * 0.5), (c = 255 - 160 * (1 - this.O1III.vertices[d.c].OOOI1) * 0.5), (e = 255), (d.vertexColors[2] = new THREE.Color((j << 16) | (c << 8) | e));
            }
            return (
                (t.prototype.getInstance = function () {
                    return new THREE.Mesh(this.O1III, snowballmaterial);
                }),
                (t.prototype.darkenColor = function (t, e) {
                    var i, s, l, n;
                    return (s = Math.min(1, Math.max(0, 1 - e))), (n = ((t >> 16) & 255) * s), (l = ((t >> 8) & 255) * s), (i = (255 & t) * s), (n << 16) | (l << 8) | i;
                }),
                (t.prototype.l1O0l = function (t, e) {
                    var i;
                    return (i = new OII10(t)), (t = i.next()), this.O1III;
                }),
                (t.get = function () {
                    var e;
                    return (void 0 !== e && null !== e) || (e = new t()), e.getInstance();
                }),
                t
            );
        })()),
        (this.GiftModel = (function () {
            function t() {
                var t, e, i;
                (i = new THREE.LoadingManager()),
                    (e = new THREE.OBJLoader(i)),
                    (this.lambert_img = new Image()),
                    (this.lambert_img.crossOrigin = 'Anonymous'),
                    (this.lambert_img.onload = (function (t) {
                        return function () {
                            return (t.lambert = new THREE.Texture(t.lambert_img)), (t.lambert.needsUpdate = !0);
                        };
                    })(this)),
                    (this.lambert_img.src = 'https://starblast.data.neuronality.com/models/xmas/gift/lambert.jpg'),
                    (this.emissive_img = new Image()),
                    (this.emissive_img.crossOrigin = 'Anonymous'),
                    (this.emissive_img.onload = (function (t) {
                        return function () {
                            return (t.emissive = new THREE.Texture(t.emissive_img)), (t.emissive.needsUpdate = !0);
                        };
                    })(this)),
                    (this.emissive_img.src = 'https://starblast.data.neuronality.com/models/xmas/gift/emissive.jpg'),
                    (this.specular_img = new Image()),
                    (this.specular_img.crossOrigin = 'Anonymous'),
                    (this.specular_img.onload = (function (t) {
                        return function () {
                            return (t.specular = new THREE.Texture(t.specular_img)), (t.specular.needsUpdate = !0);
                        };
                    })(this)),
                    (this.specular_img.src = 'https://starblast.data.neuronality.com/models/xmas/gift/specular.jpg'),
                    (t = 'https://starblast.data.neuronality.com/models/xmas/gift/model.obj'),
                    e.load(
                        t,
                        (function (t) {
                            return function (e) {
                                return (t.object = e), (t.l0OlI = t.object.children[0]);
                            };
                        })(this)
                    ),
                    (this.queue = []);
            }
            return (
                (t.prototype.getInstance = function (t) {
                    var e;
                    return null == this.l0OlI ? null : ((e = new THREE.MeshPhongMaterial({ color: 16777215, map: this.lambert, emissiveMap: this.emissive, emissive: 16777215, specular: 16777215, specularMap: this.specular, shininess: 30, specular: 1052688, specularMap: this.lambert })), new THREE.Mesh(this.l0OlI.geometry, e));
                }),
                t
            );
        })()),
        (GIFT_MODEL = new GiftModel()),
        (this.PumpkinModel = (function () {
            function t() {
                var t, e, i;
                (i = new THREE.LoadingManager()),
                    (e = new THREE.OBJLoader(i)),
                    (this.lambert_img = new Image()),
                    (this.lambert_img.crossOrigin = 'Anonymous'),
                    (this.lambert_img.onload = (function (t) {
                        return function () {
                            return (t.lambert = new THREE.Texture(t.lambert_img)), (t.lambert.needsUpdate = !0);
                        };
                    })(this)),
                    (this.lambert_img.src = 'https://starblast.data.neuronality.com/models/halloween/pumpkin/lambert.jpg'),
                    (this.emissive_img = new Image()),
                    (this.emissive_img.crossOrigin = 'Anonymous'),
                    (this.emissive_img.onload = (function (t) {
                        return function () {
                            return (t.emissive = new THREE.Texture(t.emissive_img)), (t.emissive.needsUpdate = !0);
                        };
                    })(this)),
                    (this.emissive_img.src = 'https://starblast.data.neuronality.com/models/halloween/pumpkin/emissive.jpg'),
                    (t = 'https://starblast.data.neuronality.com/models/halloween/pumpkin/model.obj'),
                    e.load(
                        t,
                        (function (t) {
                            return function (e) {
                                return (t.object = e), (t.l0OlI = t.object.children[0]);
                            };
                        })(this)
                    ),
                    (this.queue = []);
            }
            return (
                (t.prototype.getInstance = function (t) {
                    var e;
                    return null == this.l0OlI ? null : ((e = new THREE.MeshPhongMaterial({ color: 16777215, map: this.lambert, emissiveMap: this.emissive, emissive: 16777215, shininess: 30, specular: 1052688, specularMap: this.lambert })), new THREE.Mesh(this.l0OlI.geometry, e));
                }),
                t
            );
        })()),
        (PUMPKIN_MODEL = new PumpkinModel()),
        (this.llII1 = (function () {
            function e() {
                (this.settings = new Settings(this)),
                    (this.l1OI0 = new l011O(this)),
                    window.addEventListener(
                        'DOMContentLoaded',
                        (function (t) {
                            return function () {
                                return t.init();
                            };
                        })(this)
                    );
                try {
                    1 === performance.navigation.type && location.hash === '#' + localStorage.getItem('last_systemid') && (location.hash = '#');
                } catch (t) {
                    t;
                }
                (this.is_touch_device = 'ontouchstart' in window), (this.is_mobile = Math.max(screen.width, screen.height) < 800 && this.is_touch_device), (this.is_tablet = Math.max(screen.width, screen.height) > 900), (this.is_app = !1), (this.using_gamepad = !1), (this.using_keyboard = 0), (this.user_client = new UserClient(this));
            }
            return (
                (e.prototype.init = function () {
                    var t, e, i;
                    if (
                        (this.settings.init(),
                        (this.tutorial_active = 'en' === (e = translations.getLang()) || 'fr' === e),
                        this.setSize(600),
                        (this.mode = new Mode('welcome', 'Welcome')),
                        this.is_mobile_app ? ((this.l00OO = new MobileInterface(this)), (location.hash = '#')) : this.is_app ? ((this.l00OO = new AppInterface(this)), (location.hash = '#'), window.parent === window && null == localStorage.getItem('debug') && (location.href = '/')) : (this.l00OO = new IO1l0(this)),
                        (this.I101l = new Ol1l1(
                            (function (t) {
                                return function () {
                                    return t.IOIlI();
                                };
                            })(this)
                        )),
                        (this.l0I11 = new Ol1l0(this)),
                        (this.total_players = 0),
                        (this.system_players = 0),
                        (this.ping = 0),
                        (this.refused_count = 0),
                        (this.killers = []),
                        (i = Math.floor(1e4 * Math.random())),
                        (t = { seed: i, id: 0, name: 'Welcome' }),
                        (this.hue = 0),
                        (this.player_name = ''),
                        (this.names = new Names(this)),
                        (this.weapons = new Weapons(this)),
                        (this.Ill00 = new l0I0I(this, OI1I1.types_by_code[101])),
                        (this.lIlO0 = new Scene(this, t.seed, this.I101l, !0)),
                        this.I101l.add(
                            (function (e) {
                                return function () {
                                    return e.is_app ? ((e.Ill00.status.y = -30), (e.Ill00.status.x = 30)) : (e.Ill00.status.y = -60), e.lIlO0.IO11l.initCamera(), e.lIlO0.background.initOffsets(), (e.display = new l11ll(e, !0)), e.display.start(), null != e.display.screen.lO100.Ol0ll && e.display.screen.lO100.Ol0ll(t), e.l0I11.load();
                                };
                            })(this)
                        ),
                        setTimeout(
                            (function (t) {
                                return function () {
                                    return t.I101l.start();
                                };
                            })(this),
                            1e3
                        ),
                        (this.key_listeners = []),
                        (this.paused = !1),
                        void 0 !== saveAs && null !== saveAs)
                    )
                        return this.addKeyListener('Z'.charCodeAt(0), {
                            keyPressed: (function (t) {
                                return function () {
                                    return t.is_app ? t.takeScreenshot('user', 0, 100) : (t.display.make_screenshot = !0);
                                };
                            })(this),
                            keyReleased: function () {},
                        });
                }),
                (e.prototype.takeScreenshot = function (t, e, i) {
                    if ((null == t && (t = 'user'), null == e && (e = 0), null == i && (i = 0), this.is_app && ('user' === t || this.settings.check('automatic_screenshots')))) return (this.display.make_screenshot = !0), (this.display.screenshot_type = t), (this.display.screenshot_time = e), (this.display.screenshot_value = i);
                }),
                (e.prototype.setSize = function (t) {
                    return (this.size = t), (this.l0I1I = this.size / 2), (this.llOOI = this.size / 10), (this.I00l0 = this.l0I1I / 10);
                }),
                (e.prototype.l0Ill = function () {
                    return this.l0I11.l0Ill();
                }),
                (e.prototype.IOIlI = function () {
                    return this.l00OO.OII1O(this.I101l.I100I());
                }),
                (e.prototype.startPrivateGame = function (e, i, s, l) {
                    var n;
                    return (
                        (this.player_name = e),
                        (this.bonus = null != i && i),
                        (this.hue = s),
                        (this.mode_id = 'survival'),
                        (this.mode = new SurvivalMode(this)),
                        (this.hue = parseInt(this.hue)),
                        isNaN(this.hue) && (this.hue = 0),
                        (this.OI0l0 = !0),
                        this.l0I11.I101l.pause(),
                        (n = ['Fetching Federation conflict map', 'Contacting rebel forces headquarters', 'Accessing galactic security database']),
                        this.lIlO0.dispose(),
                        this.display.kill(!this.is_app),
                        (this.text = n[Math.floor(Math.random() * n.length)]),
                        this.l00OO.gameLoader(0, t(this.text)),
                        this.l0I11.beep(),
                        this.l0I11.fadeOutMusic(),
                        (this.preferred = l.gameid),
                        (this.private_address = l.gameid + '@' + l.ip + ':' + l.port),
                        setTimeout(
                            (function (e) {
                                return function () {
                                    return e.l00OO.gameLoader(5, t('Connected')), (e.Ill00 = new l0I0I(e)), (e.I0O01 = new lI00l(e, l.ip + ':' + l.port, e.bonus, e.hue, !1)), e.l0I11.I101l.resume();
                                };
                            })(this),
                            1e3
                        )
                    );
                }),
                (e.prototype.setMode = function (t, e) {
                    var i, s, l, n;
                    if ('modding' === t && null != e) (this.mode_id = t), (this.mode = ModdingMode.createMode(this, e)), null != e.soundtrack && (this.mode.soundtrack = e.soundtrack);
                    else for (n = this.l00OO.installed_modes, i = 0, s = n.length; i < s; i++) (l = n[i]), l.id === t && ((this.mode = l), (this.mode_id = t));
                }),
                (e.prototype.start = function (e, i, s, l) {
                    var n, a, o, r, h, u;
                    for (this.mode_id = e, this.player_name = i, this.bonus = null != s && s, this.hue = l, r = this.l00OO.game_modes, n = 0, a = r.length; n < a; n++) (o = r[n]), o.id === this.mode_id && (this.mode = o);
                    if (((this.hue = parseInt(this.hue)), isNaN(this.hue) && (this.hue = 0), (this.OI0l0 = !0), this.l0I11.I101l.pause(), (u = ['Fetching Federation conflict map', 'Contacting rebel forces headquarters', 'Accessing galactic security database']), this.lIlO0.dispose(), this.display.kill(!this.is_app), (this.text = u[Math.floor(Math.random() * u.length)]), this.l00OO.gameLoader(0, t(this.text)), this.l0I11.beep(), this.l0I11.fadeOutMusic(), (h = window.location.href.split('#')), h.length > 1))
                        try {
                            this.preferred = JSON.parse(h[1]);
                        } catch (t) {
                            t;
                        }
                    return setTimeout(
                        (function (e) {
                            return function () {
                                return (e.OIOI1 = new IlOII(e, function (i, s, l) {
                                    return (e.region = s), e.l00OO.gameLoader(5, t('Connected')), (e.Ill00 = new l0I0I(e)), (e.I0O01 = new lI00l(e, i, e.bonus, e.hue, l)), e.l0I11.I101l.resume();
                                }));
                            };
                        })(this),
                        1e3
                    );
                }),
                (e.prototype.refused = function () {
                    var e;
                    return null != this.private_address
                        ? this.cannotJoin()
                        : ((e = {}),
                          null != this.I0O01 && null != this.OIOI1 && ((this.OIOI1.IllO1[this.I0O01.address] = this.I0O01.address), (e = this.OIOI1.IllO1)),
                          (this.preferred = null),
                          this.refused_count++ > 4
                              ? void 0
                              : setTimeout(
                                    (function (i) {
                                        return function () {
                                            return (i.OIOI1 = new IlOII(
                                                i,
                                                function (e, s, l) {
                                                    return (i.region = s), i.l00OO.gameLoader(5, t('Connected')), (i.Ill00 = new l0I0I(i)), (i.I0O01 = new lI00l(i, e, i.bonus, i.hue, l)), i.l0I11.I101l.resume();
                                                },
                                                e
                                            ));
                                        };
                                    })(this),
                                    5e3
                                ));
                }),
                (e.prototype.O1Il0 = function () {
                    return this.gameover || this.l00OO.connectionLost(), (window.onbeforeunload = null);
                }),
                (e.prototype.respawn = function () {
                    if (this.pending_respawn) return (this.pending_respawn = !1), this.mode.respawn();
                }),
                (e.prototype.killed = function (t, e, i) {
                    if (
                        (setTimeout(
                            (function (t) {
                                return function () {
                                    if ((t.display.screen.lO100.hide(), (t.pending_respawn = !0), t.l00OO.killed(i), e)) return (t.gameover = !0), t.I0O01.socket.close();
                                };
                            })(this),
                            this.mode.respawn_delay
                        ),
                        this.l1OI0.Il1lI() || (window.onbeforeunload = null),
                        !e && !this.l00OO.isAdBlocked)
                    )
                        return this.l00OO.refreshAds();
                }),
                (e.prototype.lOl1l = function (e) {
                    var i, s, l, n;
                    return (
                        this.l00OO.gameLoader(10, t('Engage')),
                        null != e.name && (l = e.name.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')),
                        (n = t('Warping to system %s').replace('%s', l)),
                        (i = (function (t) {
                            return function () {
                                return t.l00OO.gameLoader(Math.round(10 + (90 * s.I100I()) / 100), n);
                            };
                        })(this)),
                        (s = new Ol1l1(i)),
                        (this.lIlO0 = new Scene(this, e.seed, s)),
                        null != e.servertime && this.lIlO0.IO11l.O1011(e.servertime),
                        s.add(
                            (function (t) {
                                return function () {
                                    return t.mode.lOl1l(e);
                                };
                            })(this)
                        ),
                        s.start()
                    );
                }),
                (e.prototype.entered = function (t) {
                    return this.mode.entered(t);
                }),
                (e.prototype.startGame = function (e) {
                    if ((this.lIlO0.IO11l.initCamera(1.5), this.lIlO0.background.initOffsets(), (this.display = new l11ll(this)), this.lIlO0.startControl(), this.display.start(), this.settings.getVolume('music') > 0 && this.l0I11.playMusic(this.mode.soundtrack), null != e.region && (this.region = e.region), this.display.screen.lO100.Ol0ll(e), null != this.private_address ? (location.hash = this.private_address) : (location.hash = e.systemid), (this.systemid = e.systemid), this.systemid !== this.preferred && localStorage.setItem('last_systemid', this.systemid), !this.is_app))
                        return (window.onbeforeunload = function () {
                            return t('Exit game?');
                        });
                }),
                (e.prototype.l1O0I = function (t) {
                    return this.display.screen.lO100.OOI11.l1IO1(this.seed);
                }),
                (e.prototype.message = function (t, e, i, s) {
                    return null == e && (e = '#FFF'), null == i && (i = !1), null == s && (s = !1), this.display.screen.lO100.messages.message(t, e, i, s);
                }),
                (e.prototype.addKeyListener = function (t, e) {
                    return (this.key_listeners[t] = e);
                }),
                (e.prototype.keyPressed = function (t) {
                    if (this.display.screen.lO100.chatpanel.visible) return null != this.key_listeners[t] && (this.key_listeners[t].keyPressed(), !0);
                }),
                (e.prototype.keyReleased = function (t) {
                    if (this.display.screen.lO100.chatpanel.visible) return null != this.key_listeners[t] && (this.key_listeners[t].keyReleased(), !0);
                }),
                (e.prototype.pushType = function () {
                    return this.I0O01.pushType(this.Ill00.type), this.Ill00.instance.buildLasers(), this.Ill00.instance.updateParameters();
                }),
                (e.prototype.pause = function () {
                    return this.settings.getVolume('music') > 0 && this.l0I11.pauseMusic(), this.l0I11.pause(), (this.paused = !0);
                }),
                (e.prototype.resume = function () {
                    return this.settings.getVolume('music') > 0 && this.l0I11.playMusic(), this.l0I11.resume(), (this.paused = !1);
                }),
                (e.prototype.propertyChanged = function (t, e) {
                    switch (t) {
                        case 'music':
                            if (this.OI0l0) return e > 0 ? this.l0I11.playMusic(this.mode.soundtrack) : this.l0I11.pauseMusic();
                            if (this.is_app || this.is_mobile_app) return e ? (null != this.l0I11.loaded_soundtrack ? this.l0I11.adjustMusicVolume() : this.l0I11.playMusic(this.l00OO.getWelcomeMusic())) : this.l0I11.pauseMusic();
                    }
                }),
                (e.prototype.sendGAEvent = function (t, e) {
                    var i;
                    (i = {}), (i[t] = e), gtag('event', 'game_evt', i);
                }),
                (e.prototype.cannotJoin = function () {
                    return this.l00OO.showError(t('Could not join game. Game is either full or has expired.')), (location.hash = '#');
                }),
                (e.prototype.getClientShipID = function () {
                    var t;
                    return (t = localStorage.getItem('client_ship_id')), null == t && ((t = Math.floor(4e9 * Math.random()) + '' + Math.floor(4e9 * Math.random())), localStorage.setItem('client_ship_id', t)), t;
                }),
                (e.prototype.showGalaxyMap = function () {
                    return null == this.galaxy_map && (this.galaxy_map = new GalaxyMap(this)), this.galaxy_map.IlO1I();
                }),
                (e.prototype.hideGalaxyMap = function () {
                    if (null != this.galaxy_map) return this.galaxy_map.hide();
                }),
                (e.prototype.createMatch = function (t, e) {
                    return new PrivateServerFinder(
                        this,
                        t.server_location,
                        (function (i) {
                            return function (s) {
                                var l;
                                return (
                                    (l = WSS.create(s)),
                                    (t.ecp_key = i.l1OI0.key),
                                    (l.onmessage = function (t) {
                                        var i;
                                        try {
                                            (t = JSON.parse(t.data)), 'match_created' === t.name && ((i = t.data.id), e(!0, i + '@' + s));
                                        } catch (t) {
                                            t;
                                        }
                                    }),
                                    (l.onopen = function () {
                                        return l.send(JSON.stringify({ name: 'create_match', data: t }));
                                    })
                                );
                            };
                        })(this)
                    );
                }),
                (e.prototype.ll1lI = function () {
                    var t;
                    t = localStorage.getItem('tr');
                    try {
                        t = Number.parseFloat(t);
                    } catch (e) {
                        e, (t = 1);
                    }
                    return Number.isNaN(t) && (t = 1), (t = Math.max(1, Math.min(3, t)));
                }),
                (e.prototype.lIlIl = function (t) {
                    var e;
                    return (e = this.ll1lI()), localStorage.setItem('tr', 0.25 * t + 0.75 * e);
                }),
                e
            );
        })()),
        (battle_started = Date.now() > 1527804e6),
        (battle_finished = Date.now() > 15279228e5),
        (l1110 = new llII1()),
        (gamesettings = l1110.settings),
        (Ol0OO = window.eio),
        (window.eio = { Socket: function () {} }),
        (exportShipTree = function (t, e) {
            var i, s;
            return null == t && (t = null), null == e && (e = {}), (s = ''), null == t && (t = OI1I1.types_by_code[101]), null != e[t.code] ? s : ((e[t.code] = t), (i = OI1I1.next(t)), 0 === i.length ? '' : ((s += t.name + ' => '), null != i[0] && (s += i[0].name), null != i[1] && (s += ' or ' + i[1].name), (s += '\n'), null != i[0] && (s += this.exportShipTree(i[0], e)), null != i[1] && (s += this.exportShipTree(i[1], e)), s));
        }),
        (indexOf =
            [].indexOf ||
            function (t) {
                for (var e = 0, i = this.length; e < i; e++) if (e in this && this[e] === t) return e;
                return -1;
            }),
        (Translations = (function () {
            function t(t) {
                (this.settings = t), (this.dict = { PLAY: { fr: 'JOUER', es: 'JUEGA', ja: 'ゲーム開始', de: 'SPIELEN', pt: 'JOGAR', ru: 'ИГРАТЬ', hu: 'JÁTSZIK', it: 'GIOCA', hr: 'ZAPOČNI IGRU', tr: 'OYNA', cs: 'HRÁT', sk: 'HRAŤ', id: 'Main', nl: 'SPEEL', ar: 'ألعب', da: 'SPIL', vi: 'CHƠI', pl: 'GRAJ', he: 'שחק', sv: 'SPELA', ro: 'JOACĂ', zh: '开始', 'zh-tw': '開始遊戲', lt: 'GIOCA', az: 'OYNA', th: 'เล่น', ko: '시작', fa: 'بازی کردن', el: 'ΠΑΙΖΩ' }, LEADERBOARD: { fr: 'CLASSEMENT', es: 'CLASIFICACIÓN', ja: '順位表', de: 'RANGLISTE', pt: 'PLACAR', ru: 'ТАБЛИЦА ЛИДЕРОВ', hu: 'RANGLISTA', it: 'CLASSIFICA', hr: 'LISTA NAJBOLJIH', tr: 'LİDERLİK SIRALAMASI', cs: 'GLOBÁLNÍ ŽEBŘÍČEK', sk: 'GLOBÁLNY REBRÍČEK', id: 'PAPAN PERINGKAT', nl: 'SCOREBORD', ar: 'قائمة التصنيف', vi: 'BẢNG ĐIỂM', pl: 'TOPLISTA', sv: 'TOPPLISTA', ro: 'CLASAMENT', zh: '排行榜', 'zh-tw': '排行榜', lt: 'CLASSIFICA', th: 'ลีดเดอร์บอร์ด', ko: '순위표', fa: 'رتبه بندی فرماندهان', el: 'ΤΑΞΙΝΟΜΗΣΗ ΒΑΘΜΟΛΟΓΙΑΣ' }, 'JOIN GAME': { fr: 'REJOINDRE UNE PARTIE', es: 'ENTRAR EN LA PARTIDA', ja: 'ゲームに参加', de: 'SPIEL BEITRETEN', pt: 'ENTRE NA PARTIDA', ru: 'ПРИСОЕДИНИТЬСЯ К ИГРЕ', hu: 'CSATLAKOZÁS A JÁTÉKBA', it: 'ENTRA IN GIOCO', hr: 'PRIDRUŽI SE IGRI', tr: 'OYUNA KATIL', cs: 'VSTOUPIT DO HRY', sk: 'VSTÚPIŤ DO HRY', id: 'IKUT MAIN', nl: 'MEEDOEN MET EEN SPEL', ar: 'انضمام للعبة', da: 'TILSLUT TIL SPIL', vi: 'THAM GIA TRÒ CHƠI', pl: 'DOŁĄCZ DO GRY', sv: 'GÅ MED I SPEL', ro: 'ALĂTURĂ-TE UNUI JOC', zh: '加入游戏', 'zh-tw': '加入遊戲', lt: 'ENTRA IN GIOCO', th: 'เข้าร่วมเกม', ko: '게임 참가', fa: 'ورود به بازی', el: 'ΔΗΛΩΝΩ ΣΥΜΜΕΤΟΧΗ' }, 'CREATE GAME': { fr: 'CRÉER UNE PARTIE', es: 'CREAR PARTIDA', ja: 'マッチを作成', de: 'SPIEL ERSTELLEN', pt: 'CRIAR PARTIDA', ru: 'СОЗДАТЬ ИГРУ', hu: 'JÁTÉK LÉTREHOZÁSA', it: 'Crea una partita', hr: 'STVORI IGRU', tr: 'OYUN OLUŞTUR', cs: 'VYTVOŘIT HRU', sk: 'VYTVORIŤ HRU', id: 'MEMBUAT PERMAINAN', nl: 'MAAK SPEL', ar: 'ابتكر لعبة', da: 'OPRET SPIL', vi: 'TẠO TRÒ CHƠI', pl: 'STWÓRZ GRĘ', sv: 'SKAPA SPEL', ro: 'CREEAZĂ UN JOC', zh: '新建游戏', 'zh-tw': '創立遊戲', lt: 'CREA PARTITA', th: 'สร้างเกม', ko: '게임 만들기', fa: 'ساختن بازی', el: 'ΔΗΜΙΟΥΡΓΩ ΠΑΙΧΝΙΔΙ' }, QUIT: { fr: 'QUITTER', es: 'SALIR', ja: '終了', de: 'SPIEL VERLASSEN', pt: 'SAIR', ru: 'ВЫЙТИ', hu: 'KILÉPÉS', it: 'ABBANDONA', hr: 'IZAĐI', tr: 'ÇIK', cs: 'KONEC', sk: 'KONIEC', id: 'BERHENTI', nl: 'VERLAAT HET SPEL', ar: 'مغادرة', da: 'FORLAD', vi: 'THOÁT', pl: 'WYJDŹ', sv: 'AVSLUTA', ro: 'IEȘI', zh: '退出', 'zh-tw': '退出', lt: 'ABBANDONA', th: 'ออก', ko: '종료', fa: 'خروج', el: 'ΕΓΚΑΤΑΛΕΙΠΩ' }, 'Please insert your room link in the box below.': { fr: "Merci d'insérer votre lien de partie dans le champ ci dessous.", es: 'Por favor, inserta el enlace de tu partida en el cuadro de abajo.', ja: '下のボックスにゲームのリンクを挿入してください。 ', de: 'Bitte gebe deinen Spiellink in das Feld unten ein.', pt: 'Por favor, insira o link da sua sala na caixa abaixo.', ru: 'Пожалуйста, вставьте ссылку на матч в поле снизу.', hu: 'Kérjük illessze be a szoba linkjét az alábbi mezőbe.', it: 'Perfavore inserisci il sito della stanza nel box qui sotto', hr: 'Molimo unesite link sobe u prozor ispod', tr: 'Lütfen Oda Bağlantınızı Aşağıdaki Kutuya Ekleyin', cs: 'Vložte odkaz arény do níže uvedeného pole.', sk: 'Do políčka uvedeného nižšie vložte odkaz arény.', id: 'Silahkan masukkan link ruangan anda de dalam kotak di bawah ini', nl: 'Vul de kamerlink in in de box hieronder', ar: 'رجى إدراج رابط الغرفة في المربع أدناه.', da: 'Indsæt venligst linket til dit rum i kassen nede for.', vi: 'Làm ơn điền tên sever vào chỗ trống bên dưới', pl: 'Proszę podaj link do swojej gry w poniższym polu', sv: 'Vad god skriv in din serverslänk i textrutan nedan.', ro: 'Te rog inserează link-ul camerei tale in spaţiul de mai jos', zh: '在下面的格子内输入你的服务器链接', 'zh-tw': '請在方格內輸入你的房間連結', lt: 'Perfavore inserisci il sito della stanza nel box qui sotto', th: 'กรุณาใส่ลิงค์ห้องของคุณที่ช่องด้านล่าง', ko: '아래 상자에 방 번호를 입력하십시오.', fa: 'لطفا لینک بازی را در قسمت زیر وارد کنید', el: 'Παρακαλώ μπείτε στο δικό σας link room στο κουτί από κάτω' }, 'Insert your room link here': { fr: 'Entrez votre lien de partie ici', es: 'Inserta aquí el enlace de tu partida.', ja: 'ここにあなたのルームのリンクを挿入してください。', de: 'Den Spiellink bitte hier eingeben', pt: 'Insira seu link aqui', ru: 'Вставьте ссылку на матч здесь', hu: 'Ide illessze be a szoba linkjét', it: 'Inserisci il sito della stanza qui', hr: 'Ovdje unesite link sobe', tr: 'Oda Bağlantınızı Buraya Ekleyin', cs: 'Zde vložte odkaz arény.', sk: 'Tu zadajte odkaz arény', id: 'Masuk anda kamar ini', nl: 'Vul de kamerlink hier in', ar: 'أدخل رابط غرفتك هنا', da: 'Indsæt linket til dit rum her.', vi: 'Điền tên sever ở đây', pl: 'Wpisz tu swój link', sv: 'Skriv in din serverslänk här', ro: 'Pune linkul camerei tale aici', zh: '在这里输入你的服务器链接', 'zh-tw': '在這裡插入你的房間鏈接', lt: 'Inserisci il sito della stanza qui', th: 'ใส่ลิงค์ห้องของคุณที่นี่', ko: '여기에 방 번호를 입력하십시오.', fa: 'لینک بازی خود را اینجا وارد کنید', el: 'Μπείτε στο δικό σας room link εδώ' }, Cancel: { fr: 'Annuler', es: 'Cancelar', ja: '取り消し', de: 'Abbruch', pt: 'Cancelar', ru: 'Закрыть', hu: 'Mégsem', it: 'Cancella', hr: 'Odustani', tr: 'İptal', cs: 'Zrušit', sk: 'Zrušiť', nl: 'Annuleren', vi: 'Hủy bỏ', pl: 'Anuluj', sv: 'Avbryt', ro: 'Anulează', zh: '取消', 'zh-tw': '取消', lt: 'Cancella', th: 'ยกเลิก', ko: '취소', fa: 'لغو ' }, 'Quit to Menu': { fr: 'Retour au menu', es: 'Ir al Menú', ja: 'メニューへ戻る', de: 'Verlassen zum Menü', pt: 'Sair para o menu', ru: 'Выйти в меню', hu: 'Kilépés a menübe', it: 'Esci al Menu', hr: 'Izađi u izbornik', tr: 'Menüye Çık', cs: 'Zpět do Menu', sk: 'Späť do Menu', nl: 'Ga naar Menu', vi: 'Trờ về màn hình chính', pl: 'Wyjdź do Menu', sv: 'Avsluta till Meny', ro: 'Întoarce-te la meniul principal', zh: '退出至菜单', 'zh-tw': '退出菜單', lt: 'Esci al Menu', th: 'ออกสู่เมนู', ko: '메뉴로 가기', fa: 'رفتن به منوی بازی' }, 'Quit Game': { fr: 'Quitter le jeu', es: 'Quitar el Juego', ja: 'ゲームをやめる', de: 'Spiel verlassen', pt: 'Sair do jogo', ru: 'Выйти из игры', hu: 'Kilépés a játékból', it: 'Esci dal Gioco', hr: 'Izađi iz igre', tr: 'Oyundan Çık', cs: 'Ukončit Hru', sk: 'Ukončiť Hru', nl: 'Verlaat het spel', vi: 'Thoát game', pl: 'Wyjdź z gry', sv: 'Avsluta Spelet', ro: 'Părăsește jocul', zh: '退出游戏', 'zh-tw': '退出遊戲', lt: 'Esci dal Gioco', th: 'ออกเกม', ko: '게임 나가기', fa: 'خروج از بازی' }, Error: { fr: 'Erreur', es: 'Error', ja: 'エラー', de: 'Fehler', pt: 'Erro', ru: 'Ошибка', hu: 'Hiba', it: 'Errore', hr: 'Greška', tr: 'Hata', cs: 'Chyba', sk: 'Chyba', nl: 'Foutmelding', vi: 'Lỗi', pl: 'Błąd', sv: 'Fel', ro: 'Eroare', zh: '错误', 'zh-tw': '錯誤', lt: 'Errore', th: 'มีข้อผิดพลาด', ko: '오류', fa: 'خطا ' }, 'Could not join game. Game is either full or has expired.': { fr: 'Impossible de rejoindre le jeu. La partie est soit pleine, soit expirée. ', es: 'No es posible seguir el juego. La partida está llena o ha expirado.', ja: '参加できません。ゲームが満員か、すでに終了した可能性があります。', de: 'Dem Spiel konnte nicht beigetreten werden. Das Spiel ist entweder voll oder abgelaufen.', pt: 'Não foi possível entrar no jogo. A sala está cheia ou expirou', ru: 'Не удалось присоединиться к игре. Игра либо полная, либо истек срок действия.', hu: 'Nem lehet csatlakozni a játékhoz.A játék lehet hogy tele van vagy lejárt.', it: 'Non è possibile entrare in gioco. Il gioco è pieno o è scaduto.', hr: 'Nemoguče se je spojiti na igru. Ona je puna ili je istekla.', tr: 'Oyuna katılamadın. Oyun dolu veya süresi dolmuş.', cs: 'Spojení se nezdařilo. Aréna je buď plná, nebo expirovala.', sk: 'Spojenie sa nepodarilo. Aréna je buď plná alebo expirovala', nl: 'Kan niet meedoen met spel. Spel is vol of verlopen.', vi: 'Không thể tham gia trò chơi. Trò chơi đủ người hoặc đã kết thúc', pl: 'Nie można dołączyć do gry. Gra jest pełna, lub wygasła.', sv: 'Kunde ej gå med i spelet. Spelet är antingen fullt eller har utgått.', ro: 'Nu s-a reușit conexiunea. Jocul este ori plin ori a expirat', zh: '无法加入游戏。房间已满或已过期', 'zh-tw': '無法加入遊戲。 房間已滿或已過期。', lt: 'Non puoi entrare in gioco. Il gioco è pieno o è scaduto.', th: 'ไม่สามารถเข้าร่วมเกมได้ เกมอาจเต็มหรือคำขอหมดเวลา', ko: '해당 게임에 참가할 수 없습니다. 만원이거나 종료되었습니다.', fa: 'ورود به بازی امکان پذیر نمی باشد ، بازی مورد نظر به طور کامل پر شده است و یا منقضی گردیده است ' }, 'Reload game': { fr: 'Réessayer', es: 'Recargar', ja: '再読み込み', de: 'Spiel neu laden', pt: 'Reiniciar', ru: 'Перезапустить игру', hu: 'Játék újratöltése', it: 'Ricarica gioco', hr: 'Ponovno učitavam igru', tr: 'Oyunu yenile', cs: 'Znovu načíst', sk: 'Znovu načítať', nl: 'Herlaad game', vi: 'Tải game', pl: 'Przeładuj grę', sv: 'Ladda om spel', ro: 'Reîncărcare joc', zh: '重新加载游戏', 'zh-tw': '重新載入遊戲', lt: 'Ricarica gioco', th: 'โหลดใหม่', ko: '게임 다시 부르기', fa: 'بارگذاری' }, 'Team Mode': { fr: 'Mode Équipe', es: 'Modo Equipo', ja: 'チームモード', de: 'Gruppenmodus', pt: 'Modo de Equipe', ru: 'Командный режим', hu: 'Csapat Mód', it: 'Modalità Squadra', hr: 'Timska Bitka', tr: 'Takım Modu', cs: 'Týmová Hra', sk: 'Týmová Hra', id: 'Mode Tim', nl: 'Teammodus', ar: 'نمط الفريق', da: 'Hold', vi: 'Chế độ đồng đội', pl: 'Tryb drużynowy', he: 'מצב קבוצות', sv: 'Lagläge', ro: 'Mod Echipe', zh: '团队模式', 'zh-tw': '團隊模式', lt: 'Modalità Team', az: 'Dostluq Modu', th: 'ทีม', ko: '팀 모드', fa: 'حالت تیمی', el: 'Ομαδικό Παιχνίδι' }, 'Survival Mode': { fr: 'Mode Survie', es: 'Modo Supervivencia', ja: 'サバイバルモード', de: 'Überlebensmodus', pt: 'Modo de Sobrevivência', ru: 'Выживание', hu: 'Túlélő Mód', it: 'Modalità Sopravvivenza', hr: 'Solo Bitka', tr: 'Hayatta Kalma Modu', cs: 'Survival Hra', sk: 'Survival Hra', id: 'Mode Bertahan Hidup', nl: 'Overlevingsmodus', ar: 'نمط البقاء', da: 'Overlevelse', vi: 'Chế độ sinh tồn', pl: 'Tryb przetrwania', he: 'מצב הישרדות', sv: 'Överlevnadsläge', ro: 'Mod Survival', zh: '生存模式', 'zh-tw': '生存模式', lt: 'Modalità Sopravvivenza', az: 'Həyatta Qalma', th: 'เอาชีวิตรอด', ko: '서바이벌 모드', fa: 'حالت ستیز و گریز', el: 'Παιχνίδι Επιβίωσης' }, Deathmatch: { fr: 'Deathmatch', es: 'Combate a Muerte', ja: 'デスマッチ', de: 'Deathmatch', pt: 'Deathmatch', ru: 'Бой на смерть', hu: 'Deathmatch', it: 'Modalità Deathmatch', hr: 'Arena', tr: 'Ölüm Maçı', cs: 'Aréna', sk: 'Aréna', id: 'Deathmatch', nl: 'Deathmatch', ar: 'مباراة الموت', da: 'Døds kamp', vi: 'Deathmatch', pl: 'Deathmatch', he: 'מצב מהיר', sv: 'Deathmatch', ro: 'Mod Individual', zh: '死亡竞赛', 'zh-tw': '死鬥模式', lt: 'Deathmatch', az: 'Ölüm Oyunu', th: 'เดทแมทช์', ko: '데스매치', fa: 'مسابقه مرگ', el: 'Αγώνας θανάτου' }, 'Pro Deathmatch': { fr: 'Deathmatch Pro', es: 'Combate a Muerte Pro', ja: 'プロデスマッチ', de: 'Pro-Deathmatch', pt: 'PRO Deathmatch', ru: 'Профессиональный бой на смерть', hu: 'Pro Deathmatch', it: 'Modalità Deathmatch Pro', hr: 'Profesionalna Arena', tr: 'Profesyonel Ölüm Maçı', cs: 'Aréna', sk: 'Pro Aréna', id: 'Deathmatch Pro', nl: 'Pro Deathmatch', ar: 'محترف مباراة الموت', da: 'Proffesionel døds kamp', vi: 'Pro Deathmatch', pl: 'Pro Deathmatch', he: 'מצב מהיר מקצוענים', sv: 'Pro Deathmatch', ro: 'Mod Individual Pro', zh: '大死斗模式', 'zh-tw': '大死鬥模式', lt: 'Pro Deathmatch', az: 'Prafisanal Ölüm Oyunu', th: 'โปรเดทแมทช์', ko: '프로 데스매치', fa: 'قهرمان مسابقه مرگ', el: 'Αγώνας θανάτου Pro' }, 'Weapon Store': { fr: "Magasin d'armes", es: 'Tienda de Armas', ja: '武器屋', de: 'Waffenladen', pt: 'Loja de Armas', ru: 'Магазин оружия', hu: 'Fegyver bolt', it: 'Mercato delle Armi', hr: 'Trgovina oružja', tr: 'Silah Mağazası', cs: 'Obchod', sk: 'Obchod', id: 'Toko Senjata', nl: 'Wapenwinkel', ar: 'مخزن الأسلحة', vi: 'Cửa hàng vũ khí', pl: 'zbrojownia', sv: 'Vapenshop', ro: 'Magazinul de arme', zh: '武器商店', 'zh-tw': '武器商店', lt: 'Mercato di Armi', th: 'ร้านอาวุธ', ko: '무기 상점', fa: 'مخزن اسلحه ', el: 'Κατάστημα όπλων' }, EXIT: { fr: 'QUITTER', es: 'SALIR', ja: '終了', de: 'VERLASSEN', pt: 'SAIR', ru: 'ВЫЙТИ', hu: 'KILÉPÉS', it: 'ESCI', hr: 'IZLAZ', tr: 'ÇIK', cs: 'ZPĚT', sk: 'SPÄŤ', id: 'KELUAR', nl: 'EXIT', ar: 'مغادرة', da: 'AFSLUT', vi: 'THOÁT', PL: 'WYJŚCIE', sv: 'AVSLUTA', ro: 'IESIRE', zh: '退出', 'zh-tw': '退出', lt: 'ESCI', th: 'ออก', ko: '나가기', fa: 'خروج', el: 'ΕΞΟΔΟΣ' }, Rockets: { fr: 'Roquettes', es: 'Cohetes', ja: 'ロケット', de: 'Kleine Raketen', pt: 'Foguetes', ru: 'Ракеты', hu: 'Rakéták', it: 'Razzi', hr: 'Rakete', tr: 'Roket', cs: 'Malé Rakety', sk: 'Malé Rakety', id: 'Roket', nl: 'Raket', ar: 'صواريخ', vi: 'Tên lửa', pl: 'Rakiety', sv: 'Raketer', ro: 'Rachete', zh: '火箭', 'zh-tw': '火箭筒', lt: 'Razzi', th: 'จรวด', ko: '로켓', fa: 'راکت', el: 'Ρουκέτα' }, Missiles: { fr: 'Missiles', es: 'Misiles', ja: 'ミサイル', de: 'Große Raketen', pt: 'Misséis', ru: 'Усиленные ракеты', hu: 'Nagyobb rakéták', it: 'Missili', hr: 'Lovci', tr: 'Füze', cs: 'Velké Rakety', sk: 'Veľké rakety', id: 'Misil', nl: 'Raket', ar: 'قذيفة', vi: 'Missiles', pl: 'Pociski', sv: 'Missiler', ro: 'Rachete mari', zh: '导弹', 'zh-tw': '導彈', lt: 'Missili', th: 'ขีปนาวุธ', ko: '미사일', fa: 'موشک', el: 'Πύραυλοι' }, Torpedo: { fr: 'Torpille', es: 'Torpedo', ja: '魚雷', de: 'Torpedo', pt: 'Torpedos', ru: 'Торпеда', hu: 'Torpedó', it: 'Siluro', hr: 'Torpedo', tr: 'Torpido', cs: 'Torpédo', sk: 'Torpédo', id: 'Torpedo', nl: 'Torpedo', ar: 'نسف', vi: 'Torpedo', pl: 'Torpedy', sv: 'Torped', ro: 'Torpedo', zh: '鱼雷', 'zh-tw': '魚雷', lt: 'Siluri', th: 'ตอร์ปิโด', ko: '어뢰', fa: 'اژدر', el: 'Τορπίλη' }, 'Space Mines': { fr: 'Mines légères', es: 'Minas Espaciales', ja: '宇宙機雷', de: 'Weltraum Minen', pt: 'Minas Espaciais', ru: 'Космические мины', hu: 'Űr aknák', it: 'Miniere dello Spazio', hr: 'Svemirska mina', tr: 'Uzay Mayını', cs: 'Malé Miny', sk: 'Malé Míny', id: 'Tambang Ruang Angkasa', nl: 'Ruimtemijn', ar: 'الألغام الفضائية', vi: 'Space Mines', pl: 'Miny ', sv: 'Rymdminor', ro: 'Mine spatiale', zh: '太空雷', 'zh-tw': '小型地雷', lt: 'Miniere Spaziali', th: 'ทุ่นระเบิด', ko: '우주 지뢰', fa: 'مین های فضایی', el: 'Μικρές Νάρκες' }, 'Heavy Mines': { fr: 'Mines lourdes', es: 'Minas Pesadas', ja: '重機雷', de: 'Schwere Minen', pt: 'Minas Pesadas', ru: 'Тяжелые мины', hu: 'Nagy aknák', it: 'Miniere Pesanti', hr: 'Teška mina', tr: 'Ağır Mayın', cs: 'Velké Miny', sk: 'Veľké Míny', id: 'Tambag Berat', nl: 'Zware mijn', ar: 'الألغام الثقيلة', vi: 'Heavy Mines', pl: 'Ciężkie miny', sv: 'Tunga Minor', ro: 'Mine mari', zh: '巨型太空雷', 'zh-tw': '大型地雷', lt: 'Miniere Pesanti', th: 'ทุ่นระเบิดหนัก', ko: '대형 지뢰', fa: 'مین های سنگین ', el: 'Μεγάλες Νάρκες' }, 'Mining Pod': { fr: 'Pod de minage', es: 'Pod Minero', ja: '採掘ポッド', de: 'Abbaudrohne', pt: 'Pod De Mineração', ru: 'Добывающий дрон', hu: 'Bányász drón', it: 'Pod Scavatori', hr: 'Rudarski robot', tr: 'Maden İHA sı', cs: 'Důlní Dron', sk: 'Banícky Dron', id: 'Polong Pertambangan', nl: 'Mijndrone', ar: 'جراب إستخراج المعادن', vi: 'Hạt khai thác', pl: 'Moduł górniczy', sv: 'Gruvdrönare', ro: 'Minion pentru minerit', zh: '采矿机器人', 'zh-tw': '採礦機器人', lt: 'Pod Minatore', th: 'ฝักเหมืองแร่', ko: '채광 포드', fa: 'پهپاد حفاری', el: 'Μεταλλευτική Άκατος' }, 'Attack Pod': { fr: "Pod d'attaque", es: 'Pod de Ataque', ja: '攻撃ポッド', de: 'Angriffsdrohne', pt: 'Pod De Ataque', ru: 'Атакующий дрон', hu: 'Harci drón', it: 'Pod Attaccanti', hr: 'Napadački robot', tr: 'Saldırı İHA sı', cs: 'Obranný Dron', sk: 'Útočný Dron', id: 'Serang serangan', nl: 'Aanvalsdrone', ar: 'جراب الهجوم', vi: 'Hạt tấn công', pl: 'Moduł ofensywny', sv: 'Attackdrönare', ro: 'Minion pentru atac', zh: '攻击机器人', 'zh-tw': '攻擊機器人', lt: 'Pod Attaccante', th: 'ฝักโจมตี', ko: '공격 포드', fa: 'پهپاد تهاجمی', el: 'Επιθετική Άκατος' }, 'Defense Pod': { fr: 'Pod de défense', es: 'Pod de Defensa', ja: '防御ポッド', de: 'Verteidigungsdrohne', pt: 'Pod De Defesa', ru: 'Защитный дрон', hu: 'Védekező drón', it: 'Pod Difensive', hr: 'Obrambeni robot', tr: 'Savunma İHA sı', cs: 'Protistřelový Dron', sk: 'Obranný Dron', id: 'Pod Pertahanan', nl: 'Verdedigingsdrone', ar: 'جراب الدفاع', vi: 'Hạt phòng thủ', pl: 'Moduł defensywny', sv: 'Försvarsdrönare', ro: 'Minion pentru apărare', zh: '防御机器人', 'zh-tw': '防禦機器人', lt: 'Pod Difensivo', th: 'ฝักป้องกัน', ko: '방어 포드', fa: 'پهپاد تدافعی', el: 'Αμυντική Άκατος' }, 'ECP Sandbox': { fr: 'Sandbox ECP', es: 'Caja de arena ECP', ja: 'ECPサンドボックス', de: 'Elite-Ausweis-Sandbox', pt: 'Caixa de areia ECP', ru: 'ECP песочница', hu: 'EKJ Homokozó', it: 'Sandbox ECP', hr: 'PEZ Sandbox', tr: 'SKİ Sanal Alan', cs: 'Sandbox', sk: 'Sandbox', id: 'EKL Sandbox', nl: 'ECP Sandbox', ar: 'القائد النخبة يمر آلية تحديد الوصول', vi: 'Sân chơi thử nghiệm', pl: 'Sandbox ECP', he: 'ארגז חול מפקד עליון', sv: 'ECP Sandbox', ro: 'ECP Loc de antrenament', zh: 'ECP沙盒', 'zh-tw': '菁英指揮官沙盒', lt: 'Sandbox ECP', az: 'ECP Sandbox', th: 'ECP Sandbox', ko: 'ECP 샌드박스', fa: 'سندباکس حساب فرمانده نخبه', el: 'ECP Sandbox' }, 'Choose sides': { fr: 'Choisissez votre camp', es: 'Escoge un equipo', ja: 'チーム選択', de: 'Wähle deine Seite', pt: 'Escolha uma equipe', ru: 'Выбрать одну из сторон', hu: 'Válassz oldalt', it: 'Scegli la direzione', hr: 'Izaberi Savez', tr: 'Taraf Seç', cs: 'Vyber si stranu', sk: 'Vyber si stranu', id: 'Pilih sisi', nl: 'Kies je team', ar: 'اختر جانبك', da: 'Vælg hold', vi: 'Chọn đội', pl: 'Wybierz stronę', he: 'תבחר צד', sv: 'Välj lag', ro: 'Alege echipa', zh: '选边', 'zh-tw': '選擇團隊', lt: 'Scegli lati', az: 'Qrupunu seç', th: 'เลือกฝ่าย', ko: '진영을 선택하십시오.', fa: 'انتخاب کردن طرف مورد نظر', el: 'Διάλεξε πλευρά' }, REPAIR: { fr: 'RÉPARER', es: 'REPARAR', ja: '修理', de: 'REPARIEREN', pt: 'Reparar', ru: 'РЕМОНТ', hu: 'JAVÍTÁS', it: 'RIPARA', hr: 'Popravak', tr: 'Onar', cs: 'OPRAVIT', sk: 'OPRAVIŤ', id: 'PERBAIKI', nl: 'REPAREER', ar: 'إصلاح', da: 'REPARER', vi: 'Sửa chữa', pl: 'NAPRAWA', he: 'תקן', sv: 'REPARATION', ro: 'Repară', zh: '修复', 'zh-tw': '修復', lt: 'RIPARA', az: 'Təmir', th: 'ซ่อมแซม', ko: '수리', fa: 'تعمیر', el: 'ΕΠΙΣΚΕΥΑΖΩ' }, rounds: { fr: 'rounds', es: 'Rondas', ja: 'ラウンド', de: 'Runden', pt: 'Rodadas', ru: 'Раунды', hu: 'fordulók', it: 'Rounds', hr: 'Rundi', tr: 'Raundlar', cs: 'Kola', sk: 'Kolá', id: 'Ronde', nl: 'ronden', ar: 'جولات', da: 'runder', vi: 'Vòng', pl: 'rundy', he: 'סיבובים', sv: 'runder', ro: 'Runde', zh: '轮次', 'zh-tw': '回合', lt: 'Rounds', az: 'Raundlar', th: 'รอบ', ko: '라운드', fa: 'راند', el: 'γύροι' }, wins: { fr: 'victoires', es: 'Victorias', ja: '勝利', de: 'Siege', pt: 'Vitórias', ru: 'Победы', hu: 'győzelmek', it: 'Vittorie', hr: 'Pobijediti', tr: 'Kazanmalar', cs: 'Výhry', sk: 'Výhry', id: 'Kemenangan', nl: 'overwinningen', ar: 'انتصارات', da: 'sejre', vi: 'Chiến thắng', pl: 'zwycięstwa', he: 'נצחונות', sv: 'vinster', ro: 'Victorii', zh: '胜者', 'zh-tw': '贏家', lt: 'Vittorie', az: 'Qazanmaq', th: 'ชนะ', ko: '승리', fa: 'برنده می شود', el: 'νίκες' }, 'GALAXY MAP': { fr: 'CARTE DE LA GALAXIE', es: 'MAPA GALÁCTICO', ja: '銀河地図', de: 'GALAXIEKARTE', pt: 'MAPA DA GALÁXIA', ru: 'ГАЛАКТИЧЕСКАЯ КАРТА', hu: 'GALAXYS TÉRKÉP', it: 'MAPPA DELLA GALASSIA', hr: 'KARTA GALAKSIJE', tr: 'GALAKSİ HARİTASI', cs: 'GALAKTICKÁ MAPA', sk: 'GALAKTICKÁ MAPA', id: 'PETA GALAKSI', nl: 'RUIMTEMAP', ar: 'خريطة المجرة', vi: 'BẢN ĐỒ GIẢI NGÂN HÀ', pl: 'MAPA GALAKTYKI', sv: 'GALAXKARTA', ro: 'HARTA GALAXIE', zh: '地图', 'zh-tw': '地圖', lt: 'MAPPE GALATTICHE', th: 'แผนที่กาแล็กซี่', ko: '은하 지도', fa: 'نقشه کهکشان', el: 'ΧΑΡΤΗΣ ΓΑΛΑΞΙΑ' }, 'Invasion Mode': { fr: 'Mode invasion', es: 'Modo Invasión', ja: '侵略モード', de: 'Invasionsmodus', pt: 'Modo de invasão', ru: 'Режим вторжения', hu: 'Invázió mód', it: "Modalità d'Invasione", hr: 'Invazijska igra', tr: 'İstila Modu', cs: 'Invaze', sk: 'Invázia', id: 'Mode invasi', nl: 'invasiemodus', ar: 'طريقة الغزو', vi: 'Chế độ xâm lược', pl: 'Tryb przetrwania', sv: 'Invasionsläge', ro: 'Modul invazie', zh: '入侵模式', 'zh-tw': '入侵模式', lt: "Modalità d'Invasione", th: 'โหมดรุกราน', ko: '침입 모드', fa: 'حالت معکوس', el: 'Παιχνίδι εισβολών' }, RESUME: { fr: 'CONTINUER', es: 'CONTINUAR', ja: '再開', de: 'FORTFAHREN', pt: 'CONTINUAR', ru: 'ПРОДОЛЖИТЬ', hu: 'FOLYTATÁS', it: 'CONTINUA', hr: 'NASTAVI', tr: 'DEVAM ET', cs: 'ZPĚT', sk: 'SPÄŤ', id: 'LANJUT', nl: 'HERVAT', ar: 'استئنف', vi: 'TIẾP TỤC', pl: 'KONTYNUUJ', sv: 'ÅTERUPPTA', ro: 'REVIN-O', zh: '继续', 'zh-tw': '繼續', lt: 'CONTINUA', th: 'กลับเข้าสู่เกม', ko: '재개', fa: 'ادامه', el: 'ΣΥΝΕΧΙΖΩ' }, 'All Modes': { fr: 'Tous les modes', es: 'Todos los Modos', ja: '全てのモード', de: 'Alle Modi', pt: 'Todos os modos', ru: 'Все режимы', hu: 'Összes mód', it: 'Tutte le Modalità', hr: 'Sve igre', tr: 'Tüm Modlar', cs: 'Všechny Hry', sk: 'Všetky hry', id: 'Semua mode', nl: 'Alle modi', ar: 'جميع وسائط', vi: 'Tất cả chế độ', pl: 'Wszystkie Tryby', sv: 'Alla Lägen', ro: 'Toate modurile', zh: '所有模式', 'zh-tw': '所有模式', lt: 'Tutte le modalità', th: 'ทุกโหมด', ko: '모든 모드', fa: 'تمام حالت ها ', el: 'Όλα τα παιχνίδια' }, 'Team rank': { fr: "Rang de l'équipe", es: 'Rango de Equipo', ja: 'チームの順位', de: 'Teamrang', pt: 'Rank de equipe', ru: 'Коммандный ранг', hu: 'Csapat rangja', it: 'Rango dei team', hr: 'Tim rank', tr: 'Takım Sıralaması', cs: 'Pozice týmu', sk: 'Hodnosť týmu', id: 'Peringkat tim', nl: 'Team rang', ar: 'فريق', vi: 'Xếp hạng đội', pl: 'Ranking Drużyny', sv: 'Lagrank', ro: 'Clasamentul echipei', zh: '团队排名', 'zh-tw': '團隊排行', lt: 'Rango dei Team', th: 'อันดับทีม', ko: '팀 순위', fa: 'رتبه تیم ', el: 'Κατάταξη Ομάδας' }, 'Your team wins!': { fr: 'Votre équipe a gagné !', es: '¡Tu equipo gana!', ja: 'あなたのチームが勝利しました！', de: 'Dein Team hat gewonnen!', pt: 'Sua equipe ganhou!', ru: 'Ваша команда победила!', hu: 'A csapatod nyert!', it: 'Il tuo team ha vinto!', hr: 'Tvoj tim je pobijedio!', tr: 'Takımın Kazandı!', cs: 'Tvůj tým vyhrál!', sk: 'Tvoj tým vyhral!', id: 'Tim anda menang!', nl: 'Je team heeft gewonnen!', ar: 'فريقك يفوز!', vi: 'Đội bạn thắng', pl: 'Twoja drużyna zwyciężyła!', sv: 'Ditt lag vinner!', ro: 'Echipa ta castiga!', zh: '你的队赢了', 'zh-tw': '您的團隊贏了!', lt: 'Il tuo team ha vinto!', th: 'ทีมของคุณชนะ', ko: '귀하의 팀이 승리하였습니다!', fa: 'تیم شما پیروز شد ', el: 'Η ομάδα σας κέρδισε!' }, About: { fr: 'À propos', es: 'Acerca de', ja: 'starblast.io について', de: 'Über', pt: 'Ataque', ru: 'Об игре', hu: 'Ról', it: 'Riguardo di', hr: 'O', tr: 'Hakkında', cs: 'O hře', sk: 'O hre', id: 'Tentang', nl: 'Over', ar: 'حول', vi: 'Thuộc về', pl: 'O grze', sv: 'Om', ro: 'Despre', zh: '关于', 'zh-tw': '關於', lt: 'Riguardo', th: 'เกี่ยวกับ', ko: '설명', fa: 'درباره', el: 'Περίπου' }, 'How to play': { fr: 'Comment jouer', es: 'Cómo jugar', ja: '遊び方', de: 'Spielregeln', pt: 'Como jogar', ru: 'Как играть', hu: 'Hogyan játsz', it: 'Come giocare', hr: 'Kako igrati', tr: 'Nasıl Oynanır', cs: 'Jak hrát', sk: 'Návod na hru', id: 'Cara bermain', nl: 'Hoe te spelen', ar: 'كيف ألعب', vi: 'Cách chơi', pl: 'Jak grać', sv: 'Hur man spelar', ro: 'Cum să joci', zh: '如何玩Starblast.io?', 'zh-tw': '如何使出星爆? (操作規則)', lt: 'Come giocare', th: 'วิธีเล่น', ko: '진행법', fa: 'نحوه ی بازی ', el: 'Πώς να παίξετε' }, 'Wave %d': { fr: 'Vague %d', es: 'Oleada %d', ja: 'ウェーブ %d', de: 'Welle %d', pt: 'Onda %d', ru: 'Волна %d', hu: 'Hullám %d', it: 'Onda %d', hr: 'Val %d', tr: 'Dalga %d', cs: 'Vlna %d', sk: 'Vlna %d', id: 'Gelombang %d', nl: 'aanvalsgolf %d', ar: 'موجة٪ d', vi: 'Màn', pl: 'Fala %d', sv: 'Runda %d', ro: 'Runda %d', zh: '波数 %d', 'zh-tw': '第%d輪', lt: 'Onda %d', th: 'ระลอกที่ %d', ko: '웨이브 %d', fa: 'موج %d', el: 'Κύμα %d' }, 'Wave cleared!': { fr: 'Vague repoussée !', es: '¡Oleada eliminada!', ja: 'ウエーブクリア！', de: 'Welle geschafft', pt: 'Onda de eliminação ', ru: 'Волна уничтожена!', hu: 'Hullám letudva!', it: 'Onda pulita!', hr: 'Val očišćen', tr: 'Dalga temizlendi!', cs: 'Vlna pokořena!', sk: 'Vlna pokorená', id: 'Gelombang menhilang!', nl: 'aanvalsgolf klaar', ar: 'موجة مسح!', vi: 'Dọn sạch màn', pl: 'Fala Ukończona!', sv: 'Runda avklarad!', ro: 'Rundă terminată!', zh: '波数已清除！', 'zh-tw': '掃蕩已完成！', lt: 'Onda pulita!', th: 'เคลียร์ระลอกแล้ว!', ko: '웨이브 클리어!', fa: 'موج پاکسازی شد ', el: 'Κύμα εκκαθαρίστηκε!' }, 'Gamepad Controls': { fr: 'Contrôles du gamepad', es: 'Controles de Gamepad', ja: 'ゲームパッド操作', de: 'Gamepad-Steuerung', pt: 'Controles de gamepad', ru: 'Управление с помощью геймпада', hu: 'Kontroller írányítás', it: 'Controlli del Gamepad', hr: 'Gamepad', tr: 'Oyunpadı Kontrolleri', cs: 'Gamepad', sk: 'Gamepad', id: 'Kontrol Gamepad', nl: 'Gamepadcontrole', ar: 'وحدة تحكم الالعاب', vi: 'Điều khiển trò chơi', pl: 'Sterowanie Gamepadem', sv: 'Kontroller för Spelkontroll', ro: 'Controale gamepad', zh: '手柄控制', 'zh-tw': '手柄控制', lt: 'Controlli Gamepad', th: 'แป้นเกม', ko: '게임패드 컨트롤', fa: 'دسته های کنترل ', el: 'Gamepad Controls' }, 'Mouse+keyboard Controls': { fr: 'Contrôles clavier/souris', es: 'Controles de Ratón+Teclado', ja: 'マウス・キーボード操作', de: 'Maus- und Tastatursteuerung', pt: 'Controles de mause+teclado', ru: 'Управление с помощью мыши и клавиатуры', hu: 'Egér+billentyűzet írányítás', it: 'Mouse+controlli Tastiera', hr: 'Miš+tipkovnica', tr: 'Fare ve Klavye Kontrolleri', cs: 'Myš + Klávesnice', sk: 'Myš + Klávesnica', id: 'Kontrol mouse + Keyboard', nl: 'Muis- + klaviercontrole', ar: 'الماوس + الضوابط لوحة المفاتيح', vi: 'Chuột+bàn phím điều khiển', pl: 'Sterowanie myszą + klawiaturą', sv: 'Kontroller för Mus & Tangentbord', ro: 'Controale mouse+tastatură', zh: '鼠标键盘控制', 'zh-tw': '鍵盤/滑鼠控制', lt: 'Mouse+Controlli tastiera', th: 'เมาส์+คีย์บอร์ด', ko: '마우스+키보드 컨트롤', fa: 'کنترل های موس + کیبورد ', el: 'Mouse+keyboard Controls' }, Steer: { fr: 'Direction', es: 'Dirigir', ja: '操縦', de: 'Steuern', pt: 'Direção', ru: 'Поворот', hu: 'Vezető', it: 'Guida', hr: 'Upravljanje', tr: 'Yönlendirme', cs: 'Pohyb', sk: 'Pohyb', id: 'Mendorong', nl: 'sturen', ar: 'قيادة', pl: 'Kurs', sv: 'Styr', ro: 'Pilotează', zh: '控制', 'zh-tw': '指引', lt: 'Guida', th: 'จอยพวงมาลัย', ko: '조종간', fa: 'هدایت کردن', el: 'πιλοτάρω' }, 'Select Upgrades': { fr: 'Choisir les améliorations', es: 'Seleccionar mejoras', ja: 'アップグレード選択', de: 'Wähle Upgrades', pt: 'Loja de melhoramentos', ru: 'Выбрать улучшения', hu: 'Válassz fejlesztéseket', it: 'Seleziona Aggiornamenti', hr: 'Izaberi nadogradnje', tr: 'Geliştirmeleri Seç', cs: 'Zvolit vylepšení', sk: 'Zvoliť Vylepšenia', id: 'Pilih upgrade ', nl: 'upgrades selecteren', ar: 'حدد ترقيات', vi: 'Chọn nâng cấp', pl: 'Wybierz Ulepszenia', sv: 'Välj Uppgraderingar', ro: 'Alege imbunatatiri', zh: '选择升级项', 'zh-tw': '選擇下一階船艦', lt: 'Seleziona Aggiornamenti', th: 'เลือกการอัพเกรด', ko: '업그레이드 선택', fa: 'انتخاب ارتقادهنده ها ', el: 'Διάλεξε αναβαθμίσεις' }, Screenshot: { fr: 'Screenshot', es: 'Captura de pantalla', ja: 'スリーンショット', de: 'Screenshot', pt: 'Captura de tela ', ru: 'Сделать снимок', hu: 'Képernyőkép', it: 'Cattura lo schermo', hr: 'Snimka zaslona', tr: 'Ekran Görüntüsü Al', cs: 'Screenshot', sk: 'Screenshot', id: 'Foto Layar', nl: 'schermopname', ar: 'لقطة شاشة', vi: 'Chụp ảnh màn hình', pl: 'Zrzut ekranu', sv: 'Skärmdump', ro: 'Captură ecran', zh: '截屏', 'zh-tw': '螢幕截圖', lt: 'Cattura lo Schermo', th: 'ภาพหน้าจอ', ko: '스크린샷', fa: 'اسکرین شات ', el: 'Screenshot' }, 'Toggle Scoreboards': { fr: 'Changer les scores', es: 'Palanca de Marcador', ja: '順位表の表示', de: 'Punkteliste ein/aus', pt: 'Alternar marcadores', ru: 'Показать/убрать таблицу очков', hu: 'Eredményjelző mutatása', it: 'Scambiare tabelloni', hr: 'Druge rang liste', tr: 'Skor Tabelasını Değiştir', cs: 'Nastavit žebříčky skóre', sk: 'Nastaviť rebríček skóre', id: 'Beralih Papan angka', nl: 'van scorebord verwisselen', ar: 'تبديل لوحات النتائج', vi: 'Chuyển đổi bản xếp hạng', pl: 'Pokaż Tablicę wyników', sv: 'Visa/Göm Poänglista', ro: 'Arată', zh: '分数榜切换', 'zh-tw': '隱藏排行榜', lt: 'Cambia Classifiche', th: 'กระดานคะแนน', ko: '토클 점수표', fa: 'جا به جایی تخته امتیازات', el: 'Εναλλαγή πινάκων αποτελεσμάτων' }, Thrust: { fr: 'Accélérer', es: 'Acelerar', ja: '推進', de: 'Schub', pt: 'Acelerar', ru: 'Ускорение', hu: 'Tolóerő', it: 'Accellera', hr: 'Pogon', tr: 'İlerleme', cs: 'Trysky', sk: 'Trysky', id: 'Dorongan', nl: 'Versnelling', ar: 'دفع', vi: 'Lực đẩy', pl: 'Siła Ciągu', sv: 'Accelerera', ro: 'Propulsie', zh: '推进器', 'zh-tw': '火箭推進器', lt: 'Spinta', th: 'แรงผลักดัน', ko: '추력', fa: 'نیروی رانش ', el: 'Ώθηση' }, Fire: { fr: 'Tirer', es: 'Disparar', ja: '主砲', de: 'Feuer', pt: 'Disparo', ru: 'Огонь', hu: 'Tűz', it: 'Fuoco', hr: 'Pucaj', tr: 'Ateş Etme', cs: 'Hlavní zbraň', sk: 'Hlavná zbraň', id: 'Fire', nl: 'Vuur', ar: 'اطلاق النار', vi: 'Bắn', pl: 'Ogień', sv: 'Skjut Vapen', ro: 'Foc', zh: '开火', 'zh-tw': '開火', lt: 'Fuoco', th: 'ยิง', ko: '주무기', fa: 'آتش ', el: 'Πυροβόλησε' }, 'Secondary Fire': { fr: 'Tir secondaire', es: 'Fuego Secundario', ja: '副砲', de: 'Sekundärwaffe', pt: 'Segundo disparo', ru: 'Дополнительное вооружение', hu: 'Másodlagos tűz', it: 'Fuoco Secondario', hr: 'Sekundarna paljba', tr: 'İkincil Silah', cs: 'Vedlejší zbraň', sk: 'Vedľajšia zbraň', id: 'Memengah', nl: 'Tweede vuur', ar: 'اطلاق نارالثانوي', vi: 'Vũ khí thứ hai tấn công', pl: 'Druga broń', sv: 'Skjut Sekundärvapen', ro: 'Foc secundar', zh: '副武器开火', 'zh-tw': '次要武器開火', lt: 'Fuoco Secondario', th: 'อาวุธรอง', ko: '보조무기', fa: 'سلاح ثانویه ', el: 'Δευτερεύοντα Πυρά' }, 'Switch Weapon': { fr: "Changer d'arme", es: 'Cambiar de arma', ja: '武器を替える', de: 'Waffe wechseln', pt: 'Mudança de arma', ru: 'Переключить оружие', hu: 'Fegyverváltás', it: 'Cambia Arma', hr: 'Zamijeni oružje', tr: 'Silah Değiştir', cs: 'Změnit zbraň', sk: 'Zmeniť zbraň', id: 'Beralihlah Senjata', nl: 'Van wapen wisselen', ar: 'تبديل سلاح', vi: 'Đổi vũ khí', pl: 'Zmień broń', sv: 'Byt Vapen', ro: 'Schimba arma', zh: '切换武器', 'zh-tw': '切換武器', lt: 'Cambia Arma', th: 'สลับอาวุธ', ko: '무기 변경', fa: 'سوییچ کردن سلاح ', el: 'Άλλαξε το όπλο' }, 'Choose your ship for this round': { fr: 'Choisissez votre vaisseau pour le prochain round', es: 'Elige tu nave para esta ronda', ja: '宇宙船を選択', de: 'Wähle dein Schiff für diese Runde', pt: 'Escolha sua nave para esta Rodada', ru: 'Выберите корабль для этого раунда', hu: 'Válasszd ki a hajód a fordulóhóz', it: 'Scegli la nave per questo round', hr: 'Izaberi svoj brod za ovu rundu', tr: 'Bu karşılaşma için gemini seç', cs: 'Vyber si loď pro toto kolo', sk: 'Vyber si loď pre toto kolo', id: 'Pilih kapalmu untuk ronde ini', nl: 'Kies je schip voor deze ronde', ar: 'اختر سفينتك لهذه الجولة', da: 'Vælg dit skib for denne rundte', vi: 'Chọn tàu của bạn trong vòng này', pl: 'Wybierz swój statek na tą rundę', he: 'תבחר את הספינה שלך לסיבוב זה', sv: 'Välj ditt skepp för denna runda', ro: 'Alegeţi naveta pentru această rundă', zh: '选择在此轮中使用的船舰', 'zh-tw': '選擇你在這一局要使用的船艦', lt: 'Scegli la tua nave per questo round', az: 'Bu Raundluq Robutunu Seç', th: 'เลือกยานของคุณ', ko: '이번 회에서 사용할 우주선을 고르십시오.', fa: 'سفینه ات را انتخاب کن', el: 'Διάλεξε το διαστημόπλοιό σου για αυτό το γύρο' }, 'Waiting for more players': { fr: 'En attente de plus de joueurs', es: 'Esperando más jugadores', ja: '待機中', de: 'Auf mehr Spieler warten', pt: 'Esperando mais Jogadores', ru: 'Ожидание игроков', hu: 'Várakozás a játékosokra', it: 'Aspettando più giocatori', hr: 'Čekam na igrače', tr: 'Daha Fazla Oyuncu Bekleniyor', cs: 'Čekání na více hráčů', sk: 'Čakanie na ďalších hráčov', id: 'Menunggu para pemain yang lain', nl: 'Wachten op meer spelers', ar: 'انتظار المزيد من اللاعبين', da: 'Venter på flere spillere', vi: 'Đợi có thêm người chơi', pl: 'Czekam na więcej graczy', he: 'מחכה לשחקנים נוספים', sv: 'Väntar på spelare', ro: 'Așteaptă pentru mai mulţi jucători', zh: '等待更多玩家', 'zh-tw': '等待更多玩家', lt: 'Aspettando più giocatori', az: 'Digər oyunçular gözlənilir', th: 'กำลังรอผู้เล่น', ko: '더 많은 참가자를 기다리십시오.', fa: 'در انتظار بازیکنان بیشتر', el: 'Περίμενε και για άλλους παίκτες' }, 'You win!': { fr: 'Vous êtes victorieux !', es: '¡Has ganado!', ja: '勝った！', de: 'Du hast gewonnen!', pt: 'Você Ganhou!', ru: 'Вы победили!', hu: 'Győztél!', it: 'Hai vinto!', hr: 'Pobijedio si!', tr: 'Sen kazandın', cs: 'Vyhrál si!', sk: 'Vyhral si!', id: 'Anda menang!', nl: 'Je hebt gewonnen!', ar: 'انت فزت', da: 'Du vinder!', vi: 'Bạn là ngươi chiến tháng', pl: 'Jesteś zwycięzcą!', he: 'ניצחת!', sv: 'Du vann!', ro: 'Ai câștigat', zh: '你赢了！', 'zh-tw': '你赢了！', lt: 'Hai vinto!', az: 'Sən qazandın!', th: 'คุณชนะ!', ko: '승리하셨습니다!', fa: 'تو برنده شدی !', el: 'Κέρδισες!' }, 'Your rank:': { fr: 'Votre rang :', es: 'Tu rango:', ja: 'あなたの順位：', de: 'Dein Rang:', pt: 'Seu Rank:', ru: 'Ваше место:', hu: 'A helyezésed:', it: 'Il tuo rank:', hr: 'Tvoj čin:', tr: 'Senin Rütben:', cs: 'Tvoje pozice:', sk: 'Tvoja pozícia:', id: 'Pangkat anda:', nl: 'Je rang:', ar: 'رتبتك:', da: 'Din rang', vi: 'Rank của bạn là', pl: 'Twój ranking:', he: 'הדרגה שלך:', sv: 'Din rank:', ro: 'Clasamentul tău', zh: '你的排名:', 'zh-tw': '你的排名：', lt: 'Tuo rank:', az: 'Sənin rütbən:', th: 'อันดับของคุณ', ko: '순위:', fa: 'رتبه ی شما', el: 'Η κατάταξή σου' }, 'Kill any ship for %d point': { fr: 'Détruire un vaisseau donne %d point', es: 'Elimina cualquier nave para conseguir %d punto', ja: '他の船を%d体破壊せよ', de: 'Eliminiere ein beliebiges Schiff für %d Punkte', pt: 'Elimine qualquer nave e ganhe %d pontos', ru: 'Уничтожьте корабль чтобы набрать %d очков', hu: 'Lődd meg bármelyik hajót %d pontért', it: 'Uccidi qualsiasi nave per %d punti', hr: 'Uništi bilo koji brod za %d bodova', tr: 'Rasgele Yokedilen Düşmana %d Puan', cs: 'Znič jakoukoliv loď pro %d výherní bod', sk: 'Znič akúkoľvek loď pre %d výherní bod', id: 'Bunuh kapal apa saja untuk point sebanyak %d', nl: 'Vernietig eender welk schip voor %d punten', ar: 'اقتل اي سفينة من اجل %d نقطة', vi: 'Giết bất kì người nào có %d điểm', pl: 'Zniszczczenie dowolnego statku da ci %d punktów', he: 'תהרוג ספינה כלשהיא בשביל %d נקודות', sv: 'Förstör ett skepp för %d poäng', ro: 'Distruge oricare navă pentru %d puncte', zh: '杀掉任何目标获得 %d 点', 'zh-tw': '殺掉任何船舶以獲得%d分', lt: 'Uccidi tutte le navi per %d punti', az: 'Bəxdəxuda öldürdüyün Düşmana %d xalı', th: 'ทำลายยานใดๆได้ %d คะแนน', ko: '아무 배를 죽이면 %d점', fa: 'از بین بردن هر سفینه %d امتیاز داره', el: 'Σκότωσε οποιοδήποτε διαστημόπλοιο για %d πόντους' }, 'Kill your target for %d points': { fr: 'Détruire votre cible donne %d points', es: 'Elimina a tu objetivo para conseguir %d puntos', ja: 'ターゲットを%d体破壊せよ', de: 'Eliminiere dein Ziel für %d Punkte', pt: 'Mate seu alvo e ganhe %d pontos', ru: 'Уничтожьте вашу цель чтобы набрать %d очков', hu: 'Öld meg a célpontod %d pontért', it: 'Uccidi il tuo bersaglio per %d punti', hr: 'Uništi svoju metu za %d bodova', tr: 'Hedeflenen Düşmanı Yoket %d Puan', cs: 'Znič svůj cíl pro %d výherní body', sk: 'Znič svoj cieľ pre %d výherné body', id: 'Bunuh target anda untuk point sebanyak %d', nl: 'Vernietig je doel voor %d punten', ar: 'اقتل هدفك من اجل %d نقط', da: 'Dræb dit mål for %d point', vi: 'Giết mục tiêu của bạn có %d điểm', pl: 'Zniszczenie swojego celu da ci %d punktów', he: 'תהרוג את המטרה שלך בשביל %d נקודות', sv: 'Förstör ditt målskepp för %d poäng', ro: 'Distruge-ți ținta pentru %d puncte', zh: '杀掉你的目标获得 %d 点', 'zh-tw': '殺掉你的目標以獲得%d分', lt: 'Uccidi il tuo bersaglio per %d punti', az: 'Hədəfdəki düşmanı yox elə %d ealı', th: 'ทำลายเป้าหมายได้ %d คะแนน', ko: '너의 목표를 죽이면 %d점', fa: 'کشتن سوژه مورد نظر %d امتیاز داره', el: 'Σκότωσε τον στόχο σου για %d πόντους' }, 'Score %d points to win the round': { fr: 'Marquez %d points pour remporter le round', es: 'Consigue %d puntos para ganar la ronda', ja: '勝利条件:%dポイント先取', de: 'Mit %d Punkten gewinnst du die Runde', pt: 'Consiga %d pontos para ganhar a partida', ru: 'Наберите %d очков, чтобы выиграть раунд', hu: 'Érj el %d pontot hogy megnyerd a fordulót', it: 'Ottieni %d punti per vincere il round', hr: 'Rezultat %d bodova za pobijediti rundu', tr: '%d Puana Ulaş ve karşılaşmayı Kazan', cs: 'Získej %d bodů pro vítězství', sk: 'Skóre %d bodov na víťazstvo', id: 'Skor point $d untuk memenangkan ronde', nl: 'Verkrijg %d punten om de ronde te winnen', ar: 'نتيجة %d نقط لفوز هذه الجولة', vi: 'Ghi %d điểm để thắng cuộc chơi', pl: 'Zdobądź %d punktów aby wygrać rundę', he: 'תשיג %d נקודות בשביל לנצח בסיבוב', sv: 'Få %d poäng för att vinna rundan', ro: 'Acumulează %d puncte pentru a câștiga runda', zh: '赢得此轮获得 %d 点', 'zh-tw': '取得%d分來勝出本局', lt: 'Segna %d punti per vincere il round', az: '%d Xalına Yüksəl ve Raundu Qazan', th: 'ทำ %d คะแนนเพื่อชนะ', ko: '%d점을 얻으면 승리', fa: 'به اندازه %d امتیاز بدست بیار تا راند رو ببری', el: 'Σκόραρε %d πόντους για να κερδίσεις αυτόν το γύρο' }, 'Pro Deathmatch Championship': { fr: 'Championnat Deathmatch Pro', es: 'Campeonato de Combate a Muerte Pro', ja: 'プロデスマッチ選手権', de: 'Pro-Deathmatch-Meisterschaft', pt: 'Campeonato Pro mata-mata', ru: 'Чемпионат боя на смерть', hu: 'Hivatalos Halálmérkőzés Bajnokság', it: 'Campionato Pro Deathmatch', hr: 'Šampionska profesionalna arena ', tr: 'Profesyonel Ölüm Maçı Şampiyonası', cs: 'Globální žebříček', sk: 'Globálne Rebríček', id: 'Kejuaraan Deathmatch Pro', nl: 'Pro Deathmatch kampioenschap', ar: 'بطولة محترف مباراة الموت', da: 'Proffesionel døds kamp mesterskab', vi: 'chi %d points để thắng cuộc chơi', pl: 'Mistrzostwa Pro Deathmatch', he: 'אליפות מצב מהיר מקצוענים', sv: 'Pro Deathmatch-Mästerskapet', ro: 'Mod Individual Pro Campionat', zh: '大死斗锦标赛', 'zh-tw': '大死鬥錦標賽', lt: 'Campionato Pro Deathmatch', az: 'Prafisanal Ölüm Oyunu Çempiyonatı', th: 'การชิงแชมป์โปรเดทแมทช์', ko: '프로 데스매치 챔피언쉽', fa: 'قهرمانی مسابقه مرگ', el: 'Αναβαθμισμένος Αγώνας θανάτου Πρωτάθλημα' }, 'Buy your Elite Commander Pass to take part in the Championship.': { fr: 'Achetez votre clé Elite Commander Pass pour prendre part au Championnat.', es: 'Compra tu Pase de Comandante de Élite para participar en el Campeonato', ja: '選手権に参加するにはECPを購入してください.', de: 'Kaufe einen Elite-Ausweis, um an der Meisterschaft teilzunehmen.', pt: 'Compre seu ECP para participar no Campeonato', ru: 'Купите ECP, чтобы участвовать в профессиональном бою на смерть', hu: 'Vásásrolj Elit Pilóta Engedélyt hogy részt vehess a Bajnokságon.', it: 'Compra un tuo Elite Commander Pass per far parte del Campionato.', hr: 'Kupi PEZ (propusnicu za elitne zapovjednike) Kako bi sudjelovao u Prvenstvu.', tr: 'Şampiyonada yerini almak için Seçkin Komutan iznini al', cs: 'Kup si PEK a dostaň se do oficiálních žebříčků.', sk: 'Kúp si PEK a zahraj si v Pro Aréne.', id: 'Belilah EKL anda untuk mengikuti Kejuaraan', nl: 'Koop een Elite Commandant Pas om deel te nemen aan het Kampioenschap.', ar: 'اشتري قائد النخبة ممر للمشاركة في البطولة.', vi: 'Mua ECP để được xếp hạng trong Championship', pl: 'Kup ECP - Przepustkę Elitarnego Dowódcy, aby móc wziąć udział w Mistrzostwach', he: 'תקנה סיסמת מפקד עליון על מנת לקחת חלק באליפות', sv: 'Köp ett Elitkommandörspass för att gå med i mästerskapet.', ro: 'Cumpără acces Comandant de Elită pentru a lua parte în campionat', zh: '购买精英指挥官通行证参加锦标赛。', 'zh-tw': '購買菁英指揮官通行證來參加錦標賽', lt: 'Compra il tuo Comandante Elite Pass per fare parte del Campionato.', az: 'Seçilmiş Kapitan Icazəsini AlÇempiyonatda Yerini Al', th: 'ซื้อตั๋ว Elite Commander Pass เพื่อเข้าร่วมการชิงแชมป์', ko: '챔피언쉽에 참가하시려면 ECP를 구매하십시오.', fa: 'حساب فرمانده نخبه را بخرید تا در قهرمانی شرکت کنید', el: 'Αγόρασε το δικό σου Elite Commander Pass για να λάβεις μέρος στο Πρωτάθλημα' }, 'Official rankings are updated every day at %d': { fr: 'Le classement officiel est mis à jour tous les jours à %d', es: 'La clasificación oficial es actualizada cada día en %d', ja: '公式ランキングは毎日%d時に更新されます', de: 'Offizielle Bewertungen werden jeden Tag um %d Uhr aktualisiert', pt: 'A Classificação Oficial é atualizada cada dia em %d', ru: 'Официальный рейтинг обновляется каждый день в %d', hu: 'A hivatalos rangsor mindennap frissűl %d-kor', it: 'La classifica ufficiale è aggiornata ogni giorno alle %d', hr: 'Službeni činovi (RANKOVI) su ažurirani svaki dan u %d', tr: 'Resmi Rütbe Hergün Şu Satte Yenilenir %d', cs: 'Ofiíciální hodnocení se obnovuje každý den v %d', sk: 'Oficiálne poradie sa aktualizuje každý deň na %d', id: 'Perangkat resmi diperbarui setiap hari di %d', nl: 'Officiële ranglijsten worden elke dag vernieuwd om %d', ar: 'يتم تحديث التصنيف الرسمي كل يوم في٪ d', vi: 'Xếp hạng chính thức được cập nhập hằng ngày tại %d', pl: 'Oficjalne rankingi są odświeżane codziennie o %d', he: 'הדרגות הרשמיות מתעדכנות כל יום בשעה %d', sv: 'De officiella rankningslistorna är uppdaterade varje dag vid %d', ro: 'Clasamentele oficiale sunt actualizate zilnic la %d', zh: '官方排名每日 %d 更新', 'zh-tw': '官方排名將於每天的 %d 更新', lt: 'Le classifiche ufficiali sono aggiornati ogni giorno alle %d', az: 'Rəsmi Rütbə Hər Gün Bu Vaxtda Yenilənir %d', th: 'อันดับทางการอัปเดตทุกวันตอน %d', ko: '공식순위는 %d에 업데이트됩니다.', fa: 'رتبه های رسمی هر روز در وقت %d بروز رسانی می گردد', el: 'Eπίσημη κατάταξη ενημερώνεται κάθε μέρα σε %d' }, 'Official ranking': { fr: 'Classement officiel', es: 'Clasificación oficial', ja: '公式ランキング', de: 'Offizieller Rang', pt: 'Classificação Oficial', ru: 'Официальный рейтинг', hu: 'Hivatalos rangsor', it: 'Classifica ufficiale', hr: 'Službeni Činovi (RANK)', tr: 'Resmi Rütbe', cs: 'Oficiální hodnocení', sk: 'Oficialne poradie', id: 'Perangkat Resmi diperbarui setiap hari di %d', nl: 'Officiële ranglijst', ar: 'الترتيب الرسمي', vi: 'Xếp hạng chính thức', pl: 'Oficjalny ranking', he: 'דרגה רשמית', sv: 'Officiell rankning', ro: 'Clasament Oficial', zh: '官方排名', 'zh-tw': '官方排名', lt: 'Classifica Ufficiale', az: 'Rəsmi Rütbə', th: 'อันดับทางการ', ko: '공식순위', fa: 'رتبه ی رسمی', el: 'Eπίσημη κατάταξη' }, 'Live ranking': { fr: 'Classement live', es: 'Clasificación en vivo', ja: 'ライブランキング', de: 'Aktueller Rang', pt: 'Classificação ao vivo', ru: 'Рейтинг в реальном времени', hu: 'Élő rangsor', it: 'Classifica attuale', hr: 'Činovi (RANKIRANO) uživo', tr: 'Canlı Sıralama', cs: 'Živé hodnocení', sk: 'Aktuálne poradie', id: 'Perangkat Live', nl: 'Ogenblikkelijke ranglijst', ar: 'الترتيب المباشر', vi: 'Xếp hạng trực tiếp', pl: 'Ranking na żywo', he: 'דרגה בזמן אמת', sv: 'Liverankning', ro: 'Clasamentul în acest moment', zh: '实时排名', 'zh-tw': '當前排名', lt: 'Live Classifica', az: 'Canlı Sıra', th: 'อันดับปัจจุบัน', ko: '실시간 순위', fa: 'رتبه بندی به صورت پخش زنده', el: 'Ζωντανή κατάταξη' }, 'Destroy asteroids': { fr: 'Détruisez les astéroïdes', es: 'Destruye asteroides', ja: '小惑星破壊数', de: 'Zerstöre Asteroiden', pt: 'Destrua os Asteróides', ru: 'Уничтожайте астероиды', hu: 'Pusztítsd el az aszteroidákat', it: 'Distruggi gli asteroidi', hr: 'Uništi astereoide', tr: 'Astroidleri Yoket', cs: 'Nič asteroidy', sk: 'Znič asteroidy', id: 'Hancurkan Asteroid', nl: 'Vernietig asteroïden', ar: 'دمر الكويكبات', vi: 'Phá hủy thiên thạch', pl: 'Zniszcz asteroidy', he: 'תהרוס אסטרואידים', sv: 'Förstör asteroider', ro: 'Distruge asteroizi', zh: '破坏小行星', 'zh-tw': '破壞殞石', lt: 'Distruggi Asteroidi', az: 'Astroidləri Yox Elə', th: 'ทำลายอุกกาบาต', ko: '운석을 파괴하십시오.', fa: 'سیارک ها را نابود کن', el: 'Κατέστρεψε αστεροειδείς' }, 'Collect gems to upgrade your ship': { fr: 'Ramassez des gemmes pour améliorer votre vaisseau', es: 'Recoge cristales para mejorar tu nave', ja: '宝石を集めて船をアップグレード', de: 'Sammle Kristalle, um dein Schiff zu verbessern.', pt: 'Colete gemas para aprimorar a sua nave', ru: 'Собирайте кристаллы, чтобы улучшить ваш корабль', hu: 'Gyűjts drágaköveket hogy fejleszd a hajód', it: 'Colleziona gemme per potenziare la tua nave', hr: 'Skupi dragulje kako bi poboljšao svoj brod', tr: 'Elmasları Toplayarak Gemini Geliştir', cs: 'Sbírej krystaly k vylepšení své lodi', sk: 'Zbieraj drahokamy a vylepši svoju loď', id: 'Kumpulkan permata untuk meningkatkan kapal anda', nl: 'Verzamel kristallen om je schip te upgraden', ar: 'اجمع الأحجار الكريمة لترقية سفينتك', vi: 'Thu thập nguyên liệu để nâng cấp tàu của bạn', pl: 'Zbieraj kryształy aby ulepszyć swój statek', he: 'תאסוף יהלומים כדי לשדרג את הספינה שלך', sv: 'Samla kristaller för att uppgradera ditt skepp', ro: 'Acumulează cristale pentru ați îmbunătăți nava', zh: '收集宝石来升级你的船舰', 'zh-tw': '收集寶石來升級你的船隻', lt: 'Colleziona gemme per aggiornare la tua nave', az: 'Almazları Topla Və RobotunuGücləndir', th: 'สะสมเพชรเพื่ออัพเกรดยาน', ko: '보석을 얻어 귀하의 우주선을 강화하십시오.', fa: 'الماس جمع کن تا بتونی سفینه ات را ارتقا دهی', el: 'Μάζεψε πετράδια για να αναβαθμίσεις το διαστημόπλοιό σου' }, "Fight and don't die!": { fr: 'Combattez, mais ne mourrez pas !', es: '¡Lucha y no mueras!', ja: '死なずに戦いきれ!', de: 'Kämpfe und stirb nicht!', pt: 'Lute e não morra!', ru: 'Сражайся и не умри!', hu: 'Harcolj és ne halj meg!', it: 'Combatti e non morire!', hr: 'Bori se i ne umri!', tr: 'Savaş ve Ölme!', cs: 'Bojuj a nezemři!', sk: 'Bojuj a nezomri!', id: 'Bertempur dan jangan mati!', nl: 'Vecht en sterf niet!', ar: 'الكفاح ولا تموت!', vi: 'Chiến đấu và đừng chết', pl: 'Walcz i nie daj się zniszczyć!', he: 'תילחם ואל תמות!', sv: 'Kämpa, och dö inte!', ro: 'Luptă și nu muri!', zh: '飞，以及不要死！', 'zh-tw': '戰鬥,但不要死！', lt: 'Combatti e non morire!', az: 'Savaş və ölmə!', th: 'จงต่อสู้เพื่อเอาชีวิตรอด!', ko: '싸워 살아남으십시오.', fa: 'بکش و کشته نشو !', el: 'Πολέμησε και μην πεθάνεις' }, 'Donate gems to your base to upgrade it and access higher tier ships': { fr: "Donnez des gemmes à votre station pour l'améliorer et accéder à de meilleurs vaisseaux", es: 'Dona gemas a tu base para mejorarla y acceder a naves de mayor nivel', ja: '宝石を基地に寄付しアップグレード、高ティアの船を開放せよ', de: 'Spende Kristalle an deine Basis, um sie zu verbessern und höhere Schiffsstufen freizuschalten.', pt: 'Doe gemas à sua base para aprimorá-la e ter acesso a níveis de nave maiores', ru: 'Вносите кристаллы на вашу базу,чтобы улулчшить её и получить доступ к высокоуровневым кораблям', hu: 'Vigyél be drágakövet a bázisodba hogy fejleszd és hozzáférj magassabb szintű hajókhoz', it: 'Dona gemme alla tua base per potenziarla e per accedere nuovi livelli', hr: 'Doniraj dragulje bazi kako bi se unapredila i omogučila pristup brodu veče razine', tr: 'Elmasları Üssüne Bağışlayarak Daha Büyük Üsse Ulaş ve Yüksek Seviye Gemiler Aç', cs: 'Přispěj krystaly své základně k získání lepších lodí', sk: 'Daruj drahokamy svojej základni, vylepši ju, a získaj lepšie lode', id: 'Sumbangkan permata ke markas anda untuk meningkatkan markas dan mendapatkan akses ke tingkat kapal yang lebih tinggi', nl: 'Doneer kristallen aan je basis om het te upgraden en schepen van hogere klassen te upgraden', ar: 'تبرع بالأحجار الكريمة إلى قاعدتك لترقيتها والوصول إلى أعلى مستوى السفن', vi: 'Cung cấp nguyên liệu cho căn cứ để nâng cấp và có con tàu tốt hơn', pl: 'Dostarcz kryształy do swojej bazy żeby ją ulepszyć i otrzymać dostęp do lepszych statków', he: 'תתרום יהלומים לבסיס שלך כדי לשפרו ולקבל גישה לספינות מרמה גבוהה יותר', sv: 'Donera kristaller till din bas för att uppgradera den, och få tillgång till högre nivå av skepp', ro: 'Donează cristale la baza ta pentru a o îmbunătăți și pentru a avea acces la nivele de navă mai înalte', zh: '向基地捐赠宝石以升级基地和获取更高级别的船舰', 'zh-tw': '向基地捐贈寶石以升級基地和獲取更高級別的船隻', lt: 'Dona gemme alla tua base per aggiornarlo e avere accesso a navi di livello superiore', az: 'Almazları bazana hədiyə edərək böyük bazaya yüksəlvə yüksək səviye robotları aç', th: 'บริจาคเพชรให้ฐานของคุณเพื่ออัพเกรดฐานและเพิ่มระดับยานที่ดีกว่าเดิม', ko: '기지에 보석을 제공하고 강화시켜 더 높은 등급으로 올리십시오.', fa: 'الماس ها را به پایگاه اصلی اهدا کن تا پایگاه ارتقا پیدا کنه و تو بتونی سفینه ات رو ارتقا بدی', el: 'Δώρισε πετράδια στη βάση σου για να την αναβαθμίσεις και να έχεις πρόσβαση σε υψηλότερες βαθμίδες διαστημόπλοιων' }, 'Win the game by destroying the enemy bases': { fr: 'Gagnez la partie en détruisant les stations ennemies', es: 'Gana la partida destruyendo las bases enemigas', ja: '敵の基地を破壊せよ', de: 'Gewinne das Spiel, indem du die gegnerischen Basen zerstörst.', pt: 'Ganhe o Jogo destruindo as Bases Inimigas', ru: 'Уничтожьте вражеские базы для победы', hu: 'Pusztítsd el az ellenséges bázisokat hogy megnyerd a játékot', it: 'Distruggi le basi nemiche per vincere il gioco', hr: 'Pobijedi bitku tako da uništiš neprijateljsku bazu', tr: 'Düşmanların Üssünü Yokederek Oyunu Kazan', cs: 'Vyhraj hru zničením všech nepřátelských základen', sk: 'Vyhraj hru zničením nepriateľských základní', id: 'Menangkan gamenya dengan menghancurkan markas musuh', nl: 'Win het spel door de vijandelijke basissen te vernietigen', ar: 'فز بالمباراة من خلال تدمير قواعد العدو', vi: 'Chiến thắng trò chơi bằng cách phá hủy căn cứ địch', pl: 'Wygraj grę poprzez zniszczenie bazy przeciwnika', he: 'תנצח את המשחק על ידי הריסת בסיסי היריבים', sv: 'Förstör fiendebaserna för att vinna matchen', ro: 'Câștigă jocul distrugând bazele inamice', zh: '摧毁敌方基地来赢得比赛', 'zh-tw': '摧毀敵方基地來贏得比賽', lt: 'Vinci il gioco distruggendo le basi nemiche', az: 'Digər robotları öldür və oyunuqazan', th: 'เอาชนะเกมโดยการทำลายฐานทัพข้าศึก', ko: '적의 기지를 없애 승리하십시오.', fa: 'با نابود کردن پایگاه های دشمن ، برنده می شوید', el: 'Κέρδισε το παιχνίδι καταστρέφοντας την βάση των εχθρών' }, 'New target assigned': { fr: 'Nouvelle cible assignée', es: 'Nuevo objetivo asignado', ja: '新ターゲット確定', de: 'Neues Ziel zugeteilt', pt: 'Novo alvo localizado', ru: 'Новая цель установлена', hu: 'Új célpont bemérve', it: 'Nuovo bersaglio assegnato', hr: 'Nova meta dodjeljena', tr: 'Yeni Hedef Seçildi', cs: 'Zvolen nový cíl', sk: 'Priradený nový cieľ', id: 'Target baru diberikan', nl: 'Nieuw doelwit toegewezen', ar: 'تم تعيين هدف جديد', vi: 'Đổi mục tiêu mới', pl: 'Namierzono nowy cel', he: 'מטרה חדשה הוגדרה', sv: 'Nytt mål tilldelat', ro: 'O nouă țintă ți-a fost alocată', zh: '已分配新目标', 'zh-tw': '已分配新目標', lt: 'Nuovo obiettivo assegnato', az: 'Yeni Hədəf Seçildi', th: 'พบเป้าหมายใหม่', ko: '새로운 목표가 지정됨', fa: 'هدف جدید مشخص شد', el: 'Νέος στόχος ανατέθηκε' }, OK: { fr: 'OK', es: 'OK', ja: '了解', de: 'OK', pt: 'OK', ru: 'ОК', hu: 'Rendben', it: 'OK', hr: 'OK', tr: 'Tamam', cs: 'OK', sk: 'OK', id: 'OK', nl: 'OK', ar: 'حسنا', vi: 'OK', pl: 'OK', he: 'אוקי', sv: 'OK', ro: 'OK', zh: '确定', 'zh-tw': '好的', lt: 'OK', az: 'Yaxşı', th: 'โอเค', ko: '승인', fa: 'اوکی', el: 'OK' }, Continue: { fr: 'Continuer', es: 'Continuar', ja: '次', de: 'Fortsetzen', pt: 'Continuar', ru: 'Продолжить', hu: 'Folytatás', it: 'Continua', hr: 'Nastavi', tr: 'Devam et', cs: 'Pokračovat', sk: 'Pokračovat', id: 'Terus', nl: 'Ga verder', ar: 'أستمر', da: 'Fortsæt', vi: 'Tiếp tục', pl: 'Kontynuuj', he: 'המשך', sv: 'Fortsätt', ro: 'Continuă', zh: '继续', 'zh-tw': '繼續', lt: 'Continua', az: 'Davam Et', th: 'ต่อ', ko: '계속', fa: 'ادامه بده', el: 'Συνέχισε' }, Respawn: { fr: 'Réapparaître', es: 'Reaparecer', ja: 'リスポーン', de: 'Wiederbeleben', pt: 'Reaparecer', ru: 'Возродиться', hu: 'Újraéledés', it: 'Ricompari', hr: 'Oporavak', tr: 'Yeniden Doğ', cs: 'Vrátit se do hry', sk: 'Vráť sa do hry', id: 'Respawn', nl: 'Reïncarneer', ar: 'أحياء', da: 'Genopliv', vi: 'Hồi sinh', pl: 'Odrodzenie', he: 'הווצר מחדש', sv: 'Återuppstå', ro: 'Respawnează-te', zh: '重生', 'zh-tw': '重生', lt: 'Rinasci', az: 'Yenidən Başla', th: 'เกิดใหม่', ko: '부활', fa: 'بارگذاری مجدد', el: 'Επαναγέννηση' }, menu: { fr: 'Menu', es: 'Menú', ja: 'メニュー', de: 'Menü', pt: 'Menu', ru: 'Меню', hu: 'Menü', it: 'Menù', hr: 'Izbornik', tr: 'Menü', cs: 'Menu', sk: 'Menu', id: 'Menu', nl: 'Menu', ar: 'قائمه', da: 'Menu', vi: 'Menu', pl: 'menu', he: 'תפריט', sv: 'meny', ro: 'Meniu', zh: '菜单', 'zh-tw': '首頁', lt: 'menu', az: 'Menyu', th: 'เมนู', ko: '메뉴', fa: 'منو', el: 'μενού' }, Quit: { fr: 'Quitter', es: 'Salir', ja: '終了', de: 'Beenden', pt: 'Sair', ru: 'Выход', hu: 'Kilépés', it: 'Abbandona', hr: 'Izađi', tr: 'Çık', cs: 'Ukončit hru', sk: 'Ukončiť hru', id: 'Berhenti', nl: 'Verlaten', ar: 'خروج', da: 'Afslut', vi: 'Thoát', pl: 'Wyjdź', he: 'יציאה', sv: 'Avsluta', ro: 'Ieşire', zh: '退出', 'zh-tw': '放棄', lt: 'Abbandona', az: 'Çıx', th: 'ออก', ko: '나가기', fa: 'خروج', el: 'Παρατώ' }, 'New Battle': { fr: 'Nouveau Combat', es: 'Nuevo Combate', ja: 'ニューバトル', de: 'Neuer Kampf', pt: 'Nova Batalha', ru: 'Новое сражение', hu: 'Új csata', it: 'Nuova Battaglia', hr: 'Nova Bitka', tr: 'Yeni Savaş', cs: 'Nová hra', sk: 'Nová hra', id: 'Pertempuran baru', nl: 'Nieuw Gevecht', ar: 'معركة جديدة', da: 'Ny kamp', vi: 'Trò chơi mới', pl: 'Nowa Bitwa', he: 'קרב חדש', sv: 'Ny Match', ro: 'Bătălie nouă', zh: '新战役', 'zh-tw': '新戰役', lt: 'Nuova Battaglia', az: 'Yeni Savaş', th: 'เริ่มแบทเทิลใหม่', ko: '새 게임', fa: 'نبرد جدید', el: 'Νέα Μάχη' }, 'Loading...': { fr: 'Chargement...', es: 'Cargando...', ja: '読み込み中...', de: 'Laden...', pt: 'Carregando...', ru: 'Загрузка...', hu: 'Töltés…', it: 'Caricamento...', hr: 'Učitavanje...', tr: 'Yükleniyor..', cs: 'Načítání...', sk: 'Načítavanie ...', id: 'Pemuatan', nl: 'Laden...', ar: 'تحميل...', da: 'Loader...', vi: 'Đang tải...', pl: 'Ładowanie...', he: 'טוען...', sv: 'Laddar...', ro: 'Se încarcă', zh: '加载中...', 'zh-tw': '載入中...', lt: 'Caricando...', az: 'Yüklənir...', th: 'กำลังโหลด...', ko: '부르는 중...', fa: 'در حال بارگزاری', el: 'Φόρτωση…' }, or: { fr: 'ou', es: 'o', ja: '又は', de: 'oder', pt: 'ou', ru: 'или', hu: 'vagy', it: 'o', hr: 'ili', tr: 'Veya', cs: 'nebo', sk: 'alebo', id: 'Atau', nl: 'of', ar: 'أو', da: 'Eller', vi: 'hoặc', pl: 'lub', he: 'או', sv: 'eller', ro: 'sau', zh: '或', 'zh-tw': '或是', lt: 'o', az: 'Vəya', th: 'หรือ', ko: '또는', fa: 'یا', el: 'ή' }, SETTINGS: { fr: 'PARAMÈTRES', es: 'AJUSTES', ja: '設定', de: 'EINSTELLUNGEN', pt: 'OPÇÕES', ru: 'НАСТРОЙКИ', hu: 'BEÁLLÍTÁSOK', it: 'IMPOSTAZIONI', hr: 'POSTAVKE', tr: 'Ayarlar', cs: 'NASTAVENÍ', sk: 'NASTAVENIE', id: 'Pengaturan', nl: 'INSTELLINGEN', ar: 'الاعدادات', da: 'Indstillinger', vi: 'Cài đặt', pl: 'OPCJE', he: 'הגדרות', sv: 'INSTÄLLNINGAR', ro: 'Setări', zh: '设置', 'zh-tw': '設置', lt: 'Impostazioni', az: 'Parametrlər', th: 'การตั้งค่า', ko: '설정', fa: 'تنظیمات', el: 'ΡΥΘΜΗΣΕΙΣ' }, INFO: { fr: 'INFORMATIONS', es: 'Información', ja: 'インフォ', de: 'INFO', pt: 'INFORMAÇÕES', ru: 'ИНФОРМАЦИЯ', hu: 'INFORMÁCIÓ', it: 'INFORMAZIONI', hr: 'INFORMACIJE', tr: 'Bilgiler', cs: 'INFORMACE', sk: 'INFORMÁCIE', id: 'Info', nl: 'INFORMATIE', ar: 'معلومات', da: 'Info', vi: 'Thông tin', pl: 'INFO', he: 'מידע', sv: 'INFO', ro: 'Informaţii', zh: '信息', 'zh-tw': '信息', lt: 'Info', az: 'Bilgilər', th: 'ข้อมูล', ko: '정보', fa: 'اطلاعات', el: 'ΠΛΗΡΟΦΟΡΗΣΗ' }, 'Your commander name': { fr: 'Votre nom de commandant', es: 'Nombre de Comandante', ja: '指揮官名', de: 'Name deines Kapitäns', pt: 'Nome do Comandante', ru: 'Имя вашего капитана', hu: 'A parancsnokod neve', it: 'Il tuo nome da comandante', hr: 'Ime Zapovjednika', tr: 'Komutan Adı', cs: 'Tvoje přezdívka', sk: 'Tvoja prezývka', id: 'Nama komandan anda', nl: 'Naam van je commandant', ar: 'أسم القائد', da: 'Dit kommandør-navn', vi: 'Tên chỉ huy', pl: 'Twój dowódca', he: 'שם המפקד שלך', sv: 'Ditt kommandernamn', ro: 'Numele comandantului tău', zh: '指挥官名称', 'zh-tw': '你的名字', lt: 'Il tuo nome di comandante', az: 'Sənin kapitan adın', th: 'ชื่อกัปตันยานของคุณ', ko: '귀하의 이름', fa: 'نام فرمانده ی شما', el: 'Το διοικητικό σου όνομα' }, Antialiasing: { fr: 'Anticrénelage', es: 'Suavizado', ja: 'アンチエイリアス', de: 'Kantenglättung', pt: 'Suavização dos contornos', ru: 'Сглаживание', hu: 'Antialiasing', it: 'Antialiasing', hr: 'Antialiasing', tr: 'Kenar Düzleştirme', cs: 'Vyhlazování hran', sk: 'Vyhladzovanie hrán', id: 'Antialasing', nl: 'Antialiasing', ar: 'مكافحه التعرج', da: 'Antialiasing', vi: 'Khử răng cưa', pl: 'Dealikatne kontury', he: 'החלקת עיקומים', sv: 'Kantutjämning', ro: 'Antialiasing', zh: '抗锯齿', 'zh-tw': '抗鋸齒', lt: 'Antialiasing', az: 'Kənar Düzleştirmə', th: 'การลดรอยหยัก', ko: '안티 앨리어싱(계단현상 제거)', fa: 'دقت گرافیکی', el: 'Εξομάλυνση' }, 'Full Resolution': { fr: 'Haute résolution', es: 'Resolución completa', ja: 'フル解像度', de: 'Volle Auflösung', pt: 'Tela Cheia', ru: 'Полное разрешение', hu: 'Teljes felbontás', it: 'Massima Risoluzione', hr: 'Puna rezolucija', tr: 'Tam Ekran', cs: 'Plné rozlišení', sk: 'Plné rozlíšenie', id: 'Resolusi Penuh', nl: 'Hoge resolutie', ar: 'حل شامل', da: 'Fuld opløsning', vi: 'Độ phân giải cao', pl: 'Pełna rozdzielczość', he: 'רזולוציה מלאה', sv: 'Full upplösning', ro: 'Rezoluţie completă', zh: '全分辨率', 'zh-tw': '最高解析度', lt: 'Risoluzione massima', az: 'Tam Ekran', th: 'ความละเอียดเต็มรูปแบบ', ko: '최대 해상도', fa: 'تمام صفحه', el: 'Πλήρη Ανάλυση' }, 'Explosions Lights': { fr: 'Effets de lumière', es: 'Efectos de iluminación', ja: '爆発光', de: 'Explosionslichter', pt: 'Luz de Explosões', ru: 'Свет от взрыва', hu: 'Robbanási fények', it: 'Luci delle Esplosioni', hr: 'Svjetla Eksplozije', tr: 'Patlama Işıkları', cs: 'Světla explozí', sk: 'Svetlá výbuchu', id: 'Lampu Ledakan', nl: 'Explosies', ar: 'أضواء الانفجارات', da: 'Eksplosion lyseffekter', vi: 'Ánh sáng nổ', pl: 'Efekty świetlne eksplozji', he: 'אורות פיצוצים', sv: 'Explosionsljus', ro: 'Efecte explozii', zh: '爆炸效果', 'zh-tw': '爆炸特效', lt: 'Luci Esplosive', az: 'Partlama Işıqları', th: 'เอฟเฟกระเบิด', ko: '빛의 폭발', fa: 'نور انفجار ها', el: 'Φώτα Εκρήξεων' }, Galaxies: { fr: 'Galaxies', es: 'Galaxias', ja: '銀河', de: 'Galaxien', pt: 'Galáxias', ru: 'Галактики', hu: 'Galaxisok', it: 'Galassie', hr: 'Galaksija', tr: 'Galaksiler', cs: 'Galaxie', sk: 'Galaxie', id: 'Galaksi', nl: 'Sterrenstelsels', ar: 'المجرات', da: 'Galaxer', vi: 'Thiên hà', pl: 'Galaktyki', he: 'גלקסיות', sv: 'Galaxer', ro: 'Galaxii', zh: '星系', 'zh-tw': '星系', lt: 'Galassie', az: 'Galaktikalar', th: 'กาแล็กซี', ko: '은하계', fa: 'کهکشان ها', el: 'Γαλαξίες' }, Nebulae: { fr: 'Nébuleuses', es: 'Nebulosas', ja: '星雲', de: 'Nebel', pt: 'Nebulosas', ru: 'Туманности', hu: 'Csillagködök', it: 'Nebule', hr: 'Magla', tr: 'Bulutsu', cs: 'Mlhoviny', sk: 'Hmloviny', id: 'Nebula', nl: 'Nevels', ar: 'السدم', da: 'Stjernetåger', vi: 'Vân tinh', pl: 'Mgławice', he: 'ערפילית', sv: 'Nebulosor', ro: 'Nebuloase', zh: '星云', 'zh-tw': '星雲', lt: 'Nebule', az: 'Bulut kimi', th: 'เนบิวลา', ko: '성운', fa: 'سحابی', el: 'Νεφελώματα' }, Moons: { fr: 'Lunes', es: 'Lunas', ja: '衛星', de: 'Monde', pt: 'Luas', ru: 'Спутники', hu: 'Holdak', it: 'Lune', hr: 'Mjeseci', tr: 'Aylar', cs: 'Měsíce', sk: 'Mesiace', id: 'Bulan', nl: 'Manen', ar: 'الاقمار', da: 'Måner', vi: 'Mặt Trăng', pl: 'Księżyce', he: 'ירחים', sv: 'Månar', ro: 'Luni', zh: '月球', 'zh-tw': '月亮', lt: 'Lune', az: 'Aylar', th: 'ดวงจันทร์', ko: '달', fa: 'قمر ها', el: 'Φεγγάρια' }, Planets: { fr: 'Planètes', es: 'Planetas', ja: '惑星', de: 'Planeten', pt: 'Planetas', ru: 'Планеты', hu: 'Bolygók', it: 'Pianeti', hr: 'Planeti', tr: 'Gezegenler', cs: 'Planety', sk: 'Planéty', id: 'Planet', nl: 'Planeten', ar: 'الكواكب', da: 'Planeter', vi: 'Hành tinh', pl: 'Planety', he: 'כוכבים', sv: 'Planeter', ro: 'Planete', zh: '行星', 'zh-tw': '行星', lt: 'Pianeti', az: 'Planetlər', th: 'ดาวเคราะห์', ko: '행성', fa: 'سیاره ها', el: 'Πλανήτες' }, Background: { fr: 'Abysses', es: 'Fondo', ja: '背景', de: 'Hintergrund', pt: 'Papel de fundo', ru: 'Фон', hu: 'Háttér', it: 'Sfondo', hr: 'Pozadine', tr: 'Arka Plan', cs: 'Pozadí', sk: 'Pozadie', id: 'Latar Belakang', nl: 'Achtergrond', ar: 'الخلفية', da: 'Baggrund', vi: 'Nền', pl: 'Tło', he: 'רקעים', sv: 'Bakgrund', ro: 'Fundal', zh: '背景', 'zh-tw': '背景', lt: 'Sfondo', az: 'Arxa Plan', th: 'ฉากหลัง', ko: '배경', fa: 'پس زمینه', el: 'Φόντο' }, 'Display gravity field': { fr: 'Afficher le champ de gravité', es: 'Mostrar campo gravitatorio', ja: '重力場を表示', de: 'Gravitationsfeld anzeigen', pt: 'Exibir campo de gravidade', ru: 'Показывать поле гравитации', hu: 'Gravitációs mező mutatása', it: 'Visualizza il campo di gravità', hr: 'Prikaži gravitacijsko polje', tr: 'Yerçekimi Alanını Göster', cs: 'Zobrazit gravitační pole', sk: 'Zobraziť gravitačné pole', id: 'Tampilkan medan gravitasi', nl: 'Zwaartekrachtveld tonen', ar: 'عرض حقل الجاذبية', vi: 'Thể hiện trọng lực ', pl: 'Pokaż pole grawitacyjne', sv: 'Visa gravitationsfält', ro: 'Arata razele gravitationale', zh: '显示重力领域', 'zh-tw': '顯示重力波範圍', lt: 'Visualizza il campo di gravità', th: 'แสดงสนามแรงโน้มถ่วง', ko: '중력장 표시', fa: 'پخش میدان گرانشی', el: 'Έκθεση πεδίου βαρύτητας' }, 'Camera shake': { fr: 'Tremblements de caméra', es: 'Vibración de la cámara', ja: 'ブレ', de: 'Kameraschütteln', pt: 'Agitação da câmera', ru: 'Дрожание камеры', hu: 'Kamerarezgés', it: 'Tremore camera', hr: 'Potresanje kamere', tr: 'Kamera Sallanma', cs: 'Otřes kamery', sk: 'Otrasy kamery', id: 'Guncangan kamera', nl: 'Camera-schokken', ar: 'اهتزاز الكاميرا', da: 'Kamerarystelser', vi: 'Lắc máy quay', pl: 'Wstrząs obrazu', he: 'רעידות מצלמה', sv: 'Kameraskakningar', ro: 'Mişcarea camerei', zh: '镜头震动', 'zh-tw': '鏡頭震動', lt: 'Tremolio Camera', az: 'Kamera Silkələnməsi', th: 'การสั่นของกล้อง', ko: '카메라 흔들림', fa: 'لرزش دوربین', el: 'Τράνταγμα Κάμερας' }, 'Your ad-blocker may cause connection problems. Please disable it on Starblast.io to avoid any trouble.': { fr: 'Votre bloqueur de pub peut provoquer des problèmes de connexion. Merci de le désactiver pour éviter les ennuis.', es: 'Tu bloqueador de anuncios puede causar problemas de conexión. Por favor, desactívalo para Starblast.io con el fin de evitar cualquier problema.', ja: 'アドブロッカーが接続の問題を引き起こしています。Starblast.ioではアドブロッカーを無効にして、トラブルを防いでください。', de: 'Dein Werbeblocker könnte Verbindungsprobleme verursachen. Bitte deaktiviere ihn auf Starblast.io, um Probleme zu verhindern.', pt: 'O seu bloqueador de anúncios pode causar problemas de conexão. Desative-o no Starblast.io para evitar problemas.', ru: 'Ваш блокировщик рекламы может мешать корректной работе игры. Пожалуйста отключите брокировщик для Starblast.io во избежание проблем с игрой.', hu: 'A hirdetésblokkolód kapcsolati problémákat okozhat. Kérlek kapcsold ki a Starblast.io-ban hogy elkerüld a problémákat.', it: 'il tuo ad block potrebbe causare problemi di connessione. Perfavore disattivalo per starblast.io per evitare eventuali problemi.', hr: 'Tvoj ad-blocker može uzrokovati probleme s povezanošću. Molimo onesposobite ad-blocker na Starblast.io kako bist izbjegli dodatne probleme ', tr: 'Reklam engelleyiciniz bağlanma problemlerine yol açabilir. Lütfen engelleyiciyi kapatın ve sorun yaşamaktan kaçının', cs: 'Váš ad-blocker může způsobovat problémy s připojením. Prosíme, vypněte jej, abyste předešli případným potížím.', sk: 'AdBlocker môže spôsobovať problémy s pripojením. Prosíme zakážte ho pre Starblast.io, aby ste sa vyhli problémom.', id: 'Pemblokir iklan Anda dapat menyebabkan masalah koneksi Harap nonaktifikan di Starblast.io untuk menghindari masalah', nl: 'Uw advertentieblokker kan verbindingsproblemen veroorzaken. Schakel hem uit voor Starblast.io om problemen te vermijden.', ar: "قد يتسبب حظر الإعلانات 'ad-blocker' في حدوث مشكلات في الاتصال. يرجى تعطيله على Starblast.io لتجنب أي مشكلة.", vi: 'Chặn quảng cáo có thể gây ra sự cố kết nối. Vui lòng tắt nó khi chơi Starblast.io', pl: 'Twój adblocker może powodować problemy z połączeniem. Proszę wyłącz go dla Starblast.io żeby uniknąć utrudnień.', sv: 'Din ad-blocker kan skapa uppkopplingsproblem. För att undvika trubbel så kan du stänga av den för Starblast.io.', ro: 'Ad-Block-ul tău poate cauza probleme de conexiune. Te rugăm să îl dezactivezi pe Starblast.io pentru a evita orice neplăceri.', zh: '你的广告屏蔽器可能导致连接问题。请为 Starblast.io 禁用它以避免任何障碍。', 'zh-tw': '你的廣告隱藏器可能導致連接問題。請為Starblast.io而禁用它以避免任何問題。', lt: 'Il tuo Ad-blocker può causare problemi con la connessione. Perfavore disabilitalo su Starblast.io per evitare problemi.', th: 'ตัวบล็อกโฆษณาของคุณอาจส่งผลต่อการเชื่อมต่อ กรุณาปิดตัวบล็อกโฆษณาเพื่อหลีกเลี่ยงปัญหาที่อาจเกิดขึ้น', ko: '당신의 Ad-blocker는 연결에 문제를 일으킵니다. 당신의 Ad-blocker를 Starblast.io에서 제거해 문제를 해결하십시오.', fa: 'لطفا مانع از اجرای تبلیغات نشوید تا هیچگونه مشکلی پیش نیاید', el: 'Το ad-blocker σου ίσως προκαλέσει προβλήματα στη σύνδεση. Παρακαλούμε απενεργοποιήστε το στο Starblast.io ώστε να αποφύγετε οποιοδήποτε πρόβλημα.' }, 'Gamepad support': { fr: 'Support du Gamepad', es: 'Compatibilidad con Mando de Videojuegos', ja: 'ゲームパッドサポート', de: 'Gamepad-Unterstützung', pt: 'Suporte à Joystick (gamepad)', ru: 'Поддержка геймпада', hu: 'Kontroller támogatás', it: 'supporto per i gamepad', hr: 'Gamepad podrška', tr: 'Gamepad Desteği', cs: 'Podpora gamepadu', sk: 'Podpora gamepadu', id: 'Pendukungan gamepad', nl: 'Gamepad ondersteuning', ar: 'دعم الغمبد', vi: 'Hỗ trợ gamepad', pl: 'Wsparcie gamepedii', he: 'תמיכה בשלט', sv: 'Kontrollersupport', ro: 'Controler suport', zh: '支持手柄', 'zh-tw': '支持手柄', lt: 'Supporto Gamepad', az: 'Coystik', th: 'ตัวเสริมแป้นเกม', ko: '게임패드 지원', fa: 'پشتیبانی گیم پد', el: 'Υποστήριξη Gamepad' }, 'High Contrast': { fr: 'Contraste élevé', es: 'Alto Contraste', ja: 'ハイコントラスト', de: 'Hoher Kontrast', pt: 'Alto Contraste', ru: 'Высокий контраст', hu: 'Magas Kontraszt', it: 'Alto Contrasto', hr: 'Visoki kontrast', tr: 'Yüksek Kontrast', cs: 'Vysoký kontrast', sk: 'Vysoký kontrast', id: 'Kontras tinggi', nl: 'Hoog contrast', ar: 'تباين عالي', vi: 'Độ tương phản cao', pl: 'Wysoki kontrast', sv: 'Högkontrast', ro: 'Contrast puternic', zh: '高对比度', 'zh-tw': '高對比度', lt: 'Alto Contrasto', th: 'คอนทราสท์สูง', ko: '고대비', fa: 'سایه گذاری دقیق', el: 'Υψηλή Αντίθεση' }, 'Button clicks disabled': { fr: 'Clics sur boutons désactivés', es: 'Clics en botones desactivados', ja: 'ボタンクリック無効', de: 'Schaltflächen deaktivieren', pt: 'Cliques de botão desativados', ru: 'Отключить нажатие кнопок', hu: 'Gomb kattintás kikapcsolva', it: 'Click dei tasti disabilitati', hr: 'Klikovi gumba su onemogućeni', tr: 'Tuşlara Tıklama Etkindışı', cs: 'Zakázat interakci myší', sk: 'Zakázať interakciu myšou', id: 'Klik tombol dinonaktifan', nl: 'Klikken op knoppen gedeactiveerd', ar: 'تعطيل نقرات الأزرار', vi: 'Vô hiệu hóa chuột', pl: 'Wyłączono przyciski ekranowe', sv: 'Stäng av knapptryckningar', ro: 'Clic buton dezactivat', zh: '禁用点击按钮', 'zh-tw': '禁用點擊按鈕', lt: 'Click pulsanti disabilitati', th: 'ตัวปิดปุ่มคลิก', ko: '버튼 클릭 사용 중지됨', fa: 'دکمه های کلیک غیر فعال شد.', el: 'Απενεργοποίηση του κλικ του κουμπιού' }, 'Sound Effects': { fr: 'Effets Sonores', es: 'Efectos sonoros', ja: '効果音', de: 'Soundeffekte', pt: 'Efeitos Sonoros', ru: 'Звуковые эффекты', hu: 'Hangeffektek', it: 'Effetti Sonori', hr: 'Zvučni Efekti', tr: 'Ses Efektleri', cs: 'Zvukové efekty', sk: 'Zvukové efekty', id: 'Efek suara', nl: 'Geluidseffecten', ar: 'مؤثرات صوتية', da: 'Lydeffekter', vi: 'Hiệu ứng âm thanh', pl: 'Efekty dźwiękowe', he: 'אפקטים של רעשים', sv: 'Ljudeffekter', ro: 'Efecte sunete', zh: '声效', 'zh-tw': '聲音特效', lt: 'Effetti Sonori', az: 'Səs Effektləri', th: 'เสียงประกอบ', ko: '소리효과', fa: 'افکت های صدا', el: 'Εφέ Ήχου' }, Music: { fr: 'Musique', es: 'Música', ja: '音楽', de: 'Musik', pt: 'Música', ru: 'Музыка', hu: 'Zene', it: 'Musica', hr: 'Glazba', tr: 'Müzik', cs: 'Hudba', sk: 'Hudba', id: 'Musik', nl: 'Muziek', ar: 'موسيقى', da: 'Musik', vi: 'Nhạc', pl: 'Muzyka', he: 'מוזיקה', sv: 'Musik', ro: 'Muzică', zh: '音乐', 'zh-tw': '音樂', lt: 'Musica', az: 'Musiqi', th: 'ดนตรี', ko: '음악', fa: 'موسیقی', el: 'Μουσική' }, 'Keyboard type': { fr: 'Type de clavier', es: 'Tipo de teclado', ja: 'キーボードタイプ', de: 'Tastaturtyp', pt: 'Tipo de teclado', ru: 'Тип клавиатуры', hu: 'Billentyűzet típus', it: 'Tipo di tastiera', hr: 'Vrsta tipkovnice', tr: 'Klavye tipi', cs: 'Typ klávesnice', sk: 'Typ klávesnice', id: 'Jenis Keyboard', nl: 'Toetsenbordtype', ar: 'نوع لوحة المفاتيح', da: 'Tastatur type', vi: 'Loại bàn phím', pl: 'Typ klawiatury', he: 'מצב מקלדת', sv: 'Tangentbordstyp', ro: 'Tipul tastaturii', zh: '键盘类型', 'zh-tw': '鍵盤類型', lt: 'Tipo tastiera', az: 'Klaviatura Tipi', th: 'ประเภทคีย์บอร์ด', ko: '키보드 타입', fa: 'صفحه کلید تایپ کردن', el: 'Τύπος πληκτρολόγιου' }, Language: { fr: 'Langue', es: 'Lenguaje', ja: '言語', de: 'Sprache', pt: 'Linguagem', ru: 'Язык', hu: 'Nyelv', it: 'Lingua', hr: 'Jezik', tr: 'Dil', cs: 'Jazyk', sk: 'Jazyk', id: 'Bahasa', nl: 'Taal', ar: 'اللغة', da: 'Sprog', vi: 'Ngôn ngữ', pl: 'Język', he: 'שפה', sv: 'Språk', ro: 'Limbă', zh: '语言', 'zh-tw': '語言', lt: 'Lingua', az: 'Dillər', th: 'ภาษา', ko: '언어', fa: 'زبان', el: 'Γλώσσα' }, 'Play now with friends!': { fr: 'Jouez avec vos amis !', es: '¡Juega con tus amigos!', ja: '友達と遊ぶ！', de: 'Spiele jetzt mit Freunden!', pt: 'Jogue com amigos!', ru: 'Играй сейчас с друзьями!', hu: 'Játsz most a barátaiddal!', it: 'Gioca ora con gli amici!', hr: 'Igraj s prijateljima!', tr: 'Arkadaşlarınla Hemen Oyna', cs: 'Hraj s přáteli!', sk: 'Hraj s priateľmi!', id: 'Mainkan dengan teman-teman', nl: 'Speel nu met vrienden!', ar: 'ألعب الان مع أصدقاء!', da: 'Spil med venner nu!', vi: 'Chơi với bạn!', pl: 'Graj ze znajomymi!', he: 'שחק עם חברים!', sv: 'Spela med vänner nu!', ro: 'Joacă acum cu prietenii tăi', zh: '与朋友一起玩！', 'zh-tw': '立即與朋友一起玩！', lt: 'Gioca ora con gli amici!', az: 'Dostlarınla Indi Oyna', th: 'เล่นกับเพื่อน', ko: '친구들과 함께하십시오!', fa: 'همین حالا با دوستانت بازی کن !', el: 'Παίξε τώρα με φίλους' }, 'Copy Room Link': { en: 'Room link', fr: 'Lien de partie', es: 'Enlace de la sala', ja: 'ルームのリンク', de: 'Serverlink', pt: 'Link da sala:', ru: 'Ссылка на комнату', hu: 'Szoba link', it: 'Link Stanza', hr: 'Link sobe', tr: 'Oda Linki', cs: 'Odkaz arény', sk: 'Odkaz arény', id: 'Ruangan Link', nl: 'Kamer-link', ar: 'رابط الغرفة', da: 'Rummets link', vi: 'Link phòng', pl: 'Link serwera', he: 'קישור של החדר', sv: 'Serverlänk', ro: 'Link-ul camerei', zh: '房间链接', 'zh-tw': '房間連結', lt: 'Sito stanza', az: 'Otaq Linki', th: 'ลิงค์ห้อง', ko: '파티링크', fa: 'لینک اتاق', el: 'Room link' }, ScreenShot: { fr: "Capture d'écran", es: 'Captura de pantalla', ja: 'スクリーンショット', de: 'Screenshot', pt: 'Captura de Tela', ru: 'Фотография экрана', hu: 'Képernyőkép', it: 'screenshot', hr: 'Snimak zaslona', tr: 'Görüntü Alma', cs: 'Screenshot', sk: 'Snímka obrazovky', id: 'Foto ', nl: 'Schermopname', ar: 'لقطة شاشة', vi: 'Chụp màn hình', pl: 'Zrzut ekranu', sv: 'Skärmdump', ro: 'Salvare ecran', zh: '截图', 'zh-tw': '截圖', lt: 'Cattura lo Schermo', th: 'ภาพหน้าจอ', ko: '스크린샷', fa: 'اسکرین شات', el: 'ScreenShot' }, Scoreboard: { fr: 'Scores', es: 'Marcador', ja: 'スコアボード', de: 'Rangliste', pt: 'Placar', ru: 'Лидеры', hu: 'Ponttábla', it: 'Tabellone', hr: 'Rezultati ', tr: 'Puan Tablosu', cs: 'Tabulka skóre', sk: 'Tabulka hodnotenia', id: 'Papan skor', nl: 'Scorepaneel', ar: 'لوحة النتيجة', vi: 'Bảng điểm', pl: 'Tabela wyników', he: 'לוח נקודות', sv: 'Poängtavla', ro: 'Tablou de scor', zh: '得分榜', 'zh-tw': '排行榜', lt: 'Classifica', az: 'Xal Cədvəli', th: 'กระดานคะแนน', ko: '순위', fa: 'صفحه امتیاز', el: 'Πίνακας αποτελεσμάτων' }, 'Copied!': { fr: 'Copié !', es: '¡Copiado!', ja: 'コピーできました！', de: 'Kopiert!', pt: 'Copiado!', ru: 'Скопировано!', hu: 'Vágólapra helyezve!', it: 'Copiato!', hr: 'Kopirano!', tr: 'Kopyalandı!', cs: 'Zkopírováno!', sk: 'Skopírované!', id: 'Disalin!', nl: 'Gekopieerd!', ar: 'نسخ!', da: 'Kopieret!', vi: 'Đã sao chép', pl: 'Skopiowano!', he: 'הועתק!', sv: 'Kopierad!', ro: 'Copiat!', zh: '已复制！', 'zh-tw': '已複製！', lt: 'Copiato!', az: 'Kopyalandı!', th: 'คัดลอกสำเร็จ!', ko: '복사됨!', fa: 'کپی شد !', el: 'Αντιγράφτηκε' }, 'Come and play': { fr: 'Venez jouer', es: 'Ven a jugar', ja: 'やってみよう!', de: 'Spiel mit!', pt: 'Vem Jogar!', ru: 'Присоединяйся к игре', hu: 'Gyere és játsz', it: 'Vieni e gioca', hr: 'Dođi i igraj', tr: 'Katıl ve oyna', cs: 'Pojď a hraj', sk: 'Poď a hraj', id: 'Datang dan main', nl: 'Kom en speel', ar: 'تعال وألعب', da: 'Kom og spil!', vi: 'Hãy đến chơi', pl: 'Graj', he: 'בוא ושחק', sv: 'Kom och spela!', ro: 'Haide şi joacă', zh: '快来玩啊', 'zh-tw': '來玩吧', lt: 'Vieni e Gioca', az: 'Gəl/Gir və Oyna', th: 'มาเล่นกันเถอะ!', ko: '게임에 초대합니다.', fa: 'بیا و بازی کن', el: 'Έλα και παίξε' }, 'Abandon rescued ship': { fr: 'Abandonner le vaisseau', es: 'Abandonar nave rescatada', ja: '宇宙船を廃棄', de: 'Gerettetes Schiff verlassen', pt: 'Abandonar Nave Resgatada', ru: 'Бросить спасённый корабль', hu: 'Elhagyom a megmentett hajóm', it: 'Abbandonare la nave salvata', hr: 'Napusti spasilački brod', tr: 'Kurtarılan Gemiyi Reddet', cs: 'Opustit nalezenou loď', sk: 'Opustiť zachránenú loď', id: 'Abaik kapal yang diselamatkan', nl: 'Verlaat gered schip', ar: 'التخلي عن السفينة الانقاذ', vi: 'Bỏ tàu cứu hộ', pl: 'Porzuć ocalony statek', sv: 'Överge ditt räddade skepp', ro: 'Abandoneaza navă salvată', zh: '放弃救出的飞船', 'zh-tw': '放棄被救出的船舶', lt: 'Abbandona nave salvata', th: 'สละยานที่กู้มา', ko: '우주선을 포기', fa: 'سفینه نجات یافته را رها کن', el: 'Εγκατάληψη σωζόμενου διαστημόπλοιου' }, 'Message from %s': { fr: 'Message de %s', es: 'Mensaje de %s', ja: '%sからのメッセージ', de: 'Nachricht von %s', pt: 'Mensagem de %s', ru: 'Сигнал от %s', hu: 'Űzenet %s-től', it: 'Messagio da %s', hr: 'Poruka od %d', tr: '%s Den Gelen Mesaj', cs: 'Zpráva od %s', sk: 'Správa od %s', id: 'Pesan dari', nl: 'Bericht van', ar: 'رسالة من s%', vi: 'Tin nhắn gửi từ %s', pl: 'Wiadomość od %s', sv: 'Meddelande från %s', ro: 'Mesaj de la %s', zh: '%s 的消息', 'zh-tw': '來自%s的消息', lt: 'Messaggio da %s', th: 'มีข้อความจาก %s', ko: '%s의 메세지', fa: 'پیامی از طرف %s', el: 'Μήνυμα από %s' }, 'Your ship has been rescued at:': { fr: 'Votre vaisseau a été secouru à:', es: 'Tu nave ha sido rescatada en:', ja: 'あなたの船が救助されました：', de: 'Dein Schiff wurde hier gerettet:', pt: 'Sua Nave foi Resgatada em:', ru: 'Ваш корабль был спасен в:', hu: 'A hely ahól megmentették a hajód:', it: 'La tua nave è stata salvata da:', hr: 'Tvoj brod je spašen kod:', tr: 'Gemin Buradan Kurtarıldı:', cs: 'Vaše loď byla zachráněna u:', sk: 'Vaša loď bola zachránená na:', id: 'Kapal anda telah diselamatkan di:', nl: 'Uw schip is gered in: ', ar: 'تم إنقاذ سفينتك في:', vi: 'Con tàu bạn giải cưu ở :', pl: 'Twój statek został ocalony w:', sv: 'Ditt skepp har blivit räddat vid:', ro: 'Nava ta a fost salvată la:', zh: '您的飞船已被救出：', 'zh-tw': '你的船舶已被救出:', lt: 'La tua nave è stata salvata alle:', th: 'ยานของคุณได้ถูกกู้ที่:', ko: '당신의 우주선을 수거했습니다 :', fa: 'سفینه شما نجات یافته است :', el: 'Το διαστημόπλοιό σου έχει σωθεί στις:' }, 'Accept rescued ship': { fr: 'Récupérer le vaisseau', es: 'Recuperar nave rescatada', ja: '救助された船を受け取る', de: 'Gerettetes Schiff annehmen', pt: 'Aceitar Nave Resgatada', ru: 'Взять спасенный корабль', hu: 'Megmentett hajóm folytatása', it: 'Accetta nave salvata', hr: 'Prihvati spasilači brod', tr: 'Kurtarılan Gemiyi Kabul Et', cs: 'Přijmout nalezenou loď', sk: 'Prijať zachránenú loď', id: 'Terima kapal yang diselamatkan', nl: 'Aanvaard gered schip', ar: 'قبول انقاذ السفينة', vi: 'Chấp nhận tàu cưu hộ', pl: 'Zaakceptuj ocalony statek', sv: 'Acceptera ditt räddade skepp', ro: 'Acceptă navă salvată', zh: '接受救出的飞船', 'zh-tw': '使用被救出的船舶', lt: 'Accetta nave salvata', th: 'รับยานที่กู้มา', ko: '수거한 우주선에 탑승', fa: 'سفینه نجات یافته را قبول کن', el: 'Δεκτό το σωζόμενο διαστημόπλοιο' }, 'Warning: Shield disabled': { fr: 'Danger ! Bouclier désactivé !', es: 'Advertencia: Escudo Desactivado', ja: '警告：シールド無効', de: 'Warnung: Schild ausgefallen', pt: 'Alerta: Escudo Desativado', ru: 'Внимание! Щит отключен', hu: 'Figyelmeztetés: Pajzs kikapcsolva', it: 'Attenzione: Scudi disabilitati', hr: 'Upozorenje:Štit onemogućen', tr: 'Dikkat:Kalkan Devre Dışı', cs: 'Pozor: Štít je vyřazen', sk: 'Pozor: Štít je zničený', id: 'Peringatan: Perisai dinonaktifkan', nl: 'Waarschuwing: schilden gedeactiveerd', ar: 'تحذير: تعطل الدرع', da: 'Advarsel: Skjold nedbrudt', vi: 'Cảnh báo: khiên bị vô hiệu hóa', pl: 'Uwaga: Osłony nieaktywne', he: 'אזהרה: מגן הוסר', sv: 'Varning: Sköld inaktiverad', ro: 'Avertisment: Scut dezactivat', zh: '警告：盾牌已禁用', 'zh-tw': '警告：盾牌已禁用', lt: 'Attenzione: Scudi disabilitati', az: 'Diqqət: Qalxan Işləmir', th: 'คำเตือน: โล่ปิดการใช้งาน', ko: '경고: 방어막 완파', fa: 'هشدار : سپر غیر فعال شد', el: 'Προειδοποίηση: Ασπίδα απενεργοποιημένη' }, 'Upgrades unlocked': { fr: 'Améliorations débloquées', es: 'Mejoras desbloqueadas', ja: 'アップグレード可能', de: 'Upgrades verfügbar', pt: 'Melhorias Desbloqueadas', ru: 'Улучшения разблокированы', hu: 'Fejlesztések elérhetőek', it: 'Potenziamenti sbloccati', hr: 'Nadogradnja otključana', tr: 'Geliştirmeler Açıldı', cs: 'Vylepšení odemčena', sk: 'Vylepšenia odomknuté', id: 'Upgrade dibuka', nl: 'Upgrades ontgrendeld', ar: 'ترقيات مفتوحة', da: 'Opgraderiger åbnet', vi: 'Nâng cấp được mở khóa', pl: 'Ulepszenia odblokowane', he: 'שיפורים אפשריים', sv: 'Uppgraderingar tillgängliga', ro: 'Îmbunătăţiri deblocate', zh: '升级已解锁', 'zh-tw': '升级已解鎖', lt: 'Aggiornamenti sbloccati', az: 'Yüksəltmələr Açıldı', th: 'ปลดล็อคการอัพเกรด', ko: '업그레이드 가능', fa: 'ارتقا دادن مجاز است', el: 'Αναβαθμίσεις ξεκλειδώθηκαν' }, 'Advertising helps us fund server costs and game development.': { fr: 'La publicité nous aide à financer nos serveurs et le développement du jeu.', es: 'Los anuncios nos ayudan a cubrir los gastos del servidor y el desarrollo del juego.', ja: '広告料はゲーム開発とサーバー費に充てられます', de: 'Werbung hilft uns, Serverkosten zu decken und das Spiel zu entwickeln.', pt: 'Os anúncios nos ajuda a financiar os custos dos servidores eo desenvolvimento de jogos.', ru: 'Реклама помогает нам оплачивать сервер и разработку игры', hu: 'A hírdetések segítenek a szerver költségeinek fedezésében és a játék fejlesztésében', it: 'Pubblicizzare ci aiuta per il costo dei server e lo sviluppo del gioco.', hr: 'Reklamiranje nam pomaže financirati troškove servera i razvoj igre', tr: 'Reklamlar Sunucumuzu Ayakta Tutmaya Ve Masrafları Ödememize Yardım Eder.', cs: 'Reklamy nám pomáhají pokrýt náklady na servery a vývoj hry.', sk: 'Reklama nám pomáha financovať náklady na server a vývoj hier.', id: 'Pengiklanan membantu kami membayar tagihan server dan pengembangan game.', nl: 'Advertenties helpen ons de serverkosten en spelontwikkeling te betalen.', ar: 'الإعلان يساعدنا على تمويل خدمتنا وتطوير اللعبة', vi: 'Quảng cáo giúp chúng tôi có chi phí duy chì máy chủ và cải tiến trò chơi', pl: 'Reklamy pomagają nam opłacić serwery i pracować nad rozwojem gry', he: 'פרסום עוזר לנו לממן את עלויות התחזוקה והפיתוח.', sv: 'Reklam hjälper oss att täcka serverkostnader och utvecklingen av spelet.', ro: 'Reclamele ne ajută financiar pentru a dezvolta jocul și a acoperi costurile de mentenanţă', zh: '广告将帮助我们解决服务器成本和继续游戏开发。', 'zh-tw': '廣告將幫助我們支付伺服器的成本和繼續開發遊戲', lt: 'La pubblicità ci aiuta a finanziare i costi dei server e lo sviluppo del gioco.', az: 'Reklamlar Oyunu Açıx Tutmağa və xərcləri ödəməyimizə Kömək Edər.', th: 'โฆษณาช่วยสนับสนุนพวกเราเรื่องรายจ่ายของเซิฟเวอร์และการพํฒนาเกมนี้', ko: '광고는 게임개발과 서버비용에 도움을 줍니다.', fa: 'تبلیغات به ما کمک میکنه تا بودجه سرور و هزینه های بازی رو تامین کنیم', el: 'Η διαφήμηση μας βοηθά στην αποταμίευση του κόστους του server και στην ανάπτυξη του παιχνιδιού' }, 'Please disable your adblocker for Starblast.io and you will never see this page again!': { fr: 'Merci de désactiver votre bloqueur sur Starblast.io et vous ne verrez plus ce message !', es: '¡Por favor, desactiva tu abdlocker para Starblast.io y no volverás a ver esta página!', ja: 'Starblast.ioでアドブロッカーを無効にしてください。そうすればこのメッセージは再び表示されません。', de: 'Bitte deaktiviere deinen Adblocker für Starblast.io und du wirst diese Seite nie wieder sehen!', pt: 'Por favor desative seu bloqueador de anúncios para o Starblast.io e você não verá mais essa página denovo!', ru: 'Пожалуйста, отключите ваш блокировщик рекламы для starblast.io, и вы никогда больше не увидите это меню загрузки!', hu: 'Kérlek kapcsold ki a hirdetésblokkolót és akkor többet nem látod ezt a lapot!', it: 'Per favore disattiva il tuo adblocker per Starblast.io e non vedrai mai più questa pagina!', hr: 'Molimo onemogući adblocker za Starblast.io i nikad više nečete vidjeti ovu stranicu', tr: 'Lütfen Reklam Engelleyicini Starblast.io İçin Kapat Ve bu Sayfayı Birdaha Asla Görme!', cs: 'Prosíme, vypněte svůj adblock pro starblast.io a tato stránka se již nebude zobrazovat.', sk: 'Prosíme, vypnite svoj adblock pre starblast.io a táto stránka sa vám už nebude zobrazovať.', id: 'Mohon matikan adblocker anda untuk Starblast.io dan anda tidak akan pernah melihat halaman ini lagi!', nl: 'Deactiveer alsjeblieft je adblocker voor starblast.io en je zal deze pagina nooit meer zien!', ar: 'يرجى تعطيل أدبلوكر ل Starblast.io ولن ترى هذه الصفحة مجدد!', vi: 'Làm ơn tắt adblocker cho Starblast.io nếu không thì bạn sẽ không thấy nó', pl: 'Proszę zrób wyjątek w swoim adblockerze dla Starblast.io i już nigdy nie będziesz musiał oglądać tej strony!', he: 'בבקשה תשביט את חוסם הפרסומות עבור אתר זה ואתה לעולם לא תראה את ההודעה הזאת שוב!', sv: 'Om du avaktiverar din adblocker för Starblast.io så kommer inte denna sida dyka upp igen!', ro: 'Te rugăm dezactivează adblock-ul tău pentru Starblast.io și nu vei mai vedea niciodată acest mesaj', zh: '请为 Starblast.io 禁用您的广告屏蔽器，您将不再看到此页面。', 'zh-tw': '請為Starblast.io禁用你的廣告隱藏器,你將不會再看到此頁面!', lt: 'Perfavore disabilita il tuo adblocker per Starblast.io e non rivedrai questa pagina!', az: 'Xaiş olunur Reklam Qapatıcını Söndür ve Bu Səyfəni Birdə Görmə', th: 'กรุณาอย่าปิด adblocker ในการเล่นเกมนี้ มิฉะนั้นจะไม่สามารถเปิดตัวเกมได้', ko: '게임을 위해 광고차단을 풀어주시면 이 페이지를 다시 보지 않게 됩니다!', fa: 'لطفا لغو کننده ی تبلیغات رو برای starblast.io غیر فعال کنید تا دیگه هیچوقت این صفحه رو نبینید', el: 'Παρακαλώ απενεργοποιήστε το adblocker για το Starblast.io και δεν θα ξαναδείτε αυτή τη σελίδα' }, "Don't want to see ads? Buy your ECP, remove all ads and get cool bonus features!": { fr: "Vous ne voulez pas de pub ? Achetez votre ECP et jouez sans pub en plus d'obtenir de super fonctionnalités !", es: '¿No quieres ver anuncios? ¡Compra tu ECP, elimina todos los anuncios y consigue interesantes características extra!', ja: '広告が不要ですか?ECPを購入して広告を無効にし、特典機能を得てください。', de: 'Willst du keine Werbung sehen? Kaufe dir einen Elite-Ausweis, entferne die Werbung und schalte coole Extrafunktionen frei!', pt: 'Compre seu ECP, ganhe bonus extras e remova os anúncios!', ru: 'Не хотите смотреть рекламу? Купите Пропуск Капитана и получите в комплекте множество приятных бонусов!', hu: 'Nem szeretnél hirdetéseket látni? Vegyél EKJ-t, távolítsd el az összes hirdetést, és kapsz menő funkciókat is', it: 'Non vuoi vedere la pubblicità? Compra il nostro ECP, rimuovi la pubblicità e otterrai nuove caratteristiche!', hr: 'Ne želiš gledati prikazane reklame? Kupi svoj PEZ,makni sve reklame i dobij cool bonuse!', tr: 'Reklam Görmek İstemiyormusun? SKİ ni Satın Al Bütün Reklamlardan Kurtul Ve Bonus Olarak Özel Harika Yenilikler Kazan', cs: 'Nechcete vidět reklamy? Kupte si PEK. Odstraníte tím reklamy a obdržíte speciální věci a extra možnosti.', sk: 'Nechcete zobrazovať reklamy? Kúpte si ECP, odstránite všetky reklamy a získajte skvelé bonusové funkcie!', id: 'Tidak ingin melihat iklan? Belilah EKL anda, menghapus semua iklan dan dapatkan fitur bonus yang keren!', nl: 'Wil je geen advertenties zien? Koop dan een ECP, die alle advertenties verwijdert en krijg coole bonussen!', ar: 'لا تريد مشاهدة الإعلانات؟ قم بشراء القائد النخبة ممر، وإزالة جميع الإعلانات والحصول على علاوة رائعة !', vi: 'Bạn khôn gmuốn thấy quảng cáo? Hãy mua ECP, bỏ hết tất cả quảng cáo và có nhiều các tính năng tuyệt vời khác', pl: 'Nie chcesz oglądać reklam? Kup sobie Przepustkę Elitarnego Dowódcy (ECP), usuń wszystkie reklamy i otrzymaj atrakcyjne bonusy!', he: "לא רוצה לראות מודעות? תקנה סיסמת מפקד עליון, תסיר את כל הפרסומות ותקבל פיצ'רים מגניבים נוספים!", sv: 'Vill du undvika reklam? Köp ett ECP, skippa all reklam och få häftiga bonusfunktioner!', ro: 'Nu vrei să vezi reclame? Cumpără un acces de Comandant de elită și primești de asemenea și alte bonusuri', zh: '不想看广告？购买 ECP，将删除所有广告并获得酷炫的功能！', 'zh-tw': '不想看廣告?購買ECP,將刪除所有廣告並獲得很酷的功能!', lt: "Non vuoi vedere le pubblicità? Comprati l'ECP, rimuove tutte le pubblicità e ricevi fantastiche caratteristiche bonus!", az: 'Rəklam Görmək Istəmirsən ? Pulnan SKI al və Bütün Reklamlardam Qurtul və Bonus Olaraq Xüsusi Yeniliklər Qazan!', th: 'อยากให้โฆษณาหายไป? ซื้อ ECP เพื่อลบโฆษณาทั้งหมดและได้คุณสมบัติพิเศษต่างๆอีกมากมาย!', ko: '광고를 원하지 않으십니까? ECP를 사면 광고가 없어짐과 동시에 멋진 해택이 있습니다!', fa: 'از دست تبلیغات خسته شدی؟ یه حساب فرمانده ویژه بخر تا از شر تبلیغات راحت بشی و یه عالمه ویژگی جدید بدست بیاری', el: 'Δεν θέλετε να δείτε διαφημήσεις; Αγοράστε το δικό σας ECP, απομακρύνει όλες τις διαφημήσεις και πάρτε ωραία μπόνους χαρακτηριστικά' }, 'Thank you :)': { fr: 'Merci :)', es: 'Gracias :)', ja: 'ありがとう', de: 'Danke :)', pt: 'Obrigado :)', ru: 'Спасибо :)', hu: 'Köszönöm :)', it: 'Grazie :)', hr: 'Hvala :)', tr: 'Teşekkürler : )', cs: 'Děkujeme :)', sk: 'Ďakujeme :)', id: 'Terima Kasih :)', nl: 'Bedankt :)', ar: 'شكرا لك :)', vi: 'Cảm ơn :)', pl: 'Dziękujemy :)', he: 'תודה לך :)', sv: 'Tack så mycket :)', ro: 'Îţi mulţumim', zh: '谢谢', 'zh-tw': '謝謝 :)', lt: 'Grazie!', az: 'Təşəkkürlər :)', th: 'ขอขอบคุณ', ko: '감사합니다 :)', fa: 'ممنون :)', el: 'Σε ευχαριστώ :)' }, 'Your connection has been lost': { fr: 'Votre connexion a été perdue', es: 'Se ha perdido la conexión', ja: '接続が失われました', de: 'Verbindung verloren', pt: 'Conexão Perdida', ru: 'Ваше соединение потеряно', hu: 'A kapcsolat megszakadt', it: 'Connessione persa', hr: 'Niste povezani', tr: 'Bağlantın Kaybedildi ZAA XD', cs: 'Spojení bylo ztraceno', sk: 'Strata spojenia', id: 'Koneksi anda telah hilang', nl: 'De verbinding is verbroken', ar: 'تم فقد الاتصال', da: 'Du har mistet forbindelsen', vi: 'Mạng bị mất kết nối', pl: 'Utracono połączenie', he: 'החיבור שלך אבד', sv: 'Din anslutning bröts', ro: 'Conexiunea ta a fost pierdută', zh: '您的连接已中断', 'zh-tw': '您的連接已中斷', lt: 'La tua connessione è persa', az: 'Internetin Kəsildi', th: 'ไม่มีการเชื่อมต่อ', ko: '연결이 끊어짐', fa: 'اتصال شما قطع شده است .', el: 'Η σύνδεσή σου έχει χαθεί' }, 'Station is under attack': { fr: 'Danger ! La station est attaquée !', es: 'Advertencia: La estación está siendo atacada', ja: '基地が攻撃を受けています', de: 'Basis wird angegriffen', pt: 'Aviso: Base sob Ataque!', ru: 'ВНИМАНИЕ! Станцию атакуют!', hu: 'A bázisod megtámadták!', it: 'Stazione sotto attacco', hr: 'Upozorenje: Postaja pod napadom', tr: 'Dikkat:İstasyon Saldırı Altında', cs: 'Pozor: Základna pod útokem!', sk: 'Pozor: Základňa je pod útokom!', id: 'Stasiun sedang diserang', nl: 'Station wordt aangevallen', ar: 'المحطة تتعرض للهجوم', vi: 'Cản cứ bị tấn công', pl: 'Stacja zaatakowana', he: 'התחנה תחת מתקפה', sv: 'Er station är under attack', ro: 'Avertisment: staţia este atacată', zh: '基地遭到攻击', 'zh-tw': '基地遭到攻擊', lt: 'Stazione sotto attacco', az: 'Diqqət:Bazana Saldırı Var', th: 'สถานีถูกโจมตี', ko: '기지가 공격 당하는중', fa: 'پایگاه در معرض تهاجم قرار گرفته', el: 'Σταθμός δέχεται επίθεση' }, 'Station module repaired': { fr: 'Module de station réparé', es: 'Módulo de estación reparado', ja: '基地モジュールが修復されました', de: 'Basismodul wurde repariert', pt: 'Módulo da Base Reparado', ru: 'Модуль станции восстановлен', hu: 'Bázis modul megjavítva.', it: 'Modulo Stazione riparato', hr: 'Modul postaje popravljen', tr: 'Modül Tamir Edildi', cs: 'Modul opraven', sk: 'Modul opravený', id: 'Modul stasiun diperbaiki', nl: 'Stationmodule gerepareerd', ar: 'جزء من المحطة قد تصلح', vi: 'Một mảnh của căn cứ đã được sửa chữa', pl: 'Moduł stacji naprawiony', he: 'רכיב תחנה תוקן', sv: 'Stationsmodul reparerad', ro: 'Modulul staţiei reparat', zh: '基地模块已修复', 'zh-tw': '基地組件已修復', lt: 'Modulo stazione riparata', az: 'Bazan Təmir Edildi', th: 'ซ่อมโมดูลเรียบร้อย', ko: '기지 구획이 수리됨', fa: 'قسمتی از پایگاه تعمیر شد', el: 'Το εξάρτημα του σταθμού επιδιορθώθηκε' }, 'Station module destroyed': { fr: 'Module de station détruit', es: 'Módulo de estación destruido', ja: '基地モジュールが破壊されました', de: 'Basismodul wurde zerstört', pt: 'Módulo da Base Destruida!', ru: 'Модуль станции уничтожен!', hu: 'Bázis modul megsemmisítve', it: 'Modulo Stazione distrutto', hr: 'Postaja unapređena', tr: 'İstasyon Modülü Yokedildi', cs: 'Modul zničen', sk: 'Modul zničený', id: 'Modul stasiun dihancurkan', nl: 'Stationmodule vernietigd', ar: 'جزء من المحطة قد تحطم', vi: 'Mộ̣t mảnh của căn cứ bị phá hủy', pl: 'Moduł stacji zniszczony', he: 'רכיב תחנה נהרס', sv: 'Stationsmodul förstörd', ro: 'Modulul staţiei distrus', zh: '基地模块遭破坏', 'zh-tw': '基地組件遭到破壞', lt: 'Modulo stazione distrutta', az: 'Bazan Parçalandı', th: 'โมดูลถูกทำลาย', ko: '기지 구획이 파괴됨', fa: 'قسمتی از پایگاه تخریب شد', el: 'Το εξάρτημα του σταθμού καταστράφηκε' }, 'Station upgraded': { fr: 'Station améliorée', es: 'Estación actualizada', ja: '基地がアップグレードされました', de: 'Basis wurde upgegradet', pt: 'Base Aprimorada', ru: 'Станция улучшена', hu: 'Bázis fejlesztve', it: 'Aggiornata Stazione', hr: 'Postaja nadograđena', tr: 'İstasyon Yükseltildi', cs: 'Základna vylepšena', sk: 'Základňa vylepšená', id: 'Stasiun di upgrade', nl: 'Station geüpgraded', ar: 'تمت ترقية المحطة', vi: 'Căn cứ được nâng cấp', pl: 'Stacja została ulepszona', he: 'התחנה השתפרה', sv: 'Station uppgraderad', ro: 'Staţia a fost îmbunătăţită', zh: '基地已升级', 'zh-tw': '基地已升級', lt: 'Stazione aggiornata', az: 'Bazan Yüksəltildi', th: 'อัพเกรดสถานีแล้ว', ko: '기지 업그레이드', fa: 'پایگاه ارتقا یافت', el: 'Σταθμός αναβαθμίστηκε' }, 'Leave depot': { fr: 'Quitter le dépôt', es: 'Descargar depósito', ja: '貯蔵庫を出る', de: 'Verlasse das Depot', pt: 'Deixar Depósito', ru: 'Покинуть ангар', hu: 'Hagyd el a raktárat', it: 'Lascia il deposito', hr: 'Napusti skladište', tr: 'Depodan Çık', cs: 'Opustit depo', sk: 'Opustiť depo', id: 'Meninggalkan depot', nl: 'Depot verlaten', ar: 'مغادرة المستودع', vi: 'Rời kho', pl: 'Opuść depozyt', he: 'עזיבת מחסן', sv: 'Lämna depån', ro: 'Părăseşte depozitul', zh: '离开仓库', 'zh-tw': '離開倉庫', lt: 'Lascia deposito', az: 'Padvaldan Çıx!', th: 'สถานีออกตัว', ko: '저장소에서 나간다', fa: 'مخزن رو رها کن', el: 'Αφήνω την αποθήκη' }, 'Upgrade station to unlock new ship tiers': { fr: 'Améliorez votre station pour débloquer de nouveaux vaisseaux', es: 'La estación debe ser actualizada para desbloquear naves de nuevos niveles', ja: '基地をアップグレードして高ティア船を開放せよ', de: 'Station upgraden, um neue Schiffslevel freizuschalten', pt: 'Atualizar Base para Desbloquear novos níveis de naves', ru: 'Улучши станцию, чтобы открыть высокоуровневые корабли', hu: 'Fejleszteni kell a bázist a nagyobb szintű űrhajók eléréséhez', it: 'Aggiorna la Stazione per sbloccare nuovi livelli per la nave', hr: 'Unaprijedi postaju kako bi otključao brod više razine', tr: 'İstasyonu Yükselterek Yeni Seviye Gemiler Açın', cs: 'Vylepši základnu pro odemčení nových lodí', sk: 'Vylepši stanicu pre odomknutie nových lodí', id: 'Upgrade stasiun untuk membuka tingkat kapal baru', nl: 'Upgrade het station om beter schepen te ontgrendelen', ar: 'قم بترقية المحطة من أجل فتح مستويات سفن جديدة', vi: 'Nâng cấp căn cứ để có con tàu tiếp theo', pl: 'Ulepsz stację aby odblokować nowe poziomy statków', he: 'תשדרג את התחנה על מנת לאפשר שדרוג לספינות מתקדמות יותר', sv: 'Uppgradera stationen för att låsa upp nya skeppsnivåer', ro: 'Upgradează stația pentru a debloca noi nivele pentru nave', zh: '升级基地解锁新船舰', 'zh-tw': '升級基地以解鎖新船舶', lt: 'Aggiorna la stazione per sbloccare nuovi livelli di navi', az: 'Bazanı Yüksəltərək Yeni Səviye Robotlar Aç', th: 'อัพเกรดสถานีเพื่อปลดล็อคยานใหม่ๆ', ko: '기지를 업그레이드해야 상위 우주선을 선택할 수 있습니다.', fa: 'پایگاه رو ارتقا بده تا به سفینه های جدید دسترسی پیدا کنی', el: 'Αναβάθμισε το σταθμό για να ξεκλειδώσεις νέες αναβαθμίσεις για το διαστημόπλοιο σου' }, 'Fill station to unlock new ship tiers': { fr: 'Remplissez votre station pour débloquer de nouveaux vaisseaux', es: 'Llena la estación de cristales para desbloquear naves de nuevos niveles', ja: '基地を修復して高ティアの船を開放せよ', de: 'Station füllen, um neue Schiffsstufen freizuschalten', pt: 'Encha a Base para Desbloquear novos tiers de naves', ru: 'Заполни станцию, чтобы открыть высокоуровневые корабли', hu: 'Fel kell tölteni a bázist gyémánttal, hogy elérhetőek legyenek nagyobb szintű űrhajók.', it: 'Riempi la Stazione per sbloccare nuovi livelli per la nave', hr: 'Popuni postaju draguljima kako bi otključao brod više razine', tr: 'İstansyonu Doldurarak Yeni Seviye Gemiler Açın', cs: 'Naplň základnu pro odemčení nových lodí', sk: 'Naplň stanicu na odomknutie nových lodí', id: 'Isi stasiun untuk membuka tingkat kapal baru', nl: 'Vul het station om betere schepen te ontgrendelen', ar: 'أملأ المحطة من أجل فتح مستويات سفن جديدة', vi: 'Cùng cấp đầy kho của căn cứ để có con tàu tiếp theo', pl: 'Wypełnij stację aby odblokować nowe poziomy statków', he: 'תמלא את התחנה על מנת לאפשר שדרוגי ספינה מתקדמים יותר', sv: 'Fyll stationen för att låsa upp nya skeppsnivåer', ro: 'Umple stația pentru a debloca noi nivele de nave', zh: '填充站点以解锁新船舰', 'zh-tw': '填充基地以解鎖新船舶', lt: 'Riempi la stazione per sbloccare nuovi livelli di navi', az: 'Bazanı Dolduraraq Yeni Səviyə Gəmilər Aç', th: 'เติมเต็มสถานีเพื่อปล็ดล็อคยานระดับใหม่ๆ', ko: '상위 우주선을 선택할 수 있도록 기지에 보석을 제공하십시오.', fa: 'پایگاه رو پر کن تا به مدل های سفینه های جدید دسترسی پیدا کنی', el: 'Πλήρωσε το σταθμό για να ξεκλειδώσεις νέες αναβαθμίσεις για το διαστημόπλοιο σου' }, 'You contributed %d gems to your team!': { fr: 'Vous avez rapporté %d gemmes à votre équipe !', es: '¡Has contribuido con %d cristales a tu equipo!', ja: '宝石%d個分チームに貢献しました', de: 'Du hast der Basis %d Kristalle gegeben!', pt: 'Você Contribuiu com %d gemas para o seu Time!', ru: 'Ты внёс %d кристаллов в станцию твоей команды!', hu: 'Te leadtál %d gyémántot a csapatnak!', it: 'Hai contribuito %d gemme per il tuo team!', hr: 'Tvoj doprinos %d dragulja tvom timu!', tr: 'Ekibinize %d Değerli Çevher Katkı Yaptınız', cs: 'Přispěl jsi %d krystalů svému týmu!', sk: 'Do týmu si prispeli %d drahokamov!', id: 'Anda menyumbang %d permata kepada tim anda!', nl: 'Je hebt %d kristallen aan je team gegeven!', ar: 'لقد أحضرت: %d من الاحجار كريمة لفريقك', vi: 'Bạn đã cung cáp %d cho căn cứ của bạn', pl: 'Oddałeś %d kryształów dla twojej drużyny', he: 'תרמת %d יהלומים לקבוצה שלך!', sv: 'Du har bidragit med %d kristaller till ditt lag!', ro: 'Ai contribuit cu %d cristale echipei tale!', zh: '你为你的团队捐献了 %d 宝石！', 'zh-tw': '你為你的基地捐贈了%d寶石!', lt: 'Hai contribuito %d gemme per la tua squadra!', az: 'Qrupunuza %d Dəyərində Qatqı Etdiniz', th: 'คุณได้บริจาคเพชร %d เม็ดให้กับทัมของคุณ', ko: '기지에 %d 보석을 제공하셨습니다!', fa: 'شما %d الماس رو به تیمتون اهدا کردید', el: 'Η συνεισφορά σου στην ομάδα είναι %d πετράδια!' }, '%s contributed %d gems to your team!': { fr: '%s a rapporté %d gemmes à votre équipe !', es: '¡%s contribuyó con %d cristales al equipo!', ja: '%sが宝石%d個分チームに貢献しました', de: '%s hat der Basis %d Kristalle gegeben!', pt: '%s Contribuiu com %d gemas para o seu Time!', ru: '%s внёс %d кристаллов в станцию твоей команды!', hu: '%s leadott %d drágakövet a csapatnak!', it: '%s ha contribuito %d gemme per il tuo team!', hr: '%d doprinjeo je %d dragulja vašem timu', tr: '%s Ekibe %d Değerinde Katkıda Bulundu!', cs: '%s přispěl %d krystalů tvému týmu!', sk: '%s prispel %d drahokamami do týmu!', id: '%s menyumbang %d permata kepada tim anda!', nl: '%s heeft %d kristallen aan je team gegeven!', ar: '%s أحضر: %d من الاحجار كريمة لفريقك', vi: '%d cung cấp cho đội của bạn', pl: '%s Oddał %d kryształów dla twojej drużyny', he: '%s תרם %d יהלומים לקבוצה שלך!', sv: '%s har bidragit med %d kristaller till ditt lag!', ro: '%s a contribuit cu %d cristale echipei tale', zh: '%s 为你的团队捐献了 %d 宝石！', 'zh-tw': '%s為你的基地捐贈了%d寶石!', lt: '%s ha contribuito %d gemme per la tua squadra!', az: '%s Qrupa %d Dəyərli Qatqı Etdin', th: 'เพชร %d เม็ดได้ถูกบริจาคให้กับทีมของคุณ!', ko: '%s이/가 %d 보석을 제공했습니다!', fa: 'پلیر %s مقدار %d الماس رو به تیم اهدا کرد', el: 'Η συνεισφορά σου στην ομάδα είναι %s και %d πετράδια!' }, Capacity: { fr: 'Capacité', es: 'Capacidad', ja: '容量', de: 'Kapazität', pt: 'Capacidade', ru: 'Вместимость', hu: 'Kapacitás', it: 'Capacità', hr: 'Kapacitet', tr: 'Kapasite', cs: 'Kapacita', sk: 'Kapacita', id: 'Kapasitas', nl: 'Capaciteit', ar: 'سعة', da: 'Kapacitet', vi: 'Dung lượng', pl: 'Pojemność', he: 'קיבולת', sv: 'Kapacitet', ro: 'Capacitate', zh: '容量', 'zh-tw': '容量', lt: 'Capacità', az: 'Tutum', th: 'ความจุ', ko: '최대량', fa: 'ظرفیت', el: 'Χωρητικότητα' }, Regen: { fr: 'Régen', es: 'Recarga', ja: '再生', de: 'Regeneration', pt: 'Regeneração', ru: 'Восстановление', hu: 'Regenerálódás', it: 'Rigenera', hr: 'Przina punjenja', tr: 'Yenilenme', cs: 'Regenerace', sk: 'Regenerácia', id: 'Regen', nl: 'Regeneratie', ar: 'التعبأ', da: 'Regeneration', vi: 'Hồi phục', pl: 'Regeneracja', he: 'התחדשות', sv: 'Regeneration', ro: 'Regenerare', zh: '恢复', 'zh-tw': '恢復', lt: 'Rigenerazione', az: 'Yenilənmə', th: 'การฟื้นฟู', ko: '회복', fa: 'بازتولید', el: 'Επαναφόρτιση' }, Damage: { fr: 'Puissance', es: 'Daño', ja: '威力', de: 'Schaden', pt: 'Dano', ru: 'Урон', hu: 'Sebzés', it: 'Danno', hr: 'Šteta', tr: 'Hasar', cs: 'Síla', sk: 'Sila', id: 'Kerusakan', nl: 'Schietkracht', ar: 'الاضرار', da: 'Skade', vi: 'Sát thưong', pl: 'Obrażenia', he: 'נזק', sv: 'Skada', ro: 'Damage', zh: '伤害', 'zh-tw': '傷害', lt: 'Danno', az: 'Zərər', th: 'ดาเมจ', ko: '데미지', fa: 'ضربه', el: 'Φθορά' }, Speed: { fr: 'Vitesse', es: 'Velocidad', ja: '速度', de: 'Geschwindigkeit', pt: 'Velocidade', ru: 'Скорость', hu: 'Sebesség', it: 'Velocità', hr: 'Brzina', tr: 'Hız', cs: 'Rychlost', sk: 'Rýchlosť', id: 'Kecepatan', nl: 'Snelheid', ar: 'السرعة', da: 'Hastighed', vi: 'Tốc độ', pl: 'Szybkość', he: 'מהירות', sv: 'Hastighet', ro: 'Viteză', zh: '速度', 'zh-tw': '速度', lt: 'Velocità', az: 'Sürət', th: 'ความเร็ว', ko: '속도', fa: 'سرعت', el: 'Ταχύτητα' }, Agility: { fr: 'Agilité', es: 'Agilidad', ja: '操作性', de: 'Wendigkeit', pt: 'Agilidade', ru: 'Ловкость', hu: 'Mozgékonyság', it: 'Agilità', hr: 'Okretljivost', tr: 'Çeviklik', cs: 'Obratnost', sk: 'Obratnosť', id: 'Kelincahan', nl: 'Wendbaarheid', ar: 'الرشاقة', da: 'Smidighed', vi: 'Linh hoạt', pl: 'Zwrotność', he: 'זריזות', sv: 'Rörlighet', ro: 'Agilitate', zh: '敏捷', 'zh-tw': '敏捷', lt: 'Agilità', az: 'Çəldlik', th: 'ความว่องไว', ko: '기동성', fa: 'چابکی', el: 'Ευκινησία' }, 'Survival Mode!': { fr: 'Mode survie !', es: '¡Modo de Supervivencia!', ja: 'サバイバルモード！', de: 'Überlebensmodus!', pt: 'Modo de Sobrevivência!', ru: 'Режим выживания!', hu: 'Túlélő mód!', it: 'Modalità Sopravvivenza!', hr: 'Opstanak!', tr: 'Hayatta Kalma Modu!', cs: 'Survival mód!', sk: 'Prežitie mód!', id: 'Mode Bertahan Hidup!', nl: 'Overlevingsmodus!', ar: 'نمط البقاء!', da: 'Overlevelse!', vi: 'Chế độ sinh tử!', pl: 'Tryb przetrwania!', he: 'מצב הישרדות', sv: 'Överlevnadsläge!', ro: 'Modul Survival', zh: '生存模式！', 'zh-tw': '生存模式！', lt: 'Modalità Sopravvivenza!', az: 'Həyatta Qalma Modu', th: 'โหมดเอาชีวิตรอด!', ko: '서바이벌 시작!', fa: 'حالت جنگ برای بقا !', el: 'Παιχνίδι Επιβίωσης!' }, 'Survivors:': { fr: 'Survivants :', es: 'Supervivientes:', ja: '残りの生存者数：', de: 'Überlebende:', pt: 'Sobreviventes:', ru: 'Выжившие:', hu: 'Túlélők:', it: 'Sopravvissuti:', hr: 'Preživjeli:', tr: 'Hayattakiler', cs: 'Zbývající hráči:', sk: 'Zostávajúci hráči:', id: 'Selamat:', nl: 'Overlevers', ar: 'الناجون:', da: 'Overlevende:', vi: 'Người sống sót:', pl: 'Ocalali:', he: 'שורדים:', sv: 'Överlevare:', ro: 'Supravieţuitori', zh: '幸存者：', 'zh-tw': '倖存者：', lt: 'Sopravvissuti', az: 'Həyatdakılar', th: 'ผู้รอดชีวิต:', ko: '생존자', fa: 'بازمانده ها :', el: 'Επιζόντες:' }, 'Fetching Federation conflict map': { fr: 'Récupération de la carte des conflits de la fédération', es: 'Extrayendo mapa de conflictos de la Federación', ja: '惑星連邦の勢力地図を取得しています…', de: 'Hole Konfliktkarte der Föderation', pt: 'Obtendo mapa de conflitos da federação', ru: 'Запрашиваю карту конфликтов Федерации', hu: 'Föderációs konfliktus térkép lekérése', it: 'Recuperando la carta dei conflitti per la federazione', hr: 'otvaram kartu Federacije', tr: 'Federasyon Çakışma Haritası Yapılanıyor', cs: 'Získávání mapy konfliktů Federace', sk: 'Načítavanie mapy konfliktov Federácie', id: 'Mengunduh peta konflik Federasi', nl: 'Ophalen van de oorlogskaart van de Federatie', ar: 'جلب خريطة الصراع للاتحاد', da: 'Henter det føderale konfilkt-kort', vi: 'Đang tìm bản đồ xung đột liên bang', pl: 'Wczytywanie mapy konfliktu Federacji', he: 'מוריד את המפה Federation conflict', sv: 'Hämtar federationens konfliktkarta', ro: 'Se încarcă harta de conflict a Federaţiei', zh: '正在获取联盟冲突地图', 'zh-tw': '正在獲取聯合衝突地圖', lt: 'Kraunamas federacijos konfliktų žemėlapis', az: 'Federasiya Çaxnaşma Xəritəsi Düzəldilir', th: 'กำลังเปิดแผนที่การรบของฝ่ายสหพันธรัฐ', ko: '지도 부르는 중', fa: 'در حال اتصال به نقشه دشوار فدراسیون', el: 'Απόσπαση χάρτη σύγκρουσης της ομοσπονδίας' }, 'Contacting rebel forces headquarters': { fr: 'Contact du QG des forces rebelles', es: 'Contactando Cuartel General de las Fuerzas Rebeldes', ja: '反乱軍の本部に連絡しています…', de: 'Verbinde mit Hauptquartier der Rebellen', pt: 'Contatando a sede das forças rebeldes', ru: 'Связываюсь с главным штабом повстанцев', hu: 'Kapcsolatfelvétel a lázadó erők központjával', it: 'Contattando il quartier generale delle forze ribelli', hr: 'Uspostavljam vezu sa pobunjeničkim zapovjedništvom', tr: 'Asi Güçler Merkezine Temas Sağlanıyor', cs: 'Kontaktování velitelství rebelů', sk: 'Kontaktovanie veliteľstva rebelov', id: 'Menghubungi markas pemberontak', nl: 'Rebellenhoofdkwartier contacteren...', ar: 'الاتصال بمقر قوات المتمردين', da: 'Kontakter rebellernes hovedkvarter', vi: 'Đang liên lạc với trung tâm chỉ huy quân nổi dậy', pl: 'Nawiązywanie połączenia z dowództwem rebelii', he: 'יוצר קשר עם מטה כוחות מורדים', sv: 'Kontaktar rebellstyrkornas högkvarter', ro: 'Se contactează sediul central al forţelor rebele', zh: '正在联系反叛军总部', 'zh-tw': '正在聯繫反叛部隊總部', lt: 'Jugiamasis su sukilėlių komandos centru', az: 'Asi Güclər Mərkəzinə Təmas Bağlanır', th: 'ติดต่อฐานทัพของกองกำลังกบฏ', ko: '반란군 본부와 연결하는 중', fa: 'در حال برقراری ارتباط با ستاد مرکزی نیروی های شورشی', el: 'Επικοινωνία με το αρχηγείο των ανταρτών' }, 'Accessing galactic security database': { fr: 'Acces à la base de données de la sécurité galactique', es: 'Accediendo a base de datos de Seguridad Galáctica', ja: '銀河セキュリティデータベースにアクセスしています…', de: 'Verbinde mit der galaktischen Sicherheitsdatenbank', pt: 'Acessando à base de dados de segurança galáctica', ru: 'Подключаюсь к базе данных галактической безопасности', hu: 'Hozzáférés a galaktikus biztonsági adatbázishoz', it: 'Entrando alla base dei dati della Sicurezza Galattica', hr: 'Pristupam galaktičkoj bazi podataka', tr: 'Galaktik Gizli Veritabanına Erişim Sağlanıyor', cs: 'Připojování ke galaktické bezpečnostní databázi', sk: 'Pripájanie sa ku galaktickej bezpečnostnej databáze', id: 'Mengakses database keamanan Galactik', nl: 'Toegang verkrijgen tot de galactische veiligheidsdatabank', ar: 'الوصول إلى قاعدة بيانات الأمن المجرة', da: 'Skaffer adgang til den galaktiske sikkerheds-database', vi: 'Truy tìm bản đồ xung đột cơ sở dữ liệu ngân hà', pl: 'Wgrywanie galaktycznej bazy bezpieczeństwa', he: 'ניגש אל מאגר המידע הבטחוני גלקטי', sv: 'Skaffar åtkomst till den galaktiska säkerhetsdatabasen', ro: 'Se accesează baza de date a securităţii galactice', zh: '正在访问银河安全数据库', 'zh-tw': '正在進入銀河安全數據庫', lt: 'Accessione alla sicurezza galattica dei datibase', az: 'Galaktik Gizli Bilgilər Yerinə Giriş Olunur', th: 'กำลังเปิดเข้าฐานข้อมูลนริภัยกาแล็กติค', ko: '은하 보안 데이터베이스 액세스', fa: 'دسترسی به پایگاه اطلاعات امنیتی کهکشانی', el: 'Πρόσβαση στην γαλαξιακή βάση δεδομένων ασφαλείας' }, Connected: { fr: 'Connecté', es: 'Conectado', ja: '接続完了', de: 'Verbunden', pt: 'Conectado', ru: 'Подключён', hu: 'Csatlakozva', it: 'Connesso', hr: 'Povezano', tr: 'Bağlanıldı', cs: 'Spojeno', sk: 'Pripojený', id: 'Terkoneksi', nl: 'Verbonden', ar: 'متصل', da: 'Forbundet', vi: 'Đã kết nối', pl: 'Połączono', he: 'מתחבר', sv: 'Ansluten', ro: 'Conectat', zh: '连接', 'zh-tw': '已連接', lt: 'Connesso', az: 'Qatıldı', th: 'เชื่อมต่อเสร็จสิ้น', ko: '연결', fa: 'وصل شد', el: 'Συνδεδεμένος' }, Engage: { fr: 'Engagé dans le conflit', es: 'Preparado', ja: '配属完了', de: 'Vorbereiten', pt: 'Preparado', ru: 'Вступаю', hu: 'Támadás', it: 'Preparando', hr: 'Napadam', tr: 'Etkileşim Başlat', cs: 'Připrav se', sk: 'Priprav sa', id: 'Mengikutsertakan', nl: 'Begin de aanval', ar: 'المشاركة', vi: 'Sẵn sàng', pl: 'Kontakt', he: 'להעסיק', sv: 'Startar', ro: 'Pornire', zh: '聘请', 'zh-tw': '已連接', lt: 'Ingaggia', az: 'Ətkiləşim Başlat', th: 'ว่าจ้าง', ko: '개전', fa: 'تقابل', el: 'Εμπλέκομαι' }, 'Warping to system %s': { fr: 'Hyperespace vers le système %s', es: 'Trasladando a sistema %s', ja: '%sへ瞬間移動中…', de: 'Sprung zu Galaxie %s', pt: 'Movendo se para o Sistema %s', ru: 'Перемещаемся в систему %s', hu: 'Csavarás a %s rendszeren', it: 'Teletrasportando sul sistema %s', hr: 'Putujem u sustav %s', tr: '%s Sistemine Işınlanılıyor', cs: 'Přesun do systému %s', sk: 'Presun do systému %s', id: 'Warping ke sistem %s', nl: 'Warpen naar systeem %s', ar: 'تزييف النظام٪%s', da: 'Springer til system %s', vi: 'Đang dịch chuyển đến hệ %s', pl: 'Skok do systemu %s', he: 'משתגר למערכת %s', sv: 'Warpar in till systemet %s', ro: 'Transportare către sistemul %s', zh: '翘曲到系统 %s', 'zh-tw': '傳送到系统%s', lt: 'Teletrasportando al sistema %s', az: '%s Sistemine Işınlanır', th: 'กำลังวาร์ปไปที่ระบบ %s', ko: '%s로 이동', fa: 'پرش به سامانه %s', el: 'Μετακίνηση στο σύστημα %s' }, score: { en: 'Score', fr: 'Score', es: 'Puntuación', ja: 'スコア', de: 'Punkte', pt: 'Pontuação', ru: 'Счёт', hu: 'Pontszám', it: 'Punteggio', hr: 'Rezultat', tr: 'Puan', cs: 'Skóre', sk: 'Skóre', id: 'Skor', nl: 'Punten', ar: 'معدل', da: 'Pointstilling', vi: 'Điểm', pl: 'Punkty', he: 'ניקוד', sv: 'Poäng', ro: 'Scor', zh: '得分', 'zh-tw': '得分', lt: 'Punti', az: 'Xal', th: 'คะแนน', ko: '점수', fa: 'امیتاز', el: 'Σκορ' }, kills: { en: 'Frags', fr: 'Frags', es: 'Asesinatos', ja: '殺害数', de: 'Zerstört:', pt: 'Assassinatos', ru: 'Убийства', hu: 'Ölések száma', it: 'Uccisioni', hr: 'Uništeno', tr: 'Yoketmeler', cs: 'Zničených nepřátel', sk: 'Zničených nepriateľov', id: 'Frag', nl: 'Vernietigde schepen', ar: 'فراجز', da: 'Dræbte', vi: 'Bạn giết được', pl: 'Zestrzelenia', he: 'מספר הריגות', sv: 'Dödade', ro: 'Ucideri', zh: '击落', 'zh-tw': '擊落敵機', lt: 'Bombe', az: 'Öldürdüklərin', th: 'ระเบิด', ko: '죽인수', fa: 'کشته شدگان', el: 'Δολοφονίες' }, killer: { en: 'Your killer', fr: 'Votre tueur', es: 'Tu asesino', ja: 'あなたを殺した者', de: 'Dein Zerstörer', pt: 'Assassinado por', ru: 'Твой убийца', hu: 'Aki megölt', it: 'Il tuo killer', hr: 'Vaš ubojica', tr: 'Katilin', cs: 'Tvůj vrah', sk: 'Tvoj vrah', id: 'Pembunuh Anda', nl: 'Je doder', ar: 'قتلك', da: 'Din morder', vi: 'Người giết bạn', pl: 'Twój zabójca to', he: 'ההורג שלך', sv: 'Personen som dödade dig', ro: 'Ucigaşul tău', zh: '被他杀害', 'zh-tw': '兇手', lt: 'Tuo killer', az: 'Səni Öldürən', th: 'คุณถูกทำลายโดย', ko: '죽인사람', fa: 'قاتل شما', el: 'Ο δολοφόνος σου' }, deaths: { en: 'Deaths', fr: 'Morts', es: 'Muertes', ja: '死亡回数', de: 'Tode', pt: 'Mortes', ru: 'Смерти', hu: 'Halálozások száma', it: 'Morti', hr: 'Uništenost', tr: 'Ölümler', cs: 'Počet úmrtí', sk: 'Počet úmrtí', id: 'Kematian', nl: 'Keren gestorven:', ar: 'الوفيات', da: 'Dødsfald', vi: 'Số lần chết', pl: 'Śmierci', he: 'מוות', sv: 'Dödsfall', ro: 'Decese', zh: '死亡次数', 'zh-tw': '死亡次數', lt: 'Morti', az: 'Ölümlər', th: 'ตาย', ko: '죽은수', fa: 'تعداد دفعات مرگ', el: 'Θάνατοι' }, highscore: { en: 'Highscore', fr: 'Highscore', es: 'Puntuación más alta', ja: 'ハイスコア', de: 'Rekord', pt: 'Pontuação mais alta', ru: 'Рекорд', hu: 'Legmagasabb pontszám', it: 'Miglior Punteggio', hr: 'Največi rezultat', tr: 'Yüksek Puan', cs: 'Nejvyšší skóre', sk: 'Najvyššie skóre', id: 'Skor tinggi', nl: 'Hoogste score', ar: 'أعلى معدل', da: 'Rekord', vi: 'Điểm cao', pl: 'Twój najlepszy wynik to ', he: 'ניקוד מוביל', sv: 'Rekord', ro: 'Scor maxim', zh: '高分', 'zh-tw': '最高分', lt: 'Miglior punteggio', az: 'Yüksək Xal', th: 'คะแนนสูงสุด', ko: '최고점수', fa: 'بالاترین رکورد', el: 'Μεγαλύτερο σκορ' }, rank: { en: 'Rank', fr: 'Rang', es: 'Posición', ja: '順位', de: 'Platz', pt: 'Posição', ru: 'Ранг', hu: 'Helyezés', it: 'Grado', hr: 'Čin', tr: 'Rütbe', cs: 'Pozice', sk: 'Pozícia', id: 'Pangkat', nl: 'Rang', ar: 'مرتبة', da: 'Placering', vi: 'Xếp hạng', pl: 'Ranga', he: 'דרגה', sv: 'Rank', ro: 'Poziţie', zh: '排名', 'zh-tw': '排名', lt: 'Rango dei Team', az: 'Rütbə', th: 'อันดับ', ko: '순위', fa: 'رتبه', el: 'Θέση' }, "Congratulations, you're the last survivor!": { fr: 'Félicitations, vous êtes le dernier survivant !', es: '¡Felicidades, eres el último superviviente!', ja: 'おめでとう、あなたが最後の生存者です！', de: 'Glückwunsch, du bist der letzte Überlebende!', pt: 'Parabéns, você é o último Sobrevivente!', ru: 'Поздравляю, ты последний выживший!', hu: 'Gratulálunk! Te vagy az utolsó túlélő!', it: "Congratulazioni, sei l'ultimo sopravvissuto!", hr: 'Čestitamo, vi ste zadnji preživjeli!', tr: 'Tebrikler, Hayatta Kalan Son Kişisin!', cs: 'Gratulujeme, jsi poslední hráč!', sk: 'Gratulujeme, si posledný hráč!', id: 'Selamat, anda adalah orang selamat yang terakhir!', nl: 'Gefeliciteerd, je bent de laatste overlevende!', ar: 'تهانينا، أنت آخر الناجين!', da: 'Tillykke, du er den sidste overlever!', vi: 'Xin chúc mừng, bạn là người sống sót cuối cùng', pl: 'Gratulacje, jesteś ostatnim ocalałym!', he: 'כל הכבוד, אתה השורד האחרון!', sv: 'Grattis, du är den sista överlevaren!', ro: 'Felicitări, eşti ultimul supravieţuitor!', zh: '恭喜！你是最终的幸存者！', 'zh-tw': '恭喜，你是最後的倖存者！', lt: "Congratulazioni, sei l'ultimo sopravvissuto!", az: 'Təbriklər Həyatda Qalan Son Adamsan', th: 'ยินดีด้วย คุณคือผู้รอดชีวิตคนสุดท้าย!', ko: '축하합니다. 끝까지 살아남으셨습니다!', fa: 'تبریک ، شما آخرین بازمانده هستید !', el: 'Συγχαρητήρια, είστε ο τελευταίος επιζών!' }, 'Ship Upgrade': { fr: 'Vaisseaux supérieurs débloqués', es: 'Actualizar Nave', ja: '宇宙船のアップグレード', de: 'Raumschiffupgrade ', pt: 'Naves Desbloqueadas', ru: 'Улучшение корабля', hu: 'Űrhajó fejlesztés', it: 'Potenziamento nave', hr: 'Nadogradnja broda', tr: 'Gemi Geliştirmeleri', cs: 'Vylepšení lodi', sk: 'Vylepšenie lode', id: 'Upgrade kapal', nl: 'Schip opwaardering', ar: 'ترقية السفينة', da: 'Skibsforbedring', vi: 'Nâng cấp tàu', pl: 'Ulepszenie statku', he: 'הספינה שודרגה', sv: 'Skeppsuppgradering tillgänglig', ro: 'Navă upgradată', zh: '船舰升级', 'zh-tw': '船艦升级', lt: 'Aggiorna Nave', az: 'Robot Yüksəltmələri', th: 'อัพเกรดยาน', ko: '우주선 업그레이드', fa: 'ارتقا کشتی', el: 'Διαστημόπλοιο αναβαθμίστηκε' }, 'You killed %s!': { fr: 'Vous avez détruit %s !', es: 'Has matado a %s', ja: '%s を殺した！', de: 'Du hast %s zerstört!', pt: 'Você matou %s!', ru: 'Ты уничтожил %s!', hu: 'Megölted %s-t!', it: 'Hai ucciso %s!', hr: 'Uništio si %s!', tr: '%s Adlı Kişiyi Yokettin!', cs: 'Zničil jsi %s!', sk: 'Zabil si %s!', id: 'Anda membunuh %s!', nl: 'Je hebt %s gedood!', ar: 'لقد قتلت: %s!', da: 'Du dræbte%s!', vi: 'Bạn đã giết %s!', pl: 'Zestrzeliłeś %s!', he: 'נהרגת %s!', sv: 'Du dödade %s!', ro: 'L-ai ucis pe %s!', zh: '你干掉了 %s！', 'zh-tw': '你殺了%s！', lt: 'Hai ucciso %s!', az: '%s Adlı Oyunçunu Öldürdün', th: 'คุณทำลาย %s!', ko: '%s을/를 죽였다!', fa: 'شما %s رو کشتید', el: 'Σκότωσες %s!' }, '%s killed you!': { fr: '%s vous a détruit !', es: '%s te ha matado', ja: '%s に殺された！', de: '%s hat dich zerstörtt!', pt: '%s matou você!', ru: '%s уничтожил тебя!', hu: '%s megölt!', it: '%s ti ha ucciso!', hr: '%s te ubio!', tr: '%s Adlı Kişi Seni Yoketti!', cs: '%s tě zničil!', sk: '%s ťa zabil!', id: '%s membunuh anda!', nl: '%s heeft jou gedood!', ar: '%s قامة بقتلك!', da: '%s dræbte dig!', vi: '%s đã giết bạn!', pl: 'Zostałeś zestrzelony przez %s!', he: '%s הרג אותך', sv: '%s dödade dig!', ro: '%s te-a ucis!', zh: '%s 干掉了你！', 'zh-tw': '%s殺了你！', lt: '%s ti ha ucciso!', az: '%s Adlı Oyunçu Səni Öldürdü', th: '%s ได้ทำลายคุณ!', ko: '%s이/가 죽였다!', fa: 'پلیر %s شما رو کشت', el: '%s σε σκότωσαν!' }, 'Revenge kill bonus +%s points': { fr: 'Bonus de revanche +%s points', es: 'Bono de venganza +%s puntos', ja: '復讐ボーナス+%sポイント', de: 'Rachebonus +%s Punkte!', pt: 'Bônus por vingança de morte +%s pontos', ru: 'Бонус за месть +%s очков', hu: 'Bosszú bónusz +%s pont', it: 'Bonus vendetta! +%s punti', hr: 'Osveta, bonus +%s bodova', tr: 'İntikam Öldürmesi +%s Daha Fazla Puan Aldın', cs: 'Bonus za odplatu: +%s bodů', sk: 'Bonus za odplatu +%s bodov', id: 'Balas dendam poin membunuh bonus +%s', nl: 'Wraak dodings bonus +%s punten', ar: 'القتل الانتقامي مكافأة +٪ ق نقط', da: 'Hævndrabsbonus +%s point!', vi: 'Thừởng trả thù +%s điểm', pl: 'Bonus za zemstę +%s punktów!', he: 'בונוס נקמה +%s נקודות', sv: 'Hämndbonus +%s poäng', ro: 'Te-ai răzbunat pe ucigaşul tău +%s puncte!', zh: '复仇之杀 +%s 点', 'zh-tw': '復仇獎勵+%s分', lt: 'Bonus rivendica della kill +%s punti', az: 'Intiqam Öldürməsi +%s Daha Artıq Xal Aldın', th: 'คะแนนการเอาคืน +%s คะแนน', ko: '복수 보너스 +%s', fa: 'انتقام گرفتن %s امتیاز بیشتر دارد', el: 'Μπόνους από εκδικητικούς θανάτους +%s πόντους' }, 'game starts in': { fr: 'le jeu démarre dans', es: 'El juego empieza en', ja: 'ゲーム開始まで', de: 'Runde beginnt in', pt: 'O jogo começa em', ru: 'Игра начнётся через', hu: 'a játék kezdődik', it: 'La partita comincerà in', hr: 'Igra započinje za', tr: 'Oyun Şu kadar Sonra Başlayacak', cs: 'Hra začíná za', sk: 'Hra začína za', id: 'Permainan mulai dalam', nl: 'Spel begint over', ar: 'اللعبة تبدأ في', da: 'Spillet begynder om', vi: 'Trò chơi bắt đầu trong', pl: 'Gra zacznie się za', he: 'המשחק מתחיל ב', sv: 'spelet startar om', ro: 'Jocul începe în', zh: '游戏开始了', 'zh-tw': '遊戲即將開始於', lt: 'Gioco inizia in', az: 'Oyun Bu Qədər Vaxttan Sonra Başlayacaq', th: 'เกมจะเริ่มในอีก', ko: '게임시작', fa: 'شروع بازی در', el: 'Παιχνίδι ξεκινάει σε' }, Videos: { fr: 'Vidéos', es: 'Vídeos', ja: 'ビデオ', de: 'Videos', pt: 'Vídeos', ru: 'Видео', hu: 'Videók', it: 'Video', hr: 'Video', tr: 'Videolar', cs: 'Videa', sk: 'Videá', id: 'Vidio', nl: 'Filmpjes', ar: 'أشرطة فيديو', da: 'Videoer', vi: 'Video', pl: 'Filmy', he: 'סרטונים', sv: 'Videor', ro: 'Videoclipuri', zh: '视频', 'zh-tw': '影片', lt: 'Video', az: 'Videolar', th: 'วีดีโอ', ko: '비디오', fa: 'ویدئو ها', el: 'Βίντεο' }, 'Also on mobile': { fr: 'Aussi sur mobile', es: 'También disponible en móvil', ja: 'モバイルで利用可能', de: 'Auch am Handy', pt: 'Dísponivel em dispositivos móveis', ru: 'Также на телефоне', hu: 'Elérhető mobilon is', it: 'Disponibile su dispositivi mobili', hr: 'Također na mobitelu', tr: 'Mobildede', cs: 'Také na mobilu', sk: 'Taktiež na mobile', id: 'Juga di mobile', nl: 'Ook op de gsm', ar: 'أيضا على الهاتف المحمول', da: 'Også til mobiltelefon', vi: 'Có ở điện thoại', pl: 'Także w wersji mobilnej', he: 'גם בנייד', sv: 'Också på mobilen', ro: 'De asemenea pe mobil', zh: '也有移动版', 'zh-tw': '也有手機版', lt: 'Anche in mobile', az: 'Telefondada', th: 'และบนมือถือ', ko: '모바일에서도', fa: 'همچنین در موبایل', el: 'Επίσης στο κινητό' }, 'Official subreddit': { fr: 'Subreddit officiel', es: 'Subreddit oficial', ja: '公式サブレディットページ', de: 'Offizieller Subreddit', pt: 'Subreddit official', ru: 'Официальный subreddit', hu: 'Hivatalos subreddit', it: 'Subreddit ufficiale', hr: 'Službena stranica', tr: 'Resmi Reddit Sayfası', cs: 'Oficiální subreddit', sk: 'Oficiálny subreddit', id: 'Subreddit resmi', nl: 'Officiële subreddit', ar: 'سوبريديت الرسمي', da: 'Officielle subreddit', vi: 'Subreddit chính thức', pl: 'Oficjalny SubReddit', he: 'subreddit רשמי', sv: 'Den officiella subredditen', ro: 'Subreddit-ul oficial', zh: '官方Reddit板块', 'zh-tw': '官方Reddit', lt: 'Subreddit officiale', az: 'Rəsmi Reddit Səyfəsi', th: 'เว็ปไซต์ subreddit ทางการ', ko: '공식 subreddit', fa: 'سابردیت رسمی', el: 'Επίσημο subreddit' }, 'Follow @starblast_io': { fr: 'Suivre @starblast_io', es: 'Sigue a @starblast_io', ja: '@starblast_ioをフォロー', de: '@starblast_io folgen', pt: 'Siga @starblast_io', ru: 'Подписаться на @startblast_io', hu: 'Kövess minket @starblast_io-n', it: 'Segui @starblast_io', hr: 'Prati @starblast_io', tr: 'Takip et @starblast_io', cs: 'Sledujte nás @starblast_io', sk: 'Sledujte nás @starblast_io', id: 'Ikuti @starblast_io', nl: 'Volg @starblast_io', ar: 'تابع: starblast_io@', da: 'Følg @starblast.io', vi: 'Theo @starblast.io', pl: 'Oberwuj @starblast_io', he: 'עקבו @starblast_io', sv: 'Följ @starblast.io', ro: 'Urmăreşte @starblast.io', zh: '关注 @starblast_io', 'zh-tw': '關注@starblast_io', lt: 'Segui @starblast_io', az: 'Takip Et @starblast_io', th: 'ติดตามที่ @starblast_io', ko: '@starblast_io 팔로우', fa: '@starblast_io دنبال کنید', el: 'Ακολούθησε @starblast_io' }, TALK: { fr: 'BLABLA', es: 'HABLAR', ja: 'しゃべる', de: 'Chat', pt: 'CHAT', ru: 'ЧАТ', hu: 'BESZÉLJ', it: 'CHAT', hr: 'Razgovor', tr: 'Sohbet', cs: 'CHAT', sk: 'CHAT', id: 'Bicara', nl: 'SPREEK', ar: 'تكلم', da: 'Snak', vi: 'Nói chuyện', pl: 'KOMUNIKACJA', he: 'דיבור', sv: 'PRATA', ro: 'Vorbeşte', zh: '讨论', 'zh-tw': '討論', lt: 'PARLA', az: 'Danış', th: 'พูดคุย', ko: '대화', fa: 'صحبت کردن', el: 'ΣΥΝΟΜΙΛΙΑ' }, Hello: { fr: 'Salut', es: 'Hola', ja: 'こんにちは', de: 'Hallo', pt: 'Olá', ru: 'Привет', hu: 'Helló', it: 'Ciao', hr: 'Bok!', tr: 'Merhaba', cs: 'Ahoj', sk: 'Ahoj', id: 'Halo', nl: 'Hallo', ar: 'مرحبا', da: 'Hej', vi: 'Xin chào', pl: 'Witaj', he: 'שלום', sv: 'Hej', ro: 'Bună', zh: '你好', 'zh-tw': '你好', lt: 'Ciao', az: 'Salam', th: 'สวัสดี', ko: '안녕', fa: 'سلام', el: 'Γειά σου' }, Team: { fr: 'Team', es: 'Equipo', ja: 'チーム', de: 'Team', pt: 'Time', ru: 'Команда', hu: 'Csapat', it: 'Team', hr: 'Tim', tr: 'Takım', cs: 'Tým', sk: 'Tým', id: 'Tim', nl: 'Team', ar: 'فريق', da: 'Hold', vi: 'Đồng đội', pl: 'Drużyna', he: 'קבוצה', sv: 'Lag', ro: 'Echipă', zh: '团队', 'zh-tw': '結隊', lt: 'Squadra', az: 'Qrup', th: 'ทีม', ko: '팀', fa: 'تیم', el: 'Ομάδα' }, Thanks: { fr: 'Merci', es: 'Gracias', ja: 'ありがとう', de: 'Danke', pt: 'Valeu', ru: 'Спасибо', hu: 'Köszönöm', it: 'Grazie', hr: 'Hvala', tr: 'Teşekkürler', cs: 'Díky', sk: 'Ďakujem', id: 'Terima kasih', nl: 'Bedankt', ar: 'شكرا', da: 'Tak', vi: 'Cảm ơn', pl: 'Dzięki', he: 'תודה', sv: 'Tack!', ro: 'Mulţumesc', zh: '谢谢', 'zh-tw': '謝謝', lt: 'Grazie', az: 'Sağol', th: 'ขอบใจมาก', ko: 'ㄳㄳ', fa: 'ممنون', el: 'Ευχαριστώ' }, Yes: { fr: 'Oui', es: 'Sí', ja: 'はい', de: 'Ja', pt: 'Sim', ru: 'Да', hu: 'Igen', it: 'Si', hr: 'Da', tr: 'Evet', cs: 'Ano', sk: 'Áno', id: 'Iya', nl: 'Ja', ar: 'نعم', da: 'Ja', vi: 'Vâng', pl: 'Tak', he: 'כן', sv: 'Ja', ro: 'Da', zh: '是', 'zh-tw': '是', lt: 'Si', az: 'Hə', th: 'ใช่', ko: 'ㅇㅇ', fa: 'آره', el: 'Ναι' }, No: { fr: 'Non', es: 'No', ja: 'いいえ', de: 'Nein', pt: 'Não', ru: 'Нет', hu: 'Nem', it: 'No', hr: 'Ne', tr: 'Hayır', cs: 'Ne', sk: 'Nie', id: 'Tidak', nl: 'Nee', ar: 'لا', da: 'Nej', vi: 'Không', pl: 'Nie', he: 'לא', sv: 'Nej', ro: 'Nu', zh: '否', 'zh-tw': '不', lt: 'No', az: 'Yox', th: 'ไม่', ko: 'ㄴㄴ', fa: 'نه', el: 'Όχι' }, Sorry: { fr: 'Désolé', es: 'Perdón', ja: 'ごめんなさい', de: 'Sorry', pt: 'Foi mal', ru: 'Прости', hu: 'Bocsánat', it: 'Scusa', hr: 'Žao mi je', tr: 'Üzgünüm', cs: 'Promiň', sk: 'Prepáč', id: 'Maaf', nl: 'Sorry', ar: 'أسف', da: 'Undskyld', vi: 'Xin lỗi', pl: 'Wybacz', he: 'סליחה', sv: 'Förlåt', ro: 'Scuze', zh: '抱歉', 'zh-tw': '對不起', lt: 'Scusa', az: 'Bağışla', th: 'ขอโทษที', ko: '미안', fa: 'ببخشید', el: 'Συγγνώμη' }, Mine: { fr: 'Miner', es: 'Minar', ja: '採掘', de: 'Abbauen', pt: 'Minerar', ru: 'Добывать', hu: 'Bányászat', it: 'Scava', hr: 'Rudari', tr: 'Maden', cs: 'Těžit', sk: 'Ťažiť', id: 'Tambang', nl: 'Mijn', ar: 'انه لي', vi: 'Của tôi', pl: 'Wydobywaj', he: 'תחצוב', sv: 'Gräv', ro: 'Minează', zh: '矿', 'zh-tw': '礦', lt: 'Scava', az: 'Mədən', th: 'ขุดเหมือง', ko: '보석', fa: 'مال منه - معدن کاوی', el: 'Ορυχείο' }, Attack: { fr: 'Attaquer', es: 'Atacar', ja: '攻撃', de: 'Angreifen', pt: 'Atacar', ru: 'Атака', hu: 'Támadás', it: 'Attacca', hr: 'Napadni', tr: 'Saldır', cs: 'Útok', sk: 'Útok', id: 'Serang', nl: 'Val aan', ar: 'هجوم', da: 'Angrib', vi: 'Tấn công', pl: 'Atak', he: 'תקיפה', sv: 'Anfall', ro: 'Atacă', zh: '攻击', 'zh-tw': '攻擊', lt: 'Attacca', az: 'Hücüm Et', th: 'โจมตี', ko: '공격', fa: 'حمله', el: 'Επίθεση' }, Help: { fr: 'Help', es: 'Ayuda', ja: '助けて', de: 'Hilfe!', pt: 'Ajuda', ru: 'Помогите', hu: 'Segítség', it: 'Aiuto', hr: 'Upomoć', tr: 'Yardım et', cs: 'Pomoc', sk: 'Pomoc', id: 'Tolong', nl: 'Help', ar: 'مساعده', da: 'Hjælp', vi: 'Cứu', pl: 'Pomocy', he: 'עזרה', sv: 'Hjälp', ro: 'Ajutor', zh: '救我', 'zh-tw': '救我', lt: 'Aiuto', az: 'Kömək Et', th: 'ช่วยด้วย', ko: '도와죠', fa: 'کمک', el: 'Βοήθεια' }, Kill: { fr: 'Tuer', es: 'Matar', ja: '殺せ', de: 'Töten!', pt: 'Matar', ru: 'Убить', hu: 'Ölés', it: 'Uccidi', hr: 'Uništi', tr: 'Öldür', cs: 'Zabít', sk: 'Zabiť', id: 'Bunuh', nl: 'Dood', ar: 'قتل', da: 'Dræb', vi: 'Giết', pl: 'zniszcz', he: 'הרוג', sv: 'Döda', ro: 'Omoară', zh: '干掉', 'zh-tw': '擊殺', lt: 'Uccidi', az: 'Öldürdüklərin', th: 'กำจัด', ko: '죽여', fa: 'بکش', el: 'Σκότωσε' }, Leader: { fr: 'Leader', es: 'Líder', ja: 'リーダー', de: 'Erster', pt: 'Líder', ru: 'Лидер', hu: 'Vezető', it: 'Capitano', hr: 'Vođa', tr: 'Lider', cs: 'Vůdce', sk: 'Vedúci', id: 'Pemimpin', nl: 'Leider', ar: 'زعيم', da: 'Leder', vi: 'Người đúng đầu', pl: 'Lider', he: 'מנהיג', sv: 'Ledare', ro: 'Lider', zh: '领导', 'zh-tw': '領導', lt: 'Capo', az: 'Lider', th: 'หัวหน้า', ko: '대장', fa: 'پرچم دار', el: 'Αρχηγός' }, Hmm: { fr: 'Hmm', es: 'Hmm', ja: 'ん？', de: 'Hmm?', pt: 'Hmmm', ru: 'Хмм', hu: 'Hmm', it: 'Hmm', hr: 'hmm...', tr: 'Hmm', cs: 'Hmm', sk: 'Hmm', id: 'Sih', nl: 'Hmm', ar: 'هممم', da: 'Hmm', vi: 'Hmm', pl: 'Hmm', he: 'הממ', sv: 'Hmm', ro: 'Hmm', zh: '嗯', 'zh-tw': '呃', lt: 'Hmm', az: 'Hmm', th: 'หืม', ko: '흠', fa: 'اهمم', el: 'Χμμ' }, 'Good Game': { fr: 'Bien joué', es: 'Bien Jugado', ja: 'GG', de: 'Gutes Spiel', pt: 'Bom Jogo', ru: 'Хорошая Игра', hu: 'Jó játék', it: 'Bel Gioco', hr: 'Dobra igra', tr: 'İyi Oyunlar', cs: 'Dobrá hra', sk: 'Dobrá hra', id: 'Permainan bagus', nl: 'Goed Gespeeld', ar: 'لعبة جيدة', da: 'Godt spil', vi: 'GG', pl: 'GG', he: 'משחק טוב', sv: 'Bra spelat', ro: 'Bine jucat', zh: '游戏很棒', 'zh-tw': '玩的不錯', lt: 'Bella Giocata', az: 'Yaxş Oyun', th: 'เล่นได้ดี', ko: 'GG', fa: 'آفرین خوب بازی میکنی', el: 'Καλό Παιχνίδι' }, Follow: { fr: 'Suivre', es: 'Sígueme', ja: 'ついて来て', de: 'Folgen', pt: 'Siga', ru: 'Следуй', hu: 'Kövess', it: 'Seguimi', hr: 'Prati me', tr: 'Takip et', cs: 'Následuj', sk: 'Nasleduj', id: 'Ikuti aku', nl: 'Volg', ar: 'إتبع', vi: 'Đi theo', pl: 'podążaj', he: 'עקוב אחרי', sv: 'Följ', ro: 'Urmează', zh: '跟我来', 'zh-tw': '跟著我', lt: 'Segui ', az: 'Mənimə gəl', th: 'ติดตาม', ko: '따라와', fa: 'دنبال کن', el: 'Ακολούθησε' }, You: { fr: 'Toi', es: 'Tú', ja: '君', de: 'Du', pt: 'Você', ru: 'Ты', hu: 'Te', it: 'Tu', hr: 'Ti', tr: 'Sen', cs: 'Ty', sk: 'Ty', id: 'Anda', nl: 'Jij', ar: 'أنت', vi: 'Bạn ', pl: 'Ty', he: 'אתה', sv: 'Du', ro: 'Tu', zh: '你', 'zh-tw': '你', lt: 'Tu', az: 'Sən', th: 'เธอ', ko: '너', fa: 'تو رو', el: 'Εσύ' }, Me: { fr: 'Moi', es: 'Yo', ja: '私', de: 'Ich', pt: 'Eu', ru: 'Меня', hu: 'Én', it: 'Io', hr: 'Ja', tr: 'Ben', cs: 'Mě', sk: 'Ma', id: 'Saya', nl: 'Ik', ar: 'أنا', vi: 'Tôi', pl: 'Ja', he: 'אני', sv: 'Jag', ro: 'Eu', zh: '我', 'zh-tw': '我', lt: 'Io', az: 'Mən', th: 'ฉัน', ko: '나', fa: 'من', el: 'Εγώ' }, Defend: { fr: 'Défendre', es: 'Defender', ja: '防御', de: 'Verteidigen', pt: 'Defender', ru: 'Защита', hu: 'Védelem', it: 'Difendi', hr: 'Brani', tr: 'Savun', cs: 'Chraň', sk: 'Bráň', id: 'Jaga', nl: 'Verdedig', ar: 'دفاع', vi: 'Chống lại', pl: 'Obraniaj', he: 'להגן', sv: 'Försvara', ro: 'Apără', zh: '保护', 'zh-tw': '保護', lt: 'Difendi', az: 'Qoru', th: 'ป้องกัน', ko: '방어', fa: 'دفاع کن', el: 'Υπερασπίσου' }, Wait: { fr: 'Attendre', es: 'Esperar', ja: '待って', de: 'Warten', pt: 'Esperar', ru: 'Жди', hu: 'Várj', it: 'Aspetta', hr: 'Čekaj', tr: 'Bekle', cs: 'Počkej', sk: 'Počkaj', id: 'Tunggu', nl: 'Wacht', ar: 'أنتضر', vi: 'Đợi', pl: 'Czekaj', he: 'חכה', sv: 'Vänta', ro: 'Aşteaptă', zh: '等待', 'zh-tw': '等待', lt: 'Aspetta ', az: 'Gözlə', th: 'รอก่อน', ko: '기다려', fa: 'صبر کن', el: 'Περίμενε' }, Base: { fr: 'Station', es: 'Estación', ja: '基地', de: 'Basis', pt: 'Base', ru: 'База', hu: 'Bázis', it: 'Base', hr: 'Baza', tr: 'Üs', cs: 'Základna', sk: 'Základňa', id: 'Markas', nl: 'Basis', ar: 'القاعدة', vi: 'Căn cứ', pl: 'Baza', he: 'בסיס', sv: 'Bas', ro: 'Bază', zh: '基地', 'zh-tw': '基地', lt: 'Base', az: 'Baza', th: 'ฐานทัพ', ko: '기지', fa: 'پایگاه', el: 'Βάση' }, 'Follow me': { fr: 'Suis-moi', es: 'Sígueme', ja: 'ついて来て', de: 'Folge mir', pt: 'Me siga', ru: 'Следуй за мной', hu: 'Kövess', it: 'Seguimi', hr: 'Slijedi me', tr: 'Takip et', cs: 'Za mnou', sk: 'Za mnou', id: 'Ikuti saya', nl: 'Volg me', ar: 'اتبعني', da: 'Følg efter mig', vi: 'Theo tôi', pl: 'Leć za mną', he: 'עקוב אחרי', sv: 'Följ mig', ro: 'Urmează-mă', zh: '跟着我', 'zh-tw': '跟著我', lt: 'Seguimi', az: 'Mənimle Gəl', th: 'ตามฉันมา', ko: '날 따라와', fa: 'دنبالم بیا', el: 'Ακολούθησε εμένα' }, Bye: { fr: 'A+', es: 'Adiós', ja: 'じゃあね', de: 'Tschüss', pt: 'Tchau', ru: 'Пока', hu: 'Viszlát', it: 'Ci vediamo', hr: 'Zbogom', tr: 'Güle Güle', cs: 'Zbohem', sk: 'Zbohom', id: 'Sampai Jumpa', nl: 'Tot ziens', ar: 'إلى اللقاء', da: 'Farvel', vi: 'Tạm biệt', pl: 'Żegnaj', he: 'להתראות', sv: 'Hejdå', ro: 'Ceau', zh: '拜拜', 'zh-tw': '再見', lt: 'Arrivederci', az: 'Görüşərik', th: 'บาย', ko: 'ㅂㅂ', fa: 'بای', el: 'Αντίο' }, 'No Prob': { fr: 'Pas de pb', es: 'Sin Problema', ja: '大丈夫', de: 'Kein Problem', pt: 'De Boa', ru: 'Нет проблем', hu: 'Semmi gond', it: 'Nessun Prob.', hr: 'Nema veze ;)', tr: 'Sorun Değil', cs: 'Žádný problém', sk: 'Žiadny problém', id: 'Tidak apa apa', nl: 'Geen probleem', ar: 'لا مشكلة', da: 'Intet problem', vi: 'Không sao', pl: 'Nie ma problemu', he: 'אין בעיה', sv: 'Inga problem', ro: 'Nici o problemă', zh: '没问题', 'zh-tw': '沒問題', lt: 'Nessun problema', az: 'Zərər Yoxdu', th: 'ไม่มีปัญหา', ko: '괜찮아', fa: 'مشکلی نیست', el: 'Κανένα πρόβλημα' }, 'Warning: Repulsive gravity field detected': { fr: 'Danger : Champ de gravitation répulsif détecté', es: 'Peligro:campo repulsivo gravitatorio detectado', ja: '警告：反重力場を検知', de: 'Achtung: Abstoßendes Gravitationsfeld entdeckt', pt: 'Aviso: Campo de Gravidade Repulsivo Detectado', ru: 'Внимание: Обнаружено отталкивающее поле', hu: 'Veszély:Taszító gravitációs mező észlelve', it: 'Attenzione: Rilevati repulsivi', hr: 'Upozorenje: Repulsivno gravitacijsko polje otkriveno', tr: 'Uyarı: İtici Yer Çekimi Alanı Tespit Edildi', cs: 'Pozor: Detekováno anti-gravitační pole', sk: 'Pozor: Zistilo sa odpudzujúce gravitačné pole', id: 'Peringatan: Medan gravitasi yang berulang terdeteksi', nl: 'Waarschuwing: Uitdijend zwaartekrachtveld gedetecteerd', ar: 'تحذير: تم الكشف عن حقل الجاذبية الثائرة', pl: 'Uwaga: Wykryto odpychające pole antygrawitcyjne', sv: 'Varning: Repulsivt gravitationsfält upptäckt', ro: 'Atentie: Camp repulsiv de gravitatie detectat', zh: '警告：侦测到反重力领域', 'zh-tw': '警告:已偵測到(反)重力波', lt: 'Attenzione: Rilevato campo di gravità repulsivo', th: 'คำเตือน:ตรวจพบสนามแรงโน้มถ่วงที่ผิดปกติ', ko: '주의: 반 중력장 활성화', fa: 'هشدار : میدان گرانشی دفعی شناسایی شد', el: 'Προσοχή: Απωθητικό πεδίο βαρύτητας εντοπίστηκε' }, 'Exit game?': { fr: 'Quitter la partie ?', es: '¿Salir del juego?', ja: 'ゲームを終了しますか？', de: 'Spiel verlassen?', pt: 'Sair do Jogo?', ru: 'Покинуть игру?', hu: 'Kilépés a játékból?', it: 'Uscire dal gioco?', hr: 'Izaći iz igre?', tr: 'Oyundan Çık?', cs: 'Opustit hru?', sk: 'Opustiť hru?', id: 'Keluar Permainan?', nl: 'Verlaat spel?', ar: 'الخروج من اللعبة؟', da: 'Gå ud af spillet?', vi: 'Thoát trò chơi?', pl: 'Opuścić grę?', he: 'לצאת מהמשחק?', sv: 'Gå ur spel?', ro: 'Părăsire joc?', zh: '退出游戏？', 'zh-tw': '真的要退出遊戲嗎?', lt: 'Uscire dal gioco?', az: 'Oyundan Çıx?', th: 'จะออกจากเกม?', ko: '게임에서 나가기', fa: 'خروج از بازی؟', el: 'Έξοδος από το παιχνίδι;' }, Changelog: { fr: 'ChangeLog', es: 'Lista de cambios', ja: '変更履歴', de: 'Änderungen', pt: 'Registro de mudanças', ru: 'Список изменений', hu: 'Fejlesztések naplója', it: 'Lista dei cambiamenti', hr: 'Lista Promjena', tr: 'Güncelleme Günlüğü', cs: 'Novinky', sk: 'Novinky', id: 'Log pengubahan', nl: 'Changelog', ar: 'التغييرات', da: 'Ændringer', vi: 'Changelog', pl: 'Zmiany', he: 'שינויים שנעשו', sv: 'Ändringslogg', ro: 'Schimbare jurnal', zh: '更新日志', 'zh-tw': '更改日誌', lt: 'Cronologia', az: 'Dəyişim Günlüyü', th: 'การเปลี่ยนแปลง', ko: '변경내역', fa: 'لوگ تغییر', el: 'Αρχείο αλλαγών' }, 'Elite Commander Pass': { fr: 'Elite Commander Pass', es: 'Pase de Comandante de Élite', ja: 'エリート司令官証 (ECP)', de: 'Elite-Kapitänsausweis', pt: 'Passe Comandante de Elite', ru: 'Пропуск Капитана', hu: 'Elit Kapitány Jelszó', it: 'Pass del Commander Elite', hr: 'Propusnica za elitne zapovjednike', tr: 'Seçkin Komutan İzni', cs: 'Průkaz Elitního Komandéra', sk: 'Preukaz elitného komandéra', id: 'Elite Komandan Lulus', nl: 'Elite Commandant Pas', ar: 'القائد النخبة يمر', da: 'Elitekommandørpas', vi: 'Vượt chỉ huy ưu tú', pl: 'ECP - Przepustka Elitarnego Dowódcy', he: 'סיסמת מפקד עליון', sv: 'Elitkommendörspass', ro: 'Acces comandant de elită', zh: '精英指挥官通行证', 'zh-tw': '菁英指揮官通行證', lt: 'Pass del Commander Elite', az: 'Seçkin Kapitan Icazəsi', th: 'Elite Commander Pass', ko: '엘리트 사령관 패스', fa: 'حساب فرمانده نخبه', el: 'Elite Commander Pass' }, 'Greetings, Elite Commander': { fr: 'Salutations, Elite Commander !', es: 'Bienvenido, Comandante de Élite', ja: 'こんにちは、エリート司令官', de: 'Willkommen, Elite-Kapitän!', pt: 'Bem-vindo, Comandante de Elite', ru: 'Приветствую, Капитан!', hu: 'Üdvözöljük, Elit Kapitány!', it: 'Salve, Commander Elite', hr: 'Pozdrav, Elitni zapovjedniče', tr: 'Selamlar Seçkin Komutan', cs: 'Zdravím, Elitní Komandére', sk: 'Zdravím, elitného komandéra', id: 'Salam, Elite komandan', nl: 'Gegroet, Elite Commandant', ar: 'التحيات، قائد النخبة', vi: 'Chúc mừng, chỉ huy ưu tú', pl: 'Witaj, Elitarny Dowódco', he: 'שלומות, מפקד עליון', sv: 'Välkommen, Elitkommendör!', ro: 'Bine ai venit, Comandant de elită', zh: '你好，精英指挥官', 'zh-tw': '您好，精英指揮官', lt: 'Saluti, Commander Elite', az: 'Salamlar Seçkin Kapitan', th: 'สวัสดี ท่านผบ.ทหารสูงสุด', ko: '어서오십시오. 엘리트 사령관', fa: 'تبریک ، فرمانده نخبه', el: 'Χαιρετισμούς Elite Commander' }, 'Thank you for your purchase! Your ECP is valid, please keep it safe.': { fr: 'Merci pour votre achat ! Votre Clé ECP est valide. Conservez la précieusement.', es: '¡Gracias por tu compra! Tu Pase de Comandante de Élite es válido. Por favor, mantenlo a salvo.', ja: 'ご購入いただきありがとうございます！ECPは有効ですので、安全に保管してください。', de: 'Danke für den Kauf! Dein Elite-Ausweis ist gültig, bitte pass darauf auf.', pt: 'Obrigado pela sua compra! Seu ECP é válido, por favor, mantenha-o seguro.', ru: 'Спасибо за покупку! Ваш уникальный код идентифицирован, пожалуйста, не потеряйте его.', hu: 'Köszönjük a vásárlást! Az EK jelszavad érvényes, kérjük őrizze meg!', it: "Grazie per l'acquisto! Il tuo ECP è valido, per favore tienilo al sicuro.", hr: 'Hvala vam na kupnji! Vaš PEZ je valjan. Molimo čuvajte ga', tr: 'SKİ Satın Aldığın İçin Teşekkürler İzin Geçerli Lütfen Güvende Tutun', cs: 'Děkujeme za váš nákup! Váš PEK je nyní platný, prosíme, uchovávejte si jej v bezpečí.', sk: 'Ďakujeme za Váš nákup! Váš PEK je teraz platný, prosíme udržujte ho v bezpečí.', id: 'Terima kasih atas pembelian Anda! EKL Anda valid, silakan tetap aman', nl: 'Bedankt voor je aankoop! Je ECP is ok, bewaar het alsjeblieft veilig.', ar: 'شكرا جزيلا لشراك! القائد النخبة يمر الخاص بك صالح، رجاء الاعتناء به.', vi: 'Cảm ơn vì sự hào phòng của bạn! Đây là mã ECP của bạn, làm ơn là giữ nó an toàn', pl: 'Dziękujemy za twój zakup! Twój ECP jest ważny, zachowaj go w bezpiecznym miejscu', he: 'תודה לך על הרכישה! הסיסמת מפקד עליון שלך זמינה, בבקשה תשמור עליה.', sv: 'Tack för ditt köp! Ditt ECP är giltigt, håll det säkert.', ro: 'Îţi mulţumim pentru achiziţie! Accesul tău de comandant de elită este valid. Te rugăm ţine-l în siguranţă.', zh: '感谢您支持我们！您的 ECP 有效，请不要泄露它。', 'zh-tw': '感謝您的購買！您的ECP有效，請小心保管。', lt: 'Grazie per il tuo acquisto! Il tuo ECP è valido, perfavore tienilo salvo.', az: 'SKI Aldığınız Üçün Təşəkkürlər. Icazəniz Qəbul Olundu Xaiş Olunur Qoruyun', th: 'ขอบคุณสำหรับการซื้อ! ECP ของคุณถูกต้อง กรุณาเก็บเอาไว้ให้ดี', ko: '구입 주셔서 감사합니다! ECP가 유효합니다. 안전하게 보관하십시오.', fa: 'ممنون بابت خرید ، حساب فرمانده نخبه ی شما معتبر است ، لطفا امن نگهش دارید', el: 'Σας ευχαριστούμε για την αγορά σας.Το ECP σας έχει ισχύ,παρακαλούμε κρατήστε το ασφαλές' }, 'Get ECP, remove all ads, support the devs!': { fr: 'Obtenez votre ECP, supprimez les pubs, soutenez les devs !', es: '¡Obtén tu Pase de Comandante de Élite, líbrate de la publicidad y apoya a los desarrolladores!', ja: 'ECPを取得し、広告を無くし、開発者をサポートしてください！', de: 'Kauf einen Elite-Ausweis, entferne die Werbung, unterstütze die Entwickler!', pt: 'Obtenha ECP, remova todos os anúncios, suporte os desenvolvedores!', ru: 'Получите Пропуск Капитана, скройте рекламу и поддержите разработчиков!', hu: 'Vegyél EKJ-t, tüntessd el a hírdetéseket!', it: 'Ottieni ECP, rimouvi tutta la pubblicità, supporta i devs!', hr: 'Kupi PEZ, makni sve reklame, Podrži razvojitelje', tr: 'SKİ Satın al Ve Reklamlardan Kurtularak Yaratıcılara Destek Çık', cs: 'Kup si PEK, odstraň reklamy, podpoř vývojáře!', sk: 'Kúp si PEK, odstráň reklamy, podpor vývojárov!', id: 'Dapatkan EKL, menghapus semua iklan, mendukung devs!', nl: 'Krijg ECP, verwijder alle advertenties, steun de ontwikkelaars!', ar: 'احصل على القائد النخبة يمر، انزع الاعلانات، ساند المطورين', vi: 'Mua ECP, loại bỏ quảng cáo, ủng hộ nhà sản xuất', pl: 'Kup ECP, usuń wszystkie reklamy i wspieraj autorów!', he: 'תשיג סיסמת מפקד עליון- תסיר את הפרסומות, תתמוך במפתחים!', sv: 'Skaffa ECP, spela utan reklam och stöd utvecklarna!', ro: 'Ia-ţi un acces de comandant de elită, scapă de reclame. ajută programatorii!', zh: '获取 ECP，删除所有广告并支持开发者！', 'zh-tw': '獲取ECP，删除所有廣告，支持開發者！', lt: 'Ottigeni ECP, rimuove pubblicità, supporta gli sviluppatori!', az: 'SKI Al və Reklamlardan Qurtularaq Yaradıcılara Dəstəy Ol', th: 'ซื้อ ECP เพื่อปิดโฆษณาทั้งหมดและสนับสนุนผู้พัฒนาเกม!', ko: 'ECP를 받고, 모든 광고를 제거하고, 개발자를 지원하십시오!', fa: 'حساب فرمانده نخبه را بگیرید تا تبلیغات را حذف کنید و از توسعه دهندگان بازی حمایت کنید', el: 'Παίρνοντας ECP, απομακρύνονται όλες οι διαφημίσεις, στηρίζετε την ανάπτυξη!' }, 'You like Starblast.io, you would like to support our future developments and help us cover our server costs? You can purchase your Elite Commander Pass today! Your pass removes all ads, forever, on all your computers.': { fr: 'Vous aimez Starblast.io ? Vous souhaitez contribuer à son développement et nous aider à couvrir les frais de serveur ? Vous pouvez acheter votre Elite Commander Pass dès maintenant ! Votre pass supprime toutes les pubs, pour toujours, et sur tous vos ordinateurs.', es: 'Si te gusta Starblast.io, ¿te gustaría apoyar nuestro desarrollo y ayudarnos a cubrir los costes de los servidores? ¡Puedes comprar tu Pase de Comandante de Élite hoy! El Pase elimina toda la publicidad, para siempre, en todos tus ordenadores.', ja: 'Starblast.ioを気に入ったのなら、開発とサーバー費を援助して頂けませんか?エリートコマンダーパス(ECP)を購入することができます！ご購入頂ければ、Starblast.ioでは広告を表示しません。', de: 'Du magst Starblast.io, du willst die Entwicklung unterstützen und bei den Serverkosten helfen? Kauf dir jetzt einen Elite-Kapitänsausweis! Er entfernt sämtliche Werbung auf allen Geräten - für immer.', pt: 'Você gosta de Starblast.io, gostaria de apoiar nossos desenvolvimentos futuros e nos ajudar a cobrir nossos custos de servidor? Você pode comprar o seu Passe Comandante de Elite hoje! O seu passe remove todos os anúncios, para sempre, em todos os seus computadores.', ru: 'Вам понравился Starblast.io? Хотите поддержать наши будущие проекты и частично покрыть наши расходы на поддержку серверов? Для этого вы можете купить пропуск Капитана! Пропуск Капитана уберет всю надоедающую рекламу на вашем комьютере. Навсегда.', hu: 'Szereted a Starblast.io-t? Szeretnéd támogatni a jövőbeli fejlesztéseket és segíteni a szerver költségeinek fedezésében? Most vehetsz Elit Kapitány Jelszót! A jelszóval eltűntetheted az összes hírdetést, örökre, az összes számítógépedről!', it: 'Ti piace Starblast.io, ti piacerebbe supportare lo sviluppo e aiutare a coprire i costi dei nostri server? Puoi comprare il tuo Pass del Commander Elite oggi! Il tuo pass ti rimuove tutta la pubblicità, per sempre, su tutti i tuoi computer.', hr: 'Sviđa ti se Starblast.io, želiš podržati daljnji razvoj i pomoći nam pokriti trošak servera? Možeš kupiti PROPUSNICU za ELITNE ZAPOVJEDNIKE (PEZ) već danas! Propusnica uklanja sve reklame, zauvijek, sve na tvom računalu.', tr: "Starblast.io'yu seviyorsanız, gelecekteki gelişmelerimizi desteklemek ve sunucumuzun masraflarını karşılamamıza yardımcı olmak ister misiniz? Seçkin Komutan İzninizi bugün satın alabilirsiniz! Geçişiniz tüm reklamları sonsuza kadar tüm bilgisayarlarınızdan kaldırır.", cs: 'Líbí se vám Starblast.io a chtěli byste nás podpořit v našich budoucích projektech a pomoct nám pokrýt náklady na správu našich serverů? Kupte si Průkaz Elitního Komandéra (PEK). Odstraníte tím všechny reklamy, navždy, na všech vaších zařízeních.', sk: 'Lúbi sa Vám Starblast.io a chceli by ste nás podporíť v naších budúcich projektoch a pomôcť nám pokryť náklady na správu našich serverov? Kúpte si Preukaz Elitného Komandéra! Odstránite všetky reklamy, navždy, na všetkých vaších zariadeniach.', id: 'Anda suka Starblast.io, Anda ingin mendukung perkembangan masa depan kami dan membantu kami menutup biaya server kami? Anda dapat membeli Anda Elite Commander Lulus hari ini! lulus Anda menghapus semua iklan, selamanya, di semua komputer Anda.', nl: 'Je vindt Starblast.io leuk en wil de toekomstige ontwikkelingen steunen en zou graag ons de serverkosten helpen betalen? Je kan je Elite Commandant Pas vandaag kopen! Je pas verwijdert alle advertenties, voor altijd, op al je computers.', ar: 'انت معجب ب-Starblast.io ، تريد مسهمتنا في مستقبل التطور و مسعادتنا في حماية كلفة الخادم? يمكنك ذلك بشراء قائد النخبه الممر اليوم! ممررك ينزع جميع الاعلانات، الى الابد، في كل الكومبيوتر الخاص بك،', pl: 'Lubisz Starblast.io, chciałbyś wspierać nasz przyszły rozwój i pomóc pokryć koszty serwerów? Już dziś możesz kupić ECP! Na zawsze usunie to wszystkie reklamy na wszystkich Twoich urządzeniach', he: 'אתה אוהב את starblast.io, אתה רוצה לתמוך בפיתוח עתידי ולעזור לכסות את עלויות הסרברים? אתה יכול לרכוש את סיסמת המפקד העליון שלך עוד היום! הרכישה תסיר את הפרסומות, לנצח, על כל המחשבים שלך.', sv: 'Gillar du Starblast.io och vill stödja våra framtida utvecklingar och serverkostnader? Skaffa ditt Elitkommendörspass idag! Passet tar bort all reklam på alla dina datorer, för alltid.', ro: 'Îţi place Starblast.io, ai vrea să ajuţi la dezvoltarea şi îmbunătăţirea acestui joc? Poţi cumpăra acces de comandant de elită astăzi. Accesul te scapă de reclame pentru totdeauna pe toate calculatoarele pe care le deţii.', zh: '如果你喜欢 Starblast.io 并且希望支持我们的未来发展和帮助我们解决服务器的成本问题，您可以购买精英指挥官通行证！拥有通行证将永久删除广告显示，并拥有其他独享功能。', 'zh-tw': '您喜歡Starblast.io，您想不想支持我們的未來發展，並幫助我們彌補我們的伺服器成本？你可以購買你的菁英指揮官通行證！您的通行證會永遠移除所有電腦上的所有廣告。', lt: 'Ti piace Starblast.io, ti piacerebbe supportare il nostro futuri sviluppamenti e aiutarci a coprire i costi dei nostri server? Puoi comprare il tuo Elite Commander Pass oggi! Il tuo pass rimuove tutte le pubblicità, per sempre, in tutti i computer.', az: "Starblast.io'nu sevirsizsə gələcəktəki yeniliklərimizi dəstəkləmək və oyunumuzun xərclərini ödəməyimizə kömək edə bilərsən? Seçkin Kapitan Icazəsini bugün ala bilərsiniz! Aldığınızda bütün reklamlar kompyuterinizdən sonsuzadək silinəcək", th: 'คุณชอบ Starblast.io และอยากจะสนับสนุนเกมของเรา? คุณสามารถซื้อตั๋ว ECP ได้ในวันนี้! ตั๋ว ECP จะปิดโฆษณาทั้งหมดบนคอมพิวเตอร์ของคุณ!', ko: 'Starblast.io를 좋아하십니까? 향후 개발을 지원하고 서버 비용을 충당 할 수 있도록 도와 주시겠습니까? 오늘 엘리트 사령관 패스를 구입할 수 있습니다! 패스하면 모든 컴퓨터에서 모든 광고가 영구히 삭제됩니다.', fa: 'این بازی رو دوست داری؟ میخوای از ما حمایت کنی تا بتونیم هزینه های سرور و توسعه دهندگان بازی رو بپردازیم؟پس همین امروز حساب فرمانده نخبه بخر ! تا تبلیغات رو برای همیشه حذف کنی !', el: 'Σας αρέσει το Starblast.io, θέλετε να στηρίξετε την μελλοντική μας ανάπτυξη και να μας βοηθήσετε να καλύψουμε το κόστος του server μας; Μπορείτε να αγοράσετε το δικό σας Elite Commander Pass σήμερα! Η άδεια σας απομακρύνει όλες τις διαφημίσεις, για πάντα, από όλους τους ηλεκτρονικούς υπολογιστές σας.' }, 'Pay what you want': { fr: 'Payez le montant de votre choix', es: 'Paga la cantidad que quieras.', ja: '払いたいだけ払ってください', de: 'Zahl, so viel du willst!', pt: 'Pague quanto quiser', ru: 'Заплатите сколько считаете нужным', hu: 'Annyit fizetsz, amennyit szeretnél.', it: 'Paga quanto vuoi', hr: 'Kupi što želiš', tr: 'Ne kadar İstiyorsan Öde', cs: 'Zvolte si částku', sk: 'Vyberte si čiastku', id: 'Bayar apa yang Anda inginkan', nl: 'Betaal wat je wil', ar: 'ادفع ما تريد', da: 'Betal hvad du ønsker', vi: 'Trả tiền thế nào cũng được', pl: 'Zapłać ile uważasz', he: 'תשלם כמה שאתה רוצה', sv: 'Betala vad du vill', ro: 'Plăteşte cât vrei', zh: '选择你认为合理的价格', 'zh-tw': '想付多少，就付多少', lt: 'Paga quanto vuoi', az: 'Istədiyin Qədər Ödə', th: 'จ่ายตามจำนวนที่คุณต้องการ', ko: '원하는 것을 지불하십시오.', fa: 'هرچقدر میخوای بپرداز', el: 'Πληρώστε ότι θέλετε' }, 'We want you to pay the price you consider to be fair, above the minimum of $10. Please choose from the following:': { fr: "Nous souhaitons que vous payiez le montant que vous estimez juste, au dessus d'un minimum de 10$. Choisissez l'option suivante :", es: 'Deseamos que pagues el precio que consideres justo, por encima de los 10$. Por favor, elige una de las siguientes opciones:', ja: '私たちはあなたが公正であると考えている価格を最低＄10以上で支払うことを望みます。次の中から選択してください：', de: 'Wir wollen, dass du den Preis zahlst, den du für fair hältst, mindestens aber 10$. Bitte wähle aus:', pt: 'Queremos que você pague o preço que considera justo, acima do mínimo de $10. Escolha uma das seguintes opções:', ru: 'Мы готовы принять Ваши подношения в размере $10. Хотите пожертвовать больше, выберите соответсвующий вариант чуть ниже.', hu: 'Azt szeretnénk, hogy annyit fizess, amennyit igazságosnak gondolsz, a minimum 10$ fölött. Kérlek válassz az alábbiakból:', it: 'Noi vogliamo che tu paghi il giusto, sopra il minimo di 10$. Per favore scegli tra i seguenti:', hr: 'Želimo da platiš onoliko koliko misliš da je pošteno, iznad minimalnih $10. Molimo izaberi iz sljedećeg:', tr: 'Fiyatın adil Olduğunu Düşünürseniz En düşük 10$ Ödemenizi İstiyoruz.Lütfen Şuradan Seçin!', cs: 'Chceme, abyste si zvolili částku, kterou považujete za rozumnou, nad minimum 10$. Prosíme, zvolte si z následujícího:*', sk: 'Chceme, aby ste si zvolili čiastku, ktorú považujete za rozumnú, nad 10$. Prosíme, zvolte si z nasledujúceho:', id: 'Kami ingin Anda membayar harga yang Anda anggap sebagai adil, di atas minimal $10. Silahkan pilih dari berikut ini:', nl: 'We willen dat je de prijs betaalt die je eerlijk vindt, boven het minimum van $10. Kies alsjeblieft uit de volgende mogelijkheden:', ar: 'نحن نريد منك أن تدفع الثمن الذي تعتبره عادلة، فوق الحد الأدنى من $ 10. يرجى الاختيار مما يلي:', pl: 'Chcemy żebyś zapłacił tyle ile uważasz, powyżej $10. Wybierz z poniższych:', he: 'אנחנו רוצים שתשלם את המחיר שלדעתך הוגן, מעל המינימום של 10$. בבקשה תבחר מהבאים:', sv: 'Vi tycker att du ska få betala med ett pris som du tycker är rimligt, ovanför minimumet av $10. Välj mellan följande:', ro: 'Noi dorim ca tu să plăteşti suma care ţi se pare corectă, suma minimă fiind de $10. Te rugăm alege dintre următoarele:', zh: '我们愿您支付任何您认为公平合理的价格（需高于10美元）。请在下面选择金额：', 'zh-tw': '我們希望你支付你認為公平的價格，最低$10。请從以下選項中選擇：', lt: 'Vogliamo che paghi il prezzo che consideri giusto, al di sopra del minimo di $10. Perfavore scegli da quanto segue:', az: 'Qiymətin Uyğun Olduğunu Düşünürsünüzsə ən az 10$ Ödəməyinizi Istəyirik Xaiş Edirik Burdan Ödəyin', th: 'พวกเราอยากให้คุณจ่ายเงินตามกำลังทรัพย์ของคุณ โดยอย่างน้อยจ่ายได้ที่ราคา 10$ กรุณาเลือกตามรายการต่อไปนี้:', ko: '최저 10 달러 이상으로 지불하기를 바랍니다. 다음 중에서 선택하십시오 :', fa: 'ما مایل هستیم هرچقدر که منصفانه میدونی بپردازی البته حداقل باید 10 دلار باشه ، از این قسمت بپرداز :', el: 'Θέλουμε να πληρώσετε το ποσό που εσείς κρίνετε δίκαιο, ξεκινόντας το ελάχιστο από $10.Παρακαλώ επιλέξτε από τα παρακάτω:' }, "If you don't want to spend more, that's OK! Thanks for your effort.": { fr: "Si vous ne voulez pas dépenser plus, c'est OK ! Merci pour votre effort.", es: 'Si no deseas gastar más, está bien. ¡Gracias por tu esfuerzo!', ja: 'もし払いたくないなら、それはそれで構いません。お疲れ様でした。', de: 'Wenn du nicht mehr zahlen willst, ist es auch in Ordnung! Danke für die Unterstützung!', pt: 'Se você não quiser gastar mais, isso já ajuda! Obrigado pelo seu esforço.', ru: 'Если не хотите жертвовать больше, ничего страшного. В любом случае, Спасибо!', hu: 'Ha nem akarsz többet költeni, nem probléma! Köszönjük a hozzájárulást!', it: 'Se non vuoi spendere di più, è OK! Grazie per il tuo supporto.', hr: 'Ako ne želiš potrošiti više, to je OK! Hvala na trudu.', tr: 'Daha fazla harcamak istemiyorsanız, sorun değil! Emeğin için teşekkürler.', cs: 'Pokud nechcete dát více, v pořádku! Děkujeme za vaši podporu.', sk: 'Pokiaľ nechcete dať viac, v poriadku! Ďakujeme za vašu podporu!', id: 'Jika Anda tidak ingin menghabiskan lebih banyak, itu OK! Terima kasih untuk usaha Anda.', nl: 'Als je niet meer wil spenderen, is dat OK! Bedankt voor je inspanning.', ar: 'إذا كنت لا تريد أن تنفق أكثر، وهذا موافق! نشكرك على مجهودك.', pl: 'To w porządku jeśli nie chcesz wydać więcej! Dziękujemy za twój wkład', he: 'אם אתה לא רוצה לשלם יותר זה בסדר גמור! תודה על העזרה.', sv: 'Om du inte vill spendera mer så är det okej! Tack för ditt bidrag.', ro: 'Dacă nu vrei să dai mai mult e totul în regulă! Apreciem efortul tău.', zh: '如果您不想花更多的钱，那也没关系，谢谢你的助力。', 'zh-tw': '如果你不想花更多，那也OK！謝謝你的努力。', lt: 'Se non vuoi spendere di più, è OK! Grazie per il tuo sforzo.', az: 'Daha Artıq Xərcləmək Istəmirsinizsə, zərər yoxdu! Əməyin Görə Təşəkkürlər', th: 'หากคุณไม่อยากจะจ่ายเพิ่ม ไม่เป็นไร! ขอบคุณสำหรับความช่วยเหลือ', ko: '더 돈을 쓰고 싶지 않다면 괜찮습니다. 노력해 주셔서 감사합니다.', fa: 'اگه نمیخوای بیشتر از این پاسخ بدی عیبی نداره ، برای تلاشت ممنون', el: 'Εάν δεν θέλετε να ξοδέψετε περισσότερα δεν πειράζει! Ευχαριστούμε για την προσπάθειά σας.' }, 'It really means something to us, thank you for your support!': { fr: 'Cela représente vraiment quelque chose à nos yeux. Merci pour votre aide !', es: 'Apreciamos esto, de verdad. ¡Gracias por tu apoyo!', ja: 'あなたのサポートに感謝します', de: 'Es bedeutet uns richtig viel, herzlichen Dank für die Unterstützung!', pt: 'Realmente significa algo para nós, obrigado pelo seu apoio!', ru: 'Мы действительно благодарны Вам! Спасибо за Вашу поддержку', hu: 'Tényleg sokat számít nekünk, köszönjük a segítséget!', it: 'Significa davvero qualcosa per noi, grazie per il tuo supporto!', hr: 'To nam svarno nešto znači, Hvala ti na podršci.', tr: 'Bizim İçin Gerçekten Bir şeyler İfade Ediyor, Desteğin İçin Teşekkürler', cs: 'Opravdu to pro nás hodně znamená, děkujeme za vaši podporu!', sk: 'Znamená to pre nás veľa, ďakujeme za vašu podporu!', id: 'Itu benar-benar berarti sesuatu kepada kami, terima kasih atas dukungan Anda!', nl: 'Het betekent echt veel voor ons, bedankt voor je steun!', ar: 'هذا يعني حقا شيئا بالنسبة لنا، نشكرك على دعمك!', pl: 'To naprawdę dużo dla nas znaczy, dziękujemy za twoje wsparcie!', he: 'זה באמת משמעותי בשבילנו, תודה לך על התמיכה!', sv: 'Det betyder verkligen något för oss, tack för ditt stöd!', ro: 'Contează foarte mult pentru noi, apreciem efortul tău!', zh: '这对我们来说真的很有用，谢谢你的支持！', 'zh-tw': '這真的對我們有用，謝謝您的支持！', lt: 'Significa veramente qualcosa per noi, grazie per il tuo supporto!', az: 'Bizim Üçün Gərçəktən Bir Şeylər Ifadə Edir , Dəstəyin Üçün Təşəkkürlər', th: 'มันมีความหมายต่อพวกเราเป็นอย่างมาก ขอบคุณสำหรับการสนับสนุนของคุณ!', ko: '당신의 지원에 감사드립니다!', fa: 'این واقعا برامون مهمه ، ممنون بابت حمایت', el: 'Πραγματικά κάτι σημαίνει για μας, ευχαριστούμε για την συνεισφορά σας!' }, 'We are extremely grateful for your generosity! :)': { fr: 'Nous vous sommes très reconnaissants de votre générosité ! :)', es: '¡Estamos extremadamente agradecidos por tu generosidad! :)', ja: '私たちはあなたの寛大さに非常に感謝しています！^_^', de: 'Wir sind höchst dankbar für deine Großzügigkeit! :)', pt: 'Estamos extremamente gratos pela sua generosidade! :)', ru: 'Мы чрезвычайно сильно благодарны такому пожертвованию! :)', hu: 'Hihetetlenül hálásak vagyunk a bőkezűségedért! :)', it: 'Siamo veramente onorati della tua generosità! :)', hr: 'Stvarno smo zahvalni tvojojm darežljivošću! :)', tr: 'Cömertliğin İçin Son Derece Minnetarız!', cs: 'Jsme nesmírně rádi za vaši štědrost! :)', sk: 'Sme veľmi radi za Vašu štedrosť! :)', id: 'Kami sangat berterima kasih atas kemurahan hati Anda! :)', nl: 'We zijn extreem dankbaar voor je gulheid! :)', ar: 'نحن ممتنون للغاية لكرمكم! :)', da: 'Vi er meget taknemmelige for din generøsitet! :)', pl: 'Jesteśmy niesamowicie wdzięczni za twoją hojność! :)', he: 'אנחנו אסירי תודה על הנדיבות שלך! :)', sv: 'Vi är oerhört tacksamma för din generositet! :)', ro: 'Îţi suntem foarte recunoscători pentru generozitatea ta!', zh: '我们非常感谢您的慷慨！', 'zh-tw': '我們非常感謝你的慷慨！ :)', lt: 'Siamo estremamente grati per la tua generosità', az: 'Cömərtliyin Üçün Son Dərəcə Minnətdarıq :)', th: 'พวกเรารู้สึกซาบซึ้งใจเป็นอย่างมากสำหรับน้ำใจไมตรีของคุณ! :)', ko: '우리는 당신의 관대함에 대해 대단히 감사합니다! :)', fa: 'ما به شدت بابت سخاوتمندی شما خرسند استیم :)', el: 'Είμαστε εξαιρετικά ευγνώμονες για τη γενναιοδωρία σας!:)' }, 'You can pay any amount above $10 to support us. Thanks!': { fr: 'Vous pouvez choisir un montant personnalisé au dessus de 10$', es: 'Puedes pagar lo que sea a partir de 10$ para apoyarnos. ¡Muchas gracias!', ja: '私たちをサポートするために$ 10以上の金額を支払うことができます。ありがとう！', de: 'Du kannst alles über 10$ zahlen, um uns zu unterstützen. Danke!', pt: 'Você pode pagar qualquer quantia acima de $10 para nos apoiar. Obrigado!', ru: 'Вы можете пожертвовать любую сумму больше $10. Спасибо!', hu: 'Bármekkora összeggel támogathatsz 10$ fölött. Köszönjük!', it: 'Puoi pagare qualsiasi ammonto sopra i 10$ per supportarci. Grazie!', hr: 'Možeš platiti bilo koji iznos od $10 ili iznad da nas podržiš. Hvala!', tr: 'Bize Destek Olması İçin 10$ dan Daha Fazla Tutarı Ödeyebilirsiniz de. Teşekkürler!', cs: 'Můžete zaplatit jakoukoliv částku nad 10 $. Děkujeme!', sk: 'Môžete zaplatiť akúkoľvek čiastku nad 10$. Ďakujeme!', id: 'Anda dapat membayar jumlah di atas $ 10 untuk mendukung kami. Terima kasih!', nl: 'Je kan elk bedrag boven $10 betalen om ons te steunen. Bedankt!', ar: 'يمكنك دفع أي مبلغ فوق 10 دولار لدعمنا. شكر!', da: 'Du kan betale hvilket som helst beløb over $10 for så at støtte os. Tak!', pl: 'Możesz zapłacić dowolną ilość powyżej $10 żeby nas wesprzeć. Dziękujemy!', he: 'אתה יכול לשלם כל כמות מעל 10$ בשביל לתמוך בנו. תודה!', sv: 'Du kan betala ett belopp över $10 för att stödja oss. Tack!', ro: 'Poţi plăti orice sumă peste $10 dacă doreşti să ne ajuti. Mulţumim!', zh: '您可以支付任何超过10美元的金额来支持我们。谢谢！', 'zh-tw': '您可以支付超過$10的金額來支持我們。謝謝！', lt: 'Puoi pagare ogni quantità al di sopra dei $10 per supportare noi. Grazie!', az: "Bizə Dəstək Olmaq Üçün 10$'dan daha çox ödəyə bilərsiniz. Təşəkkürlər", th: 'คุุณสามารถจ่ายราคาได้มากกว่า 10$ เพื่อสนับสนุนพวกเรา ขอบคุณ!', ko: '우리를 지원하기 위해 $ 10 이상을 지불 할 수 있습니다. 감사합니다!', fa: 'شما میتونید هر مقدار که بخواهید بالای 10 دلار بپردازید ، ممنون', el: 'Μπορείτε να πληρώσετε οποιοδήποτε ποσό από $10 και πάνω για να μας στηρίξετε. Ευχαριστούμε!' }, 'Enter your custom amount here': { fr: 'Entrez votre montant personnalisé ici', es: 'Introduce tu cantidad personalizada aquí', ja: '金額を入力', de: 'Eigenen Betrag hier eingeben', pt: 'Insira seu valor personalizado aqui', ru: 'Введите вашу сумму здесь', hu: 'Kérlek írd be a saját összeged ide', it: 'Inserisci la quota qui', hr: 'Unesi svoj iznos ovdje', tr: 'Özel Ödeme Miktarını Buraya Girin', cs: 'Zde napište vaši částku', sk: 'Tu napíšte Vašu čiastku', id: 'Masukkan jumlah kustom Anda di sini', nl: 'Vul hier je eigen bedrag in', ar: 'أدخل المبلغ المخصص هنا', da: 'Indtast dit eget beløb her', vi: 'Viết giá của bạn vào đây', pl: 'Wprowadź tu swoją kwotę', he: 'תכניס את הכמות המותאמת אישית שלך פה', sv: 'Skriv in ditt belopp här', ro: 'Inserează suma pe care doreşti să o donezi', zh: '在此输入您自定义的金额', 'zh-tw': '在此輸入您的自訂金額', lt: 'Inserisci la tua quantità personalizzata qui', az: 'Xüsusi Ödeme Miqdarını Bura Yazın', th: 'ใส่จำนวนเงินที่นี่', ko: '여기에 맞춤 금액을 입력하십시오.', fa: 'مقدار دلخواه خود را اینجا وارد کنید', el: 'Εισάγετε το συνολικό ποσό εδώ' }, 'Buy for %s': { fr: 'Acheter pour %s', es: 'Cómpralo por %s', ja: '%sを購入する', de: 'Kaufen für %s', pt: 'Compre por %s', ru: 'Купите за %s', hu: 'Vásárolj %s ért', it: 'Compra per %s', hr: 'Kupi za %s', tr: '%s Kadara Satın Al', cs: 'Kup za %s', sk: 'Kúp za %s', id: 'Membeli untuk %s', nl: 'Koop voor %s', ar: 'شراء ل%s', da: 'Køb for %s', vi: 'Mua với %s', pl: 'Kup za %s', he: 'תקנה ב%s', sv: 'Köp för %s', ro: 'Cumpără pentru %s', zh: '购买 %s', 'zh-tw': '購買%s', lt: 'Compra per %s', az: 'Buna görə al %s', th: 'ซื้้อได้ในราคา %s', ko: '%s', fa: 'به میزان %s خرید کن', el: 'Αγόρασε για %s' }, 'This ECP is invalid': { fr: 'Cet ECP est invalide', es: 'Este Pase de Comandante de Élite es inválido', ja: 'このECPは無効です', de: 'Der Elite-Ausweis ist ungültig', pt: 'Este ECP é inválido', ru: 'Этот ключ не действителен', hu: 'Ez az EKJ érvénytelen!', it: 'Questo ECP è invalido', hr: 'Ovaj PEZ nije valjan', tr: 'Bu SKİ Geçersiz', cs: 'Litujeme, tento PEK je neplatný', sk: 'Lutujeme, tento PEK je neplatný', id: 'EKL ini tidak valid', nl: 'Deze ECP is ontoereikend', ar: 'هذا القائد النخبة يمر غير صالح', vi: 'Mã ECP của bạn đã được kích hoạt', pl: 'Ten ECP jest niepoprawny', he: 'הסיסמת מפקד עליון הזאת לא זמינה', sv: 'Detta ECP är ogiltigt', ro: 'Acest acces de comandant de elită este invalid', zh: '此 ECP 无效', 'zh-tw': '此ECP無效', lt: "L'ECP è invalido", az: 'Bu SKI Geçərsiz', th: 'ECP นี้ไม่ถูกต้อง', ko: '이 ECP가 잘못되었습니다.', fa: 'این حساب فرمانده نخبه غیر معتبره', el: 'Το ECP είναι εκτός λειτουργίας' }, 'Secure payments by PayPal. You can pay by credit card or with your PayPal account. Quickly after your purchase, you will receive an e-mail with your ECP key.': { fr: 'Paiement sécurisé par PayPal. Vous pouvez payer avec votre compte PayPal ou par carte de crédit. Après votre achat, vous recevrez un e-mail contenant votre clé ECP.', es: 'Pago seguro por PayPal. Puedes pagar con tarjeta de crédito o con cuenta de PayPal. Una vez efectuada la compra se te enviará un correo electrónico con el código de tu Pase de Comandante de Élite.', ja: 'PayPalによる安全な支払い。クレジットカードまたはPayPalアカウントでお支払いいただけます。購入後、すぐEメールでECPが届きます', de: 'Sichere Bezahlung mit PayPal. Du kannst mit Kreditkarte oder deinem PayPal-Account bezahlen. Direkt nach deiner Bezahlung bekommst du den Code für deinen Elite-Ausweis per E-Mail.', pt: 'Pagamentos seguros por PayPal. Você pode pagar com cartão de crédito ou com sua conta PayPal. Rapidamente após a sua compra, você receberá um e-mail com sua chave ECP.', ru: 'Защищенные платежи с помощью PayPal. Вы можете заплатить с помощью кредитки или Вашего аккаунта на PayPal. Сразу же после оплаты Вы получите письмо с ключем на пропуск Капитана на Вашу почту.', hu: 'Biztonságos fizetés PayPallel. Fizethetsz hitelkártyával/bankkártyával vagy PayPal fiókkal. A vásárlás után hamarosan megkapod e-mailen az EKJ kulcsodat.', it: 'Pagamenti sicuri da PayPal. Puoi pagare con la carta di credito o con il tuo account PayPal. Appena subito il tuo acquisto, riceverai un e-mail con la tua chiave ECP.', hr: 'Sigurnosno plaćanje putem PayPal-a. Možeš platiti creditnom karticom ili sa vašim PayPal računom. Ubrzo nakon plaćanja, dobit ćeš e-mail sa svojom PEZ zaporukom.', tr: 'Ödemeleri PayPal kullanarak güvenli hale getirin. Kredi kartıyla veya PayPal hesabınızla ödeme yapabilirsiniz. Satın alındıktan hemen sonra SKİ anahtarınızla bir e-posta alacaksınız.', cs: 'Bezpečné platby skrze PayPal. Můžete platit kartou nebo vaším PayPal účtem. Ihned po vašem nákupu obdržíte e-mail s vaším PEK klíčem.', sk: 'Bezpečné platby prostredníctvom PayPal. Môžete zaplatit kartou alebo Vaším PayPal účtom. Ihneď po vašom nákupe obdržíte e-mail s vaším PEK klúčom.', id: 'Aman pembayaran dengan PayPal. Anda dapat membayar dengan kartu kredit atau dengan account PayPal Anda. Cepat setelah pembelian Anda, Anda akan menerima e-mail dengan kunci EKL Anda.', nl: 'Veilige betalingen met PayPal. Je kan betalen met je creditcard of met je PayPal account. Je zal een e-mail met je ECP-sleutel krijgen snel na je betaling.', ar: 'تأمين المدفوعات عن طريق باي بال. يمكنك الدفع عن طريق بطاقة الائتمان أو مع حساب باي بال الخاص بك. بسرعة بعد عملية الشراء، سوف تتلقى رسالة بريد إلكتروني مع مفتاح القائد النخبة يمر الخاص بك.', pl: 'Oferujemy bezpieczne płatności w systemie PayPal. Możesz zapłacić używając karty kredytowej lub twojego konta PayPal. Niedługo po twoim zakupie otrzymasz e-mail z twoim kluczem ECP', he: 'רכישה מאובטחת באמצעות PayPal. אתה יכול לשלם באמצעות כרטיס אשראי או משתמש בPayPal. מהר אחרי הרכישה אתה תקבל אימייל עם הסיסמת מפקד עליון.', sv: 'Säkra köp med PayPal. Du kan betala med kreditkort eller med ditt PayPal-konto. Direkt efter köpet så kommer du få ett e-postmeddelande med din ECP-nyckel.', ro: 'Securizează plăţile prin PayPal. Poţi plăti prin card de credit sau prin contul tău PayPal. Rapid după efectuarea plăţii vei primi un e-mail cu codul de la accesul de comandant de elită.', zh: '通过 PayPal 安全支付。您可以通过信用卡或 PayPal 账户支付。购买之后，您将收到含有 ECP 密钥的电子邮件。', 'zh-tw': '以PayPal安全支付。您可以通過信用卡或您的PayPal帳户支付。購買後，您將收到一封帶有ECP密碼的電子郵件。', lt: 'Pagamenti sicuri via PayPal. Puoi pagare con la carta di credito o con il tuo account PayPal. Riceverai velocemente dopo il pagamento una email con la tua chiave ECP.', az: 'Ödəmələri PayPal istifadə edərək təhlükəsiz hala gətirin. Bank kartıyla ve ya PayPal hesbınızla ödəyə bilərsiniz. Aldıqdan həmən sonra SKI kodunuzla birliktə bir mail alacaqsınız', th: 'ชำระเงินได้อย่างปลอดภัยด้วย PayPal คุณสามารถชำระเงินได้โดยใช้บัตรเครดิตหรือด้วยบัญชี PayPal ของคุณ หลังจากที่ชำระเงินแล้ว คุณจะได้รับอีเมลตอบกลับพร้อมกับ ECP key ของคุณ', ko: 'PayPal을 통해 안전하게 지불합니다. 신용 카드 또는 PayPal 계정으로 결제 할 수 있습니다. 구입 후에는 ECP 코드가있는 전자 메일을 받게됩니다.', fa: 'برای ایمن کردن خرید میتونی از پی پال استفاده کنی ، برای خرید میتونی از کارت اعتباری استفاده کنی ، به محض خرید ، ایمیلی مبتنی بر گذرواژه حساب فرمانده نخبه دریافت میکنید .', el: 'Ασφαλής πληρωμή με PayPal. Μπορείς να πληρώσεις με credit card ή με PayPal. Αμέσως μετά την αγορά, θα σας σταλεί ένα e-mail με το ECP κλειδί σας.' }, 'Your ECP also allows you to customize your ship and ingame badge: you will shine with your special ship material (titanium, alloy, carbon...), lasers styles and badge icons!': { fr: 'Votre ECP vous permet également de personnaliser votre vaisseau et votre badge. Vous brillerez en changeant le métal de votre vaisseau et le style de vos lasers !', es: 'El ECP también te permite personalizar la nave e insignia: ¡brillarás con los materiales especiales para tu nave (titanio, aleación, carbono...), estilos de lásers e iconos de insignia!', ja: 'ECPで、あなたの船とゲーム内のバッジをカスタマイズできます：例:特別な船の材料（チタン、合金、カーボン…）、レーザーのスタイルと特別なバッジアイコン', de: 'Dein Elite-Ausweis ermöglicht es dir auch, dein Schiff zu gestalten: Material, Laser-Stile und Abzeichen sind für die Elite frei veränderbar!', pt: 'Seu ECP também permite que você personalize sua nave e emblema do jogo: você vai brilhar com o seu material de nave especial (titânio, liga, carbono ...), estilos de lasers e ícones de emblema!', ru: 'Ваш пропуск Капитана также позволяет настроить ваш корабль и игровой значок: вы будете сиять с вашим специальным материалом корабля (титан, сплав, углерод...), стилем лазеров и значками!', hu: 'Az EKJ-d lehetővé teszi, hogy személyre szabd a hajódat és a jelvényedet: a hajód ragyogni fog különleges anyagoktól (titánium, ötvözet, szén...), lézerstílusoktól és jelvényikonoktól.', it: 'Il tuo ECP inoltre ti permette di customizzare la tua nave e il badge nel gioco: potrai splendere con la tua nave costruita con materiali speciali (titanio, lega, carbone...), stili di laser e icone badge!', hr: 'Tvoj PEZ ti omogućuje da prilagodite svoj brod i svoju značku: zasjati ćete sa svojim brodom uz posebne materijale (titanium,alloy,carbon...), vrsta lasera i ikone značke!', tr: 'Seçkin Komutan İzni Gemini ve Oyun İçi Rozetini Özelleştirmene de İzin Verir: Gemini Materyaller İle Özelleştirerek Gemin İle Parla (Titanyum Alaşımı,Karbon Kaplama...),Işınlar Sitiller ve Rozet İkonları!', cs: 'Váš PEK vám také umožňuje stylizovat si vaši loď a váš odznak: Budete zářit speciálním lodním materiálem (titan, slitina, uhlík...), pestrými lasery a odznaky!', sk: 'Vaša PEK vám taktiež umožní prispôsobiť vašu loď a váš odznak: Budete žiariť špecialným lodným materiálom (titán zliatina, karbón...), pestrými lasermi a odznakmi!', id: 'EKL Anda juga memungkinkan Anda untuk menyesuaikan kapal dan ingame Anda lencana: Anda akan bersinar dengan bahan Anda khusus kapal (titanium, paduan, karbon ...), laser gaya dan ikon lencana!', nl: 'Je ECP laat je ook toe je schip en badge een persoonlijke tint te geven: je zal stralen met je speciale scheepsmateriaal (titanium, legering, koolstof...), laserstijlen en badge iconen!', ar: 'القائد النخبة ممرالخاص بك يسمح لك ايضا بتخصيص السفينة الخاصة بك وشعار شارة: سوف تألق مع المواد السفينة الخاصة بك (التيتانيوم، سبيكة، الكربون ...)، وأشعة الليزر وأيقونات شارة!', pl: 'Twój ECP pozwala ci też na dostosowanie twojego statku i odznaki w grze: zabłyśniesz dzięki specjalnemu poszyciu statków (Tytanowemu, różnym stopom, Karbonowemu ), stylom laserów i ikonom odznak!', he: 'סיסמת מפקד עליון מאפשרת לך לעצב את הספינה והתג שלך במשחק: אתה תבלוט עם החומר המיוחד ממנו עשויה הספינה (טיטניום, סגסוגת, פחמן...), עיצוב הלייזר ואייקון תג!', sv: 'Ditt ECP låter dig också anpassa ditt skepp och emblem: du kommer att briljera med dina speciella skeppsmaterial, laserstilar och emblem-ikoner!', ro: 'De asemenea accesul tău de comandant de elită îţi oferă posibilitatea de a-ţi modifica nava şi insigna din joc. Vei străluci cu materialele noi cu care îţi vei putea decora nava: titanium,aliaj, carbon, etc. De asemenea vei avea parte de diferite tipuri de lasere şi iconiţe la insignă', zh: '您的 ECP 还可以让您自定义船舰和游戏徽章：您可以用特殊的船舶材料（钛、合金、碳）、激光风格和闪耀的徽章图标！', 'zh-tw': '您的ECP還可以讓您自定船艦和遊戲徽章：您可以使用特殊的材料（鈦，合金，碳），激光樣式和閃亮亮的徽章圖標！', lt: "La tua ECP consente anche a te di personalizzare la tua nave e l'ingame badge: brillerai con i materiali speciali per la nave (titano, lega, carbonio...), stili di laser e icone badge!", az: 'Seçkin Kapitan Icazəsi robotunu və oyun içi Medalını Xüsusiləştirməyədə icazə verir Robotunu Materiallar ilə xüsusiləştirərək gəmin ilə parılda (Titanyum , Karbon...), Işınlar stillər və medallar!', th: 'ECP ของคุณจะช่วยให้คุณสามารถปรับแต่งยานของคุณและตราในเกมได้: คุณจะเจิดจรัสด้วยยานที่ทำมาจากวัสดุพิเศษ (ไทเทเนียม,อัลลอยด์,คาร์บอนด์,ฯลฯ) รูปแบบเลเซอร์ที่เฉพาะตัวและรูปตราต่างๆอีกมากมาย!', ko: 'ECP는 배와 배지를 사용자 정의 할 수있게 해줍니다 티타늄, 합금, 탄소 등 레이저 모양 및 배지 아이콘으로 빛나게됩니다!', fa: 'حساب فرمانده نخبه به شما اجازه میده تا سفینه و نشان خودتون رو شخصی سازی کنید : شما با ظاهر جدید میدرخشید (تیتانیوم ، آلیاژ، کربن ...) ، استایل های لیزر ها و علامت های نشان', el: 'Το ECP σας επίσης σας επιτρέπει να εξατομικεύσετε το διαστημόπλοιό σας και να έχετε ένα διακριτικό σήμα του παιχνιδιού: θα λάμπει το διαστημόπλοιό σας με τα ιδιαίτερα υλικά (τιτάνιο, κράμα, άνθρακα…), στιλ λέιζερ και διακριτικά σήματα!' }, 'Enter my key': { fr: 'Entrez votre clé', es: 'Introducir clave', ja: '自分のキーを入力', de: 'Meinen Code eingeben', pt: 'Colocar minha chave', ru: 'Введите ключ', hu: 'Saját kulcsom:', it: 'Inserisci la mia chiave', hr: 'Unesi moju zaporuku', tr: 'Anahtarımı Gir', cs: 'Vložte svůj klíč', sk: 'Vložte svoj kód.', id: 'Masukkan kunci', nl: 'Vul je sleutel in', ar: 'أدخل مفتاحي', da: 'Indtast min nøgle', vi: 'Nhập mã của tôi', pl: 'Wprowadź mój klucz', he: 'הכנס את הסיסמה שלי', sv: 'Skriv in nyckel', ro: 'Introdu-mi codul', zh: '输入我的密钥', 'zh-tw': '輸入我的密碼', lt: 'Inserisci la mia chiave', az: 'Kodumu Yaz', th: 'ใส่ key ของฉัน', ko: 'ECP코드 입력', fa: 'وارد کردن کلید من', el: 'Βάζω το κλειδι μου' }, 'Your already own your ECP? Thank you for your purchase! Please enter your ECP key below:': { fr: 'Vous possédez déjà une clé ECP ? Merci pour votre achat ! Entrez simplement votre clé ci-dessous.', es: '¿Ya posees tu propio Pase de Comandante de Élite? ¡Gracias por la compra! Por favor, introduce tu Pase de Comandante de Élite aquí.', ja: 'ECPを既に所有していますか？ ご購入いただきありがとうございます！ECPキーを入力してください:', de: 'Du hast bereits einen Elite-Ausweis? Danke für den Kauf! Bitte gib deinen Code unten ein:', pt: 'Você já possui seu ECP? Obrigado pela sua compra! Digite sua chave ECP abaixo:', ru: 'У вас уже есть пропуск Капитана? Спасибо за покупку. Введите ваш ключ вот здесь:', hu: 'Már van EKJ-d? Köszönjük a vásárlást! Kérlek itt írd be az EKJ kulcsod:', it: 'Hai comprato di già il tuo ECP? Grazie per il tuo acquisto! Per favore inserisci la tua chiave ECP qua sotto:', hr: 'Posjeduješ PEZ? Hvala ti na kupnji! Molim unesi svoju PEZ zaporuku ispod:', tr: "Zaten Kendi SKİ'ne Sahip misin? Satın aldığın İçin Teşekkür Ederiz! Lütfen SKİ Anahtarın Aşağıya Gir:", cs: 'Už máte váš PEK? Děkujeme za váš nákup! Prosíme vložte váš PEK klíč níže:', sk: 'Už máte váš PEK? Ďakujeme za váš nákup! prosíme vložte váš PEK kód nižšie:', id: 'Anda sudah memiliki EKL Anda? Terima kasih atas pembelian Anda! Masukkan kunci EKL Anda di bawah ini:', nl: 'Heb je al een ECP? Bedankt voor je aankoop! Vul hieronder je ECP-sleutel in:', ar: 'لديك بالفعل الخاصة بك القائد النخبة يمر؟ شكرا لك على الشراء! الرجاء إدخال مفتاح النخبة قائد ممر أدناه:', da: 'Ejer du allerede din ejen ECP? Tak for dit køb! Indtast venligst din ECP-nøgle nedenunder:', vi: 'Bạn đã có ECP của bạn? Cạm ơn bạn đã ủng hộ chúng tôi! Làm ơn ghi mã ECP của bạn ở đây', pl: 'Posiadasz już ECP? Dziękujemy za zakup! Wprowadź swój klucz ECP poniżej:', he: 'כבר יש לך סיסמת מפקד עליון? תודה לך על הרכישה! בבקשה הכנס את הסיסמה כאן:', sv: 'Äger du redan ett ECP? Tack för ditt köp! Vänligen skriv in din ECP-nyckel nedan:', ro: 'Ai deja un acces de comandant de elită? Îţi mulţumim pentru achiziţie! Te rugăm introdu codul pe care l-ai primit mai jos:', zh: '您已经有 ECP 密钥了？感谢您的购买！请在下方输入您的 ECP 密钥：', 'zh-tw': '您已經有 ECP 密鑰了？感謝您的購買！請在下方輸入您的 ECP 密鑰：', lt: 'Hai già la tua ECP? Grazie per il pagamento! Perfavore inserisci la tua chiave ECP sotto:', az: "Onsuzda Öz SKI'n var ? Aldığın Üçün Təşəkkürlər! Xaiş Edirik Aşağıya Kodunu Yaz :", th: 'คุณมี ECP อยู่แล้ว? ขอบคุณสำหรับการซื้อของคุณ', ko: 'ECP를 이미 소유하고 있습니까? 구입 주셔서 감사합니다! 아래에 ECP 코드를 입력하십시오 :', fa: 'همین الانشم یه حساب فرمانده ویژه داری؟ ممنون بابت خریدتون ! لطفا شماره کلید (رمز عبور) حساب فرمانده نخبه را اینجا وارد کنید', el: 'Σας ανήκει ήδη το ECP; Ευχαριστούμε για την αγορά σας! Παρακαλούμε βάλτε το ECP κλειδί σας παρακάτω:' }, 'Enter your key here': { fr: 'Entrez votre clé ici', es: 'Introduce tu clave aquí', ja: 'ここにキーを入力', de: 'Hier deinen Code eingeben', pt: 'Introduza a sua chave aqui', ru: 'Введите свой ключ здесь', hu: 'Itt írd be az EKJ kulcsod:', it: 'Inserisci la tua chiave qui', hr: 'Unesi svoju zaporuku ovdje', tr: 'Anahtarı Gir', cs: 'Zde vložte váš klíč', sk: 'Tu vložte váš kód', id: 'masukkan kunci Anda di sini', nl: 'Vul hier je sleutel in', ar: 'أدخل المفتاح هنا', da: 'Indtast din nøgle her', vi: 'Nhập mã của bạn ở đây', pl: 'Wprowadź tutaj swój klucz', he: 'הכנס את הסיסמה שלך כאן', sv: 'Skriv in din nyckel här', ro: 'Introdu codul aici', zh: '在此输入您的密钥', 'zh-tw': '在這裡輸入您的密碼', lt: 'Inserisci la tua chiave qui', az: 'Kodu Yaz', th: 'ใส่ key ของคุณได้ที่นี่', ko: 'ECP코드 입력', fa: 'گذرواژه (یا همون کلیدت ) رو اینجا وارد کن', el: 'βάλτε το κλειδί σας εδώ:' }, 'Start to play': { fr: 'Commencer à jouer', es: 'Comienza a jugar', ja: 'ゲーム開始', de: 'Spiel starten', pt: 'Comece a Jogar', ru: 'Начать игру', hu: 'Játék megkezdése', it: 'Inizia a giocare', hr: 'Započni igru', tr: 'Oynamaya Başla', cs: 'Začít hrát', sk: 'Začať hru', id: 'Mulai bermain', nl: 'Spel starten', ar: 'بدء للعب', vi: 'Bắt đầu chơi', pl: 'Rozpocznij grę', sv: 'Börja spela', ro: 'Incepe sa joci', zh: '开始', 'zh-tw': '開始玩', lt: 'Inizia a giocare', th: 'เริ่่มเล่น', ko: '시작', fa: 'شروع بازی', el: 'Ξεκινήστε το παιχνίδι' }, 'For any problem with your ECP key, please e-mail us at contact@neuronality.com, we will help as soon as we can!': { fr: 'Si vous avez un problème avec votre clé ECP, merci de nous contacter directement par mail sur contact@neuronality.com. Nous vous aiderons aussi vite que possible.', es: 'Si tienes cualquier problema con tu Pase de Comandante de Élite, por favor, envíanos un correo a contact@neuronality.com y te ayudaremos tan pronto como podamos.', ja: 'ECPキーの問題については、contact@neuronality.comまでＥメールでお問い合わせください。できるだけ早くお手伝いします。', de: 'Bei Problemen mit deinem Elite-Ausweis-Code kontaktiere uns unter contact@neuronality.com. Wir helfen dir so schnell wie möglich!', pt: 'Para qualquer problema com sua chave ECP, envie um e-mail para contact@neuronality.com, nós ajudaremos assim que pudermos!', ru: 'В случае проблемы с вашим ключом напишите нам на почту, мы ответим как только сможем: contact@neuronality.com', hu: 'Ha bármi problémád van az EKJ kulcsoddal, kérlek küldj nekünk egy e-mailt a contact@neuronality.com címre, segítünk amilyen hamar csak tudunk!', it: 'Per ogni problema con la tua chiave ECP, per favore inviaci un e-mail a contact@neuronality.com, ti aiuteremo il più velocemente che possiamo!', hr: 'Za bilo kakav problem sa vašom PEZ zaporukom, molimo pošaljite e-mail na contact@neuronality.com, Pomoći ćemo ti što prije možemo!', tr: 'SKİ Anahtarınızla İlgili Herhangi Bir Sorun İçin Lütfen contact@neuronality.com Adresine E-posta Gönderin, Elimizden Geldiğince Çabucak Yardım Edeceğiz!', cs: 'Při jakýchkoliv problémech s vaším PEK klíčem nás prosím kontaktujte (anglicky) na contact@neuronality.com, pomůžeme vám co nejdříve to bude možné!', sk: 'Pri akýchkolvek problémoch s vaším PEK klúčom nás prosím kontaktujte (anglicky) na: contact@neuronality.com, pomôžeme vám čo najskôr to bude možné!', id: 'Untuk masalah dengan kunci EKL Anda, silakan e-mail kami di contact@neuronality.com, kami akan membantu secepat kami bisa!', nl: 'Voor elk probleem met je ECP-sleutel kan je ons e-mailen op contact@neuronality.com en we zullen je zo snel mogelijk helpen!', ar: 'عن أي مشكلة مع مفتاح القائد النخبة يمر الخاص بك، يرجى مراسلتنا على :contact@neuronality.com، ونحن سوف تساعد في أقرب وقت ما نستطيع!', da: 'Hvis der er nogle problemer med din ECP-nøgle, bedes du kontakte os på contact@neuronality.com, så hjælper vi dig så snart vi kan!', pl: 'Masz problem ze swoim kluczem ECP? Skontaktuj się z nami na contact@neuronality.com, pomożemy najszybciej, jak to możliwe!', he: 'בכל בעיה עם הסיסמת מפקד עליון שלך, בבקשה תשלח אימייל אל contact@neuronality.com, אנחנו נעזור לך כמה שיותר מוקדם!', sv: 'Vid problem med din ECP-nyckel, var snäll och kontakta oss via e-post på contact@neuronality.com så hjälper vi till så snart vi kan!', ro: 'În cazul în care întâmpini probleme cu codul de la accesul de comandant de elită, te rugăm trimite-ne un email la: contact@neuronality.com, te vom ajuta cât mai curând!', zh: '如果您的 ECP 密钥有任何问题，请发送电子邮件至 contact@neuronality.com，我们会尽快帮您解决。', 'zh-tw': '對於您的ECP密鑰有任何問題，請發送電子郵件至contact@neuronality.com，我們將盡快幫助！', lt: 'Per qualsiasi problema con la tua chiave ECP, perfavore mandaci una e-mail a contact@neuronality.com, ti aiuteremo il più presto possibile!', az: 'SKI Kodunla Bağlı Problemin Varsa Xaiş Edirik contact@neuronaity.com Adresinə Mail Göndərin Əlimizdən Gələni Tez Edəcəyik', th: 'หาก ECP ของคุณมีปัญหา กรุณาติดต่อพวกเราได้ที่ contact@neuronality.com พวกเราจะช่วยคุณให้รวดเร็วที่สุด!', ko: 'ECP 코드에 문제가 있으면 contact@neuronality.com으로 전자 메일을 보내주십시오. 최대한 빨리 도와 드리겠습니다!', fa: 'در صورت هرگونه مشکل با حساب فرمانده نخبه لطفا با ایمیل contact@neuronality.com تماس بگیرید', el: 'Για οποιοδήποτε πρόβλημα με το ECP κλειδί σας, παρακαλούμε να μας στείλετε e-mail στο contact@neuronality.com, εμείς θα σας βοηθήσουμε το συντομότερο δυνατόν!' }, 'Thank you very much for your purchase. One last thing before you can start to play: just insert the ECP key you received by email in the box below.': { fr: 'Merci beaucoup pour votre achat. Une dernière chose avant de commencer à jouer : insérez la clé ECP que vous avez reçu par mail dans le champ ci-dessous.', es: 'Muchas gracias por tu compra. Una última cosa antes de que puedas empezar a jugar: simplemente inserta la clave ECP que has recibido por correo electrónico en el cuadro de abajo.', ja: 'ご購入ありがとうございます。最後に、Eメールで送られたECPキーを下のボックスに入れてください。', de: 'Vielen Dank für deinen Kauf. Eine letzte Sache noch, bevor du anfangen kannst zu spielen: Füge einfach den Elite-Ausweis-Code, den du per E-Mail erhalten hast, in das Feld unten ein.', pt: 'Muito obrigado pela sua compra. Mas antes que você possa começar a jogar: basta inserir a chave ECP que você recebeu por e-mail na caixa abaixo.', ru: 'Огромное спасибо за покупку! Последний шаг, перед тем как вы начнете играть: просто введите ключ, который вы получили по e-mail в поле снизу!', hu: 'Nagyon szépen köszönjük a vásárlást.Egy utolsó dolog mielőtt játszhatnál: csak másold be az alsó mezőbe a EKJ kulcsod amit email-ben kaptál meg.', it: 'Molte grazie per aver comprato. Ultima cosa prima di giocare: inserisci la chiave ECP che hai ricevuto per email nel box qui sotto.', hr: 'Puno hvala za tvoju kupnju. Još jedna stvar prije nego što počneš igrati: samo unesi PEZ ključ kojeg si dobio u e-mailu u prozor ispod.', tr: 'Satın Alımıın İçin Teşekkürler. Oynamaya Başlamadan Önce Son Bir Şey Kaldı: Emailden aldığın SKİ Anahtarını Aşağıdaki Kutuya Gir.', cs: 'Děkujeme za vaši koupi. Před tím, než začnete hrát, prosíme vložte svůj PEK klíč který jste obdrželi e-mailem do níže uvedeného pole.', sk: 'Ďakujeme vám za nákup. Posledná vec predtým, než začnete hrať: do poľa nižšie vložte kľúč PEK, ktorý ste dostali e-mailom.', id: 'Terima kasih banyak atas pembelian anda. Satu hal terakhir sebelum anda bisa mulai bermain: cukup masukkan tombal EKL yanga anda terima melaui emaul di kotak di bawah ini.', nl: 'Hartelijk dank voor je aankoop. Nog één ding voor je start te spelen: vul de ECP-sleutel die je ontving via email in in de box hieronder.', ar: 'شكرا جزيلا لكم على الشراء. آخر شيء قبل أن تتمكن من البدء في اللعب: فقط إدراج مفتاح قائد نخبة ممر الذي تلقيته عن طريق البريد الإلكتروني في المربع أدناه.', vi: 'Cảm ơn bạn rất nhiều. Một điều nữa trước khi bạn bắt đầu: hãy viết mã ECP của bạn được gửi trong e-mail của bạn', pl: 'Dziękujemy bardzo za Twój zakup! Jeszcze jedna rzecz zanim zaczniesz grać: proszę wpisz w poniższym polu klucz ECP, który otrzymałeś w e-mailu,', sv: 'Tack så mycket för ditt köp. Innan du börjar spela så måste du skriva in din ECP-nyckel (som du fick med e-post) i textrutan nedan.', ro: 'Multumesc foarte mult pentru achizitionare. Un singur lucru inainte de a incepe sa joci: doar pune codul ECP pe care l-ai primit prin email in casuta de mai jos.', zh: '非常感谢您的购买！最后一件事：在下方方框中输入您邮件中的ECP密匙', 'zh-tw': '非常感謝您的購買。 開始玩之前，您可以將您通過電子郵件收到的ECP密鑰插入下面的框中。', lt: 'Grazie molte per il tuo pagamento. Una ultima cosa prima di iniziare a giocare: basta inserire la chiave del ECP che hai ricevuto tramite email nel box sotto.', th: 'ขอบคุณที่อุดหนุน ก่อนที่คุณจะเริ่มเล่นเกม กรุณาใส่ ECP key ที่คุณได้รับจากอีเมลด้านล่าง', ko: '구입해 주셔서 대단히 감사드립니다. 아래 입력란에 ECP코드를 입력하고 플레이 하시면 됩니다.', fa: 'از شما بسیار سپاسگزاریم بابت خریدتان . اکنون میتوانید از طریق ایمیلی که دریافت کردید ، کد حساب فرمانده نخبه خود را در قسمت زیر وارد نمایید . ', el: 'Σας ευχαριστούμε πάρα πολύ για την αγορά σας. Ένα τελευταίο πράγμα πριν ξεκινήσετε το παιχνίδι: τώρα εισάγετε το ECP κλειδί σας που παραλάβατε στο email στο παρακάτω κουτί' }, 'Create your custom game': { fr: 'Créez votre propre partie privée personnalisée', es: 'Crea una partida perzonalizada', ja: 'カスタムゲームを始める', de: 'Dein eigenes Spiel erstellen', pt: 'Criar partida personalizada', ru: 'Создайте свою собственную игру и играйте с друзьями!', hu: 'Saját játék készítése', it: 'Crea la tua partita personalizzata', hr: 'Napravi svoju prilagođenu igru', tr: 'Ayarlı Oyununu Yarat', cs: 'Vytvoř si svou vlastní hru', sk: 'Vytvorte si vlastnú hru', id: 'Buat adat permainan anda', nl: 'Maak je gepersonaliseerde spel', ar: 'انشئ لعبتك المخصصة', vi: 'Sáng tạo chế độ chơi của bạn', pl: 'Stwórz swoją grę niestandardową', he: 'תיצור את המשחק המותאם אישית שלך', sv: 'Skapa din anpassade match', ro: 'Creează-ţi propriul tău meci', zh: '创建您自定义的游戏', 'zh-tw': '創建個人遊戲', lt: 'Crea la tua stanza personalizzata', az: 'Parametrli Oyununu Yarad', th: 'สร้างเกมของคุณเอง', ko: '나만의 게임 생성', fa: 'بازی دلخواهت رو بساز', el: 'Δημιουργήστε το εξατομικευμένο παιχνίδι σας' }, 'Create custom game': { fr: 'Créer une partie personnalisée', es: 'Crear partida perzonalizada', ja: 'カスタムゲームを始める', de: 'Eigenes Spiel erstellen', pt: 'Crie Jogo Personalizado', ru: 'Создать свою игру', hu: 'Játék készítés', it: 'Crea partita privata', hr: 'Napravi prilagođenu igru', tr: 'Özel Oyun Yarat', cs: 'Vytvořit vlastní hru', sk: 'Vytvoriť vlastnú hru', id: 'Buat adat permainan anda', nl: 'Maak gepersonaliseerd spel', ar: 'انشاء لعبة المخصصة', vi: 'Sáng tạo chế độ chơi', pl: 'Stwórz grę niestandardową', he: 'תיצור משחק מותאם אישית', sv: 'Skapa anpassad match', ro: 'Creează un meci oficial', zh: '创建自定义游戏', 'zh-tw': '創建自定義遊戲', lt: 'Crea stanza personalizzata', az: 'Xüsusi Oyun Yarad', th: 'สร้างเกมเอง', ko: '개인게임 생성', fa: 'بازی دلخواه را بساز', el: 'Δημιουργήστε εξατομικευμένο παιχνίδι' }, 'Private game': { fr: 'Partie privée', es: 'Partida privada', ja: 'プライベートモード', de: 'Privates Spiel', pt: 'Jogo Privado', ru: 'Своя игра', hu: 'Privát játék', it: 'Partita privata', hr: 'Privatna igra', tr: 'Özel Oyun', cs: 'Soukromá hra', sk: 'Súkromná hra', id: 'Permainan privasi', nl: 'Privéspel', ar: 'لعبة خاصة', pl: 'Prywatna gra', he: 'משחק פרטי', sv: 'Privat match', ro: 'Meci privat', zh: '私人游戏', 'zh-tw': '私人遊戲', lt: 'Gioco privato', az: 'Xüsusi Oyun Yarad', th: 'เกมส่วนตัว', ko: '비공개 게임', fa: 'بازی خصوصی', el: 'Ιδιωτικό παιχνίδι' }, 'Private game creation failed': { fr: 'La création de la partie privée a échoué', es: 'Fallo en la creación de la partida privada', ja: 'プライベートモード開始に失敗しました', de: 'Erstellung des privaten Spiels fehlgeschlagen', pt: 'Criação de partida privada falhou', ru: 'Ошибка создания своей игры', hu: 'Privát játék készítése sikertelen', it: 'Fallita creazione partita privata', hr: 'Pravljenje privatne igre nije dostupno', tr: 'Özel Oda Yaratma Başarısız', cs: 'Vytvoření hry se nezdařilo', sk: 'Vytvorenie hry sa nepodarilo', id: 'Pembuatan permainan privasi gagal', nl: 'Privéspel maken mislukt', ar: 'فشل في إنشاء لعبة خاصة', pl: 'Tworzenie prywatnej gry nie powiodło się', he: 'יצירת המשחק הפרטי נכשלה', sv: 'Skapandet av privat match misslyckades', ro: 'Creearea unui meci privat a dat greş', zh: '私人游戏创建失败', 'zh-tw': '私人遊戲創建失敗', lt: 'Creazione gioco privato fallito', az: 'Xüsusi Oyun Yaradmaq Səhv', th: 'การสร้างเกมส่วนตัวล้มเหลว', ko: '비공개 게임 생성에 실패했습니다.', fa: 'بازی خصوصی ساختن شکست خورد', el: 'Αποτυχία δημιουργίας ιδιωτικού παιχνιδιού' }, 'Game mode': { fr: 'Mode de jeu', es: 'Modo de Juego', ja: 'ゲームモード', de: 'Spielmodus', pt: 'Modo de Jogo', ru: 'Режим игры', hu: 'Játékmód', it: 'Modalità di gioco', hr: 'Vrsta igre', tr: 'Oyun Modu', cs: 'Herní mód', sk: 'Herný mód', id: 'Mode permainan', nl: 'Spelmodus', ar: 'نمط اللعب', vi: 'Chế độ chơi', pl: 'Tryb gry', he: 'מצב משחק', sv: 'Spelläge', ro: 'Modul de joc', zh: '游戏模式', 'zh-tw': '遊戲模式', lt: 'aidimo tipas', az: 'Oyun Modu', th: 'โหมดเกม', ko: '게임모드', fa: 'حالت بازی', el: 'Τύπος παιχνιδιού' }, 'Team mode options': { fr: 'Options du mode équipe', es: 'Opciones del Modo Equipo', ja: 'チームモード設定', de: 'Teammodus-Optionen', pt: 'Opções do Modo Time', ru: 'Опции командной игры', hu: 'Csapatjáték beállítások', it: 'Opzioni Team mode', hr: 'Postavke vrste tima ', tr: 'Takım Modu Ayarları', cs: 'Možnosti týmového módu', sk: 'Možnosti týmového módu', id: 'Pengaturan mode Tim', nl: 'Team modus opties', ar: 'خيارات نمط الفريق', vi: 'Tùy chỉnh chế độ đồng đội', pl: 'Opcje trybu drużynowego', he: 'הגדרות מצב משחק קבוצות', sv: 'Laglägesinställningar', ro: 'Opţiuni mod pe echipe', zh: '团队模式选项', 'zh-tw': '團隊模式設定', lt: 'Komandinio žaidimo nustatymai', az: 'Qrup Modu Parametrləri', th: 'ตัวเลือกของโหมดทีม', ko: '팀모드 옵션', fa: 'اختیارات حالت تیمی', el: 'Ρυθμήσεις ομαδικού παιχνιδιού' }, 'Station Size': { fr: 'Taille des stations', es: 'Tamaño de la Estación', ja: '基地の大きさ', de: 'Basisgröße', pt: 'Tamanho da Base', ru: 'Размер станции', hu: 'Bázis nagyság', it: 'Grandezza Stazione', hr: 'Veličina postaje', tr: 'İstasyon Büyüklüğü', cs: 'Velikost základny', sk: 'Velkosť stanice', id: 'Besar Stasiun', nl: 'Stationgrootte', ar: 'حجم المحطة', vi: 'Kích thước trạm', pl: 'Wielkość stacji', he: 'גודל התחנה', sv: 'Stationsstorlek', ro: 'Dimensiunea staţiei', zh: '地图尺寸', 'zh-tw': '太空站尺寸', lt: 'Stoties dydis', az: 'Baza Böyüklüyü', th: 'ขนาดของสถานี', ko: '기지 크기', fa: 'اندازه ایستگاه', el: 'Μέγεθος Σταθμού' }, 'Station Crystal Capacity': { fr: 'Capacité station (gemmes)' }, 'Station Repair Threshold': { fr: 'Seuil de réparation' }, 'Station Regeneration': { fr: 'Régénération de la station' }, 'Healing Enabled': { fr: 'Mode Soin activé' }, 'Lasers Operation': { fr: 'Action des lasers' }, Offensive: { fr: 'Mode attaque' }, Healing: { fr: 'Mode soin' }, Tiny: { fr: 'Mini', es: 'Enana', ja: 'とても小さい', de: 'Winzig', pt: 'Pequenininho', ru: 'Очень маленькая', hu: 'Apró', it: 'Minuscolo', hr: 'Sitno', tr: 'Küçücük', cs: 'Velmi malá', sk: 'Veľmi malá', id: 'Kecil sekali', nl: 'Mini', ar: 'صغيرة جدا', vi: 'Nhỏ', pl: 'Malutka', he: 'קטנטן', sv: 'Pytteliten', ro: 'Minuscul', zh: '微型', 'zh-tw': '迷你', lt: 'Mini', az: 'Lap Balaca', th: 'เล็กมาก', ko: '아주작은', fa: 'باریک', el: 'Μικροσκοπικός' }, Small: { fr: 'Petite', es: 'Pequeña', ja: '小さい', de: 'Klein', pt: 'Pequeno', ru: 'Маленькая', hu: 'Kicsi', it: 'Piccolo', hr: 'Malo', tr: 'Küçük', cs: 'Malá', sk: 'Malá', id: 'Kecil', nl: 'Klein', ar: 'صغيرة', vi: 'Bé', pl: 'Mała', he: 'קטן', sv: 'Liten', ro: 'Mic', zh: '小型', 'zh-tw': '小', lt: 'Mažas', az: 'Balaca', th: 'เล็ก', ko: '작음', fa: 'کوچک', el: 'Μικρός' }, Average: { fr: 'Moyenne', es: 'Normal', ja: '普通', de: 'Durchschnittlich', pt: 'Normal', ru: 'Нормальная', hu: 'Közepes', it: 'Normale', hr: 'Prosječno', tr: 'Orta', cs: 'Střední', sk: 'Stredná', id: 'Sedang', nl: 'Gemiddeld', ar: 'متوسطة', vi: 'Trung bình', pl: 'Umiarkowana', he: 'ממוצע', sv: 'Mellan', ro: 'Mediu', zh: '中等', 'zh-tw': '中', lt: 'Vidutinis', az: 'Orta', th: 'ปานกลาง', ko: '기본', fa: 'میانگین', el: 'Μέσος όρος' }, Big: { fr: 'Grande', es: 'Grande', ja: '大きい', de: 'Groß', pt: 'Grande', ru: 'Большая', hu: 'Nagy', it: 'Grande', hr: 'Veliko', tr: 'Büyük', cs: 'Velká', sk: 'Veľká', id: 'Besar', nl: 'Groot', ar: 'كبيرة', vi: 'To', pl: 'Duża', he: 'גדול', sv: 'Stor', ro: 'Mare', zh: '大型', 'zh-tw': '大', lt: 'Didelis', az: 'Böyük', th: 'ใหญ่', ko: '큼', fa: 'بزرگ', el: 'Μεγάλος' }, Huge: { fr: 'Immense', es: 'Enorme', ja: '巨大', de: 'Riesig', pt: 'Gigante', ru: 'Огромная', hu: 'Óriási', it: 'Enorme', hr: 'Ogromno', tr: 'Devasa', cs: 'Obrovská', sk: 'Obrovská', id: 'Sangat Besar', nl: 'Gigantisch', ar: 'ضخمة', vi: 'Rộng ', pl: 'Ogromna', he: 'ענק', sv: 'Gigantisk', ro: 'Imens', zh: '超大', 'zh-tw': '超大', lt: 'Milžiniškas', az: 'Nəhəng', th: 'ใหญ่มาก', ko: '아주 큼', fa: 'عظیم', el: 'Τεράστιος' }, 'Server location': { fr: 'Emplacement du serveur', es: 'Ubicación del servidor', ja: 'サーバーの場所', de: 'Serverstandort', pt: 'Localização do Servidor', ru: 'Расположение сервера', hu: 'Szerver helye', it: 'Luogo del server', hr: 'Lokacija poslužitelja', tr: 'Sunucu Konumu', cs: 'Poloha serveru', sk: 'Poloha servera', id: 'Lokasi server', nl: 'Serverlocatie', ar: 'منطقة الخادم', vi: 'địa điểm server', pl: 'Lokalizacja serwera', he: 'מיקום הסרבר', sv: 'Serverplats', ro: 'Locaţia serverului', zh: '服务器位置', 'zh-tw': '伺服器位置', lt: 'Serverio vieta', az: 'Oyun Yeri', th: 'ตำแหน่งของเซิฟเวอร์', ko: '서버 위치', fa: 'مکان سرور', el: 'Τοποθεσία server' }, 'Map name': { fr: 'Nom de la carte', es: 'Nombre del mapa', ja: 'マップ名', de: 'Kartenname', pt: 'Nome do mapa', ru: 'Название карты', hu: 'Térkép neve', it: 'Nome della mappa', hr: 'Naziv mape', tr: 'Harita Adı', cs: 'Jméno mapy', sk: 'Meno mapy', id: 'Nama peta', nl: 'Kaartnaam', ar: 'اسم الخريطة', vi: 'Tên bản đồ', pl: 'Nazwa mapy', he: 'שם מפה', sv: 'Kartnamn', ro: 'Numele hărţii', zh: '地图名称', 'zh-tw': '地圖名稱', lt: 'Žemėlapio pavadinimas', az: 'Xəritə Adı', th: 'ชื่อแผนที่', ko: '지도 이름', fa: 'نام نقشه', el: 'Όνομα χάρτη' }, 'Map pattern': { fr: 'Type de carte', es: 'Estilo del mapa', ja: 'マップの種類', de: 'Kartenmuster', pt: 'Estilo do Mapa', ru: 'Тип карты', hu: 'Térkép mintázata', it: 'Modello della mappa', hr: 'Uzorak mape', tr: 'Harita Patenti', cs: 'Vzhled mapy', sk: 'Vzor mapy', id: 'Nama pola', nl: 'Kaartpatroon', ar: 'نمط الخريطة', vi: 'Mẫu bản đồ', pl: 'Szablon mapy', he: 'דפוס מפה', sv: 'Kartmönster', ro: 'Modelul hărţii', zh: '地图模式', 'zh-tw': '地圖模式', lt: 'Žemėlapio šablonas', az: 'Xəritə Patenti', th: 'รูปแบบของแผนที่', ko: '지도 종류', fa: 'آرایَ نقشه', el: 'Πρότυπος χάρτης' }, 'Random map name': { fr: 'Nom aléatoire', es: 'Nombre del mapa aleatorio', ja: 'ランダムマップ名', de: 'Zufälliger Kartenname', pt: 'Nome aleatório de mapa', ru: 'Случайное название карты', hu: 'Véletlenszerű térképnév', it: 'Nome random della mappa', hr: 'Nasumičan naziv mape', tr: 'Rasgele Harita Adı', cs: 'Náhodné jméno mapy', sk: 'Náhodné meno mapy', id: 'Nama peta acak', nl: 'Willekeurige kaartnaam', ar: 'اسم عشوائي للخريطة', vi: 'tên bản đồ ngẫu nhiên', pl: 'Dowolna nazwa mapy', he: 'שם מפה אקראי', sv: 'Slumpmässigt kartnamn', ro: 'Un nume aleator al hărţii', zh: '随机地图名称', 'zh-tw': '隨機地圖名稱', lt: 'Atsitiktinis žemėlapio pavadinimas', az: 'Bexdexuda Xəritə Adı', th: 'สุ่มชื่่อแผนที่', ko: '무작위 지도 이름', fa: 'نام نقشه اتفاقی', el: 'Τυχαίο όνομα χάρτη' }, 'Max players': { fr: 'Joueurs max', es: 'Número máximo de jugadores', ja: '最大人数', de: 'Max. Spieler', pt: 'Máximo de jogadores', ru: 'Максимальное количество игроков', hu: 'Maximum játékos', it: 'Numero massimo di giocatori', hr: 'Maksimalno igrača', tr: 'Maximum Oyuncular', cs: 'Maximum hráčů', sk: 'Maximum hráčov', id: 'Player penuh', nl: 'Maximum aantal spelers', ar: 'اكبر عدد من اللعبين', vi: 'Số lượng người chơi có hạn', pl: 'Maksymalna liczba graczy', he: 'מספר שחקנים מקסימלי', sv: 'Högsta antal spelare', ro: 'Numărul maxim de playeri:', zh: '最多玩家数', 'zh-tw': '可容納玩家數', lt: 'Max žaidėjų', az: 'Maksimum Oyunçu', th: 'ผู้เล่นสูงสุด', ko: '최대 플레이어', fa: 'حداکثر بازیکنان', el: 'Μέγιστος αριθμός παικτών' }, 'Crystal value': { fr: 'Valeur des cristaux', es: 'Valor del cristal', ja: 'クリスタル値', de: 'Kristallwert', pt: 'Valor do cristal', ru: 'Ценность кристаллов', hu: 'Kristály szám', it: 'Valore del Cristallo', hr: 'Vrijednost kristala', tr: 'Kristal Değeri', cs: 'Hodnota krystalů', sk: 'Hodnota kryštálov', id: 'Nilai permata', nl: 'Kristalwaarde', ar: 'قيمة الكريستال', vi: 'Số lượng tinh thể', pl: 'Wartość kryształów', he: 'ערך הקריסטלים', sv: 'Kristallvärde', ro: 'Valoarea cristalelor', zh: '水晶价值', 'zh-tw': '水晶價格', lt: 'Kristalų vertė', az: 'Almaz Dəyəri', th: 'ค่าคริสตัล', ko: '크리스탈 값', fa: 'ارزش کریستال', el: 'Αξία κρυστάλλου' }, None: { fr: 'Aucune', es: 'Ninguno', ja: 'なし', de: 'Keiner', pt: 'Nenhum', ru: 'Нет', hu: 'Semmi', it: 'Niente', hr: 'Nijedan', tr: 'Yok', cs: '0', sk: '0', id: 'Tidak ada', nl: 'Geen probleem', ar: 'لا شيء', vi: 'Không', pl: 'Żadna', he: 'כלום', sv: 'Inget', ro: 'Deloc', zh: '无', 'zh-tw': '無', lt: 'Jokia', az: 'Yox', th: 'ไม่มี', ko: '없음', fa: 'هیچ', el: 'Κανένας' }, Default: { fr: 'Par défaut', es: 'Predeterminado', ja: '既定', de: 'Standard', pt: 'Padrão', ru: 'По умолчанию', hu: 'Alapértelmezett', it: 'Predefinito', hr: 'Zadano', tr: 'Normal', cs: 'Normální', sk: 'Štandardné', id: 'Biasanya', nl: 'Standaard', ar: 'افتراضي', vi: 'Mặc định', pl: 'Standardowa', he: 'ברירת מחדל', sv: 'Standard', ro: 'Standard', zh: '默认', 'zh-tw': '默認', lt: 'Numatyta', az: 'Normal', th: 'ค่าเริ่มต้น', ko: '기본', fa: 'پیش فرض', el: 'Αθετώ' }, 'Map Size': { fr: 'Taille de la carte', es: 'Tamaño del mapa', ja: 'マップの大きさ', de: 'Kartengröße', pt: 'Tamanho do mapa', ru: 'Размер карты', hu: 'Pálya nagyság', it: 'Grandezza mappa', hr: 'Veličina mape', tr: 'Harita Büyüklüğü', cs: 'Velikost mapy', sk: 'Velkosť mapy', id: 'Besar peta', nl: 'Kaart grootte', ar: 'حجم الخريطة', vi: 'Kích thước bản đồ', pl: 'Rozmiar mapy', he: 'גודל מפה', sv: 'Kartstorlek', ro: 'Dimensiunea hărţii', zh: '地图尺寸', 'zh-tw': '地圖尺寸', lt: 'emėlapio dydis', az: 'Xəritə Böyüklüyü', th: 'ขนาดแผนที่', ko: '지역 크기', fa: 'اندازه نقشه', el: 'Μέγεθος χάρτη' }, 'Map Density': { fr: 'Densité de la carte', es: 'Densidad del mapa', ja: 'マップの密度', de: 'Kartendichte', pt: 'Densidade do mapa', ru: 'Количество астероидов', hu: 'Térkép Sűrűsége', it: 'Densità mappa', hr: 'Gustoća', tr: 'Harita Yoğunluğu', cs: 'Hustota mapy', sk: 'Hustota mapy', id: 'Kepadatan peta', nl: 'Kaart dichtheid', ar: 'الكثافة الخريطة', vi: 'Mật độ bản đồ', pl: 'Gęstość mapy', he: 'צפיפות מפה', sv: 'Kartdensitet', ro: 'Densitatea hărţii', zh: '地图密度', 'zh-tw': '地圖密度', lt: 'Žemėlapio tankumas', az: 'Xəritə Yoğunluğu', th: 'ความหนาแน่นของแผนที่', ko: '지역 밀도', fa: 'شعاع نقشه', el: 'Πυκνότητα χάρτη' }, 'Asteroids strength': { fr: 'Résistance des astéroïdes', es: 'Resistencia de los asteroides', ja: '小惑星強度', de: 'Asteroidenstärke', pt: 'Resistência do asteróide', ru: 'Прочность астероидов', hu: 'Aszteroida erő', it: 'Forza asteroidi', hr: 'Izdržljivost astereoida', tr: 'Astroid Dayanıklılığı', cs: 'Tvrdost asteroidů', sk: 'Sila asteoridov', id: 'kekuatan asteroid', nl: 'Asteroïden sterkte', ar: 'قوة الكويكبات', vi: 'Độ cứng thiên thạch', pl: 'Wytrzymałość asteroid', he: 'חוזק אסטרואידים', sv: 'Asteroidstyrka', ro: 'Rezistenţa asteroizilor', zh: '小行星强度', 'zh-tw': '隕石強度', lt: 'Asteroidų stiprumas', az: 'Adtroid Dayanıqlılığı', th: 'ความทนทานของอุกกาบาต', ko: '소행성 강도', fa: 'مقاومت سیارک ها', el: 'Αντοχή αστεροειδούς' }, Sparse: { fr: 'Clairsemé', es: 'Escaso', ja: '疎', de: 'Spärlich', pt: 'Disperso', ru: 'Мало', hu: 'Gyenge', it: 'Disperso', hr: 'Rasprštenost', tr: 'Seyrek', cs: 'Řídká', sk: 'Riedky', id: 'Tipis', nl: 'Schaars', ar: 'متناثر', vi: 'Thưa thớt', pl: 'Niska', he: 'דליל', sv: 'Gles', ro: 'Slab', zh: '弱', 'zh-tw': '弱', lt: 'retas', az: 'Seyrək', th: 'เบาบาง', ko: '부족한', fa: 'پراکنده', el: 'Αραιός' }, Normal: { fr: 'Normal', es: 'Normal', ja: '普通', de: 'Normal', pt: 'Normal', ru: 'Нормально', hu: 'Normál', it: 'Normale', hr: 'Normalno', tr: 'Normal', cs: 'Normální', sk: 'Normálny', id: 'Normal', nl: 'Normaal', ar: 'عادي', vi: 'Bình thường', pl: 'Zwykła', he: 'רגיל', sv: 'Normal', ro: 'Normal', zh: '中', 'zh-tw': '一般', lt: 'normalus', az: 'Normal', th: 'ปานกลาง', ko: '일반', fa: 'معمولی', el: 'Κανονικός' }, Heavy: { fr: 'Dense', es: 'Pesado', ja: '密', de: 'Schwer', pt: 'Pesado', ru: 'Много', hu: 'Erős', it: 'Pesante', hr: 'Teško', tr: 'Ağır', cs: 'Hustá', sk: 'Hustý', id: 'Berat', nl: 'Zwaar', ar: 'ثقيل', vi: 'Nặng', pl: 'Duża', he: 'כבד', sv: 'Tät', ro: 'Puternic', zh: '强', 'zh-tw': '強', lt: 'tankus', az: 'Ağır', th: 'หนาแน่น', ko: '무거움', fa: 'سنگین', el: 'Βαρύς' }, 'Number of teams': { fr: "Nombre d'équipes", es: 'Número de equipos', ja: 'チームの数', de: 'Teamanzahl', pt: 'Número de equipes', ru: 'Количество команд', hu: 'Csapatok száma', it: 'Numero di teams', hr: 'Broj timova', tr: 'Takım Sayısı', cs: 'Počet týmů', sk: 'Počet týmov', id: 'Jumlah tim', nl: 'Aantal teams', ar: 'عدد الفرق', vi: 'Số đội', pl: 'Liczba drużyn', he: 'מספר קבוצות', sv: 'Antal lag', ro: 'Numărul echipelor', zh: '团队数', 'zh-tw': '團隊數', lt: 'Komandų skaičius', az: 'Qrup Sayısı', th: 'จำนวนทีม', ko: '팀 갯수', fa: 'شماره تیم ها', el: 'Αριθμός ομάδων' }, 'Starting ship': { fr: 'Vaisseau de départ', es: 'Nave inicial', ja: '初期船', de: 'Startschiff', pt: 'Nave inicial', ru: 'Начальный корабль', hu: 'Kezdő hajó', it: 'Ship di partenza', hr: 'Početna letjelica', tr: 'Başlangıç Gemisi', cs: 'Startovní loď', sk: 'Štartovná loď', id: 'Memulai kapal', nl: 'Startschip', ar: 'سفينة البداية', vi: 'Tàu bắt đầu', pl: 'Początkowy statek', he: 'ספינה התחלתית', sv: 'Startskepp', ro: 'Nava de start', zh: '起始船舰', 'zh-tw': '起始船艦', lt: 'Pradedantis laivas', az: 'Başlanğıç Robotu', th: 'ยานเริ่มต้น', ko: '시작시 우주선', fa: 'سفینه شروع', el: 'Πρωταρχικό διαστημόπλοιο' }, Maxed: { fr: 'Maxé', es: 'Máximo', ja: '最大', de: 'Maximales Level', pt: 'Maximizado', ru: 'Максимальный', hu: 'Maxolva', it: 'Massimo', hr: 'Maxed', tr: 'En Yükseğe Ulaşıldı', cs: 'Maximalizovaná', sk: 'Maximum', id: 'Terpenuhi', nl: 'Gemaximaliseerd', ar: 'اخر ترقية', vi: 'Tối đa', pl: 'Maksymalnie ulepszony', he: 'מירבי', sv: 'Maxad', ro: 'Maxat', zh: '最高', 'zh-tw': '最大', lt: 'Maksimumas', az: 'En Yüksək Çatdı', th: 'เต็มแล้ว', ko: '최대', fa: 'حداکثر', el: 'Μεγιστοποιώ' }, Level: { fr: 'Niveau', es: 'Nivel', ja: 'レベル', de: 'Level', pt: 'Nível', ru: 'Уровень', hu: 'Szint', it: 'Livello', hr: 'Razina', tr: 'Seviye', cs: 'Level', sk: 'Level', id: 'Tingkat', nl: 'Level', ar: 'مستوى', vi: 'Cấp độ', pl: 'Poziom', he: 'שלב', sv: 'Nivå', ro: 'Nivel', zh: '等级', 'zh-tw': 'Lv.', lt: 'Lygis', az: 'Səviyə', th: 'เลเวล', ko: '레벨', fa: 'سطح', el: 'Επίπεδο' }, 'Number of lives': { fr: 'Nombre de vies', es: 'Número de vidas', ja: 'ライフ数', de: 'Anzahl der Leben', pt: 'Número de vidas', ru: 'Количество жизней', hu: 'Életszám', it: 'Numero di vite', hr: 'Broj života', tr: 'Hayat Sayısı', cs: 'Počet životů', sk: 'Počet životov', id: 'Jumlah hidup', nl: 'Aantal levens', ar: 'عدد الأرواح', vi: 'Số mạng sống', pl: 'Liczba żyć', he: 'מספר חיים', sv: 'Antal liv', ro: 'Numărul de vieţi', zh: '生命数', 'zh-tw': '生命', lt: 'Gyvybių skaičius', az: 'Həyat Sayısı', th: 'จำนวนชีวิต', ko: '잔여 생명', fa: 'شماره لایو ها', el: 'Αριθμός ζωών' }, 'Max ship level': { fr: 'Vaisseau de niveau max', es: 'Máximo nivel de la nave', ja: '最大船レベル', de: 'Maximales Schiffslevel', pt: 'Nível máximo da nave', ru: 'Максимальный уровень корабля', hu: 'Maximum űrhajó szint', it: 'Massimo livello della nave', hr: 'Maksimalna razina letjelica', tr: 'En Yüksek Gemi Seviyesi', cs: 'Maximální level lodi', sk: 'Maximálny level lodí', id: 'Tingkat kapal maksimal', nl: 'Maximale schiplevel', ar: 'اكبر مستوى السفينة', vi: 'Tối đa cấp độ tàu', pl: 'Maksymalny poziom statku', he: 'רמת ספינה מירבית', sv: 'Högsta skeppnivån', ro: 'Levelul maxim al navei', zh: '最高船舰等级', 'zh-tw': '最大船艦等級', lt: 'Maksimalus laivo lygis', az: 'En Yüksək Robot Səviyəsi', th: 'จำนวนสูงสุดของยาน', ko: '최대대 우주선 레벨', fa: 'حداکثر سطح سفینه', el: 'Μέγιστο επίπεδο διαστημόπλοιου' }, 'RCS Toggle': { fr: 'Switch RCS', es: 'Palanca RCS', ja: 'RCSトグル', de: 'RCS-Schalter', pt: 'RCS Toggle', ru: 'Переключение RCS', hu: 'RSC Váltás', it: 'Pulsante RCS', hr: 'RCS efekt', tr: 'RKS Aktif', cs: 'Nastavení RCS', sk: 'Nastavenie RCS', id: 'Toggelisasi RCS', nl: 'RCS aan/uit', ar: 'تبديل الرسس', vi: 'Nút RCS', pl: 'Włącz/wyłącz RCS', he: 'החלפת מצב RCS', sv: 'RCS-Aktivering', ro: 'Activarea RCS', zh: 'RCS 切换', 'zh-tw': 'RCS開關', lt: 'RCS jungiklis', az: 'RCS Aktiv', th: 'ตัว RCS', ko: 'RCS토글', fa: 'حرکت پیوسته', el: 'RCS κουμπί εναλλαγής' }, 'Friction ratio': { fr: 'Friction', es: 'Fricción', ja: '摩擦係数', de: 'Reibungsgrad', pt: 'Relação de atrito', ru: 'Частота движения', hu: 'Súrlódási arány', it: 'Rapporto di attrito', hr: 'Učinak trenja', tr: 'Süzülme Oranı', cs: 'Síla tření', sk: 'Sila trenia', id: 'Friksi ratio', nl: 'Wrijvingsratio', ar: 'نسبة الاحتكاك', vi: 'Tỉ số ma sát', pl: 'Współczynnik tarcia', he: 'יחס חיכוך', sv: 'Friktionsförhållande', ro: 'Rata frecării', zh: '摩擦比', 'zh-tw': '摩擦率', lt: 'Trinties santykis', az: 'Süzülma Faizi', th: 'อัตราของแรงเสียดทาน', ko: '마찰 비', fa: 'نسبت حساسیت', el: 'Αναλογία τριβής' }, 'Ship Speed': { fr: 'Vitesse des vaisseaux', es: 'Velocidad de la nave', ja: '船の速度', de: 'Schiffsgeschwindigkeit', pt: 'Velocidade da Nave', ru: 'Скорость корабля', hu: 'Hajó sebessége', it: 'Velocita nave', hr: 'Brzina broda', tr: 'Gemi Hızı', cs: 'Rychlost lodí', sk: 'Rýchlosť lodí', id: 'Kecepatan Kapal', nl: 'Schipsnelheid', ar: 'سرعة السفينة', vi: 'Tốc độ tàu', pl: 'Prędkość statku', he: 'מהירות הספינה', sv: 'Skeppshastighet', ro: 'Viteza navetelor', zh: '船速', 'zh-tw': '速度', lt: 'Laivo greitis', az: 'Robot Sürəti', th: 'ความเร็วของยาน', ko: '함속', fa: 'سرعت سفینه', el: 'Ταχύτητα Διαστημόπλοιου' }, 'Survival Triggers': { fr: 'Déclenchement du mode survie', es: 'Desencadenador del Modo Supervivencia', ja: 'サバイバルモードのトリガ', de: 'Überlebensmodus-Auslöser', pt: 'Ativador do Modo Sobrevivência', ru: 'Условие включения режима выживания', hu: 'Túléló mód aktiválása', it: 'Innescamenti per Sopravvivenza', hr: 'Survival okidači', tr: 'Hayatta Kalma Tetikleyicisi', cs: 'Spouštěče survival módu', sk: 'Spúšťač survival módu', id: 'Pemicu bertahan hidup', nl: 'Overlevingsmodus ontketening', ar: 'مشغلات البقاء على قيد الحياة', vi: 'Triggers sống sót', pl: 'Przetrwanie rozpoczyna się', he: 'מפעילי הישרדות', sv: 'Överlevnadstriggare', ro: 'Survival activat', zh: '生存触发器', 'zh-tw': '觸發生存模式', lt: 'Išgyvenimo gaidukas', az: 'Həyatda Qalma Köməkcisi', th: 'ตัวเริ่มเปิดการเอาชีวิตรอด', ko: '생존 트리거', fa: 'ماشه های بقا', el: 'Εναύσματα Επιβίωσης' }, Time: { fr: 'Temps', es: 'Tiempo', ja: '時間', de: 'Zeit', pt: 'Tempo', ru: 'Время', hu: 'Idő', it: 'Tempo', hr: 'Vrijeme', tr: 'Süre', cs: 'Čas', sk: 'Čas', id: 'Waktu', nl: 'Tijd', ar: 'الوقت', vi: 'Thời gian', pl: 'Czas', he: 'זמן', sv: 'Tid', ro: 'Timp', zh: '时间', 'zh-tw': '時間', lt: 'Laikas', az: 'Vaxt', th: 'เวลา', ko: '시간', fa: 'زمان', el: 'Ώρα' }, '%s minutes': { fr: '%s minutes', es: '%s minutos', ja: '%s分', de: '%s Minuten', pt: '%s Minutos', ru: '%s минут', hu: '%s perc', it: '%s minuti', hr: '%s minuta', tr: '%s Dakika', cs: '%s minut', sk: '%s minút', id: '%s menit', nl: '%s minuten', ar: '%s دقائق', vi: '%s phút', pl: '%s minut', he: '%s דקות', sv: '%s minuter', ro: '%s minute', zh: '%s 分钟', 'zh-tw': '%s分鐘', lt: '%s Minučių(ė)', az: '%s Dəqiqə', th: '%s นาที', ko: '%s 분', fa: 'به مدت %s دقیقه', el: '%s λεπτά' }, Infinite: { fr: 'Infini', es: 'Infinito', ja: '無限', de: 'Unendlich', pt: 'Infinito', ru: 'Бесконечно', hu: 'Végtelen', it: 'Infinito', hr: 'Beskonačni', tr: 'Sonsuz', cs: 'Nekonečný', sk: 'Nekonečný', id: 'Tidak terbatas', nl: 'Oneindig', ar: 'غير محدود', vi: 'Vô hạn', pl: 'Nieograniczony', he: 'אינסופי', sv: 'Obegränsat', ro: 'Infinit', zh: '无限', 'zh-tw': '無限', lt: 'Begalinis', az: 'Sonsuz', th: 'ไม่จำกัด', ko: '무한', fa: 'بی نهایت', el: 'Άπειρος' }, 'Your custom game': { fr: 'Votre partie personnalisée', es: 'Tu partida personalizada', ja: 'カスタムゲーム', de: 'Dein eigenes Spiel', pt: 'Seu Jogo Personalizado', ru: 'Ваша игра', hu: 'A saját játékod', it: 'La tua partita privata', hr: 'Tvoja prilagođena igra', tr: 'Özel Oyunun', cs: 'Vaše vlastní hra', sk: 'Vaša vlastná hra', id: 'Permainan adat anda', nl: 'Jouw gepersonaliseerde spel', ar: 'لعبتك المخصصة', pl: 'Twoja niestandardowa gra', he: 'המשחק המותאם שלך', sv: 'Din anpassade match', ro: 'Jocul tău', zh: '您的自定义游戏', 'zh-tw': '你的個人化遊戲', lt: 'Jūsų sukurtas žaidimas', az: 'Xüsusi Oyun', th: 'เกมของคุณ', ko: '사용자 정의 게임', fa: 'بازی شخصی شما', el: 'Το εξατομικευμένο παιχνίδι σας' }, 'Your custom game was successfully created. You can now invite people with the link below:': { fr: 'Votre partie personnalisée a été créée avec succès. Vous pouvez inviter des amis grâce au lien ci-dessous :', es: 'Tu partida personalizada se creó correctamente. Ahora puedes invitar a otros jugadores con el siguiente enlace:', ja: 'カスタムゲームが正常に作成されました。 以下のリンクから友人を招待することができます：', de: 'Dein eigenes Spiel wurde erfolgreich erstellt. Du kannst jetzt Leute mit diesem Link einladen:', pt: 'Seu jogo Personalizado foi Criado! Você pode convidar o povo usando esse link:', ru: 'Ваша игра успешно создана. Вы можете пригласить людей по ссылке ниже:', hu: 'A saját játékod sikeresen elkészült. Mostantól ezen a linken tudsz embereket hívni:', it: 'La tua partita privata è stata creata. Ora puoi invitare persone con il link seguente:', hr: 'Tvoja prilagođena igra uspješno je stvorena. Sada možeš pozvati igrače s linkom ispod:', tr: 'Özel Oyunun Başarıyla Yaratıldı. Şimdi Odana Aşağıdaki Link ile İnsanları Davet Edebilirsin:', cs: 'Vaše vlastní hra byla úspěšně vytvořena. Nyní můžete pozvat další hráče pomocí odkazu níže:', sk: 'Vaša vlastná hra bola úspešne vytvorená. Teraz môžeš pozvať ľudí s pomocou odkazu nižšie:', id: 'Permainan adat anda telah dibuat dengan sukses. Anda sekarang bisa mengundang orang dengan link dibawah ini:', nl: 'Jouw gepersonaliseerde spel werd met succes gecreëerd. Je kan nu mensen uitnodigen met onderstaande link:', ar: 'تم إنشاء اللعبة المخصصة بنجاح. يمكنك الآن دعوة الأشخاص الذين لديهم الرابط أدناه:', pl: 'Twoja niestandardowa gra została pomyślnie utworzona. Możesz teraz zaprosić do niej graczy za pomocą poniższego linku:', he: 'המשחק המותאם שלך נוצר בהצלחה. אתה יכול להזמין אנשים עם הלינק הבא:', sv: 'Din anpassade match är skapad. Med länken nedan kan du bjuda in andra spelare.', ro: 'Jocul tău a fost creat cu succes. Acum poţi invita oameni cu ajutorul link-ului de mai jos:', zh: '您的自定义游戏已创建。可以用下面的链接邀请朋友了：', 'zh-tw': '您的自定義遊戲已成功創建。用下面的鏈接邀請朋友吧：', lt: 'Jūsų žaidimas sukurtas sėkmingai. Galite kviesti žmones naudodamiesi šiuo adresu žemiau:', az: 'Xüsusi Oyun Yaradıldı. Indi Otağına Aşağıdakı Link ilə Insanları Dəvət Edə Bilərsən', th: 'สร้างเกมของคุณเรียบร้อยแล้ว คุณสามารถเชิญคนได้ด้วยลิงค์ข้างล่างนี้:', ko: '사용자 지정 게임이 성공적으로 만들어졌습니다. 이제 아래 링크로 사람들을 초대 할 수 있습니다.', fa: 'بازی شخصی شما با موفقیت ساخته شد ، اکنون میتوانید دیگران را با لینک زیر دعوت کنید:', el: 'Το εξατομικευμένο παιχνίδι σας δημιουργήθηκε με επιτυχία. Τώρα μπορείτε να προσκαλέσετε ανθρώπους στο παρακάτω link:' }, 'You have to join the game within 2 minutes or it will be discarded.': { fr: 'Vous avez 2 minutes pour rejoindre votre partie. Elle sera sinon retirée du serveur.', es: 'Tienes que unirte al juego en dos minutos o serás desconectado de la partida.', ja: '2分以内にゲームに参加してください。 それ以上かかるとサーバーから削除されます。', de: 'Du musst dem Spiel innerhalb von 2 Minuten beitreten oder es wird gelöscht.', pt: 'Você precisa entrar no jogo em 2 minutos ou ele será descartado.', ru: 'Вам нужно зайти в игру в течение 2 минут, иначе она будет удалена.', hu: '2 perced van belépni a játékba, vagy ki leszel léptetve.', it: 'Devi entrare nel gioco prima di 2 minuti o la partita verra scartata.', hr: 'Moraš se pridružiti igri u roku od 2 minute ili češ biti diskvalificiran.', tr: 'Oyununa 2 Dakika Geçmeden Girmelisin Aksi Taktirde Odan Kapanacaktır', cs: 'Musíte se připojit ke hře do 2 minut, jinak bude smazána.', sk: 'Musíte sa pripojiť k hre do 2 minút inak bude zmazaná.', id: 'Anda harus ikut game dalam 2 menit atau itu akan di singkirkan.', nl: 'Je moet je spel binnen de 2 minuten binnengaan, anders wordt het verwijderd.', ar: 'لديك دقيقتين للدخول الى لعبتك أو سيتم تجاهلها.', pl: 'Musisz dołączyć do gry w ciągu 2 minut albo zostanie ona anulowana.', he: 'אתה חייב להכנס למשחק תוך שתי דקות או שהוא יסגר', sv: 'Du måste gå med spelet inom 2 minuter, annars tas den bort.', ro: 'Trebuie să reintrii în joc în următoarele 2 minute altfel progresul tău va fi şters', zh: '您必须在两分钟内加入游戏，否则将被放弃。', 'zh-tw': '您必須在2分鐘內加入遊戲，否則將被放棄', lt: 'Prisijunkite prie žaidimo per 2 minutes, arba jis bus sunaikintas', az: 'Oyununa 2 Dəqiqə Keçməmiş Girməlisən Yoxsa Otağın Qapanacaq', th: 'คุณต้องเข้าเกมภายในเวลา 2 นาทีมิฉะนั้นเกมจะถูกยกเลิก', ko: '2분안에 참여하지 않으면 방이 제거됩니다.', fa: 'شما باید در عرض دو دقیقه وارد بازی شوید وگرنه بازی از دسترس خارج میشود', el: 'Έχετε 2 λεπτά να δηλώσετε συμμετοχή στο παιχνίδι αλλιώς θα αποχωρίσετε' }, 'Join my custom game': { fr: 'Rejoindre ma partie', es: 'Únete a mi partida personalizada', ja: 'カスタムゲームに参加', de: 'Meinem eigenem Spiel beitreten', pt: 'Entre em meu Jogo Personalizado', ru: 'Зайти в свою игру', hu: 'Belépés a saját játékomba', it: 'Entra nella mia partita privata', hr: 'Pridruži se mojoj prilagođenjoj igri', tr: 'Özel Oyunuma Gir', cs: 'Vstoupit do hry', sk: 'Pridaj sa k mojej hre', id: 'Ikuti permainan adat saya', nl: 'Kom bij mijn gepersonaliseerde spel', ar: 'انضم الى لعبتي المخصصة', pl: 'Dołącz do mojej niestandardowej gry', he: 'הצטרפו למשחק המותאם שלי', sv: 'Gå med i min anpassade match', ro: 'Intră în meciul meu', zh: '加入我的自定义游戏', 'zh-tw': '加入我的自訂遊戲', lt: 'Prisijun prie mano sukurto aidimo', az: 'Xüsusi Oyunuma Gir', th: 'เข้าร่วมเกมของฉัน', ko: '내 개인방에 참여', fa: 'به بازی شخصی من ملحق شو', el: 'Δηλώστε συμμετοχή στο εξατομικευμένο παιχνίδι μου' }, 'Customize your ship': { fr: 'Personnalisez votre vaisseau', es: 'Personaliza tu nave', ja: '宇宙船をカスタマイズする', de: 'Gestalte dein Schiff', pt: 'Personalize a sua nave', ru: 'Настройте ваш корабль', hu: 'Hajó személyre szabása', it: 'Customizza la mia nave', hr: 'Prilagodi svoj brod', tr: 'Gemini Özelleştir', cs: 'Stylizuj svou loď', sk: 'Prispôsob si loď', id: 'menyesuaikan kapal Anda', nl: 'Personaliseer je schip', ar: 'خصص السفينة الخاص بك', da: 'Personificer dit skib', vi: 'Sáng tạo con tàu của bạn', pl: 'Dostosuj swój statek', he: 'התאם אישית את החללית שלך', sv: 'Anpassa ditt skepp', ro: 'Personalizează-ţi nava', zh: '自定义你的飞船', 'zh-tw': '個人化您的船艦', lt: 'Keiskite savo laivą', az: 'Robotunu Xüsusiləştir', th: 'ปรับแต่งยานของคุณ', ko: '우주선 꾸미기', fa: 'سفینه ی تان را شخصی سازی کنید', el: 'Εξατομίκευσε το διαστημόπλοιο σου' }, Lightning: { fr: 'Eclair', es: 'Relámpago', ja: '雷', de: 'Blitz', pt: 'Relâmpago', ru: 'Молния', hu: 'Villám', it: 'Fulmine', hr: 'Munja', tr: 'Şimşek', cs: 'Blesk', sk: 'Blesk', id: 'Petir', nl: 'Bliksem', ar: 'برق', da: 'Lyn', vi: 'Ảnh sáng', pl: 'Błyskawica', he: 'ברק', sv: 'Blixt', ro: 'Fulger', zh: '闪电', 'zh-tw': '閃電', lt: 'Žaibas', az: 'Şimşək', th: 'สายฟ้า', ko: '번개', fa: 'درخشان', el: 'Αστραπή' }, Double: { fr: 'Double', es: 'Doble', ja: '二重', de: 'Doppel', pt: 'Duplo', ru: 'Двойной', hu: 'Kettős', it: 'Doppio', hr: 'Duplo', tr: 'Çift', cs: 'Dvojtý', sk: 'Dvojitý', id: 'Dua kali lipat', nl: 'Dubbel', ar: 'مزدوج', da: 'Dobbel', vi: 'Đôi', pl: 'Podwójny strzał', he: 'כפול', sv: 'Dubbel', ro: 'Dublu', zh: '双', 'zh-tw': '雙', lt: 'Dvigubas', az: 'Cüt', th: 'คู่', ko: '더블', fa: 'دابل', el: 'Διπλός' }, Single: { fr: 'Simple', es: 'Simple', ja: '単一', de: 'Allein', pt: 'Sozinho', ru: 'Обычный', hu: 'Egyetlen', it: 'Singolo', hr: 'Jedno', tr: 'Tek', cs: 'Normální', sk: 'Normálny', id: 'Sendiri', nl: 'Enkel', ar: 'وحيد', da: 'Enkel', vi: 'Một', pl: 'Pojedynczy strzał', he: 'יחיד', sv: 'Singel', ro: 'Singur', zh: '单', 'zh-tw': '單', lt: 'Vienas', az: 'Tək', th: 'เดี่ยว', ko: '기본', fa: 'تنها', el: 'Μονός' }, Digital: { fr: 'Digital', es: 'Digital', ja: 'デジタル', de: 'Digital', pt: 'Digital', ru: 'Цифровой', hu: 'Digitális', it: 'Digitale', hr: 'Digitalno', tr: 'Dijital', cs: 'Digitální', sk: 'Digitálne', id: 'Digital', nl: 'Digitaal', ar: 'رقمي', da: 'Digital', vi: 'Vạch', pl: 'elektroniczny', he: 'דיגיטלי', sv: 'Digital', ro: 'Digital', zh: '数字', 'zh-tw': '數字', lt: 'Skaitmeninis', az: 'Dijital', th: 'ดิจิตอล', ko: '디지털', fa: 'دیجیتال', el: 'Ψηφιακός' }, Star: { fr: 'Etoile', es: 'Estrella', ja: '星', de: 'Stern', pt: 'Estrela', ru: 'Звезда', hu: 'Csillag', it: 'Stella', hr: 'Zvijezda', tr: 'Yıldız', cs: 'Hvězda', sk: 'Hviezda', id: 'Bintang', nl: 'Ster', ar: 'نجمة', da: 'Stjerne', vi: 'Ngôi sao', pl: 'Gwiazda', he: 'כוכב', sv: 'Stjärna', ro: 'Stea', zh: '星', 'zh-tw': '星', lt: 'Žvaigždė', az: 'Ulduz', th: 'ดวงดาว', ko: '별', fa: 'ستاره', el: 'Αστέρι' }, Invader: { fr: 'Space invader', es: 'Invasor', ja: 'スペースインベーダー', de: 'Eindringling', pt: 'Invasor', ru: 'Захватчик', hu: 'Határsértő', it: 'Invasore', hr: 'Izvanzemaljaci', tr: 'İstilacı', cs: 'Vetřelec', sk: 'Votrelec', id: 'Penyerbu', nl: 'Indringer', ar: 'غاز', da: 'Invaderende fjende', vi: 'Người xâm lược', pl: 'Najeźdźca', he: 'פולש', sv: 'Invader', ro: 'Invadator', zh: '侵略者', 'zh-tw': '侵略者', lt: 'Okupantas', az: 'Hücumçu', th: 'ผู้รุกราน', ko: '침략자', fa: 'مهاجم', el: 'Εισβολέας' }, Reddit: { fr: 'Reddit', es: 'Reddit', ja: 'Reddit', de: 'Reddit', pt: 'Reddit', ru: 'Reddit', hu: 'Reddit', it: 'Reddit', hr: 'Reddit', tr: 'Reddit', cs: 'Reddit', sk: 'Reddit', id: 'Reddit', nl: 'Reddit', ar: 'رديت', da: 'Reddit', vi: 'Reddit', pl: 'Reddit', he: 'Reddit', sv: 'Reddit', ro: 'Reddit', zh: 'Reddit', 'zh-tw': 'Reddit', lt: 'Reddit', az: 'Reddit', th: 'Reddit', ko: 'Reddit', fa: 'ردیت', el: 'Reddit' }, Pirate: { fr: 'Pirate', es: 'Pirata', ja: '海賊', de: 'Pirat', pt: 'Pirata', ru: 'Пират', hu: 'Kalóz', it: 'Pirata', hr: 'Pirati', tr: 'Korsan', cs: 'Pirát', sk: 'Pirát', id: 'Bajak laut', nl: 'Piraat', ar: 'القرصان', da: 'Pirat', vi: 'Cướp biển', pl: 'Pirat', he: 'פיראט', sv: 'Pirat', ro: 'Pirat', zh: '海盗', 'zh-tw': '海盗', lt: 'Piratas', az: 'Saxta', th: 'โจรสลัด', ko: '해적', fa: 'دزد دریایی', el: 'Πειρατής' }, Youtube: { fr: 'Youtube', es: 'YouTube', ja: 'YouTube', de: 'Youtube', pt: 'Youtube', ru: 'YouTube', hu: 'Youtube', it: 'Youtube', hr: 'YouTube', tr: 'Youtube', cs: 'YouTube', sk: 'YouTube', id: 'Youtube', nl: 'YouTube', ar: 'اليوتيوب', da: 'Youtube', vi: 'Youtube', pl: 'Youtube', he: 'Youtube', sv: 'YouTube', ro: 'Youtube', zh: 'Youtube', 'zh-tw': 'Youtube', lt: 'Youtube', az: 'Youtube', th: 'Youtube', ko: '유투브', fa: 'یوتیوب', el: 'Youtube' }, Paw: { fr: 'Patte', es: 'Zarpa', ja: '足', de: 'Pfote', pt: 'Patinha', ru: 'Лапа', hu: 'Mancs', it: 'Zampa', hr: 'Šapa', tr: 'Pati', cs: 'Tlapka', sk: 'Labka', id: 'Mengais', nl: 'Poot', ar: 'كف', da: 'Pote', vi: 'Paw', pl: 'Łapka', he: 'כף יד', sv: 'Tass', ro: 'Lăbuță', zh: '爪', 'zh-tw': '爪子', lt: 'Letena', az: 'Pəncə', th: 'อุ้งเท้า', ko: '앞발', fa: 'پنجه', el: 'Πατούσα' }, 'Galactic Empire': { fr: 'Empire galactique', es: 'Imperio Galáctico', ja: '銀河帝国', de: 'Galaktisches Imperium', pt: 'Império Galático', ru: 'Галактическая Империя', hu: 'Galaktikus Birodalom', it: 'Impero Galattico', hr: 'Glalaktičko Carstvo', tr: 'Galaktik İmparatorluk', cs: 'Galaktické Impérium', sk: 'Galaktické Impérium', id: 'Kerajaan Galaktik', nl: 'Galactische Rijk', ar: 'الإمبراطورية المجرة', da: 'Galaxeimperiet', vi: 'Đế chế Galactic', pl: 'Imperium Galaktyczne', he: 'אימפריה גלקטית', sv: 'Galatiska Imperiet', ro: 'Imperiul Galactic', zh: '银河帝国', 'zh-tw': '銀河帝國', lt: 'Galaktinė Imperija', az: 'Galaktik Imparatorluq', th: 'จักรวรรดิกาแล็กติก', ko: '은하제국', fa: 'امپراتوری کهکشانی', el: 'Γαλαξιακή Αυτοκρστορία' }, 'Rebel Alliance': { fr: 'Alliance rebelle', es: 'Alianza Rebelde', ja: '反乱同盟', de: 'Rebellenallianz', pt: 'Aliança Rebelde', ru: 'Альянс Мятежников', hu: 'Lázadók Szövetsége', it: 'Alleanza Ribelle', hr: 'Savez Pobunjenika', tr: 'Asi Güçler', cs: 'Rebelská Aliance', sk: 'Rebelská Aliancia', id: 'Aliansi pemberontak', nl: 'Rebellen Alliantie', ar: 'تحالف المتمردين', da: 'Rebelalliancen', vi: 'Liên minh chống lại', pl: 'Sojusz Rebeliantów', he: 'ברית המורדים', sv: 'Rebellalliansen', ro: 'Alianţa Rebelilor', zh: '反叛联盟', 'zh-tw': '反叛聯盟', lt: 'Sukilėlių Alijansas', az: 'Asi Güclər', th: 'พันธมิตรกบฏ', ko: '반란군 동맹', fa: 'اتحاد شورشی', el: 'Επαναστατική Συμμαχία' }, 'Soloist Defence Force': { fr: 'Soloist Defence Force', es: 'Fuerza de Defensa Solista', ja: '単独防衛隊', de: 'Soloistenschutz', pt: 'Força de Defesa Solista', ru: 'Защитник Солоиста', hu: 'Szólista Védelmi Erők', it: 'Forza della Difesa Solista', hr: 'Samostalne Obrambene Snage', tr: 'Tekil Savunma Gücü', cs: 'Solitární Obranná Síla', sk: 'Solitárna Obranná Sila', id: 'Kekuatan pertahan soloist', nl: 'Soloist Verdedingingskracht', ar: 'قوات الدفاع المنفرد', da: 'Soloisternes forsvarsstyrke', pl: 'Siły Obronne Solistów', he: 'כוח הגנה יחיד', sv: 'Soloistförsvarsstyrkan', ro: 'Soldat al forţelor de apărare', zh: '独立国防武装', 'zh-tw': '自衛隊', lt: 'Solistų Gynėjų Pajėgos', az: 'Təkli Müdafia Gücü', th: 'กองกำลังป้องกันตนเอง', ko: '솔리스트 포스 방위군', fa: 'نیروی دفاعی تک رو', el: 'Σολίστας Αμυντικής Δύναμης' }, Gold: { fr: 'Or', es: 'Oro', ja: '金', de: 'Gold', pt: 'Ouro', ru: 'Золото', hu: 'Arany', it: 'Oro', hr: 'Zlato', tr: 'Altın', cs: 'Zlato', sk: 'Zlato', id: 'Emas', nl: 'Goud', ar: 'ذهب', da: 'Guld', vi: 'Vàng', pl: 'Złoto', he: 'זהב', sv: 'Guld', ro: 'Aur', zh: '金', 'zh-tw': '金', lt: 'Auksas', az: 'Qızıl', th: 'ทองคำ', ko: '금', fa: 'طلا', el: 'Χρυσός' }, Zinc: { fr: 'Zinc', es: 'Zinc', ja: '亜鉛', de: 'Zink', pt: 'Zinco', ru: 'Цинк', hu: 'Cink', it: 'Zinco', hr: 'Cink', tr: 'Çinko', cs: 'Zinek', sk: 'Zinok', id: 'Seng', nl: 'Zink', ar: 'الزنك', da: 'Zink', vi: 'Kẽm', pl: 'Cynk', he: 'אבץ', sv: 'Zink', ro: 'Zinc', zh: '锌', 'zh-tw': '鋅', lt: 'Cinkas', az: 'Çinqo', th: 'สังกะสี', ko: '아연', fa: 'روی', el: 'Ψευδάργυρος' }, Alloy: { fr: 'Alliage', es: 'Aleación', ja: '合金', de: 'Legierung', pt: 'Liga', ru: 'Сплав', hu: 'Ötvözet', it: 'Lega', hr: 'Aluminij', tr: 'Alaşım', cs: 'Slitina', sk: 'Zliatina', id: 'Campuran', nl: 'Legering', ar: 'سبيكة', da: 'Legering', vi: 'Hợp kim', pl: 'Stop', he: 'סגסגת', sv: 'Legering', ro: 'Aliaj', zh: '合金', 'zh-tw': '合金', lt: 'Lydinys', az: 'Alşım', th: 'อัลลอยด์', ko: '합금', fa: 'آلیاژ', el: 'Κράμα' }, Titanium: { fr: 'Titane', es: 'Titanio', ja: 'チタン', de: 'Titan', pt: 'Titânio', ru: 'Титан', hu: 'Titán', it: 'Titanio', hr: 'Titanijum', tr: 'Titanyum', cs: 'Titan', sk: 'Titán', id: 'Titanium', nl: 'Titanium', ar: 'التيتانيوم', da: 'Titanium', vi: 'Titan', pl: 'Tytan', he: 'טיטניום', sv: 'Titan', ro: 'Titanium', zh: '钛', 'zh-tw': '鈦', lt: 'Titanas', az: 'Titanyum', th: 'ไทเทเนียม', ko: '티타늄', fa: 'تیتانیوم', el: 'Τιτάνιο' }, Carbon: { fr: 'Carbone', es: 'Carbono', ja: '炭素', de: 'Kohlenstoff', pt: 'Carbono', ru: 'Углерод', hu: 'Szén', it: 'Carbone', hr: 'Ugnjen', tr: 'Karbon', cs: 'Uhlík', sk: 'Hliník', id: 'Karbon', nl: 'Koolstof', ar: 'كربون', da: 'Kulstof', vi: 'Cacbon', pl: 'Karbon', he: 'פחמן', sv: 'Karbon', ro: 'Carbon', zh: '碳', 'zh-tw': '碳', lt: 'Anglis', az: 'Karbon', th: 'คาร์บอน', ko: '탄소', fa: 'کربن', el: 'Άνθρακας' }, 'SKIP TRAINING': { fr: "PASSER L'ENTRAINEMENT" }, Training: { fr: 'Entraînement' }, Tutorial: { fr: 'Tutoriel' }, 'You will learn everything about controlling your ship, upgrading, using secondary weapons, comms.': { fr: "Vous apprendrez tout ce qu'il faut savoir pour contrôler votre vaisseau, l'améliorer, utiliser les armes secondaires ou chatter." }, 'If you skip this training, you can still start it later from the profile page.': { fr: 'Si vous passez le tutoriel, vous pourrez le démarrer plus tard à partir de la page de profil.' }, "Come on! Losing your ship isn't a big deal, you will be able to respawn and continue playing.": { fr: "Allons ! Perdre votre vaisseau n'est pas bien grave. Vous pouvez réapparaître pour vous venger !" }, 'Wow you did well! I wish you good luck, it has been a pleasure training you.': { fr: 'Wow, bien joué ! Je vous souhaite beaucoup de chance, ce fût un plaisir de vous entrainer.' }, 'OK good.': { fr: 'OK, bien.' }, 'Well done.': { fr: 'Bien joué.' }, 'Fine, but nothing to brag about.': { fr: 'Bien, mais pas de quoi se vanter.' }, "OK I was told you'd do that.": { fr: "OK je m'y attendais" }, "Okay, let's take this as learnt.": { fr: 'Prenons ça comme un acquis...' }, 'Is that it? Okay': { fr: 'Ah ouais ? Bon OK.' }, Alright: { fr: 'Bien !' }, 'Did you fall asleep?': { fr: 'Vous dormez !?' }, '???': { fr: '???' }, 'Do you copy?': { fr: 'Vous me comprenez quand je parle ?' }, 'I think we lost comms. Commander??': { fr: "Je crois qu'on a perdu la liaison... Commandant ??" }, 'Are you ok?': { fr: 'Est ce que ça va ?' }, 'Welcome to your new unit, Commander. Here is your briefing.': { fr: 'Bienvenue dans votre nouveau vaisseau, Commandant. Voici vos instructions.' }, 'Use the joystick to steer the ship and move.': { fr: 'Utilisez le joystick pour diriger le vaisseau et bouger.' }, 'Use the joystick to steer the ship and aim.': { fr: 'Utilisez le joystick pour diriger le vaisseau et viser.' }, 'Move the mouse cursor to steer the ship and aim.': { fr: 'Déplacez le curseur de la souris pour diriger le vaisseau et tirer.' }, 'Use Left Stick to steer the ship and aim.': { fr: 'Utilisez le stick gauche pour diriger le vaisseau et tirer.' }, 'Guess what, this spaceship can shoot lasers.': { fr: 'Vous savez quoi ? Ce vaisseau peut tirer des lasers.' }, 'Touch this button to fire.': { fr: 'Touchez ce boutton pour tirer.' }, 'Click left mouse button to fire.': { fr: 'Cliquez sur le bouton gauche de la souris pour tirer.' }, 'Press Ⓐ to fire.': { fr: 'Appuyez sur Ⓐ pour tirer.' }, 'OK let’s move this wreck now.': { fr: 'Bon, bougeons cette épave, maintenant.' }, 'Touch this button to accelerate.': { fr: 'Appuyez sur ce bouton pour accélérer.' }, 'Basic Controls': { fr: 'Contrôles de base' }, 'Click right mouse button to accelerate.': { fr: 'Cliquez sur le bouton droit de la souris pour accélerer.' }, 'Press Right Trigger to accelerate.': { fr: 'Appuyez sur RT pour accélérer.' }, 'You can also touch the central button to both fire and accelerate.': { fr: 'Vous pouvez également appuyer sur le bouton central pour tirer ET accélérer.' }, 'Surprise! Here is an asteroid. Destroy it!': { fr: 'Surprise ! Voilà un astéroïde. Detruisez le !' }, 'Oh oh! gems. Collect them all!': { fr: 'Wow... des gemmes. Ramassez les toutes !' }, 'This ship could really be improved, you know. You can use your gems for that.': { fr: 'Ce vaisseau peut être amélioré, vous savez ? Vous devez utiliser vos gemmes pour ça.' }, 'Upgrade any of your shield, firepower, damage or ship speed and agility...': { fr: 'Améliorez votre bouclier, puissance de feu, régénération ou vitesse... ce que vous voulez !' }, 'Now fill your gems bar to access higher tier ships. Here is some fodder.': { fr: 'Maintenant, remplissez votre barre de gemmes pour accéder à de meilleurs vaisseaux. Voilà de quoi faire.' }, 'Pick your favorite ship of these two.': { fr: 'Prenez votre vaisseau préféré parmi ces deux.' }, 'Use the D-Pad.': { fr: 'Utilisez le D-Pad.' }, Upgrades: { fr: 'Améliorations' }, 'We will now have some fun with secondary weapons': { fr: 'Maintenant, amusons-nous un peu avec les armes secondaires.' }, 'The Weapon Store opens when your are docked at your station (team mode) or manually (survival mode).': { fr: "Le magasin d'armes s'ouvre lorsque vous êtes dockés à une station (en mode équipe) ou manuellement (en mode survie)." }, 'Touch this button to open the Weapon Store.': { fr: "Touchez ce bouton pour ouvrir le magasin d'armes." }, 'Press [W] or click this button to open the Weapon Store.': { fr: "Appuyez sur [W] ou cliquez sur ce bouton pour ouvrir le magasin d'armes." }, 'Press Ⓧ to open the Weapon Store.': { fr: "Appuyez sur Ⓧ pour ouvrir le magasin d'armes." }, 'Press this button to convert all your gems into credits.': { fr: 'Appuyez sur ce bouton pour revendre vos gemmes et obtenir des crédits.' }, 'Use your credits to buy weapons. I have added a little.': { fr: "Utilisez vos crédits pour acheter des armes. J'en ai ajouté un peu." }, 'You can now close the Weapon Store': { fr: "Vous pouvez maintenant fermer le magasin d'armes" }, 'Press these buttons to fire your secondaries.': { fr: 'Appuyez sur ces boutons pour utiliser vos armes secondaires.' }, 'Secondary Weapons': { fr: 'Armes secondaires' }, 'Press this button or keyboard [Alt] to fire your secondaries. Press [⇧] to switch from one secondary to another.': { fr: "Appuyez sur ce bouton ou utilisez [Alt] pour utiliser vos armes secondaires. Appuyez sur [⇧] pour passer d'une arme secondaire à l'autre." }, 'Press Ⓑ to fire your secondaries. Press Ⓨ to switch from one secondary to another.': { fr: "Appuyez sur Ⓑ pour utiliser vos armes secondaires. Appuyez sur Ⓨ pour passer d'une arme secondaire à l'autre." }, 'Advanced Controls': { fr: 'Contrôles avancés' }, "Let's talk about advanced controls.": { fr: 'Parlons un peu des contrôles avancés' }, 'When you move in the void of space, there is nothing to stop you.': { fr: "Quand vous vous déplacez dans le vide de l'espace, il n'y a rien pour vous arrêter." }, 'Fortunately, your ship has an RCS module that simulates friction to brake you.': { fr: 'Heureusement, votre vaisseau a un module RCS qui simule la friction pour vous freiner.' }, 'You can switch off this system to slide endlessly. You can then switch it on again.': { fr: "Vous pouvez couper ce système pour dériver à l'infini. Vous pouvez le rallumer à volonté." }, 'Press this button to switch RCS ON/OFF': { fr: 'Appuyez sur ce bouton pour allumer ou éteindre le RCS' }, 'Use [Ctrl] to switch RCS ON/OFF': { fr: 'Appuyez sur [CTRL] pour allumer ou éteindre le RCS' }, 'Press Left Trigger to switch RCS ON/OFF': { fr: 'Enfoncez LT pour allumer ou éteindre le RCS' }, 'You can communicate with other players using universal galactic language.': { fr: "Vous pouvez communiquer avec d'autres joueurs en utilisant le langage galactique universel." }, 'Touch your ship and talk.': { fr: 'Touchez votre vaisseau pour parler' }, 'Press [ENTER] or click this button and talk.': { fr: 'Appuyez sur ce bouton ou pressez [ENTER] pour parler' }, 'Move and press Right Stick to talk': { fr: 'Déplacez le joystick, puis appuyez dessus pour parler' }, 'You look all ready!': { fr: "Vous avez l'air prêt !" }, 'Before I go, let me tell you this: space is a hazardous place.': { fr: "Avant de partir, laissez-moi vous dire ceci : l'espace est un endroit dangereux." }, 'Always watch your radar.': { fr: 'Surveillez toujours votre radar.' }, "Lower tier ships are usually faster. Use this advantage to run. Come back to battle when you've gained strength.": { fr: 'Les vaisseaux inférieurs sont généralement plus rapides. Utilisez cet avantage pour fuir. Revenez vous battre quand vous aurez repris des forces.' }, 'Combat Briefing': { fr: 'Briefing de combat' }, 'Damn it. Command Center is reporting an alien attack. Let me upgrade your ship and fill it with secondaries. Good luck Commander.': { fr: "Bon sang. Le centre de commandement signale une attaque alien. Laissez-moi améliorer votre vaisseau et le remplir d'armes secondaires. Bonne chance, Commandant..." }, 'Training complete!': { fr: 'Entraînement terminé !' }, en: { en: 'English', fr: 'Anglais', es: 'Inglés', ja: '英語', de: 'Englisch', pt: 'Inglês', ru: 'Анлийский', hu: 'Angol', it: 'Inglese', hr: 'Engleski', tr: 'İngilizce', cs: 'Anglicky', sk: 'Anglicky', id: 'Inggris', nl: 'Engels', ar: 'الانجليزية', da: 'Engelsk', vi: 'Tiếng Anh', pl: 'Angielski', he: 'אנגלית', sv: 'Engelska', ro: 'Engleză', zh: '英语', 'zh-tw': '英語', lt: 'Anglų', az: 'Ingilizcə', th: 'อังกฤษ', ko: '영어', fa: 'انگلیسی', el: 'Αγγλικά' }, fr: { en: 'French', fr: 'Français', es: 'Francés', ja: 'フランス語', de: 'Französisch', pt: 'Francês', ru: 'Французский', hu: 'Francia', it: 'Francese', hr: 'Francuski', tr: 'Fransızca', cs: 'Francouzsky', sk: 'Francúzsky', id: 'Perancis', nl: 'Frans', ar: 'الفرنسية', da: 'Fransk', vi: 'Tiếng Pháp', pl: 'Francuski', he: 'צרפתית', sv: 'Franska', ro: 'Franceză', zh: '法语', 'zh-tw': '法語', lt: 'Prancūzų', az: 'Fransızca', th: 'ฝรั่งเศส', ko: '프랑스어', fa: 'فرانسوی', el: 'Γαλλικά' }, de: { en: 'German', fr: 'Allemand', es: 'Alemán', ja: 'ドイツ語', de: 'Deutsch', pt: 'Alemão', ru: 'Немецкий', hu: 'Német', it: 'Tedesco', hr: 'Njemački', tr: 'Almanca', cs: 'Německy', sk: 'Nemecky', id: 'Jerman', nl: 'Duits', ar: 'المانية', da: 'Tysk', vi: 'Tiếng Đức', pl: 'Niemiecki', he: 'גרמנית', sv: 'Tyska', ro: 'Germană', zh: '德语', 'zh-tw': '德語', lt: 'Vokiečių', az: 'Almanca', th: 'เยอรมัน', ko: '독일어', fa: 'آلمانی', el: 'Γερμανικά' }, pl: { en: 'Polish', fr: 'Polonais', es: 'Polaco', ja: 'ポーランド語', de: 'Polnisch', pt: 'Polonês', ru: 'Польский', hu: 'Lengyel', it: 'Polacco', hr: 'Poljski', tr: 'Lehçe', cs: 'Polsky', sk: 'Poľsky', id: 'Polandia', nl: 'Pools', ar: 'البولندي', da: 'Polsk', vi: 'Tiếng Ba Lan', pl: 'Polski', he: 'פולנית', sv: 'Polska', ro: 'Poloneză', zh: '波兰语', 'zh-tw': '波蘭語', lt: 'Lenkų', az: 'Ləhçə', th: 'โปแลนด์', ko: '폴란드어', fa: 'لهستانی', el: 'Πολωνικά' }, ru: { en: 'Russian', fr: 'Russe', es: 'Ruso', ja: 'ロシア語', de: 'Russisch', pt: 'Russo', ru: 'Русский', hu: 'Orosz', it: 'Russo', hr: 'Ruski', tr: 'Rusça', cs: 'Rusky', sk: 'Rusky', id: 'Rusia', nl: 'Russisch', ar: 'الروسية', da: 'Russisk', vi: 'Tiếng Nga', pl: 'Rosyjski', he: 'רוסית', sv: 'Ryska', ro: 'Rusă', zh: '俄语', 'zh-tw': '俄語', lt: 'Rusų', az: 'Rusca', th: 'รัสเซีย', ko: '러시아어', fa: 'روسی', el: 'Ρωσσικά' }, hu: { en: 'Hungarian', fr: 'Hongrois', es: 'Húngaro', ja: 'ハンガリー語', de: 'Ungarisch', pt: 'Húngaro', ru: 'Венгерский', hu: 'Magyar', it: 'Ungherese', hr: 'Mađarski', tr: 'Macarca', cs: 'Maďarsky', sk: 'Maďarsky', id: 'Hongaria', nl: 'Hongaars', ar: 'الهنغارية', da: 'Ungarsk', vi: 'Tiếng Hung', pl: 'Węgierski', he: 'הונגרית', sv: 'Ungerska', ro: 'Maghiară', zh: '匈牙利语', 'zh-tw': '匈牙利語', lt: 'Vengrų', az: 'Macarca', th: 'ฮังการี', ko: '헝가리어', fa: 'مجارستانی', el: 'Ουγγρικά' }, es: { en: 'Spanish', fr: 'Espagnol', es: 'Español', ja: 'スペイン語', de: 'Spanisch', pt: 'Espanhol', ru: 'Испанский', hu: 'Spanyol', it: 'Spagnolo', hr: 'Španjolski', tr: 'İspanyolca', cs: 'Španělsky', sk: 'Španielsky', id: 'Spanyol', nl: 'Spaans', ar: 'الاسبانية', da: 'Spansk', vi: 'Tiếng Tây Ban Nha', pl: 'Hiszpański', he: 'ספרדית', sv: 'Spanska', ro: 'Spaniolă', zh: '西班牙语', 'zh-tw': '西班牙語', lt: 'Ispanų', az: 'Ispanyolca', th: 'สเปน', ko: '스페인어', fa: 'اسپانیایی', el: 'Ισπανικά' }, ja: { en: 'Japanese', fr: 'Japonais', es: 'Japonés', ja: '日本語', de: 'Japanisch', pt: 'Japonês', ru: 'Японский', hu: 'Japán', it: 'Giapponese', hr: 'Japanski', tr: 'Japonca', cs: 'Japonsky', sk: 'Japonsky', id: 'Jepang', nl: 'Japans', ar: 'اليابانية', da: 'Japansk', vi: 'Tiếng Nhật', pl: 'Japoński', he: 'יפנית', sv: 'Japanska', ro: 'Japoneză', zh: '日语', 'zh-tw': '日文', lt: 'Japonų', az: 'Japonca', th: 'ญี่ปุ่น', ko: '일본어', fa: 'ژاپنی', el: 'Γιαπωνέζικα' }, pt: { en: 'Portuguese', fr: 'Portugais', es: 'Portugués', ja: 'ポルトガル語', de: 'Portugiesisch', pt: 'Português', ru: 'Португальский', hu: 'Portugál', it: 'Portoghese', hr: 'Portugalski', tr: 'Portekizce', cs: 'Portugalsky', sk: 'Portugalsky', id: 'Portugis', nl: 'Portugees', ar: 'البرتغالية', da: 'Portugisisk', vi: 'Tiếng Bồ Đào Nha', pl: 'Portugalski', he: 'פורטוגזית', sv: 'Portugisiska', ro: 'Portugheză', zh: '葡萄牙语', 'zh-tw': '葡萄牙語', lt: 'Portugalų', az: 'Portekizcə', th: 'โปรตุเกส', ko: '포르투갈어', fa: 'پرتغالی', el: 'Πορτογαλικά' }, hr: { en: 'Croatian', fr: 'Croate', es: 'Croata', ja: 'クロアチア語', de: 'Kroatisch', pt: 'Croata', ru: 'Хорватский', hu: 'Horvát', it: 'Croato', hr: 'Hrvatski', tr: 'Hırvatça', cs: 'Chorvatsky', sk: 'Chorvátsky', id: 'Kroasia', nl: 'Kroatisch', ar: 'الكرواتية', da: 'Kroatisk', vi: 'Tiếng Croatia', pl: 'Chorwacki', he: 'קרואטית', sv: 'Kroatiska', ro: 'Croată', zh: '克罗地亚语', 'zh-tw': '克羅地亞語', lt: 'Kroatų', az: 'Xırvatca', th: 'โครเอเชีย', ko: '크로티아어', fa: 'کرواسی', el: 'Κροάτικα' }, tr: { en: 'Turkish', fr: 'Turque', es: 'Turco', ja: 'トルコ語', de: 'Türkisch', pt: 'Turco', ru: 'Турецкий', hu: 'Török', it: 'Turco', hr: 'Turski', tr: 'Türkçe', cs: 'Turecky', sk: 'Turecky', id: 'Turki', nl: 'Turks', ar: 'التركية', da: 'Tyrkisk', vi: 'Tiếng Thổ Nhĩ Kỳ', pl: 'Turecki', he: 'טורקית', sv: 'Turkiska', ro: 'Turcă', zh: '土耳其语', 'zh-tw': '土耳其語', lt: 'Turkų', az: 'Türkcə', th: 'ตุรกี', ko: '터키어', fa: 'ترکی', el: 'Τούρκικα' }, cs: { en: 'Czech', fr: 'Tchèque', es: 'Checo', ja: 'チェコ語', de: 'Tschechisch', pt: 'Checo', ru: 'Чешский', hu: 'Cseh', it: 'Ceco', hr: 'Češki', tr: 'Çekçe', cs: 'Česky', sk: 'Česky', id: 'Ceko', nl: 'Tjechisch', ar: 'التشيكية', da: 'Tjekkisk', vi: 'Tiếng Séc', pl: 'Czeski', he: "צ'כית", sv: 'Tjeckiska', ro: 'Cehă', zh: '捷克语', 'zh-tw': '捷克語', lt: 'Čekų', az: 'Çexcə', th: 'เช็ก', ko: '체코어', fa: 'چک', el: 'Τσέχικα' }, sk: { en: 'Slovak', fr: 'Slovaque', es: 'Eslovaco', ja: 'スロバキア語', de: 'Slovakisch', pt: 'Eslovaco', ru: 'Словацкий', hu: 'Szlovák', it: 'Slovacco', hr: 'Slovački', tr: 'Slovakça', cs: 'Slovensky', sk: 'Slovensky', id: 'Slowakia', nl: 'Slovaaks', ar: 'السلوفاكية', da: 'Slovakkisk', vi: 'Tiếng Slovak', pl: 'Słowacki', he: 'סלובקית', sv: 'Slovakiska', ro: 'Slovacă', zh: '斯洛伐克语', 'zh-tw': '斯洛伐克語', lt: 'Slovakų', az: 'Slovakca', th: 'สโลวัก', ko: '슬로바키아어', fa: 'اسلوواکی', el: 'Σλοβάκικα' }, id: { en: 'Indonesian', fr: 'Indonésien', es: 'Indonesio', ja: 'インドネシア語', de: 'Indonesisch', pt: 'Indonésio', ru: 'Индонезийский', hu: 'Indonéz', it: 'Indonesiano', hr: 'Indonezijski', tr: 'Endonezce', cs: 'Indonésky', sk: 'Indonézsky', id: 'Indonesia', nl: 'Indonesisch', ar: 'الإندونيسية', da: 'Indonesisk', vi: 'Tiếng Indonesia', pl: 'Indonezyjski', he: 'אינדונזית', sv: 'Indonesiska', ro: 'Indoneziană', zh: '印尼语', 'zh-tw': '印尼語', lt: 'Indonezijos', az: 'Endonezca', th: 'อินโดนีเซีย', ko: '인도네시아어', fa: 'اندونزیایی', el: 'Ινδονησιακά' }, nl: { en: 'Dutch', fr: 'Néerlandais', es: 'Neerlandés', ja: 'オランダ語', de: 'Niederländisch', pt: 'Holandês', ru: 'Голландский', hu: 'Holland', it: 'Olandese', hr: 'Nizozemski', tr: 'Flemenkçe', cs: 'Nizozemsky', sk: 'Holandsky', id: 'Belanda', nl: 'Nederlands', ar: 'الهولندية', da: 'Hollandsk', vi: 'Tiếng Hà Lan', pl: 'Holenderski', he: 'הולנדית', sv: 'Holländska', ro: 'Olandeză', zh: '荷兰语', 'zh-tw': '荷蘭語', lt: 'Olandų', az: 'Flemenkcə', th: 'ดัทช์', ko: '네덜란드어', fa: 'هلندی', el: 'Ολλανδικά' }, it: { en: 'Italian', fr: 'Italien', es: 'Italiano', ja: 'イタリア語', de: 'Italienisch', pt: 'Italiano', ru: 'Итальянский', hu: 'Olasz', it: 'Italiano', hr: 'Talijanski', tr: 'İtalyanca', cs: 'Italsky', sk: 'Taliansky', id: 'Italia', nl: 'Italiaans', ar: 'الايطالية', da: 'Italiensk', vi: 'Tiếng Ý', pl: 'Włoski', he: 'איטלקית', sv: 'Italienska', ro: 'Italiană', zh: '意大利语', 'zh-tw': 'yee大利語', lt: 'Italų', az: 'Italyanca', th: 'อิตาลี', ko: '이탈리아어', fa: 'ایتالیایی', el: 'Ιταλικά' }, 'zh-tw': { en: 'Taiwanese Mandarin', fr: 'Taiwanais', es: 'Taiwanés', ja: '台湾国語', de: 'Taiwanesisch', pt: 'Chinês tradicional', ru: 'Тайваньский', hu: 'Tajvani', it: 'Mandarino taiwanese', hr: 'Taivanski mandarinski', tr: 'Tayvanlı Mandarin', cs: 'Tchajwansky', sk: 'Tchajwansky', nl: 'Taiwanees Mandarijn', pl: 'Taiwański Mandarynia', sv: 'Taiwanesisk Mandarin', ro: 'Taiwaneză Mandarină', zh: '台湾中文', 'zh-tw': '繁體中文', th: 'จีนไต้หวัน', ko: '대만 중국어', fa: 'تایوانی ماندارین' }, zh: { en: 'Chinese', fr: 'Chinois', es: 'Chino', ja: '中国語', de: 'Chinesisch', pt: 'Chinês', ru: 'Китайский', hu: 'Kínai', it: 'Cinese', hr: 'Kineski', tr: 'Çince', cs: 'Čínsky', sk: 'Čínsky', id: 'Cina', nl: 'Chinees', ar: 'الصينية', da: 'Kinesisk', vi: 'Tiếng Trung', pl: 'Chiński', he: 'סינית', sv: 'Kinesiska', ro: 'Chineză', zh: '中文', 'zh-tw': '簡體中文', lt: 'Kinų', az: 'Çincə', th: 'จีน', ko: '중국어', fa: 'چینی', el: 'Κινέζικα' }, ar: { en: 'Arabic', fr: 'Arabe', es: 'Árabe', ja: 'アラビア語', de: 'Arabisch', pt: 'Árabe', ru: 'Арабский', hu: 'Arab', it: 'Arabo', hr: 'Arapski', tr: 'Arapça', cs: 'Arabsky', sk: 'Arabsky', id: 'Arab', nl: 'Arabisch', ar: 'العربىة', da: 'Arabisk', pl: 'Arabski', he: 'ערבית', sv: 'Arabiska', ro: 'Arabă', zh: '阿拉伯语', 'zh-tw': '阿拉伯語', lt: 'Arabų', az: 'Ərəbcə', th: 'อาหรับ', ko: '아라비아어', fa: 'عربی', el: 'Αραβικά' }, sv: { en: 'Swedish', fr: 'Suédois', es: 'Sueco', ja: 'スウェーデン語', de: 'Schwedisch', pt: 'Sueco', ru: 'Шведский', hu: 'Swéd', it: 'Svedese', hr: 'Švedsi', tr: 'İsveççe', cs: 'Švédsky', sk: 'Švédsky', id: 'Swedis', nl: 'Zweeds', ar: 'السويدية', pl: 'Szwedzki', he: 'שוודית', sv: 'Svenska', ro: 'Suedeză', zh: '瑞典语', 'zh-tw': '瑞典語', lt: 'Švedų', az: 'Isveçcə', th: 'สวีเดน', ko: '스웨덴어', fa: 'سوئدی', el: 'Σουηδικά' }, da: { en: 'Danish', fr: 'Danois', es: 'Danés', ja: 'デンマーク語', de: 'Dänisch', pt: 'Dinamarquês', ru: 'Датский', hu: 'Dán', it: 'Danese', hr: 'Danski', tr: 'Danimarkaca', cs: 'Dánksy', sk: 'Dánsky', id: 'Denmark', nl: 'Deens', ar: 'دانماركية', da: 'Dansk', pl: 'Duński', he: 'דנית', sv: 'Danska', ro: 'Daneză', zh: '丹麦语', 'zh-tw': '丹麥語', lt: 'Danų', az: 'Danimarkca', th: 'เดนมาร์ก', ko: '덴마크어', fa: 'دانمارکی', el: 'Δανικά' }, ro: { en: 'Romanian', fr: 'Roumain', es: 'Rumano', ja: 'ルーマニア語', de: 'Rumänisch', pt: 'Romeniano', ru: 'Румынский', hu: 'Román', it: 'Rumeno', hr: 'Rumunski', tr: 'Romanca', cs: 'Rumunsky', sk: 'Rumunsky', id: 'Roma', nl: 'Roemeens', ar: 'الرومانية', pl: 'Rumuński', he: 'רומנית', sv: 'Rumänska', ro: 'Română', zh: '罗马尼亚语', 'zh-tw': '羅馬尼亞語', lt: 'Rumunų', az: 'Romanca', th: 'โรมาเนีย', ko: '루마니아어', fa: 'رومانیایی', el: 'Ρουμάνικα' }, lt: { en: 'Lithuanian', fr: 'Lituanien', es: 'Lituano', ja: 'リトアニア語', de: 'Litauisch', pt: 'Letuano', ru: 'Литовский', hu: 'Litván', it: 'Lituano', hr: 'Litvanski', tr: 'Litvanya Dili', cs: 'Litevsky', sk: 'Litovsky', id: 'Lithuania', nl: 'Lithuaans', ar: 'اللتوانية', pl: 'Litewski', he: 'ליטאית', sv: 'Litauiska', ro: 'Lituaniană', zh: '立陶宛语', 'zh-tw': '立陶宛語', lt: 'Lietuvių', az: 'Litvanyaca', th: 'ลิธัวเนีย', ko: '리투아니아어', fa: 'لیتوانیایی', el: 'Λιθουανικά' }, az: { en: 'Azeri', fr: 'Azéri', es: 'Azerbaiyano', ja: 'アゼルバイジャン語', de: 'Azeri', pt: 'Azeri', ru: 'Азербайджанский', hu: 'Azeri', it: 'Azeri', hr: 'Azeri', tr: 'Azerice', cs: 'Ázerbájdžánsky', sk: 'Azerbajdžansky', id: 'Azeri', nl: 'Azeriaans', ar: 'اذربيجان', pl: 'Azerbejdżański', he: "אזרבייג'נית", sv: 'Azeriska', ro: 'Azeră', zh: '阿塞拜疆语', 'zh-tw': '阿塞拜疆語', az: 'Azərbaycanca', th: 'อาเซอร์ไบจาน', ko: '아제르바이잔어', fa: 'آذری', el: 'Αζερική' }, th: { en: 'Thai', fr: 'Thaï', es: 'Tailandés', ja: 'タイ語', de: 'Thailändisch', pt: 'Tailandês', ru: 'Тайский', hu: 'Thai', it: 'Tailandese', hr: 'Tajlandski', tr: 'Tayland', cs: 'Thajsky', sk: 'Thajsky', id: 'Thailand', nl: 'Thaïs', ar: 'التايلاندية', pl: 'Tajski', he: 'תאילנדית', sv: 'Thailändska', ro: 'Tailandeză', zh: '泰语', 'zh-tw': '泰語', az: 'Taicə', th: 'ไทย', ko: '태국어', fa: 'تایلندی', el: 'Ταϊλανδέζικα' }, he: { en: 'Hebrew', fr: 'Hébreu', es: 'Hebreo', ja: 'ヘブライ語', de: 'Hebräisch', pt: 'Hebraico', ru: 'Иврит', hu: 'Héber', it: 'Ebraico', hr: 'Hebrejski', tr: 'İbranice', cs: 'Hebrejsky', sk: 'Hebrejsky', id: 'Hebrew', nl: 'Hebreeuws', ar: 'العبرية', pl: 'Hebrajski', he: 'עִברִית', sv: 'Hebreiska', ro: 'Ebraică', zh: '希伯来语', 'zh-tw': '希伯來語', az: 'Hebivcə', th: 'ฮีบรู', ko: '히브리어', fa: 'عبری', el: 'Εβραϊκά' }, ko: { en: 'Korean', fr: 'Coréen', es: 'Coreano', ja: '韓国語', de: 'Koreanisch', pt: 'Coreano', ru: 'Корейский', hu: 'Koreai', it: 'Coreano', hr: 'Korejski', tr: 'Korece', cs: 'Korejsky', sk: 'Kórejsky', id: 'Korea', nl: 'Koreaans', ar: 'الكورية', pl: 'Koreański', sv: 'Koreanska', ro: 'Coreeană', zh: '韩语', 'zh-tw': '韓語', lt: 'koreja', th: 'เกาหลี', ko: '한국어', fa: 'کره ای', el: 'Κορεάτικα' }, fa: { en: 'Farsi', fr: 'Farsi', es: 'Persa', ja: 'ペルシア語', de: 'Farsi', pt: 'Farsi', ru: 'Фарси', hu: 'Perzsa', it: 'Farsi', hr: 'Farsi', tr: 'Farsça', cs: 'Persky', sk: 'Perzsky', id: 'Farsi', nl: 'Farsi', ar: 'الفارسية', pl: 'Perski', sv: 'Persiska', ro: 'Farsi', zh: '波斯语', 'zh-tw': '波斯語', th: 'ฟาร์ซี', ko: '페르시아어', fa: 'فارسی', el: 'Φαρσί' }, el: { en: 'Greek', fr: 'Grec', es: 'Griego', ja: 'ギリシア語', de: 'Griechisch', pt: 'Grego', ru: 'Греческий', hu: 'Görög', it: 'Greco', hr: 'Grčki', tr: 'Yunanca', cs: 'Řecky', sk: 'Grécky', id: 'Yunani', nl: 'Grieks', ar: 'الإغريقي', pl: 'Grecki', sv: 'Grekiska', ro: 'Greaca', zh: '希腊语', 'zh-tw': '希臘語', lt: 'graikoja', th: 'กรีก', ko: '그리스어', fa: 'یونانی', el: 'Ελληνικά' } }), this.translateDOM();
            }
            return (
                (t.prototype.translate = function (t, e) {
                    return null == e && (e = this.getLang()), this.dict[t] ? this.dict[t][e] || t : t;
                }),
                (t.prototype.exists = function (t, e) {
                    return null == e && (e = this.getLang()), (null != this.dict[t] && null != this.dict[t][e]) || 'en' === e;
                }),
                (t.prototype.getLang = function () {
                    return this.settings.get('language');
                }),
                (t.prototype.getLangAdvancement = function (t) {
                    var e, i, s;
                    if ((null == t && (t = this.getLang()), 'en' === t)) return 1;
                    (e = 0), (i = 0);
                    for (s in this.dict) (e += 1), null != this.dict[s][t] && (i += 1);
                    return i / e;
                }),
                (t.prototype.langChanged = function () {
                    return this.translateDOM();
                }),
                (t.prototype.translateDOM = function () {
                    var t, e, i, s, l, n, a, o, r, h, u, d, c, p, I, O, m, f, g, y, v, b, w, x, k, E, _, z, M, T, S;
                    if ('undefined' != typeof document && null !== document) {
                        for (E = document.querySelectorAll('[data-translate]'), n = 0, u = E.length; n < u; n++) (k = E[n]), (k.innerHTML = this.translate(k.getAttribute('data-translate')));
                        for (b = document.querySelectorAll('[data-translate-placeholder]'), a = 0, d = b.length; a < d; a++) (v = b[a]), v.setAttribute('placeholder', this.translate(v.getAttribute('data-translate-placeholder')));
                        for (z = document.querySelectorAll('[data-translate-tooltip]'), o = 0, c = z.length; o < c; o++) (_ = z[o]), _.setAttribute('data-tooltip', this.translate(_.getAttribute('data-translate-tooltip')));
                        if (Math.max(screen.width, screen.height) > 1e3) {
                            if ('function' == typeof GiveAway || 'function' == typeof PromoContest) return;
                            for (e = document.querySelectorAll('[data-translate-base]'), i = '', r = 0, p = e.length; r < p; r++)
                                if (((t = e[r]), i !== t.getAttribute('data-translate-base'))) {
                                    for (i = t.getAttribute('data-translate-base'), S = !1, T = document.querySelectorAll('[data-translate-base=' + i + ']'), f = 0, I = T.length; f < I; f++) (M = T[f]), (M.style.display = 'none'), M.getAttribute('lang') === this.getLang() && ((S = !0), (M.style.display = 'block'));
                                    if (!S) for (g = 0, O = e.length; g < O; g++) (t = e[g]), 'en' === t.getAttribute('lang') && (t.style.display = 'block');
                                }
                            for (s = document.querySelectorAll('[data-display-only]'), x = [], y = 0, m = s.length; y < m; y++) (l = s[y]), (h = l.getAttribute('data-display-only').split(',')), x.push((l.style.display = ((w = this.getLang()), indexOf.call(h, w) >= 0 ? 'block' : 'none')));
                            return x;
                        }
                    }
                }),
                t
            );
        })()),
        (gamesettings = gamesettings || !1),
        (translations = new Translations(gamesettings)),
        (t = function (t, e) {
            return translations.translate(t, e);
        }),
        (texists = function (t, e) {
            return translations.exists(t, e);
        }),
        (module.exports = translations);
})();
